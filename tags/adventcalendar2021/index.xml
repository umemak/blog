<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AdventCalendar2021 on umemak</title><link>https://umemak.github.io/blog/tags/adventcalendar2021/</link><description>Recent content in AdventCalendar2021 on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 14 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/adventcalendar2021/index.xml" rel="self" type="application/rss+xml"/><item><title>データ登録やってみる</title><link>https://umemak.github.io/blog/posts/2021/12/14_ac/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/14_ac/</guid><description>データの格納先ができたので、画面からデータ登録できるようにしてみる。 参考： Tutorial - Connect API and database to the app - Vue - AWS Amplify Docs Codespacesでnpm run serveで実行してアクセスすると、ブラウザのコンソールにInvalid Host/Origin headerが出ている。 package.json を修正して回避。codespaces前提だけど。 &amp;quot;serve&amp;quot;: &amp;quot;vue-cli-service serve --public ${CODESPACE_NAME}.githubpreview.dev&amp;quot;, 参考： AWS</description></item><item><title>schemaファイルを作る</title><link>https://umemak.github.io/blog/posts/2021/12/13_ac/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/13_ac/</guid><description>データ構造を考えたので、それをスキーマ情報に落としていく。 の前にamplifyコマンド $ amplify add api ? Select from one of the below mentioned services: GraphQL ? Here is the GraphQL API that we will create. Select a setting to edit or continue Continue ? Choose a schema template: One-to-many relationship (e.g., “Blogs” with “Posts” and “Comments”) ⚠️ WARNING: your GraphQL API currently allows public create, read, update, and delete access to all models via an API Key. To configure PRODUCTION-READY authorization rules, review: https://docs.amplify.aws/cli/graphql/authorization-rules GraphQL schema compiled successfully. Edit your schema at /workspaces/eventsite/amplify/backend/api/eventsite/schema.graphql or place</description></item><item><title>データ構造を考える</title><link>https://umemak.github.io/blog/posts/2021/12/12_ac/</link><pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/12_ac/</guid><description>各画面で必要な項目からデータ構造を作る。 event 項目名 name type ID id int イベント名 title string 開催日時 timestamp 開催場所 place string 公開期間From open datetime 公開期間To close datetime 作成者 author int -&amp;gt; user.id user 項目名 name type ID id int ユーザー名 username string eventUser 項目名 name type ID id int イベントID eventid int -&amp;gt; event.id ユーザーID userid int -&amp;gt; user.id upload 項目名 name type ID id int イベントID eventid int -&amp;gt; event.id 資料URL url string comment 項目名 name type ID</description></item><item><title>authを追加</title><link>https://umemak.github.io/blog/posts/2021/12/11_ac/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/11_ac/</guid><description>https://docs.amplify.aws/start/getting-started/auth/q/integration/vue/#authentication-with-amplify この手順 amplify add auth amplify push ログイン情報を保存するために、storeを使用する 参考： 【AWS Amplify × Vue.js 簡単サーバーレスアプリ構築チュートリアル】③ Authでユーザー登録、ログイン機能実装編 - Qiita npm install vuex@4 次はデータの読み書き</description></item><item><title>画面を作る</title><link>https://umemak.github.io/blog/posts/2021/12/10_ac/</link><pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/10_ac/</guid><description>各画面のファイルができたので、必要な項目を並べていく作業。 uiflow作ったときにおおむね書いておいたので、それをタグに落としていく。 一通り書いて、ボタンで画面遷移もするようにできた。 次はログイン機能をつける（チュートリアルでやったやつ）。</description></item><item><title>画面モック作成続き</title><link>https://umemak.github.io/blog/posts/2021/12/09_ac/</link><pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/09_ac/</guid><description>参考にしたページ Vue.js 3 入門 「ルーティング」（Vue Router） - Qiita このままだと動かなかったので、vue-routerをバージョンアップ。最初インストールしたときはバージョン指定しなかったせいか3系が入っていた。 npm install vue-router@4 これで画面が表示されるようになった。</description></item><item><title>画面モックを作る</title><link>https://umemak.github.io/blog/posts/2021/12/08_ac/</link><pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/08_ac/</guid><description>昨日洗い出した画面をとりあえず書いてみる。 画面遷移にvue-routerを使うので、インストールしておく。 npm install vue-router 各画面は、src/views/に置く。 $ ls -1 src/views/ CancelConfirm.vue EntryConfirm.vue EventCreate.vue EventDetail.vue EventEdit.vue EventSearch.vue Login.vue MyPage.vue Top.vue ファイル作るところまでで今日は時間切れ。。</description></item><item><title>画面遷移を考える</title><link>https://umemak.github.io/blog/posts/2021/12/07_ac/</link><pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/07_ac/</guid><description>初日にあげた機能をもとに、必要な画面とそれらの関連を考える。 イベントページの作成と編集 イベントの検索 参加エントリー、キャンセル コメント投稿 UI Flow図で書いてみた。 https://github.com/umemak/eventsite/blob/main/doc/uiflow.txt とりあえずこんな感じかな。 足りないところがあればその都度足していく方針で。</description></item><item><title>リポジトリを作って初期化する</title><link>https://umemak.github.io/blog/posts/2021/12/06_ac/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/06_ac/</guid><description>チュートリアルで雰囲気をつかんだので、実際に使うリポジトリを作って、必要なパッケージなどセットアップする。 GitHub Codespacesでやっていく。 基本的には、デフォルトの選択肢で次々進めてOK。 npm install -g @aws-amplify/cli amplify configure npm install -g @vue/cli vue create . &amp;gt; vue3 を選択 npm install npm run serve --open ここまででvueの動作確認ができる。 amplify init npm install aws-amplify @aws-amplify/ui-components ここまででAm</description></item><item><title>Amplify続き</title><link>https://umemak.github.io/blog/posts/2021/12/05_ac/</link><pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/05_ac/</guid><description>昨日のチュートリアルでかかった費用、0.03ドルくらい。</description></item></channel></rss>