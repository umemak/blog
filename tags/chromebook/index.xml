<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>chromebook on umemak</title><link>https://umemak.github.io/blog/tags/chromebook/</link><description>Recent content in chromebook on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 21 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/chromebook/index.xml" rel="self" type="application/rss+xml"/><item><title>Chromebook調査</title><link>https://umemak.github.io/blog/posts/2023/01/21_chromebook/</link><pubDate>Sat, 21 Jan 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/01/21_chromebook/</guid><description>Inspiron13のあと何にするか。Windowsはスリープからの復帰が遅いので、そういえばChromebookは速かったな、と。 Chromebookといえどどうせなら第12世代以降のCoreプロセッサ搭載機で画面比は16:10でと絞り込むと ASUS Store（エイスース ストア） - ASUS Chromebook Flip CX5 (CX5601FBA-MC0042) ThinkPad C14 Chromebook Gen 1 (</description></item><item><title>Duetを使ってみる</title><link>https://umemak.github.io/blog/posts/2020/05/25_duet_display/</link><pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/05/25_duet_display/</guid><description>https://ja.duetdisplay.com/ Google Playの300円クーポンが有効期限間近だったので買ってみた。 spacedeskでも特に不便なくつかえていたのだけれど、有料アプリも試してみたかった。 環境はSurface Go2がホストでChromebook C101PA（Androidアプリ）がモニタでWiFi接続。 モバイルモニタの接続で使ってい</description></item><item><title>Chromebookで画像編集</title><link>https://umemak.github.io/blog/posts/2019/11/06_chromebook_imageedit/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/11/06_chromebook_imageedit/</guid><description>イベントの写真をブログに載せるのに、スマホのそのままだとサイズでかすぎるし、トリミングやリサイズもしたいときにどうすれば良いのか定まっていなかった。 とりあえずこれで行けそうな方法が見つかったのでメモ。 やりたいこと 画像のリサイズ、トリミング Googleフォトにアップした画像を選択したい 編集した画像はG</description></item><item><title>C101PAでOracle Functionsを試す</title><link>https://umemak.github.io/blog/posts/2019/10/31_c101p_cli/</link><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/10/31_c101p_cli/</guid><description>OCHaCafe参加前に触っておこうと思い、その準備。 OCIインストール 手順は公式からコピペで。 $ bash -c &amp;#34;$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)&amp;#34; fatal error: Python.h: No such file or directoryエラーで落ちたので、python3-devパッケージをインストール。 $ sudo apt-get install python3-dev OCI再挑戦。先程作成したディレクトリを削除するか聞かれるので、削除(y)して継続</description></item><item><title>ASUS CT101PA到着</title><link>https://umemak.github.io/blog/posts/2019/10/05_ct101pa/</link><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/10/05_ct101pa/</guid><description>ビックカメラのポイント20%セールで。ポチったあとにアマゾンで19%オフやってておいおいって思った。 これでクラムシェルとコンバーチブルとタブレットのChromebookが揃って、充電器が足りなくなってきたので（本体付属のはごつすぎる・・）、 もらったポイントで買い足そうかなと。</description></item><item><title>Chromebook(C101PA)にVSCodeをインストールする２</title><link>https://umemak.github.io/blog/posts/2019/07/30_chromebook_vscode2/</link><pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/07/30_chromebook_vscode2/</guid><description>昨日は空き容量が足りなくなってあきらめたので、今回は何もない状態からやってみる。 インストールしながら空き容量をチェック Linuxを再インストールした直後 $ df -h Filesystem Size Used Avail Use% Mounted on /dev/vdb 5.5G 1.3G 3.9G 25% / VSCodeのインストールしてdebファイル削除したあと $ df -h Filesystem Size Used Avail Use% Mounted on /dev/vdb 5.5G 1.8G 3.4G 34% / mozcインストール後 $ df -h</description></item><item><title>ChromeBook(C223NA)にVSCodeをインストールする</title><link>https://umemak.github.io/blog/posts/2019/07/30_chromebook_vscode3/</link><pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/07/30_chromebook_vscode3/</guid><description>C101PAで一通りできたのでインテルCPUの機種でもやってみる インストール開始 $ df -h Filesystem Size Used Avail Use% Mounted on /dev/vdb 18G 1.2G 15G 8% / 広い aptの設定追加はしていない golang-1.11 が見つからなかったので設定追加した VSCodeのパッケージファイルは公式から取得 fonts-notoまでインストール終わった時点での消費 $ df -h Filesystem Size Used Avail Use% Mounted</description></item><item><title>Chromebook(C101PA)にVSCodeをインストールする</title><link>https://umemak.github.io/blog/posts/2019/07/29_chromebook_vscode/</link><pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/07/29_chromebook_vscode/</guid><description>https://qiita.com/kukita/items/b673bf6eba2cc91fc545 こちらの記事を見ながら試してみた。 mozcの辺りでストレージの空きが足りなくなって断念。 先にGoとかRubyとかDocker入れてたしそのせいか。</description></item><item><title>Chromebookにdockerインストール</title><link>https://umemak.github.io/blog/posts/2019/07/21_chromebook_docker/</link><pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/07/21_chromebook_docker/</guid><description>環境 C101PA 手順 公式の手順に従う $ sudo apt-get update $ sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ gnupg2 \ software-properties-common -y $ curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - $ sudo apt-key fingerprint 0EBFCD88 $ sudo add-apt-repository \ &amp;#34;deb [arch=arm64] https://download.docker.com/linux/debian \ $(lsb_release -cs) \ stable&amp;#34; $ sudo apt-get update $ sudo apt-get install docker-ce docker-ce-cli containerd.io -y $ sudo docker run hello-world できた。</description></item><item><title>Chromebookにgoの最新版をインストール</title><link>https://umemak.github.io/blog/posts/2019/07/17_chromebook_golang/</link><pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/07/17_chromebook_golang/</guid><description>apt-get だと最新版が入らないので、1.13に備えて最新版をインストールする手順を確認しておく。 C101PAのOP1はARM系CPUなのでarm64用のファイルを使用する。 C223NAはintel入ってるのでx86-64でいけるはず。 環境 C101PA Linux(ベータ) 手順 https://github.com/golang/go/wiki/ChromeOS を参考に進める https://golang.org/dl/ から go1.12.7.linux-arm64.tar.gz をダウンロード $ wget wget</description></item></channel></rss>