<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prisma on umemak</title><link>https://umemak.github.io/blog/tags/prisma/</link><description>Recent content in Prisma on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 13 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/prisma/index.xml" rel="self" type="application/rss+xml"/><item><title>PrismaとOpenAPI</title><link>https://umemak.github.io/blog/posts/2022/10/13_prisma_openapi/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/13_prisma_openapi/</guid><description>Prismaのドキュメント眺めていて、Build a REST API with NestJS, Prisma, PostgreSQL and Swaggerを見つけた。 PrismaというかNestJSの機能かもしれないけれど、OpenAPIドキュメントも表示できるっぽい。 これでいい感が出てきた。</description></item><item><title>Prisma</title><link>https://umemak.github.io/blog/posts/2022/10/12_prisma/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/12_prisma/</guid><description>先日のスキーマ指向開発の一つの解になるかもしれない。 Prisma | Next-generation ORM for Node.js &amp;amp; TypeScript 存在は知っていたのだけれど、言語がTypeScriptということでちゃんとチェックしていなかった。 フロントをNext.jsとかTypeScript系で作るなら、APIサーバー側もTypeScriptで書けたほうが効率が良いかもしれな</description></item><item><title>Prisma</title><link>https://umemak.github.io/blog/posts/2022/07/25_prisma/</link><pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/25_prisma/</guid><description>Prismaを使ってDB設計ってできるのかな、と思い調べてみた。 Prisma自体は、ORMということだけれど、スキーマファイルをもとにDBに対してマイグレーションで定義を反映できる。 モデル間の関連もスキーマファイルで表現できる。 でも、API側をOpenAPIやGraphQLで定義するとすると、似たよ</description></item></channel></rss>