<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Amazon Q on umemak</title><link>https://umemak.github.io/blog/tags/amazon-q/</link><description>Recent content in Amazon Q on umemak</description><generator>Hugo</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 08 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/amazon-q/index.xml" rel="self" type="application/rss+xml"/><item><title>Amazon Q CLI„Åß„Ç≤„Éº„É†„Çí‰ΩúÊàê„Åô„Çã</title><link>https://umemak.github.io/blog/posts/2025/06/08_amazon_q_cli/</link><pubDate>Sun, 08 Jun 2025 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2025/06/08_amazon_q_cli/</guid><description>&lt;p>&lt;a href="https://aws.amazon.com/jp/blogs/news/build-games-with-amazon-q-cli-and-score-a-t-shirt/">Amazon Q CLI „Åß„Ç≤„Éº„É†„Çí‰Ωú„Çç„ÅÜ T„Ç∑„É£„ÉÑ„Ç≠„É£„É≥„Éö„Éº„É≥&lt;/a>„Å´‰πó„Å£„Åã„Å£„Å¶Amazon Q CLI„ÇíË©¶„Åó„Å¶„Åø„Åü„ÄÇ&lt;/p>
&lt;p>Áí∞Â¢É„ÅØWindows11„ÅßWSL2(Ubuntu)„ÄÇ&lt;/p>
&lt;p>„ÅäÈ°å„ÅØ„ÄÅ&lt;a href="https://ebitengine.org/ja/">Ebitengine&lt;/a>„Çí‰Ωø„Å£„Åü„Ç≤„Éº„É†„Çí‰Ωú„Å£„Å¶„ÇÇ„Çâ„ÅÜ„Åì„Å®„ÄÇ&lt;/p>
&lt;pre tabindex="0">&lt;code>ü§ñ You are chatting with claude-3.7-sonnet

&amp;gt; Ebitengine„Çí‰Ωø„Å£„Åü„Ç≤„Éº„É†„Çí‰Ωú„Å£„Å¶
Ebitengine„Çí‰Ωø„Å£„Åü„Ç≤„Éº„É†„Çí‰Ωú„Çä„Åæ„Åó„Çá„ÅÜ„ÄÇEbitengine„ÅØ„ÄÅGo„ÅßÊõ∏„Åã„Çå„Åü2D„Ç≤„Éº„É†ÈñãÁô∫„ÅÆ„Åü„ÇÅ„ÅÆ„Ç∑„É≥„Éó„É´„Å™„É©„Ç§„Éñ„É©„É™„Åß„Åô„ÄÇ„Åæ
„Åö„ÅØÂü∫Êú¨ÁöÑ„Å™„Ç≤„Éº„É†„Çí‰ΩúÊàê„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ

„Åæ„Åö„ÄÅ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™„Çí‰ΩúÊàê„Åó„ÄÅÂøÖË¶Å„Å™„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„ÅôÔºö


üõ†Ô∏è Using tool: execute_bash
 ‚ãÆ
 ‚óè I will run the following shell command:
mkdir -p ebiten-game &amp;amp;&amp;amp; cd ebiten-game &amp;amp;&amp;amp; go mod init ebiten-game
 ‚ãÆ
 ‚Ü≥ Purpose: „Ç≤„Éº„É†„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Éá„Ç£„É¨„ÇØ„Éà„É™„Çí‰ΩúÊàê„Åó„ÄÅGo module„ÇíÂàùÊúüÂåñ


Allow this action? Use &amp;#39;t&amp;#39; to trust (always allow) this tool for the session. [y/n/t]:

&amp;gt; t
bash: line 1: go: command not found

 ‚ãÆ
 ‚óè Completed in 0.103s
„Åô„Åø„Åæ„Åõ„Çì„ÄÅGo„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ„Çà„ÅÜ„Åß„Åô„ÄÇ„Åæ„Åö„ÅØGo„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ


üõ†Ô∏è Using tool: execute_bash (trusted)
 ‚ãÆ
 ‚óè I will run the following shell command:
which go || echo &amp;#34;Go is not installed&amp;#34;
 ‚ãÆ
 ‚Ü≥ Purpose: Go„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç

Go is not installed

 ‚ãÆ
 ‚óè Completed in 0.110s
Ebitengine„Çí‰Ωø„Å£„Åü„Ç≤„Éº„É†„Çí‰Ωú„Çã„Å´„ÅØ„ÄÅ„Åæ„ÅöGo„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇGo„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„ÅüÂæå„ÄÅ‰ª•‰∏ã„ÅÆÊâãÈ†Ü„Åß„Ç∑
„É≥„Éó„É´„Å™„Ç≤„Éº„É†„Çí‰ΩúÊàê„Åß„Åç„Åæ„Åô„ÄÇ

### Go„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´ÊñπÊ≥ï

Linux„Åß„ÅØ„ÄÅ‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„ÅßGo„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åß„Åç„Åæ„ÅôÔºö

bash
# Ubuntu„ÅÆÂ†¥Âêà
sudo apt update
sudo apt install golang-go

# Fedora„ÅÆÂ†¥Âêà
sudo dnf install golang

# Arch Linux„ÅÆÂ†¥Âêà
sudo pacman -S go


### Go„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„ÅüÂæå„ÅÆÊâãÈ†Ü

1. „Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™„Çí‰ΩúÊàê„Åó„ÄÅGo module„ÇíÂàùÊúüÂåñ
2. Ebitengine„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´
3. „Ç∑„É≥„Éó„É´„Å™„Ç≤„Éº„É†„Ç≥„Éº„Éâ„Çí‰ΩúÊàê

### „Ç∑„É≥„Éó„É´„Å™„Ç≤„Éº„É†„ÅÆ„Ç≥„Éº„Éâ‰æã

Go„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„ÅüÂæå„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å™„Ç≥„Éº„Éâ„Åß„Ç∑„É≥„Éó„É´„Å™„Ç≤„Éº„É†„Çí‰ΩúÊàê„Åß„Åç„Åæ„ÅôÔºö

go
package main

import (
 &amp;#34;image/color&amp;#34;
 &amp;#34;log&amp;#34;
 &amp;#34;math/rand&amp;#34;

 &amp;#34;github.com/hajimehoshi/ebiten/v2&amp;#34;
 &amp;#34;github.com/hajimehoshi/ebiten/v2/ebitenutil&amp;#34;
 &amp;#34;github.com/hajimehoshi/ebiten/v2/inpututil&amp;#34;
)

const (
 screenWidth = 640
 screenHeight = 480
 playerSize = 20
 enemySize = 15
 enemyCount = 5
)

type Game struct {
 playerX, playerY float64
 enemies []enemy
 score int
}

type enemy struct {
 x, y float64
 speedX, speedY float64
}

func (g *Game) Update() error {
 // „Éó„É¨„Ç§„É§„Éº„ÅÆÁßªÂãï
 if ebiten.IsKeyPressed(ebiten.KeyUp) {
 g.playerY -= 4
 }
 if ebiten.IsKeyPressed(ebiten.KeyDown) {
 g.playerY += 4
 }
 if ebiten.IsKeyPressed(ebiten.KeyLeft) {
 g.playerX -= 4
 }
 if ebiten.IsKeyPressed(ebiten.KeyRight) {
 g.playerX += 4
 }

 // ÁîªÈù¢Á´Ø„ÅÆÂá¶ÁêÜ
 if g.playerX &amp;lt; 0 {
 g.playerX = 0
 }
 if g.playerX &amp;gt; screenWidth-playerSize {
 g.playerX = screenWidth - playerSize
 }
 if g.playerY &amp;lt; 0 {
 g.playerY = 0
 }
 if g.playerY &amp;gt; screenHeight-playerSize {
 g.playerY = screenHeight - playerSize
 }

 // Êïµ„ÅÆÁßªÂãï
 for i := range g.enemies {
 g.enemies[i].x += g.enemies[i].speedX
 g.enemies[i].y += g.enemies[i].speedY

 // ÁîªÈù¢Á´Ø„Åß„ÅÆÂèçÂ∞Ñ
 if g.enemies[i].x &amp;lt;= 0 || g.enemies[i].x &amp;gt;= screenWidth-enemySize {
 g.enemies[i].speedX = -g.enemies[i].speedX
 }
 if g.enemies[i].y &amp;lt;= 0 || g.enemies[i].y &amp;gt;= screenHeight-enemySize {
 g.enemies[i].speedY = -g.enemies[i].speedY
 }

 // Ë°ùÁ™ÅÂà§ÂÆö
 if g.playerX &amp;lt; g.enemies[i].x+enemySize &amp;amp;&amp;amp;
 g.playerX+playerSize &amp;gt; g.enemies[i].x &amp;amp;&amp;amp;
 g.playerY &amp;lt; g.enemies[i].y+enemySize &amp;amp;&amp;amp;
 g.playerY+playerSize &amp;gt; g.enemies[i].y {
 // Êïµ„ÇíÊñ∞„Åó„ÅÑ‰ΩçÁΩÆ„Å´
 g.enemies[i].x = rand.Float64() * (screenWidth - enemySize)
 g.enemies[i].y = rand.Float64() * (screenHeight - enemySize)
 g.score++
 }
 }

 // R„Ç≠„Éº„Åß„É™„Çª„ÉÉ„Éà
 if inpututil.IsKeyJustPressed(ebiten.KeyR) {
 g.init()
 }

 return nil
}

func (g *Game) Draw(screen *ebiten.Image) {
 // ËÉåÊôØ
 screen.Fill(color.RGBA{40, 40, 60, 255})

 // „Éó„É¨„Ç§„É§„Éº
 ebitenutil.DrawRect(screen, g.playerX, g.playerY, playerSize, playerSize, color.RGBA{0, 255, 0, 255})

 // Êïµ
 for _, e := range g.enemies {
 ebitenutil.DrawRect(screen, e.x, e.y, enemySize, enemySize, color.RGBA{255, 0, 0, 255})
 }

 // „Çπ„Ç≥„Ç¢Ë°®Á§∫
 ebitenutil.DebugPrint(screen, &amp;#34;Score: &amp;#34;+string(rune(&amp;#39;0&amp;#39;+g.score)))
}

func (g *Game) Layout(outsideWidth, outsideHeight int) (int, int) {
 return screenWidth, screenHeight
}

func (g *Game) init() {
 g.playerX = screenWidth / 2
 g.playerY = screenHeight / 2
 g.score = 0
 g.enemies = make([]enemy, enemyCount)

 for i := range g.enemies {
 g.enemies[i] = enemy{
 x: rand.Float64() * (screenWidth - enemySize),
 y: rand.Float64() * (screenHeight - enemySize),
 speedX: (rand.Float64()*2 - 1) * 2,
 speedY: (rand.Float64()*2 - 1) * 2,
 }
 }
}

func main() {
 ebiten.SetWindowSize(screenWidth, screenHeight)
 ebiten.SetWindowTitle(&amp;#34;Simple Ebiten Game&amp;#34;)

 game := &amp;amp;Game{}
 game.init()

 if err := ebiten.RunGame(game); err != nil {
 log.Fatal(err)
 }
}


„Åì„ÅÆ„Ç≤„Éº„É†„ÅØ„ÄÅÁ∑ëËâ≤„ÅÆÂõõËßíÔºà„Éó„É¨„Ç§„É§„ÉºÔºâ„ÇíÁü¢Âç∞„Ç≠„Éº„ÅßÂãï„Åã„Åó„Å¶„ÄÅËµ§„ÅÑÂõõËßíÔºàÊïµÔºâ„Å´ÂΩì„Åü„Çã„Å®„Çπ„Ç≥„Ç¢„ÅåÂ¢ó„Åà„Çã„Ç∑„É≥„Éó„É´„Å™„ÇÇ„ÅÆ„Åß
„Åô„ÄÇR„Ç≠„Éº„ÇíÊäº„Åô„Å®„Ç≤„Éº„É†„Çí„É™„Çª„ÉÉ„Éà„Åß„Åç„Åæ„Åô„ÄÇ

Go„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„ÅüÂæå„ÄÅ‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„ÅßEbitengine„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„ÄÅ„Ç≤„Éº„É†„ÇíÂÆüË°å„Åß„Åç„Åæ„ÅôÔºö

bash
go get github.com/hajimehoshi/ebiten/v2
go run main.go


Go„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´„ÅåÂÆå‰∫Ü„Åó„Åü„Çâ„ÄÅ„ÅäÁü•„Çâ„Åõ„Åè„Å†„Åï„ÅÑ„ÄÇ„Åù„ÅÆÂæå„ÄÅË©≥Á¥∞„Å™ÊâãÈ†Ü„Åß„Ç≤„Éº„É†‰ΩúÊàê„Çí„Çµ„Éù„Éº„Éà„Åó„Åæ„Åô„ÄÇ

&amp;gt;
&lt;/code>&lt;/pre>&lt;p>go„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶ÂÜçÂÆüË°å&lt;/p></description></item></channel></rss>