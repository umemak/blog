<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sqlc on umemak</title><link>https://umemak.github.io/blog/tags/sqlc/</link><description>Recent content in Sqlc on umemak</description><generator>Hugo</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 07 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/sqlc/index.xml" rel="self" type="application/rss+xml"/><item><title>sqlcのエラー2</title><link>https://umemak.github.io/blog/posts/2022/08/07_sqlc_with/</link><pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/07_sqlc_with/</guid><description>&lt;p>&lt;a href="mailto:sqlc@v1.10.0">sqlc@v1.10.0&lt;/a>だと、&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- name: ListCommentsTree :many
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">WITH&lt;/span> &lt;span style="color:#66d9ef">RECURSIVE&lt;/span> r &lt;span style="color:#66d9ef">AS&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> comments &lt;span style="color:#66d9ef">WHERE&lt;/span> comments.id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">UNION&lt;/span> &lt;span style="color:#66d9ef">ALL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SELECT&lt;/span> comments.&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> comments, r &lt;span style="color:#66d9ef">WHERE&lt;/span> comments.parent_id &lt;span style="color:#f92672">=&lt;/span> r.id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> r;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>これが&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ sqlc generate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># package sqlc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>db/query.sql:35:5: syntax error near &lt;span style="color:#e6db74">&amp;#34;WITH RECURSIVE r AS (&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>こう。&lt;/p>
&lt;p>sqlc@latestにするとこれは解消するけれど、昨日のtable aliasエラーが。。&lt;/p>
&lt;p>うーん。&lt;/p></description></item><item><title>sqlcのエラー</title><link>https://umemak.github.io/blog/posts/2022/08/06_sqlc/</link><pubDate>Sat, 06 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/06_sqlc/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- name: ListEventUsers :many
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">SELECT&lt;/span> eu.id, eu.eventid, eu.userid, eu.&lt;span style="color:#f92672">`&lt;/span>status&lt;span style="color:#f92672">`&lt;/span>, u.name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SELECT&lt;/span> id, eventid, userid, &lt;span style="color:#f92672">`&lt;/span>status&lt;span style="color:#f92672">`&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> row_number() OVER (PARTITION &lt;span style="color:#66d9ef">BY&lt;/span> eventid, userid &lt;span style="color:#66d9ef">ORDER&lt;/span> &lt;span style="color:#66d9ef">BY&lt;/span> id &lt;span style="color:#66d9ef">DESC&lt;/span>) &lt;span style="color:#66d9ef">AS&lt;/span> num
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">FROM&lt;/span> eventUser
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) eu, &lt;span style="color:#66d9ef">user&lt;/span> u
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">WHERE&lt;/span> eu.eventid &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">AND&lt;/span> eu.num &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">AND&lt;/span> eu.userid &lt;span style="color:#f92672">=&lt;/span> u.id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ORDER&lt;/span> &lt;span style="color:#66d9ef">BY&lt;/span> eu.id;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>これが&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ sqlc generate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># package sqlc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>db/query.sql:14:1: table alias &lt;span style="color:#e6db74">&amp;#34;eu&amp;#34;&lt;/span> does not exist
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>adminerで実行したらちゃんと思った結果得られるのに。&lt;/p>
&lt;p>&lt;a href="https://github.com/kyleconroy/sqlc/issues/1385">Table alias not working · Issue #1385 · kyleconroy/sqlc&lt;/a>のissueだとv1.10.0だと使えていたっぽい。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ sqlc version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v1.14.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ go install github.com/kyleconroy/sqlc/cmd/sqlc@v1.10.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sqlc version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v1.10.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>エラー消えて生成できるようになった。&lt;/p></description></item><item><title>OpenAPIとsqlcの連携</title><link>https://umemak.github.io/blog/posts/2022/08/04_openapi_sqlc/</link><pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/04_openapi_sqlc/</guid><description>&lt;p>&lt;a href="https://openapi-generator.tech/docs/generators/go-server/">Documentation for the go-server Generator&lt;/a>で生成したファイルと&lt;a href="https://sqlc.dev/">sqlc.dev | Compile SQL to type-safe Go&lt;/a>で生成したファイル、うまく連携できればもっと手数少なくAPIサーバーが作れるのになー・・&lt;/p>
&lt;p>現状用意するものとしては、DDLとqueryとAPI定義で、APIのリソースとDBのテーブルが1:1なら決め打ちでかける部分が出てくるはず・・&lt;/p>
&lt;p>どちらに寄せるかは、OpenAPI定義側かなぁ。。
OpenAPI定義からDDLが生成できれば、queryはサーバーコードと一緒でも良いと思うし。&lt;/p></description></item></channel></rss>