<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on umemak</title><link>https://umemak.github.io/blog/tags/rust/</link><description>Recent content in rust on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 13 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust本</title><link>https://umemak.github.io/blog/posts/2023/05/13_rust_book/</link><pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/05/13_rust_book/</guid><description>Amazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本を6章まで進めた。 アマゾンのレビューでも書かれていたけど、急に説明が雑になるし、コードが長くなるにつれてどこを対象とした差分なのかがわかりにくくなる。 270ページまで進めて写経はあきらめた。 最後まで丁寧に作るか、6章がなければ良本になっていたか</description></item><item><title>Rustのエラー</title><link>https://umemak.github.io/blog/posts/2023/05/09_rust_error/</link><pubDate>Tue, 09 May 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/05/09_rust_error/</guid><description>Amazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本を進めていて、解消できないエラーで詰まる。 149ページから導入されるValidateでエラー。 error: cannot find derive macro `Validate` in this scope --&amp;gt; src\repositories.rs:31:63 | 31 | #[derive(Debug, Serialize, Deserialize, Clone, PartialEq, Eq, Validate)] | ^^^^^^^^ | note: `Validate` is imported here, but it is only a trait, without a derive macro --&amp;gt; src\repositories.rs:8:5 | 8 | use validator::Validate; | ^^^^^^^^^^^^^^^^^^^ 全然原因がわからず悩んでいたら、Cargo.tomlで</description></item><item><title>Rustのエラー</title><link>https://umemak.github.io/blog/posts/2023/05/07_rust_error/</link><pubDate>Sun, 07 May 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/05/07_rust_error/</guid><description>Amazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本を進めていて、解消できないエラーで詰まる。 136ページで暫定として入れている、Ok(StatusCode::OK)が型の不一致エラー。 コメント通りならあとで取り除くから、いずれは解消するのだろうけど、それまではテストも通らない状態になるのでよく</description></item><item><title>Rust再々々入門</title><link>https://umemak.github.io/blog/posts/2023/05/06_rust/</link><pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/05/06_rust/</guid><description>Amazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本を見ながら。 上記の書籍はMacOSが前提で書かれているけど、Windowsでやっていく。 選択肢はとりあえず一番上のを選んで進んでいく。 Quick install via the Visual Studio Community installer (free for individuals, academic uses, and open source). Visual Studioのインストールもデフォルト選択肢から変更なしで。 Proceed with installation (default) $ rustc --version rustc</description></item><item><title>Rust再入門</title><link>https://umemak.github.io/blog/posts/2022/12/16_rust/</link><pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/16_rust/</guid><description>WEB+DB PRESS Vol.131｜技術評論社の特集を読んでいる途中。 やっぱりマクロが出てきたあたりで難易度が上がるような気がする。 そういえば、Amazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本も買っていたのを思い出した。 これも読まなきゃ。</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/10_rust_book/</link><pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/10_rust_book/</guid><description>unsafeの節を読んだ。 Rustでも安全でないコードを書くことができる。しかしそれを局所化しておくことが大事。 直近で必要になることはなさそう。 その他Tipsを読んで読了した。 自分にはRustより先に習得すべきものがある気がした。</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/09_rust_book/</link><pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/09_rust_book/</guid><description>他言語（C,Ruby）との連携の節を読んだ。 章的にはTipsなので、こんなこともできるんだねといった感じで。</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/08_rust_book/</link><pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/08_rust_book/</guid><description>マクロの節を読んだ。 結構ボリュームがあった。 実行速度を上げるには実行時の関数呼び出しよりコンパイル時に展開したほうが良いのはわかる。 そこまで速度を気にしないといけないものを作る機会がないというのもあるけど、使いどころが今一つイメージできなかった。 他人の書いたコードを読み解く必要があるときに知っている</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/07_rust_book/</link><pubDate>Thu, 07 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/07_rust_book/</guid><description>バイナリの最適化などの章を読んだ。 この辺はまだ成熟していない印象。</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/06_rust_book/</link><pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/06_rust_book/</guid><description>組み込みの章を読んだ。 あまり直接関係なさそうだったのでさらっと。 開発ツールの章を読んだ。 Goとそう変わらない感じ？</description></item></channel></rss>