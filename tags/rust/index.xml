<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on umemak</title><link>https://umemak.github.io/blog/tags/rust/</link><description>Recent content in rust on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 11 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust移植再開</title><link>https://umemak.github.io/blog/posts/2022/03/10_rust/</link><pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/10_rust/</guid><description>go版のリファクタリングも進めたので、またRust版を進めようと思ったら、すっかり構文など忘れてしまっていた。 やっぱり集中＆継続して触らないとダメだ。。</description></item><item><title>Rust学習</title><link>https://umemak.github.io/blog/posts/2022/02/27_rust/</link><pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/02/27_rust/</guid><description>The Rust Programming Language 日本語版 - The Rust Programming Language 日本語版、途中飛ばして12章やってたけれど、やっぱり最初からやったほうが良い気がしてきた。 そして、最初のページに すべてのプロジェクトの Cargo.toml に edition=&amp;ldquo;2018&amp;rdquo; とあることを前提にしています。 との注意書きがあるのに今更ながら気づいた。 昨日エラーが出ると言っていたのは、edition = &amp;quot;</description></item><item><title>dynとは？</title><link>https://umemak.github.io/blog/posts/2022/02/26_rust_dyn/</link><pubDate>Sat, 26 Feb 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/02/26_rust_dyn/</guid><description>リファクタリングしてモジュール性とエラー処理を向上させる - The Rust Programming Language 日本語版 を写経していて、コンパイルエラーに遭遇した。 $ cargo run Compiling mdmml_rust v0.1.0 (mdmml_rust) error[E0782]: trait objects must include the `dyn` keyword --&amp;gt; src/main.rs:21:41 | 21 | fn run(config: Config)-&amp;gt; Result&amp;lt;(), Box&amp;lt;Error&amp;gt;&amp;gt; { | ^^^^^ | help: add `dyn` keyword before this trait | 21 - fn run(config: Config)-&amp;gt; Result&amp;lt;(), Box&amp;lt;Error&amp;gt;&amp;gt; { 21 + fn run(config: Config)-&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn Error&amp;gt;&amp;gt; { | For more information about this error, try `rustc --explain E0782`. error: could not compile `mdmml_rust` due to previous error 修正方法も提示してくれて親切。 で、</description></item><item><title>VS CodeのRust用設定</title><link>https://umemak.github.io/blog/posts/2022/02/26_rust/</link><pubDate>Sat, 26 Feb 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/02/26_rust/</guid><description>コードフォーマッターが欲しいと思って、プラグインを入れたけれど動かない。 Couldn't start client Rust Language Server --- Rustup not available. Install from https://www.rustup.rs/ どうやらツールが足りないようなので、追加でインストールした。 $ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh $ source $HOME/.cargo/env $ rustup --version rustup 1.24.3 (ce5817a94 2021-05-31) info: This is the version for the rustup toolchain manager, not the rustc compiler. info: The currently active `rustc` version is `rustc 1.59.0 (9d1b2106e 2022-02-23)` それでもエラーが解消しなかったので、OSごと再起動した</description></item><item><title>モジュール化</title><link>https://umemak.github.io/blog/posts/2022/02/25_mdmml_rust/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/02/25_mdmml_rust/</guid><description>リファクタリングしてモジュール性とエラー処理を向上させる - The Rust Programming Language 日本語版 を読みながら。 ちょっと分量多いけど、この第12章をひととおりなぞれば、Rustを「完全に理解」できる気がする。</description></item><item><title>ファイルを読み込む</title><link>https://umemak.github.io/blog/posts/2022/02/24_mdmml_rust/</link><pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/02/24_mdmml_rust/</guid><description>以下ドキュメントを参考にしたら、引数で指定したファイルを読み込むのは簡単にできた。 コマンドライン引数を受け付ける - The Rust Programming Language 日本語版 ファイルを読み込む - The Rust Programming Language 日本語版 次は読み込んだテキストをパースしていくのだけれど、goの時のようにパッケージとして分けたい。</description></item><item><title>Rust再入門</title><link>https://umemak.github.io/blog/posts/2022/02/23_rust/</link><pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/02/23_rust/</guid><description>以前RustでHello Worldするのはやってたので、再入門。 The Rust Programming Language 日本語版 - The Rust Programming Language 日本語版を見ながら。 今回はcargoを使ってビルドするようにしてみた。 マニュアルだとcargo newで作成しているが、先にGitHubでリポジトリを作ってしまっていたので、cargo initを使っている。 $ curl --proto</description></item><item><title>Rust入門</title><link>https://umemak.github.io/blog/posts/2020/08/01_hello_rust/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/08/01_hello_rust/</guid><description>なぜDiscordはGoからRustへ移行するのか - MISONLN41&amp;rsquo;s Blog を読んで興味がわいたのでインストールしてみた。 Rust をインストール - Rustプログラミング言語 のWSLのコマンドで。インストール完了後、WSLログインしなおさないとrustcコマンド使えなかった。 $ rustc --version rustc 1.45.1 (c367798cf 2020-07-26) ファイル作って $ vim hello.rs fn main() { println!(&amp;quot;Hello, world!&amp;quot;); } コンパ</description></item></channel></rss>