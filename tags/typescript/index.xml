<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TypeScript on umemak</title><link>https://umemak.github.io/blog/tags/typescript/</link><description>Recent content in TypeScript on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 13 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>.d.tsファイル</title><link>https://umemak.github.io/blog/posts/2022/11/13_d.ts/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/13_d.ts/</guid><description>Saul-Mirone/milkdown: 🍼 Plugin driven WYSIWYG markdown editor framework.とjazz-soft/react-midi-player: React MIDI Playerを組み合わせて使おうとしたら、React MIDI PlayerがTypeScript未対応らしく、モジュール 'react-midi-player' の宣言ファイルが見つかりませんでした。とのこと。 react-midi-player.d.t</description></item><item><title>OpenAPIのTypeScriptクライアント</title><link>https://umemak.github.io/blog/posts/2022/09/19_openapi_typescript/</link><pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/19_openapi_typescript/</guid><description>結局、いくつか動かして試してみた。additional-propertiesは無指定で。 Documentation for the typescript-fetch Generator ReferenceError: _ is not defined Documentation for the typescript-node Generator Module not found: Can't resolve 'request' requestパッケージはDeprecated!らしい。 Documentation for the typescript-axios Generator とりあえず動いた。 axiosパッケージの追加インストールが必要。 ということで、typescript-ax</description></item><item><title>OpenAPIで生成したサーバーのテスト2</title><link>https://umemak.github.io/blog/posts/2022/09/18_openapi_test/</link><pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/18_openapi_test/</guid><description>E2Eテスト書くなら、OpenAPIのクライアントコードジェネレータ使って出力したもの使えばよいのでは？ と思いついたので、どのクライアントにしようかとGenerators Listを眺める。 せっかくだからTypeScriptが良いなと思うが、11種類もあってどれが適切なのか判断付かない。 実際に生成して</description></item><item><title>TypeScriptのexport</title><link>https://umemak.github.io/blog/posts/2022/05/06_ts_export/</link><pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/06_ts_export/</guid><description>MDMMLのTypeScript移植が大体できたので、HTMLから呼び出せるようにしたい。 先日はexportしてるはずなのに見つからないというエラーでどうしたら良いかわからず。 HTMLから外部のJavascriptファイルのfunctionを呼びたいはやりたいこととあっているように思える。 interface Window { Hello(): void;</description></item><item><title>TypeScriptでTable Driven Test</title><link>https://umemak.github.io/blog/posts/2022/05/05_tdt/</link><pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/05_tdt/</guid><description>もともとGoで書いていたテストがこんな感じだったのだけど、 こんな風に移植してて面倒だと感じていた。 TS と Jest で Table Driven Test をする · tblogを参考に書き換えて、こうなった。</description></item><item><title>TypeScriptで標準出力</title><link>https://umemak.github.io/blog/posts/2022/05/05_stdout/</link><pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/05_stdout/</guid><description>マークダウンから変換したSMFデータを標準出力に書き出したいのだけれど、バイナリをそのまま出力する方法がわからず。。 console.logだと型情報とかついた普通のテキストになってしまう。 $ node dist/main.js Uint8Array(45) [ 77, 84, 104, 100, 0, 0, 0, 6, 0, 1, 0, 1, 3, 192, 77, 84, 114, 107, 0, 0, 0, 23, 0, 255, 3, 0, 0, 255, 81, 3, 7, 161, 32, 0, 255, 88, 4, 4, 2, 24, 8, 0, 255, 47, 0 ] fsパッケ</description></item><item><title>TextEncoderのエラー</title><link>https://umemak.github.io/blog/posts/2022/05/04_textencoder/</link><pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/04_textencoder/</guid><description>replaceAllを使いたくて、tsconfig.jsonに以下設定を追加した。 &amp;quot;lib&amp;quot;: [ &amp;quot;ES2021.String&amp;quot; ] replaceAllが使えるようになったが、TextEncoderを使っているところでエラーになるようになってしまった。 error TS2304: Cannot find name 'TextEncoder'. 定義がないのか？と思って@types/text-encoding - npmにある</description></item></channel></rss>