<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on umemak</title><link>https://umemak.github.io/blog/tags/docker/</link><description>Recent content in docker on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 11 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>OracleにGoで接続する</title><link>https://umemak.github.io/blog/posts/2022/06/11_oracle_docker_go/</link><pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/06/11_oracle_docker_go/</guid><description>前の記事でsqlplusで接続できたので、Goのプログラムから接続してみる。 instantclientベースでGoをインストールするDockerfile作成 FROMghcr.io/oracle/oraclelinux8-instantclient:21RUN yum install -y wget tarRUN wget https://go.dev/dl/go1.18.3.linux-amd64.tar.gzRUN rm -rf /usr/local/go &amp;amp;&amp;amp; tar -C /usr/local -xzf go1.18.3.linux-amd64.tar.gzENV PATH=&amp;#34;${PATH}:/usr/local/go/bin&amp;#34;CMD [ &amp;#34;go&amp;#34;, &amp;#34;version&amp;#34; ]docker-composeもそれを使うように修正 version:&amp;#39;3&amp;#39;services:db:image:container-registry.oracle.com/database/expressports:- 1521:1521environment:- ORACLE_PWD=OraclePwdcli</description></item><item><title>OracleサーバーのDockerイメージ</title><link>https://umemak.github.io/blog/posts/2022/06/11_oracle_docker/</link><pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/06/11_oracle_docker/</guid><description>docker-images/OracleDatabase/SingleInstance at main · oracle/docker-imagesはクライアント側みたいにビルド済みイメージが用意されていないのかな、と思ったらOracle Container Registryにそれらしいものを見つけた。 Home &amp;gt; Database &amp;gt; express $ docker pull container-registry.oracle.com/database/express:latest サイズやばい $ docker images | grep ora oraclelinux 8 3bbe8a2c4b82 9 days ago 226MB oraclelinux 8-slim 1fcc1e6dda05 3 weeks ago 101MB container-registry.oracle.com/database/express latest e986fd612413 2 months ago 11.2GB $ docker run -d container-registry.oracle.com/database/express $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES</description></item><item><title>OracleのDockerイメージ</title><link>https://umemak.github.io/blog/posts/2022/06/08_oracle_docker/</link><pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/06/08_oracle_docker/</guid><description>oracle/docker-images: Official source for Docker configurations, images, and examples of Dockerfiles for Oracle products and projects にまとめられている。 サーバー側：docker-images/OracleDatabase at main · oracle/docker-images クライアント側：docker-images/OracleInstantClient at main · oracle/docker-images ベースイメージはOraclelinux - Official Image | Docker Hubが使われている（結構でかい）</description></item><item><title>Docker Desktop 4.8.1でhost.docker.internal</title><link>https://umemak.github.io/blog/posts/2022/05/11_docker_desktop_481/</link><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/11_docker_desktop_481/</guid><description>Docker Desktopの4.8.1が出たので、host.docker.internalの件が変化あったか試してみた。 https://github.com/umemak/docker_network_test 直っていた。 4.8.0でも試してみたところ、4.8.0のタイミングで修正された模様。</description></item><item><title>Docker Desktop 4.7.0でhost.docker.internal</title><link>https://umemak.github.io/blog/posts/2022/04/14_docker_desktop_470/</link><pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/14_docker_desktop_470/</guid><description>Docker Desktopの4.7.0が出たので、host.docker.internalの件が変化あったか試してみた。 https://github.com/umemak/docker_network_test 変わっていなかった。 リリースノート見てもそれらしい変更なかったし、残念だが当然。 世界中でほかに誰も困っていないのかなぁ。。</description></item><item><title>開いたままのファイルを削除したらどうなるか</title><link>https://umemak.github.io/blog/posts/2022/03/30_open_file_delete/</link><pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/30_open_file_delete/</guid><description>ホストがマウントしたディレクトリをマウントしたコンテナでプロセス1で開いてクローズせずにプロセス2で削除したあとその他のプロセスからファイルはどう見えるか。 A. ファイルは削除されディレクトリにもリストされない B. ファイルは削除できない C. ファイルは削除されアクセスできないがディレクトリにリストされたまま プ</description></item><item><title>host.docker.internalの謎</title><link>https://umemak.github.io/blog/posts/2022/03/29_host_docker_internal/</link><pubDate>Tue, 29 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/29_host_docker_internal/</guid><description>https://github.com/umemak/docker_network_test Docker Desktopのバージョンを上げたら、host.docker.internal の挙動が変わったっぽいという話。 まだ現象の再現性を確認しただけで、原因の特定まではできていない。</description></item><item><title>docker-compose v1のEOL</title><link>https://umemak.github.io/blog/posts/2022/03/07_docker_compose/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/07_docker_compose/</guid><description>Docker Desktopでは設定でcomposeのバージョン（1系と2系）を切り替えることができる。 ところで、いつまでV1が使えるのか気になったので調べてみた。 https://github.com/docker/compose では、デフォルトのブランチがv2となっている。masterブランチに切り替えてREADME.mdを見ると、 New features and bug fixes will only be considered in the V2 codebase とあるが、 but as</description></item><item><title>Docker swarm modeを知る</title><link>https://umemak.github.io/blog/posts/2020/11/07_docker_swarm_mode/</link><pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/11/07_docker_swarm_mode/</guid><description>複数の仮想サーバーでdocker-composeで起動したコンテナの管理をする方法を調べていて、swarm modeにたどり着いたので調べたことを残す。 コマンドでモード切替 有効化：docker swarm init 無効化：docker swarm leave --force シングルノードでも試せる シングルノードの場合は、init時の--advertis</description></item><item><title>Windows10にDocker Desktopをインストール</title><link>https://umemak.github.io/blog/posts/2020/07/12_docker_win10/</link><pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/07/12_docker_win10/</guid><description>最初にSurface Go2をセットアップしたとき、WSL2のほうにDockerをインストールしていた。 使う時だけ起動すればいいと思っていたが、意外と面倒（sudoしてデーモン起動させるのとか）に感じていた。 VSCode blogの記事を見て、Windows側にDocker Desktopをインストールするのもあり</description></item></channel></rss>