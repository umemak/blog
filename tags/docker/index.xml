<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on umemak</title><link>https://umemak.github.io/blog/tags/docker/</link><description>Recent content in docker on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 01 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>docker composeで特定コンテナの再起動</title><link>https://umemak.github.io/blog/posts/2022/09/01_docker_restart/</link><pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/01_docker_restart/</guid><description>docker composeで、複数コンテナを動かしているときに、その中の特定のコンテナのイメージを更新して再起動したい。 できればその他のコンテナは再起動したくない。 そんなのdocker compose stop hogehogeしてdocker compose start hogehogeしたらいいと思ってた。 ログ的には再起動されるけれども、コンテナイメージ</description></item><item><title>host.docker.internalとlinux</title><link>https://umemak.github.io/blog/posts/2022/08/17_host_docker_internal/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/17_host_docker_internal/</guid><description>Docker Desktopでは、host.docker.internalで母艦のIPアドレスが参照できるようになっているのだけど、Docker DesktopではないLinux環境だと使えない。 で、とりあえず172.17.0.1でやってたりするのだけど、これだとうまくいかないときがあるっぽい。 推測調なのは、まだ</description></item><item><title>AdminerのOracle対応</title><link>https://umemak.github.io/blog/posts/2022/07/27_adminer_oracle/</link><pubDate>Wed, 27 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/27_adminer_oracle/</guid><description>昨日はとりあえず動くところまでできたので、Dockerfileを整えてみた。 https://github.com/umemak/docker-adminer/blob/master/4/Dockerfile イメージサイズ800MB弱。 もっとスリム化できないかな。</description></item><item><title>AdminerのOracle対応</title><link>https://umemak.github.io/blog/posts/2022/07/26_adminer_oracle/</link><pubDate>Tue, 26 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/26_adminer_oracle/</guid><description>昨日の続き。 とりあえず接続してテーブル一覧作ったりテーブル作成したりできた。 Docker + Laravel + Oracleの開発環境の構築方法が参考になった。</description></item><item><title>AdminerのOracle対応</title><link>https://umemak.github.io/blog/posts/2022/07/25_adminer_oracle/</link><pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/25_adminer_oracle/</guid><description>Adminer - Database management in a single PHP fileのDockerイメージAdminer - Official Image | Docker Hubは、Oracle接続に必要なモジュールが入っていない。 PHP: インストール/設定 - Manualによると、Instant Client for Linux x86-64 (64-bit)のBasicと、oci8が必要らしい。 DockerfileはOfficial Imageの</description></item><item><title>OracleにGoで接続するイメージの軽量化</title><link>https://umemak.github.io/blog/posts/2022/06/30_oracle_docker_go/</link><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/06/30_oracle_docker_go/</guid><description>go-oci8を使ったイメージの、oraclelinux8をベースイメージにしたやつが1.25GBにもなったので、もっと小さくならないか試してみた。 golang:1-bullseyeをベースにした場合、rpmが使えないのでOracleInstantClient関連のzipを展開する方法でやって、1.</description></item><item><title>OracleにGoで接続する3</title><link>https://umemak.github.io/blog/posts/2022/06/12_oracle_docker_go3/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/06/12_oracle_docker_go3/</guid><description>昨日は、mattn/go-oci8: Oracle driver for Go using database/sqlとsijms/go-ora: Pure go oracle clientを使ったサンプルをコンテナ上でgo runして動かしていた。 今日はgo buildでバイナリにして実行できるようにしてみる。 何もオプション付けずにビルドしたら、どちらも問題なし。 バイナリサ</description></item><item><title>OracleにGoで接続する</title><link>https://umemak.github.io/blog/posts/2022/06/11_oracle_docker_go/</link><pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/06/11_oracle_docker_go/</guid><description>前の記事でsqlplusで接続できたので、Goのプログラムから接続してみる。 instantclientベースでGoをインストールするDockerfile作成 FROMghcr.io/oracle/oraclelinux8-instantclient:21RUN yum install -y wget tarRUN wget https://go.dev/dl/go1.18.3.linux-amd64.tar.gzRUN rm -rf /usr/local/go &amp;amp;&amp;amp; tar -C /usr/local -xzf go1.18.3.linux-amd64.tar.gzENV PATH=&amp;#34;${PATH}:/usr/local/go/bin&amp;#34;CMD [ &amp;#34;go&amp;#34;, &amp;#34;version&amp;#34; ]docker-composeもそれを使うように修正 version:&amp;#39;3&amp;#39;services:db:image:container-registry.oracle.com/database/expressports:- 1521:1521environment:- ORACLE_PWD=OraclePwdcli</description></item><item><title>OracleにGoで接続する2</title><link>https://umemak.github.io/blog/posts/2022/06/11_oracle_docker_go2/</link><pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/06/11_oracle_docker_go2/</guid><description>mattn/go-oci8: Oracle driver for Go using database/sqlでやってみる。 sh-4.4# go run go-oci8/main.go # pkg-config --cflags -- oci8 pkg-config: exec: &amp;#34;pkg-config&amp;#34;: executable file not found in $PATH sh-4.4# yum install -y pkgconfig sh-4.4# go run go-oci8/main.go # pkg-config --cflags -- oci8 Package oci8 was not found in the pkg-config search path. Perhaps you should add the directory containing `oci8.pc&amp;#39; to the PKG_CONFIG_PATH environment variable Package &amp;#39;oci8&amp;#39;, required by &amp;#39;virtual:world&amp;#39;, not found pkg-config: exit status 1 とりあえずmain.goと同じところにoci8.pcを作成。中身はExamples。 sh-4.4# export PKG_CONFIG_PATH=. sh-4.4# go run go-oci8/main.go # github.com/mattn/go-oci8 cgo: C compiler &amp;#34;gcc&amp;#34; not found: exec: &amp;#34;gcc&amp;#34;:</description></item><item><title>OracleサーバーのDockerイメージ</title><link>https://umemak.github.io/blog/posts/2022/06/11_oracle_docker/</link><pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/06/11_oracle_docker/</guid><description>docker-images/OracleDatabase/SingleInstance at main · oracle/docker-imagesはクライアント側みたいにビルド済みイメージが用意されていないのかな、と思ったらOracle Container Registryにそれらしいものを見つけた。 Home &amp;gt; Database &amp;gt; express $ docker pull container-registry.oracle.com/database/express:latest サイズやばい $ docker images | grep ora oraclelinux 8 3bbe8a2c4b82 9 days ago 226MB oraclelinux 8-slim 1fcc1e6dda05 3 weeks ago 101MB container-registry.oracle.com/database/express latest e986fd612413 2 months ago 11.2GB $ docker run -d container-registry.oracle.com/database/express $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES</description></item></channel></rss>