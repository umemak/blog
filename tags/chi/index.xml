<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chi on umemak</title><link>https://umemak.github.io/blog/tags/chi/</link><description>Recent content in Chi on umemak</description><generator>Hugo</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 08 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/chi/index.xml" rel="self" type="application/rss+xml"/><item><title>CORS対応</title><link>https://umemak.github.io/blog/posts/2022/10/08_cors/</link><pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/08_cors/</guid><description>&lt;p>openapi-generator-cliのtypescript-axiosで生成したクライアントでConfigureにaccessTokenをセットして取得APIを叩いたらうまく通信できなかった。&lt;/p>
&lt;p>API側のログにはOPTIONSのリクエストが来ていて、200で返している。&lt;/p>
&lt;p>chiのcors.OptionsのAllowedMethodsにOPTIONSは入っているので、これは想定通り。なのにそのあとのGETリクエストが来ていない。&lt;/p></description></item><item><title>chiでproxy</title><link>https://umemak.github.io/blog/posts/2022/09/15_chi_proxy/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/15_chi_proxy/</guid><description>&lt;p>&lt;a href="https://future-architect.github.io/articles/20220624a/">grpc-gatewayでgRPCとREST両対応のサーバを作る | フューチャー技術ブログ&lt;/a>のサンプルで&lt;a href="https://github.com/sayshu-7s/grpc-gateway-example/blob/9c97ffcb33ebfbe89610c32aa4ed0147eef9f4c9/cmd/gateway/main.go#L36">mux.Handle(&amp;quot;/docs/&amp;quot;, docsProxy)&lt;/a>となっているところを、&lt;a href="https://github.com/go-chi/chi">go-chi/chi: lightweight, idiomatic and composable router for building Go HTTP services&lt;/a>を使っているので&lt;code>router.Handle(&amp;quot;/docs/&amp;quot;, docsProxy)&lt;/code>と書いたところ、docsは見れるのに、cssやjsが404で見れなくて何でだろうと思った。&lt;/p></description></item><item><title>Goアプリ</title><link>https://umemak.github.io/blog/posts/2022/07/09_eventsite_go/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/09_eventsite_go/</guid><description>&lt;p>結局、フレームワークは&lt;a href="https://github.com/go-chi/chi/">go-chi/chi: lightweight, idiomatic and composable router for building Go HTTP services&lt;/a>を使うことにした。&lt;/p>
&lt;p>理由は、認証で使いそうなパッケージ&lt;a href="https://github.com/go-pkgz/auth">go-pkgz/auth: Authenticator via oauth2, direct, email and telegram&lt;/a>のサンプルが使っていたから。&lt;/p>
&lt;p>とりあえず、HTTPリクエストを受けてDB読み書きしてテンプレート加工して返すところまでできた。&lt;/p></description></item></channel></rss>