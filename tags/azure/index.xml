<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure on umemak</title><link>https://umemak.github.io/blog/tags/azure/</link><description>Recent content in Azure on umemak</description><generator>Hugo</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 02 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Windowsにazコマンドのインストール</title><link>https://umemak.github.io/blog/posts/2023/08/02_az_windows/</link><pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/08/02_az_windows/</guid><description>&lt;p>&lt;a href="https://learn.microsoft.com/ja-jp/cli/azure/install-azure-cli">Azure CLI をインストールする方法 | Microsoft Learn&lt;/a>からインストーラーをダウンロードしてインストールしたら、32bit版で実行するたびにメッセージが出て気になったので、アンインストールして別の方法を探った。&lt;/p>
&lt;p>&lt;a href="https://github.com/Azure/azure-cli/issues/18766">Support Azure CLI 64-bit on Windows · Issue #18766 · Azure/azure-cli&lt;/a>でpip使ってインストールしたら回避できると書かれていたのでやってみたら、インストールに失敗する。
エラーメッセージを見ると&lt;/p></description></item><item><title>GitHub ActionsでAzure Storage Blobにファイルをアップロードする</title><link>https://umemak.github.io/blog/posts/2023/08/01_prisma/</link><pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/08/01_prisma/</guid><description>&lt;p>&lt;a href="https://www.softbank.jp/biz/blog/cloud-technology/articles/202210/gha-azure-ip/">GitHub ActionsからAzure上のIPアドレス制限済みリソースにアクセスする｜クラウドテクノロジーブログ｜ソフトバンク&lt;/a>を見ながらやってみた。&lt;/p>
&lt;p>例だとSleepが10秒だけど、試した環境だとエラーになったので、15秒にしたら通った。&lt;/p>
&lt;p>あと、&lt;code>--account-name&lt;/code>指定ではアップロードできず、&lt;code>--connection-string&lt;/code>で試したらできた。&lt;/p></description></item><item><title>データベース比較</title><link>https://umemak.github.io/blog/posts/2022/07/23_database/</link><pubDate>Sat, 23 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/23_database/</guid><description>&lt;p>昨日はコンテナ実行環境の比較、今日はマネージドDB（MySQL）を比較してみる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/jp/rds/mysql/?nc=sn&amp;amp;loc=0">Amazon RDS for MySQL （MySQLのためのマネージドリレーショナルデータベース） | AWS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/sql/mysql?hl=ja">Cloud SQL for MySQL マネージドデータベース  |  Cloud SQL: リレーショナル データベース サービス  |  Google Cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://azure.microsoft.com/ja-jp/services/mysql/">Azure Database for MySQL - マネージド MySQL データベース | Microsoft Azure&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>リージョンは東京で、シングル構成の前払いなし。&lt;/p></description></item><item><title>コンテナ実行環境比較</title><link>https://umemak.github.io/blog/posts/2022/07/22_container/</link><pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/22_container/</guid><description>&lt;p>AWSとAzureとGCPで、コンテナ実行環境の比較をしてみたくなった。&lt;/p>
&lt;p>GCPの&lt;a href="https://cloud.google.com/run?hl=ja">Cloud Run: コンテナを秒単位で本番環境にデプロイ  |  Google Cloud&lt;/a>みたいなやつ。&lt;/p>
&lt;p>AWSは&lt;a href="https://aws.amazon.com/jp/apprunner/">AWS App Runner – フルマネージド型のコンテナアプリケーション - Amazon Web Services&lt;/a>、Azureは&lt;a href="https://azure.microsoft.com/ja-jp/services/container-apps/#overview">Azure Container Apps | Microsoft Azure&lt;/a>が比較対象となるかな？&lt;/p>
&lt;p>AWSは選択できる最低スペックが1vCPU/2GBメモリなので、GCPとAzureもこれに合わせた見積もりにする。
なお、メモリはAzureは最低1GBから、GCPは最低128MBから選択できる。&lt;/p></description></item><item><title>クラウドサービス比較</title><link>https://umemak.github.io/blog/posts/2021/07/18_clouds/</link><pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/07/18_clouds/</guid><description>&lt;p>AWSで構築しているシステムをAzureと並行稼働させることはできるのか？GCPは？という疑問を解消するために調べてみる。&lt;/p>
&lt;h2 id="サービス比較">サービス比較&lt;/h2>
&lt;p>まずはAWS, Azure, GCPのサービス比較。&lt;/p>
&lt;p>サービス名先頭の AWS, Amazon, Azure, Cloud(GCP) は省略。&lt;/p>
&lt;h3 id="サーバーレスコンピューティング">サーバーレスコンピューティング&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>AWS&lt;/th>
 &lt;th>Azure&lt;/th>
 &lt;th>GCP&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://aws.amazon.com/jp/lambda/">Lambda&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://azure.microsoft.com/ja-jp/services/functions/">Functions&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://cloud.google.com/functions?hl=ja">Functions&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Java, Go, PowerShell, Node.js, C#, Python, Ruby&lt;/td>
 &lt;td>C#, JavaScript(Node.js), F#, Java, PowerShell, Python, TypeScript&lt;/td>
 &lt;td>Node.js, Python, Go, Java, .NET Core(C#, F#), Ruby, PHP&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://aws.amazon.com/jp/lambda/edge/">Lambda@Edge&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Node.js, Python&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://aws.amazon.com/cloudfront/">CloudFront Functions&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JavaScript&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="cdn">CDN&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>AWS&lt;/th>
 &lt;th>Azure&lt;/th>
 &lt;th>GCP&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://aws.amazon.com/jp/cloudfront/">CloudFront&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://azure.microsoft.com/ja-jp/services/cdn/">Content Delivery Network&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://cloud.google.com/cdn?hl=ja">CDN&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="コードリポジトリ">コードリポジトリ&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>AWS&lt;/th>
 &lt;th>Azure&lt;/th>
 &lt;th>GCP&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://aws.amazon.com/jp/codecommit/">CodeCommit&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://azure.microsoft.com/ja-jp/services/devops/repos/">Repos&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://cloud.google.com/source-repositories/?hl=ja">Source Repositories&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="cicd">CI/CD&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>AWS&lt;/th>
 &lt;th>Azure&lt;/th>
 &lt;th>GCP&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://aws.amazon.com/jp/codepipeline/">CodePipeline&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://azure.microsoft.com/ja-jp/services/devops/pipelines/">Pipelines&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://cloud.google.com/build?hl=ja">Build&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="iac">IaC&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>AWS&lt;/th>
 &lt;th>Azure&lt;/th>
 &lt;th>GCP&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://aws.amazon.com/jp/cloudformation/">CloudFormation&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://azure.microsoft.com/ja-jp/features/resource-manager/">Resource Manager&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://cloud.google.com/deployment-manager/docs?hl=ja">Deployment Manager&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>Azure Resource Managerを簡易操作するためのツール、Azure Building Blocksというものもある。&lt;/li>
&lt;/ul>
&lt;h2 id="検討">検討&lt;/h2>
&lt;ul>
&lt;li>FaaSの対応言語が異なっている。共通で使えるのはJava、Node.js、C#、Python。
&lt;ul>
&lt;li>Lambda@Edgeも使っているなら、Node.jsかPythonしかない。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CloudFormation の資産を Azure や GCP に移行できるのか&lt;/li>
&lt;li>&lt;a href="https://www.terraform.io/">Terraform&lt;/a>という選択肢もあり&lt;/li>
&lt;li>サーバーレス中心なら&lt;a href="https://www.serverless.com/">serverless framework&lt;/a>を検討してもよいかも&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/hayao_k/items/906ac1fba9e239e08ae8">AWS/Azure/GCPサービス比較 2021.07 - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.topgate.co.jp/aws-azure-gcp">3大クラウドAWS、Azure、GCPの機能を比較したら見えてきたサービスごとの違いと特徴とは？ | 株式会社トップゲート&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.classmethod.jp/articles/amazon-cloudfront-functions-release/">エッジで爆速コード実行！CloudFront Functionsがリリースされました！ | DevelopersIO&lt;/a>
&lt;ul>
&lt;li>CloudFront FunctionsとLambda@Edgeの比較あり&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/blogs/devops/use-aws-codecommit-to-mirror-an-azure-devops-repository-using-an-azure-devops-pipeline/">Use AWS CodeCommit to mirror an Azure DevOps repository using an Azure DevOps pipeline | AWS DevOps Blog&lt;/a>
&lt;ul>
&lt;li>AzureからAWSにミラーする方法。リポジトリを持っている側のFunctionsでgit mirrorする感じ。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/jp/blogs/news/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale/">CloudFront Functions の導入 – 任意の規模において低レイテンシーでコードをエッジで実行 | Amazon Web Services ブログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://future-architect.github.io/articles/20200219/">GCP連載#10 Terraform ではなくCloud Deployment Manager を使ってみよう | フューチャー技術ブログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/ja-jp/azure/architecture/example-scenario/serverless/serverless-multicloud">Serverless Framework を使用したマルチクラウド ソリューション - Azure Example Scenarios | Microsoft Docs&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Visual Studio Online</title><link>https://umemak.github.io/blog/posts/2019/11/05_visualstudioonline/</link><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/11/05_visualstudioonline/</guid><description>&lt;p>&lt;a href="https://visualstudio.microsoft.com/services/visual-studio-online/">https://visualstudio.microsoft.com/services/visual-studio-online/&lt;/a>&lt;/p>
&lt;p>パブリックプレビューになったということで、見に行ってみました。&lt;/p>
&lt;p>Azureのアカウントはすでにあるので、普通にSign inして「Create enviromnent」を押すと、ロケーションの選択が。&lt;/p>
&lt;p>現在選択できるのは、&lt;code>East US&lt;/code>, &lt;code>Southeast Asia&lt;/code>, &lt;code>West Europe&lt;/code>, &lt;code>West US 2&lt;/code>の4つ。&lt;/p>
&lt;p>Japanがないので、&lt;a href="https://azure.microsoft.com/en-us/pricing/details/visual-studio-online/">料金ページ&lt;/a>を見て安くて近そうな&lt;code>West US 2&lt;/code>を選択。&lt;/p>
&lt;p>で、createボタンが有効にならない。。どうやらAzureの試用期間が切れているので、有料アカウント登録しないとダメらしい。&lt;/p></description></item><item><title>Azure DevOpsでCI</title><link>https://umemak.github.io/blog/posts/2019/08/21_azure_devops/</link><pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/08/21_azure_devops/</guid><description>&lt;ul>
&lt;li>Hugoの実行とPUSHをやってもらう&lt;/li>
&lt;li>&lt;a href="https://blog.kaikeru.com/post/20181228-freestaticsite/">https://blog.kaikeru.com/post/20181228-freestaticsite/&lt;/a> を参考に設定。&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/ja-jp/azure/devops/pipelines/build/triggers?view=tfs-2018&amp;amp;tabs=yaml#ci-triggers">CIのスキップ&lt;/a>を念の為追加&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&amp;amp;tabs=yaml%2Cbatch#secret-variables">variableの設定&lt;/a>がわかりにくかった。
&lt;ul>
&lt;li>ちゃんと読めば書いてある。&lt;/li>
&lt;li>Pipeline編集画面の右上から。&lt;/li>
&lt;li>AWS Secrets Manager的なサービスがあるのかと探し回ってしまった。。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Azure DevOpsを使ってみる</title><link>https://umemak.github.io/blog/posts/2019/07/31_azure_devops/</link><pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2019/07/31_azure_devops/</guid><description>&lt;p>&lt;a href="https://azure.microsoft.com/ja-jp/services/devops/">https://azure.microsoft.com/ja-jp/services/devops/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>このリポジトリを対象にパイプラインを作成&lt;/li>
&lt;li>パイプラインでHugoとか使ってpages更新できないかと&lt;/li>
&lt;/ul></description></item><item><title>Azure登録</title><link>https://umemak.github.io/blog/posts/2018/12/22_regist_azure/</link><pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2018/12/22_regist_azure/</guid><description>&lt;ul>
&lt;li>今更ながらしてみた。&lt;/li>
&lt;li>GCPとAWSと比べてみたい。&lt;/li>
&lt;li>AzureにもCloud Shellがあつのか。しかもこっちはbashとPowerShellが選べる。（そしてbashを選ぶ&lt;/li>
&lt;li>
&lt;pre tabindex="0">&lt;code>$ uname -a
 Linux cc-210432c9-744568d74f-z58nc 4.15.0-1035-azure #36~16.04.1-Ubuntu SMP Fri Nov 30 15:25:49 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
$ ruby -v
 ruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-linux]
$ go version
 go version go1.9.4 linux/amd64
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>rubyちょっと古い&lt;/li>
&lt;/ul></description></item></channel></rss>