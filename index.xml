<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 01 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub ActionsでAzure Storage Blobにファイルをアップロードする</title><link>https://umemak.github.io/blog/posts/2023/08/01_prisma/</link><pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/08/01_prisma/</guid><description>GitHub ActionsからAzure上のIPアドレス制限済みリソースにアクセスする｜クラウドテクノロジーブログ｜ソフトバンクを見ながらやってみた。 例だとSleepが10秒だけど、試した環境だとエラーになったので、15秒にしたら通った。 あと、--account-name指定ではアップロードできず、--con</description></item><item><title>ghコマンド入門</title><link>https://umemak.github.io/blog/posts/2023/07/28_gh/</link><pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/07/28_gh/</guid><description>開発を爆速化！GitHub CLIで覚えるべきコマンド5選 を見て、便利そうだと思ったので導入してみた。 gh pr createとか良さそうだと思ったのだけど、mainブランチでPRも作らずpushしているブランチ戦略だと意味がなかった。</description></item><item><title>Tiny Tiny RSSをfly.ioにデプロイ（失敗）</title><link>https://umemak.github.io/blog/posts/2023/07/24_ttrss_fly/</link><pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/07/24_ttrss_fly/</guid><description>serl/ttrss-flyを試してみた。 flyctl deployのところでエラーになってしまう。 ログを見ると、DBへの接続でエラーになっているように見える。 psql: error: invalid connection option &amp;ldquo;アプリ名?sslmode&amp;rdquo; DB接続文字列は、flyctl postgres attach --app $PREFIX-ttrss $PREFIX-dbで設定されているので問題ないと思</description></item><item><title>Tiny Tiny RSS</title><link>https://umemak.github.io/blog/posts/2023/07/24_ttrss/</link><pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/07/24_ttrss/</guid><description>RSSはInoreaderで読んでいるのだけれど、無料プランなので重複削除などが使えず、似たような記事が時間差で流れてきて目障りに思うことがある。 NGワードフィルタなんかは自前でかませているので、さらにDBを使って類似記事を無かったことにすれば良いのだけれど、慣れてない環境だと面倒。 そこでOSSでセ</description></item><item><title>docker composeのファイル名</title><link>https://umemak.github.io/blog/posts/2023/07/03_compose/</link><pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/07/03_compose/</guid><description>WEB+DB PRESS Vol.135 | Gihyo Digital Publishingを読んでいて、docker composeの設定例がcompose.yamlになっているのが気になってググったら、compose V2から推奨が変わったらしい。 時代に乗り遅れていた。 参考： The Compose file | Docker Documentation Docker Compose V2で変わったdocker-compose.ymlの書き方 docke</description></item><item><title>Prisma</title><link>https://umemak.github.io/blog/posts/2023/07/01_prisma/</link><pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/07/01_prisma/</guid><description>TypeScript ORM「Prisma」のはじめかた - くらげになりたい。を見て、DBマイグレーション管理としてのPrismaを試してみた。 既存のDBスキーマをprisma pullで持って来られるというのを試したら、boolがtinyintになってしまうなどあったが、そこそこいい感じにできた。</description></item><item><title>技術書の読みにくさ</title><link>https://umemak.github.io/blog/posts/2023/06/24_book_pdf/</link><pubDate>Sat, 24 Jun 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/06/24_book_pdf/</guid><description>定期購読しているSoftware DesignとかWeb+DB Pressはダウンロード形式としてPDFとEPUBを選べるのだけど、PDFで読むことが多い。 理由はEPUBをKindleで開いたときのレイアウト崩れがひどいのとハイライトができないから。 で、PDFをelias-sundqvist/obsid</description></item><item><title>GitHub Actionsでコンテナイメージを登録する</title><link>https://umemak.github.io/blog/posts/2023/05/24_github_actions_ko/</link><pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/05/24_github_actions_ko/</guid><description>ko-build/setup-ko を使ったら簡単にできた。 https://github.com/umemak/kindle_xml_to_tsv/blob/main/.github/workflows/ko.ymlでhttps://github.com/umemak/kindle_xml_to_tsv/pkgs/container</description></item><item><title>CodeWhisperer</title><link>https://umemak.github.io/blog/posts/2023/05/13_code_whisperer/</link><pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/05/13_code_whisperer/</guid><description>Rust本の写経するときに、途中からCodeWhispererを有効にしてみた。 サンプルがGitHubに置いてあるからか、わりと的確な提案をしてくれてると思う。 ただ、VS Codeのサジェストと混ざったりでよくわからない確定の仕方をしたりすることがあった。</description></item><item><title>Rust本</title><link>https://umemak.github.io/blog/posts/2023/05/13_rust_book/</link><pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/05/13_rust_book/</guid><description>Amazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本を6章まで進めた。 アマゾンのレビューでも書かれていたけど、急に説明が雑になるし、コードが長くなるにつれてどこを対象とした差分なのかがわかりにくくなる。 270ページまで進めて写経はあきらめた。 最後まで丁寧に作るか、6章がなければ良本になっていたか</description></item></channel></rss>