<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 28 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>CloudFunctionsのログ</title><link>https://umemak.github.io/blog/posts/2022/11/28_cloudfunctions_log/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/28_cloudfunctions_log/</guid><description>何もしないと、リクエストパラメータすらログに出力されないので、何かと不便。 ログの作成、表示、処理 | Google Cloud Functions に関するドキュメントによると、標準出力や標準エラーに書き込めば良いが、Entry構造体を定義して、Stringメソッドを作り、logにPrintlnで渡せばもっと良い感じにできるらしい。 とりあえず</description></item><item><title>無線LANルーター3</title><link>https://umemak.github.io/blog/posts/2022/11/27_wifi_nec/</link><pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/27_wifi_nec/</guid><description>結局、最近調子悪くなったとはいえ今まで数年間安定して動いていた実績があるNECでも良いのではないか？と思うようになってきた。 Amazon.co.jp: 【Amazon.co.jp 限定】NEC Aterm 無線LAN WiFi ルーター Wi-Fi6 4×4 AX5400HP Atermシリーズ 6ストリーム (5GHz / 2.4GHz) AM-AX5400HP【 iPhone 13 / 12 / iPhone SE(第二世代) / Nintendo Switch メーカー動</description></item><item><title>無線LANルーター2</title><link>https://umemak.github.io/blog/posts/2022/11/26_wifi_iodata/</link><pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/26_wifi_iodata/</guid><description>売れ筋ランキングとは別に、 Amazon.co.jp 新着ランキング: 無線・有線LANルーター の新着ランキングです。 Amazon.co.jp ほしい物ランキング: 無線・有線LANルーター で、ほしい物リストとレジストリに最も多く追加された商品 Amazon.co.jp 人気ギフトランキング: 無線・有線LANルーター で、ギフトの設定を使用して最もご注文いただいている商品 があって</description></item><item><title>無線LANルーター</title><link>https://umemak.github.io/blog/posts/2022/11/25_wifi/</link><pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/25_wifi/</guid><description>Amazonのセールが始まったので、この機会に買い換えを検討。 Amazon.co.jp 売れ筋ランキング: 無線・有線LANルーター の中で最も人気のある商品です バッファロー、TP-Link、NECが多い。 今使ってて調子悪いのがNECだから、ちょっと避けたい。バッファローは大昔良くない思い出があるのでパス。TP-Linkは見た</description></item><item><title>GCPの課金</title><link>https://umemak.github.io/blog/posts/2022/11/24_gcp_charge/</link><pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/24_gcp_charge/</guid><description>Cloud FunctionsでAPIデプロイしてから、課金が発生しているのに気が付いた。 200万回までは無料では？と思い詳細を見てみると、Cloud Storageの料金だった。 料金 | Cloud Functions | Google Cloud 関数が Container Registry に保存される場合、Container Registry には無料枠がないため、デプロイ後にわずかな料金が発生します。 これか。</description></item><item><title>encoding/xml</title><link>https://umemak.github.io/blog/posts/2022/11/23_rss_filter/</link><pubDate>Wed, 23 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/23_rss_filter/</guid><description>encoding/xmlを使って複数RSS読み込んでマージして出力するのはできたけど、読み込むRSSの形式によってencoding/xmlでは読めないものが出てきた。 やっぱりmmcdole/gofeed: Parse RSS, Atom and JSON feeds in Goとか形式の違いを吸収してくれるライブラリを利用したほうが良さそう。 作ってみてわ</description></item><item><title>runnでgRPCのテスト3</title><link>https://umemak.github.io/blog/posts/2022/11/22_runn/</link><pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/22_runn/</guid><description>runnでDBの操作もできるのだけど、BINARY型のカラムがあるテーブルだとうまく動かない（気がする）。 深く考えずにCHAR型に変更したら通ったので、おそらくBINARY型が原因だったと思う。 時間ができたら検証してみたい。</description></item><item><title>GiteaからGitHubへの移行</title><link>https://umemak.github.io/blog/posts/2022/11/21_gitea_to_github/</link><pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/21_gitea_to_github/</guid><description>GiteaのリポジトリをGitHubに移行してみる。 Giteaのほうは、バックアップのzipがある状態。 zipを展開して、リポジトリ（.git拡張子のディレクトリ）をgit cloneでローカルリポジトリとして取り込む。 移行先のGitHubリポジトリを作成して、git remote set-url originでリモートリポジト</description></item><item><title>RSSフィルタ2</title><link>https://umemak.github.io/blog/posts/2022/11/20_rss_filter/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/20_rss_filter/</guid><description>Lambdaで動かそうと思っていたけど、Cloud Functionsにデプロイしてみた。 設定周りをDB管理したいと思ったら、それFirebaseで良いのでは？という気持ちになってきた。 FirebaseとGoの組み合わせは今までやったことない気がするので、この機会に試してみようと思ったけど、Fireb</description></item><item><title>RSSフィルタ</title><link>https://umemak.github.io/blog/posts/2022/11/19_rss_filter/</link><pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/19_rss_filter/</guid><description>mmcdole/gofeed: Parse RSS, Atom and JSON feeds in Goを使ったら、RSSの読み込みが超簡単にできた。 が、不要なエントリを削除してまたRSSとして出力しようとしたときに、手段が用意されていなさそう。 なので、encoding/xmlを使って作るのが良さそう。 Goのencoding/xmlの使い方について雑に紹介 Go言語 - XMLを読んで特</description></item></channel></rss>