<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 21 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>データ構成続き2</title><link>https://umemak.github.io/blog/posts/2021/12/21_ac/</link><pubDate>Tue, 21 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/21_ac/</guid><description>manyToMany だとエントリーとキャンセルの状態を持たせるのができなさそうなので、やっぱり関連を持つテーブルを作ったほうがよさそう（おとといの設計 そしてレコード追加の書き方がわからない・・</description></item><item><title>データ構成続き</title><link>https://umemak.github.io/blog/posts/2021/12/20_ac/</link><pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/20_ac/</guid><description>昨日、多対多の関連を持つテーブルを定義したけれど、manyToManyの指定で実現できるのではないか。 API (GraphQL) - Data modeling - AWS Amplify Docs</description></item><item><title>データ構造の見直し</title><link>https://umemak.github.io/blog/posts/2021/12/19_ac/</link><pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/19_ac/</guid><description>テーブル内に配列を持たせるのではなく、当初考えていたように、関連を管理するテーブルを別に用意したほうが良いのではないだろうか。 $ amplify push ? Do you want to update code for your updated GraphQL API Yes ? Do you want to generate GraphQL statements (queries, mutations and subscription) based on your schema types? This will overwrite your current graphql queries, mutations and subscriptions Yes 気軽に全部Yesしたけど、結構待たされる。 GraphQL（というかDynamoDB？）</description></item><item><title>エントリー機能追加</title><link>https://umemak.github.io/blog/posts/2021/12/18_ac/</link><pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/18_ac/</guid><description>イベントにエントリーできるようにする。 参加者をイベント内の配列で持たせようとしたのだけれど、追加の方法がわからない。。 array.push() で行けるだろうと思ったけどエラー。</description></item><item><title>データ更新機能</title><link>https://umemak.github.io/blog/posts/2021/12/17_ac/</link><pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/17_ac/</guid><description>IDの指定ができるようになったので、それをキーに更新ができるようにする。 ここはそれほど悩むことなく実装できた。</description></item><item><title>作成したレコードのID取得</title><link>https://umemak.github.io/blog/posts/2021/12/16_ac/</link><pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/16_ac/</guid><description>イベント作成と一覧が確認できたので、個別表示と編集のためのパラメータを渡す方法を調べる。 参考： API (GraphQL) - Create, update, delete data - JavaScript - AWS Amplify Docs API.graphql の戻り値を見ればよさそうだけど、長いIDだ、、 まあとりあえずはこれで。 router.js にパラメータ追加して、props: trueも設定。 props設定が抜けていて、&amp;ldquo;Variabl</description></item><item><title>CORS続き</title><link>https://umemak.github.io/blog/posts/2021/12/15_ac/</link><pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/15_ac/</guid><description>昨日、CORSのエラーで躓いていたものの解決ができず。 チュートリアルでやったときも出てたのか、出てなかったのか今となっては確認が面倒。。 問題の切り分けをするため、hostingに上げてみる。 $ amplify add hosting ? Select the plugin module to execute Hosting with Amplify Console (Managed hosting with custom domains, Continuous deployment) ? Choose a type Manual deployment $ amplify publish エラーは出ない。やっぱりCodespacesで実</description></item><item><title>データ登録やってみる</title><link>https://umemak.github.io/blog/posts/2021/12/14_ac/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/14_ac/</guid><description>データの格納先ができたので、画面からデータ登録できるようにしてみる。 参考： Tutorial - Connect API and database to the app - Vue - AWS Amplify Docs Codespacesでnpm run serveで実行してアクセスすると、ブラウザのコンソールにInvalid Host/Origin headerが出ている。 package.json を修正して回避。codespaces前提だけど。 &amp;quot;serve&amp;quot;: &amp;quot;vue-cli-service serve --public ${CODESPACE_NAME}.githubpreview.dev&amp;quot;, 参考： AWS</description></item><item><title>schemaファイルを作る</title><link>https://umemak.github.io/blog/posts/2021/12/13_ac/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/13_ac/</guid><description>データ構造を考えたので、それをスキーマ情報に落としていく。 の前にamplifyコマンド $ amplify add api ? Select from one of the below mentioned services: GraphQL ? Here is the GraphQL API that we will create. Select a setting to edit or continue Continue ? Choose a schema template: One-to-many relationship (e.g., “Blogs” with “Posts” and “Comments”) ⚠️ WARNING: your GraphQL API currently allows public create, read, update, and delete access to all models via an API Key. To configure PRODUCTION-READY authorization rules, review: https://docs.amplify.aws/cli/graphql/authorization-rules GraphQL schema compiled successfully. Edit your schema at /workspaces/eventsite/amplify/backend/api/eventsite/schema.graphql or place</description></item><item><title>データ構造を考える</title><link>https://umemak.github.io/blog/posts/2021/12/12_ac/</link><pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/12_ac/</guid><description>各画面で必要な項目からデータ構造を作る。 event 項目名 name type ID id int イベント名 title string 開催日時 timestamp 開催場所 place string 公開期間From open datetime 公開期間To close datetime 作成者 author int -&amp;gt; user.id user 項目名 name type ID id int ユーザー名 username string eventUser 項目名 name type ID id int イベントID eventid int -&amp;gt; event.id ユーザーID userid int -&amp;gt; user.id upload 項目名 name type ID id int イベントID eventid int -&amp;gt; event.id 資料URL url string comment 項目名 name type ID</description></item></channel></rss>