<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 09 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI入門</title><link>https://umemak.github.io/blog/posts/2023/10/09_fastapi/</link><pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/10/09_fastapi/</guid><description>FastAPI入門をやってみた。 特にひっかかることなく進めたが、最後のテストがPASSしない。 $ docker-compose run --entrypoint &amp;#34;poetry run pytest&amp;#34; demo-app [+] Building 0.0s (0/0) docker:default [+] Building 0.0s (0/0) docker:default ======================================================= test session starts ========================================================platform linux -- Python 3.9.17, pytest-7.4.2, pluggy-1.3.0 rootdir: /src plugins: anyio-3.7.1, asyncio-0.21.1 asyncio: mode=strict collected 2 items tests/test_main.py FF [100%] ============================================================= FAILURES ============================================================= _______________________________________________________ test_create_and_read _______________________________________________________ async_client = &amp;lt;async_generator object async_client at 0x7f8d3374dca0&amp;gt; @pytest.mark.asyncio async def test_create_and_read(async_client): &amp;gt; response = await async_client.post(&amp;#34;/tasks&amp;#34;, json={&amp;#34;title&amp;#34;: &amp;#34;テストタスク&amp;#34;}) E AttributeError: &amp;#39;async_generator&amp;#39; object has no attribute &amp;#39;post&amp;#39; tests/test_main.py:41: AttributeError __________________________________________________________ test_done_flag __________________________________________________________ async_client = &amp;lt;async_generator object async_client at 0x7f8d3374ddc0&amp;gt;</description></item><item><title>Cloud Functionsのデプロイでエラー</title><link>https://umemak.github.io/blog/posts/2023/10/08_cloud_function_error/</link><pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/10/08_cloud_function_error/</guid><description>久しぶりにデプロイ実行したら、エラーで中断してしまった。 エラーメッセージを見ると、いっこ前のイメージが見つからないみたいなやつで（コピペ紛失）、そういえばコスト削減しようとして、Storageのライフサイクルを1日とか最短にしたのを思い出した。 Cloud Functions のトラブルシューティング | Google Cloud Functions に関するドキュメント</description></item><item><title>OpenAPIのyamlを結合する</title><link>https://umemak.github.io/blog/posts/2023/09/29_openapi_bundle/</link><pubDate>Fri, 29 Sep 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/09/29_openapi_bundle/</guid><description>一つのopenapi.yamlに定義を書いていると、ファイルが肥大化して管理というか編集が大変になる。 で、分割するには$refを使って相対ファイル指定することで、外部ファイルを参照できる。 ただ、Swagger UIでダウンロードしようとすると、ルートのファイルしか取れない（相対ファイルを辿ればとれるだ</description></item><item><title>Windowsにazコマンドのインストール</title><link>https://umemak.github.io/blog/posts/2023/08/02_az_windows/</link><pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/08/02_az_windows/</guid><description>Azure CLI をインストールする方法 | Microsoft Learnからインストーラーをダウンロードしてインストールしたら、32bit版で実行するたびにメッセージが出て気になったので、アンインストールして別の方法を探った。 Support Azure CLI 64-bit on Windows · Issue #18766 · Azure/azure-cliでpip使ってインストールしたら回避できると書かれていた</description></item><item><title>GitHub ActionsでAzure Storage Blobにファイルをアップロードする</title><link>https://umemak.github.io/blog/posts/2023/08/01_prisma/</link><pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/08/01_prisma/</guid><description>GitHub ActionsからAzure上のIPアドレス制限済みリソースにアクセスする｜クラウドテクノロジーブログ｜ソフトバンクを見ながらやってみた。 例だとSleepが10秒だけど、試した環境だとエラーになったので、15秒にしたら通った。 あと、--account-name指定ではアップロードできず、--con</description></item><item><title>ghコマンド入門</title><link>https://umemak.github.io/blog/posts/2023/07/28_gh/</link><pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/07/28_gh/</guid><description>開発を爆速化！GitHub CLIで覚えるべきコマンド5選 を見て、便利そうだと思ったので導入してみた。 gh pr createとか良さそうだと思ったのだけど、mainブランチでPRも作らずpushしているブランチ戦略だと意味がなかった。</description></item><item><title>Tiny Tiny RSSをfly.ioにデプロイ（失敗）</title><link>https://umemak.github.io/blog/posts/2023/07/24_ttrss_fly/</link><pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/07/24_ttrss_fly/</guid><description>serl/ttrss-flyを試してみた。 flyctl deployのところでエラーになってしまう。 ログを見ると、DBへの接続でエラーになっているように見える。 psql: error: invalid connection option &amp;ldquo;アプリ名?sslmode&amp;rdquo; DB接続文字列は、flyctl postgres attach --app $PREFIX-ttrss $PREFIX-dbで設定されているので問題ないと思</description></item><item><title>Tiny Tiny RSS</title><link>https://umemak.github.io/blog/posts/2023/07/24_ttrss/</link><pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/07/24_ttrss/</guid><description>RSSはInoreaderで読んでいるのだけれど、無料プランなので重複削除などが使えず、似たような記事が時間差で流れてきて目障りに思うことがある。 NGワードフィルタなんかは自前でかませているので、さらにDBを使って類似記事を無かったことにすれば良いのだけれど、慣れてない環境だと面倒。 そこでOSSでセ</description></item><item><title>docker composeのファイル名</title><link>https://umemak.github.io/blog/posts/2023/07/03_compose/</link><pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/07/03_compose/</guid><description>WEB+DB PRESS Vol.135 | Gihyo Digital Publishingを読んでいて、docker composeの設定例がcompose.yamlになっているのが気になってググったら、compose V2から推奨が変わったらしい。 時代に乗り遅れていた。 参考： The Compose file | Docker Documentation Docker Compose V2で変わったdocker-compose.ymlの書き方 docke</description></item><item><title>Prisma</title><link>https://umemak.github.io/blog/posts/2023/07/01_prisma/</link><pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2023/07/01_prisma/</guid><description>TypeScript ORM「Prisma」のはじめかた - くらげになりたい。を見て、DBマイグレーション管理としてのPrismaを試してみた。 既存のDBスキーマをprisma pullで持って来られるというのを試したら、boolがtinyintになってしまうなどあったが、そこそこいい感じにできた。</description></item></channel></rss>