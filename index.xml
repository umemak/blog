<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 18 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>HTTP3入門</title><link>https://umemak.github.io/blog/posts/2022/12/18_http3/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/18_http3/</guid><description>WEB+DB PRESS Vol.131｜技術評論社の特集を読んだ。 概要から実践まで解説されていて、「完全に理解」できた。 サンプルはPythonで書かれていたので、他の言語でどうなのか調べてみたいと思った。</description></item><item><title>Elixir入門</title><link>https://umemak.github.io/blog/posts/2022/12/17_elixir/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/17_elixir/</guid><description>WEB+DB PRESS Vol.131｜技術評論社の特集を読んだ。 ElixirとかErlangとか、初心者向けならまず読み方を書いてくれればよいのにと思った。 WikiPediaによれば、エリクサー、アーラン。 文法の解説にページ使いすぎな気がしなくもないけど、それだけほかの言語と違うところがあるということなのだろう。 El</description></item><item><title>Rust再入門</title><link>https://umemak.github.io/blog/posts/2022/12/16_rust/</link><pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/16_rust/</guid><description>WEB+DB PRESS Vol.131｜技術評論社の特集を読んでいる途中。 やっぱりマクロが出てきたあたりで難易度が上がるような気がする。 そういえば、Amazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本も買っていたのを思い出した。 これも読まなきゃ。</description></item><item><title>Goのエラーのラップ</title><link>https://umemak.github.io/blog/posts/2022/12/15_go_error/</link><pubDate>Thu, 15 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/15_go_error/</guid><description>Goでスタイリッシュにエラーをラップする方法を学んだ - カミナシ エンジニアブログを見て、なるほどと思った。 ただ、自分の場合はエラーメッセージに、エラーを返した関数なりメソッド名を入れたい派なので、一律同じになるこの方法は見送りかな、と。 func hoge() error { err := Huga() if err != nil { return fmt.Errorf(&amp;#34;Huga: %w&amp;#34;, err) } return nil } こんな感じ。</description></item><item><title>Docker x ChatGPT</title><link>https://umemak.github.io/blog/posts/2022/12/14_docker/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/14_docker/</guid><description>Dockerの学習方法について、ChatGPTに聞いてみた。 おおむね自分の認識と合った回答だった。 もう一度やったら違う回答が出てきそうだったけど、エラーになってしまった。 大人気で混雑してるっぽい。</description></item><item><title>jamstack再入門</title><link>https://umemak.github.io/blog/posts/2022/12/13_jamstack/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/13_jamstack/</guid><description>昨日の続きで、Software Design 2022年11月号｜技術評論社の特集を読んだ。 このページもHugoで生成しているので、jamstackと言えるはず。 今はGitHub Pages使っていて、特に不都合ないので引っ越すつもりもないけど、特集読んでnetlifyとか使ってみたいと思った。</description></item><item><title>Docker再入門</title><link>https://umemak.github.io/blog/posts/2022/12/12_docker/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/12_docker/</guid><description>Dockerのおさらいをするために、Software Design 2022年11月号｜技術評論社の特集を読んだ。 基本的なコンテナの仕組みへの理解が深まった気がする。 個人的には、以前ほど何でもコンテナ化したらいいじゃんって感じではなくなって、選択肢の一つとして存在している感じ。 まぁDocker使ってもMacとWi</description></item><item><title>Goのpresentパッケージ</title><link>https://umemak.github.io/blog/posts/2022/12/11_go_present/</link><pubDate>Sun, 11 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/11_go_present/</guid><description>Go製プレゼンツール「present」のインストール手順 - Qiitaを見て、そんなものがあるのかと初めて知った。 どんなものかと検索したら、Goのpresentで発表用スライドを作成する - Carpe Diemの記事で実際の例がリンクされてて、それ見たらこういうスライド見たことがあった。 最近はスライド作るのはMa</description></item><item><title>ラズパイでDockerでMySQL</title><link>https://umemak.github.io/blog/posts/2022/12/10_raspberry_pi_vscode/</link><pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/10_raspberry_pi_vscode/</guid><description>GitHub Codespacesが使えるようになるのを待つ間、ラズパイで何とかならないか試してみた。 VS Codeからリモート接続して、Dockerインストールするところまでは順調だったけれど、docker compose upしたところでエラー。 MySQLのコンテナイメージが提供されていないようだ。 意外だった。 mysql Tags | Docker Hubに</description></item><item><title>Codespacesの制限</title><link>https://umemak.github.io/blog/posts/2022/12/09_codespaces/</link><pubDate>Fri, 09 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/09_codespaces/</guid><description>GitpodからVS Codeに作業環境を引っ越して、docker-composeでコンテナ立てて動かせるようにしてみた。 が、airとかnextjsのホットリロードが効かない。 Windowsだとダメらしい。WSLで起動しても変わらず。 じゃあGitpodがPWAならある程度使い勝手が良いのでは？と思った</description></item></channel></rss>