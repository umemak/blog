<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 14 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker Desktop 4.7.0でhost.docker.internal</title><link>https://umemak.github.io/blog/posts/2022/04/14_docker_desktop_470/</link><pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/14_docker_desktop_470/</guid><description>Docker Desktopの4.7.0が出たので、host.docker.internalの件が変化あったか試してみた。 https://github.com/umemak/docker_network_test 変わっていなかった。 リリースノート見てもそれらしい変更なかったし、残念だが当然。 世界中でほかに誰も困っていないのかなぁ。。</description></item><item><title>動画編集入門</title><link>https://umemak.github.io/blog/posts/2022/04/13_movie_edit/</link><pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/13_movie_edit/</guid><description>Shotcutで動画にテロップつけるの、意外と難しいというかいろいろ理解するのに時間がかかって難航。。 今週中に仕上げられるのだろうか。</description></item><item><title>Shotcut</title><link>https://umemak.github.io/blog/posts/2022/04/12_shotcut/</link><pubDate>Tue, 12 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/12_shotcut/</guid><description>OBSで収録した動画にテロップつけたいと思って、Shotcut - Home をインストールした。 Windows11のフォトアプリでも動画編集できるらしいのだけれど、アプリが落ちまくって使い物にならなかった。。</description></item><item><title>XSplit VCam</title><link>https://umemak.github.io/blog/posts/2022/04/11_xsplit_vcam/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/11_xsplit_vcam/</guid><description>XSplit VCam: OBSでバーチャルグリーンバックを手に入れよう | XSplit を試してみた。 OBSで合成するのに、Zoomで背景緑にしてウィンドウキャプチャしていたけど、もっと簡単に導入できた。 無料版だとロゴが入るので、課金するかは検討中。年に2回程度しか使わない予定なので、だったら少しくらい面倒でもZoomで良い気もする</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/10_rust_book/</link><pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/10_rust_book/</guid><description>unsafeの節を読んだ。 Rustでも安全でないコードを書くことができる。しかしそれを局所化しておくことが大事。 直近で必要になることはなさそう。 その他Tipsを読んで読了した。 自分にはRustより先に習得すべきものがある気がした。</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/09_rust_book/</link><pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/09_rust_book/</guid><description>他言語（C,Ruby）との連携の節を読んだ。 章的にはTipsなので、こんなこともできるんだねといった感じで。</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/08_rust_book/</link><pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/08_rust_book/</guid><description>マクロの節を読んだ。 結構ボリュームがあった。 実行速度を上げるには実行時の関数呼び出しよりコンパイル時に展開したほうが良いのはわかる。 そこまで速度を気にしないといけないものを作る機会がないというのもあるけど、使いどころが今一つイメージできなかった。 他人の書いたコードを読み解く必要があるときに知っている</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/07_rust_book/</link><pubDate>Thu, 07 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/07_rust_book/</guid><description>バイナリの最適化などの章を読んだ。 この辺はまだ成熟していない印象。</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/06_rust_book/</link><pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/06_rust_book/</guid><description>組み込みの章を読んだ。 あまり直接関係なさそうだったのでさらっと。 開発ツールの章を読んだ。 Goとそう変わらない感じ？</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/05_rust_book/</link><pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/05_rust_book/</guid><description>GUIの章を読んだ。 ColumnとRowをコンテナに配置して、ってFlutterっぽい（昔のHTMLテーブルレイアウトっぽいともいう）感じで配置していくのはわかりやすいと思った。 ファイルを読んでバイト配列に入れるinclude_bytes!マクロはほかでも使えそう。</description></item></channel></rss>