<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 24 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Wiki.jsを試す</title><link>https://umemak.github.io/blog/posts/2020/05/24_wikijs/</link><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/05/24_wikijs/</guid><description>GCP無料枠でWikiを動かしてみるシリーズ。 今回はWiki.js。 docker-composeを使う方法も用意されているが、軽量優先で通常インストールのほうで。 https://docs.requarks.io/install/linux config.ymlの編集では、ポートを80に、DBをsqliteに変更した。 $ sudo apt install wget nodejs npm $ wget https://github.com/Requarks/wiki/releases/download/2.3.81/wiki-js.tar.gz $ mkdir wiki $ tar xzf wiki-js.tar.gz -C ./wiki $ cd ./wiki $ mv config.sample.yml config.yml $ nano config.yml</description></item><item><title>第三回アルゴリズム実技検定受けてみた</title><link>https://umemak.github.io/blog/posts/2020/05/23_past/</link><pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/05/23_past/</guid><description>https://past.atcoder.jp/ リアルタイム受験と通常受験があって、リアルタイム受験の方をやってみた。 まだ通常受験の期間内なので、内容について口外できない。 6月6日を過ぎたら書きたいことを書こうと思う。</description></item><item><title>Surface Go 2を入手</title><link>https://umemak.github.io/blog/posts/2020/05/20_surfacego2/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/05/20_surfacego2/</guid><description>昨日注文して今日届いた。 最近、Chromebookだけだと作業効率が悪いことがあって、Intel系CPUでWindowsOSで軽量で解像度がそれなりにあるものを探していたので。 C101PAを買う前に、最後まで比較したのが初代Goだったのもあり、やはり自分で使ってみないと評価できないよね、と。</description></item><item><title>DenoをChromebookで使ってみる</title><link>https://umemak.github.io/blog/posts/2020/05/15_deno/</link><pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/05/15_deno/</guid><description>Denoのバージョン1が出たというニュース記事を見て、試してみた。 https://deno.land/v1 Node.jsを作者自ら作り直したもの。 最初にRaspberry Pi 4で試したところ、公式のインストーラーがx86_64しか対応していなかったので断念。 ソースからビルドする手順も試してみたけれど、途中でエラーになってしまう。 armで動</description></item><item><title>VSCode onlineがVSCodespaceに改名</title><link>https://umemak.github.io/blog/posts/2020/05/01_vscodeonline/</link><pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/05/01_vscodeonline/</guid><description>改名というよりは、ベータ版から正式名称になったという方が正しいか。 https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-codespaces/ ということで、先日作成したのを見に行ったら、 Chrome OS未対応・・・！ どういう理由だろう。。</description></item><item><title>ラズパイでdroidcam</title><link>https://umemak.github.io/blog/posts/2020/05/01_droidcam/</link><pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/05/01_droidcam/</guid><description>ラズパイにWebカメラ付けてみたくても売っていないので、Android端末をカメラ化する。 Android端末側にはアプリをインストールしておく。 ラズパイ側。公式ページにはLinux用のインストール方法が用意されているが、 http://www.dev47apps.com/droidcam/linuxx/ Note: 32-bit binaries are no longer provided, you’ll need to compile the client from source. この条件に該当するのでソースからインス</description></item><item><title>はじめてのrpi-update</title><link>https://umemak.github.io/blog/posts/2020/04/27_rpi_update/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/04/27_rpi_update/</guid><description>snapを導入してみたところ、実行時にエラーが出る。 $ hello-world ERROR: ld.so: object &#39;/usr/lib/arm-linux-gnueabihf/libarmmem-${PLATFORM}.so&#39; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored. Hello World! 実行自体はできているっぽいんだけど、気になるのでググったらrpi-updateを実行すると解消するかもしれないということで、やってみた。 ############################################################# WARNING: &#39;rpi-update&#39; updates to pre-releases of the linux kernel tree and Videocore firmware. &#39;rpi-update&#39; should only be used if there is a specific reason to do so - for example, a request by a Raspberry Pi</description></item><item><title>ラズパイ4にUbuntu20.04を入れる</title><link>https://umemak.github.io/blog/posts/2020/04/24_raspi_ubuntu/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/04/24_raspi_ubuntu/</guid><description>Ubuntuの新しいLTS版が出たので、ラズパイで動かしてみた。 実は先日、18.04＋kubuntuを入れてみたところ、動作が重くてちょっと実用にはならないなと思っていたところ。 20.04になってもしかしたら軽くなっているかもと期待して試した。 結果、kubuntuのGUIが起動しなくて公平な比較がで</description></item><item><title>ラズパイでbox86を試す</title><link>https://umemak.github.io/blog/posts/2020/04/23_box86/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/04/23_box86/</guid><description>ラズパイはARM系のCPUなので、INTEL系のCPU用にビルドされたバイナリはそのままでは動きません。 そこでエミュレーターを使ってみます。 今回使ってみたのは、 https://github.com/ptitSeb/box86 です。 ラズパイ4用のビルド方法が書いてあるので、その通りにして https://github.com/ptitSeb/box86/blob/master/COMPILE.md 途中、cmake がインストールされてないエラーが出たので、aptでインスト</description></item><item><title>ラズパイ4導入</title><link>https://umemak.github.io/blog/posts/2020/04/17_raspi/</link><pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2020/04/17_raspi/</guid><description>以前から興味があったラズパイについに手を出しました。 4Bの4GB版。 さっそくSDカードにOSを入れて、と思ったらChromebookでできない。 https://www.raspberrypi.org/downloads/ のRaspberry Pi Imager for Ubuntuを入れて、起動はするもののSDカードを認識してくれないので書き込み先が指定できず。 開発者モードにすればいけるのかもし</description></item></channel></rss>