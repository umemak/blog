<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 14 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>SQLBoilerで論理削除の復旧</title><link>https://umemak.github.io/blog/posts/2022/11/14_sqlboiler_undelete/</link><pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/14_sqlboiler_undelete/</guid><description>SQLBoilerはDeleteするときに論理削除が使える。 詳細は【Go】sqlboilerで論理削除を実装する | ISSUEが詳しい。 論理削除のときはdeleted_atカラムがセットされる。 で、そのときupdated_atは更新されない。 論理削除した行を元に戻したいとき、deleted_atにnu</description></item><item><title>.d.tsファイル</title><link>https://umemak.github.io/blog/posts/2022/11/13_d.ts/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/13_d.ts/</guid><description>Saul-Mirone/milkdown: 🍼 Plugin driven WYSIWYG markdown editor framework.とjazz-soft/react-midi-player: React MIDI Playerを組み合わせて使おうとしたら、React MIDI PlayerがTypeScript未対応らしく、モジュール 'react-midi-player' の宣言ファイルが見つかりませんでした。とのこと。 react-midi-player.d.t</description></item><item><title>マークダウンエディター</title><link>https://umemak.github.io/blog/posts/2022/11/12_mdeditor/</link><pubDate>Sat, 12 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/12_mdeditor/</guid><description>久しぶりに検索してみた。 tinymce/tinymce: The world&amp;rsquo;s #1 JavaScript library for rich text editing. Available for React, Vue and Angular 保存形式が良くわからない summernote/summernote: Super simple WYSIWYG editor マークダウンではなくてHTMLで取り出す？ Saul-Mirone/milkdown: 🍼 Plugin driven WYSIWYG markdown editor framework. 良さそう。 mycolorway/simditor: An Easy and Fast WYSIWYG Editor 行やカラムの追加削除ができない？ 以前調べていた時もMilkdownは候補に挙がっていて、Reactとか面倒だと思って不採用にして</description></item><item><title>SQLBoiler</title><link>https://umemak.github.io/blog/posts/2022/11/11_sqlboiler/</link><pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/11_sqlboiler/</guid><description>SQLBoilerを使うロジックをDATA-DOG/go-sqlmock: Sql mock driver for golang to test database interactionsでテストしようとしてハマった。 使わない便利機能は複雑さが増すだけで良いことないな。。 使いこなせば、それなしとか考えられないんだろうけど、つらい。</description></item><item><title>ラズパイをルーターにする2</title><link>https://umemak.github.io/blog/posts/2022/11/10_raspi_router/</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/10_raspi_router/</guid><description>SSIDが見つからない件。 linux - Raspberry Pi 4 hostapd hotspot not visible - Super Userの回答を参考に、 sudo systemctl stop dhcpcd.service sudo systemctl restart hostapd.service sudo systemctl start dhcpcd.service したらいけた。 /etc/dhcpcd.confにdenyinterfaces wlan0を追記するのは効き目なかった。 スピードテストの結果 経由 ダウンロード アップロード レイテンシ 無線LANルーター 88.2Mbps 78.4Mbps 79ms ラズパ</description></item><item><title>ラズパイをルーターにする</title><link>https://umemak.github.io/blog/posts/2022/11/09_raspi_router/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/09_raspi_router/</guid><description>PCは昨日買ってきたLANケーブルでインターネット接続は解決した。 Pixel4も同じ現象だった。 LANケーブルつないだらいけるのか、LANポート付きUSB-HUBを試してみたけれど、ダメだった。 なので、ラズパイを無線LANルーターにしてみることにした。 やり方はググったらいくつか出てきた。 ラズパイを無</description></item><item><title>DNS不調3</title><link>https://umemak.github.io/blog/posts/2022/11/08_dns/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/08_dns/</guid><description>以前書いた、DNS解決できない現象が久しぶりに頻発して、仕方がないのでホムセンでLANケーブル買ってきてRT-S300SEに直接（無線LANルーター経由せずに）接続することにした。 RT-S300SEと無線LANルーターの間に問題があるっぽいので、これで問題起きようがないはず。</description></item><item><title>SQLBoiler</title><link>https://umemak.github.io/blog/posts/2022/11/07_sqlboiler/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/07_sqlboiler/</guid><description>volatiletech/sqlboiler: Generate a Go ORM tailored to your database schema.を少し触ってみた。 普段はkyleconroy/sqlc: Generate type-safe code from SQLをよく使っているのだけれど、あらかじめSQLを書かなくて良いのは楽。 だけど結局DB操作するときには対象のレコードを指定するのに組み立てないといけないので、一長一短。 手段を一つしかもっていないと、それ</description></item><item><title>qwik</title><link>https://umemak.github.io/blog/posts/2022/11/06_qwik/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/06_qwik/</guid><description>何かのPodcastでqwikについて言及されていて、ちょっと調べてみた。 知りたいことはqwik の発明、及びマイクロフロントエンドへの活用について - mizdra&amp;rsquo;s blogに全部書かれていた。 イベント処理を後からロードするから、初期表示が速くなる、と。 フロントエンドの初期表示が問題にあるほど巨大なもの作ってないし</description></item><item><title>SWRの更新系</title><link>https://umemak.github.io/blog/posts/2022/11/05_swr_update/</link><pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/05_swr_update/</guid><description>SWRで更新系もできると思ったけれど、mutateで更新するのは、ローカルのキャッシュのようだ。 つまりPOSTやDELETEは別途実行して、その結果をローカルキャッシュに反映するのがmutate。 更新系API呼びつつキャッシュも最新化するというものではなさそう。残念。</description></item></channel></rss>