<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 28 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>DB再作成</title><link>https://umemak.github.io/blog/posts/2021/12/28_ac/</link><pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/28_ac/</guid><description>データがある状態でデータ構造の変更をかけたせいか、挙動が怪しくなったので一度DynamoDBのテーブルを削除した。 その後、amplify update api、apmlify pushを実行。 したらAppSyncのupdateでエラー終了してしまった。 amplify deleteで丸ごと削除してからamplify pushしたらN</description></item><item><title>ここまでのまとめ</title><link>https://umemak.github.io/blog/posts/2021/12/26_ac/</link><pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/26_ac/</guid><description>やったこと Amplifyのチュートリアル Codespacesでの開発 VSCode+WSLでの開発 VSCode+EC2での開発 VSCode+RaspberryPi4での開発 わかったこと AmplifyはFirebaseみたいなもの Vueはわかりやすい データベースはGraphQLわからないとつらい クラウド</description></item><item><title>データ構造再考</title><link>https://umemak.github.io/blog/posts/2021/12/27_ac/</link><pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/27_ac/</guid><description>リレーション張ろうとするからややこしくなるのであって、IDだけ持たせればとりあえずやりたいことは実現できるのでは？</description></item><item><title>EC2で開発</title><link>https://umemak.github.io/blog/posts/2021/12/25_ac/</link><pubDate>Sat, 25 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/25_ac/</guid><description>Surface Go2 で厳しいので、EC2インスタンス立ててやってみる。 とりあえず無料枠のt2.microでAmazonLinux。 gitが入ってなかったのでインストール。 $ sudo yum update $ sudo yum install git $ git --version git version 2.32.0 npmも入っていなかった。 チュートリアル: Amazon EC2 インスタンスでの Node.js のセットアップ - AWS SDK for JavaScript $ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash $ . ~/.nvm/nvm.sh $ nvm install node $</description></item><item><title>Raspberry pi 4でやってみる</title><link>https://umemak.github.io/blog/posts/2021/12/25_ac2/</link><pubDate>Sat, 25 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/25_ac2/</guid><description>寝る前にEC2で試してダメで、起きたらラズパイがあること思い出したので、ラズパイでも試してみる。 久しぶりの起動だし、OSクリーンインストールからやったら結構時間かかる。こんなにかかったっけ。 毎日のようにAmplify設定やっているとだいぶ慣れてくる。 JavaはWSLのときのコマンドで入れる。 add-apt-repository コマン</description></item><item><title>ユーザーテーブルにデータ登録する</title><link>https://umemak.github.io/blog/posts/2021/12/24_ac/</link><pubDate>Fri, 24 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/24_ac/</guid><description>イベントにエントリーするときにユーザーテーブルとイベントテーブルの関連付けするので、それぞれのテーブルにデータがないといけない。 イベントテーブルの作成と編集はできるようになっているので、ユーザーテーブルにデータ登録するところを作る。 サインインのタイミングで登録できれば良いのだけれど、とりあえずログイ</description></item><item><title>壊れたファイルを取り戻す</title><link>https://umemak.github.io/blog/posts/2021/12/23_ac/</link><pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/23_ac/</guid><description>最初に試したチュートリアルもCodespaceでやってたのを思い出して、まだ残っていたのでaws-exporter.jsを持ってくることができた。 で、aws_appsync_graphqlEndpoint はAWSコンソールから確認できるだろう、と見に行ったら、バックエンドの設定をもってくるっぽいコマ</description></item><item><title>Amplify mock使ってみる</title><link>https://umemak.github.io/blog/posts/2021/12/22_ac/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/22_ac/</guid><description>データ構造試行錯誤するのに、毎回amplify pushすると時間がかかって面倒だなーと思っていたら、ローカルで動かせるモックがあることを知った。 Codespacesでまともに動くかわからないけど、やってみる。 $ amplify mock api 動いた。けど、アプリから接続しに行くのがIPアドレス指定で、Codespacesの公</description></item><item><title>データ構成続き2</title><link>https://umemak.github.io/blog/posts/2021/12/21_ac/</link><pubDate>Tue, 21 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/21_ac/</guid><description>manyToMany だとエントリーとキャンセルの状態を持たせるのができなさそうなので、やっぱり関連を持つテーブルを作ったほうがよさそう（おとといの設計 そしてレコード追加の書き方がわからない・・</description></item><item><title>データ構成続き</title><link>https://umemak.github.io/blog/posts/2021/12/20_ac/</link><pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2021/12/20_ac/</guid><description>昨日、多対多の関連を持つテーブルを定義したけれど、manyToManyの指定で実現できるのではないか。 API (GraphQL) - Data modeling - AWS Amplify Docs</description></item></channel></rss>