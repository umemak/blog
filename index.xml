<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 31 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Expo</title><link>https://umemak.github.io/blog/posts/2022/06/01_expo/</link><pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/06/01_expo/</guid><description>以前一度使ってみたことがあるExpoに再入門。 前にやったときはWSLだとダメでラズパイで動かしていたけど、もう１年以上たっているしいけるのでは？という期待を込めてWSL2でやってみる。 $ sudo npm install --global expo-cli $ expo init . ✔ Choose a template: › tabs (TypeScript) several example screens and tabs using react-navigation and TypeScript ✔ Downloaded template. 📦 Using npm to install packages. ✔ Installed JavaScript dependencies. ✅ Your project is ready! To run your project, run one of the following npm commands. - npm start</description></item><item><title>Firebase設定</title><link>https://umemak.github.io/blog/posts/2022/05/31_firebase_hosting/</link><pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/31_firebase_hosting/</guid><description>WebViewを使うとして、MDMMLのJS版を公開する場所をFirebase Hostingにした。 久しぶりにFirebase使ったらオプションが色々増えている気がする。 $ firebase init ######## #### ######## ######## ######## ### ###### ######## ## ## ## ## ## ## ## ## ## ## ## ###### ## ######## ###### ######## ######### ###### ###### ## ## ## ## ## ## ## ## ## ## ## ## #### ## ## ######## ######## ## ## ###### ######## You&amp;#39;re about to initialize a Firebase project in this directory: /home/umemak/workspace/mdmml_js ? Which Firebase</description></item><item><title>json2md</title><link>https://umemak.github.io/blog/posts/2022/05/30_json2md/</link><pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/30_json2md/</guid><description>&amp;lt;が消えるのはエスケープ処理を入れることで回避できた。 https://github.com/umemak/mdmml_js/commit/7227e554490538dca2a2dce428fb0382297100f4 ここまでできたら、アプリ化したい。 Flutterは言語が違うけど、WebView的なものでラップすればいけるかな。</description></item><item><title>json2md</title><link>https://umemak.github.io/blog/posts/2022/05/29_json2md/</link><pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/29_json2md/</guid><description>JSONをマークダウンに変換するのは比較的簡単にできた。 mdmmlに組み込んでサンプル鳴らしてみたらなんかおかしい。 よく見ると&amp;lt;と&amp;gt;に囲まれたところが消えている。タグ扱いされてしまっているようだ。 JSONに保存するタイミングで&amp;lt;などが&amp;amp;lt;などに変換されているなぁ。</description></item><item><title>json2md</title><link>https://umemak.github.io/blog/posts/2022/05/28_json2md/</link><pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/28_json2md/</guid><description>codex-team/editor.jsの出力をIonicaBizau/json2md: A JSON to Markdown converter.に入れてみた。 思ってはいたけど、ダメだった。 面倒でも自作しないといけないか。。</description></item><item><title>マークダウンエディター選び</title><link>https://umemak.github.io/blog/posts/2022/05/27_editorjs/</link><pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/27_editorjs/</guid><description>以前調べたマークダウンエディタ、codex-team/editor.jsは保存形式がJSONだったのであきらめたけど、JSONとマークダウンを相互変換できればやりたいことが実現できるのではないか？</description></item><item><title>Kuzzleのユーザー認証</title><link>https://umemak.github.io/blog/posts/2022/05/26_kuzzle_auth/</link><pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/26_kuzzle_auth/</guid><description>Authenticate Users | Kuzzle Documentation 標準で用意されている認証方法は、ユーザー名＋パスワードもしくはOAuthで、Passport.jsに依存している様子。 Firebaseみたいなメールアドレスを使った認証はないのかとPassport.jsのFeaturesで検索しても、それらしいものはない。 ちょっとこれは自分の使い方だと困っ</description></item><item><title>スノウ・クラッシュ読了</title><link>https://umemak.github.io/blog/posts/2022/05/25_snow_crash/</link><pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/25_snow_crash/</guid><description>スノウ・クラッシュ (全2巻) Kindle版 これでメタヴァース完全に理解した。 終わり方がちょっと物足りない気がする。</description></item><item><title>KuzzleのDart SDKドキュメント</title><link>https://umemak.github.io/blog/posts/2022/05/24_kuzzle_doc/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/24_kuzzle_doc/</guid><description>ちゃんと読もうと思ったので、日本語に訳しながらやっていこうかと。 https://github.com/umemak/sdk-dart/blob/master/doc/3/getting-started/flutter/index.md DeepLでざっくり訳して細かいところを手直しする感じで。 で、ファイル構成眺めていたら、getting-startedのコード見つけた。 https://github.com/kuzzleio/sdk-dart/tree/master/doc/3/getting-started/.flutter/lib これはリンク張っといてほしかった。</description></item><item><title>DartPad</title><link>https://umemak.github.io/blog/posts/2022/05/23_dartpad/</link><pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/23_dartpad/</guid><description>FlutterFire のページを見に行ったらヘッダに「DartPad」というのを見つけて、開いてみた。 ブラウザでFlutterのサンプルが実行できてる・・！ GitHubのReadmeによると、2015年から作られ始めて、2019年にFlutter対応した新バージョンが公開されたらしい。 importできるパッケージが限ら</description></item></channel></rss>