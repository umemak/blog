<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 18 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Goのtemplateのinclude</title><link>https://umemak.github.io/blog/posts/2022/07/18_go_include/</link><pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/18_go_include/</guid><description>テンプレートのincludeってどうやるんだっけ、と思って検索した。 Go の html/template でヘッダーやフッター等の共通化を実現する方法 · Yutaka 🍊 Kato なるほど、{{define &amp;quot;header&amp;quot;}}～{{end}}で定義して、{{template &amp;quot;header&amp;quot; .}}で呼び出すのか。</description></item><item><title>mermaidのER図</title><link>https://umemak.github.io/blog/posts/2022/07/17_mermaid/</link><pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/17_mermaid/</guid><description>VS Codeのmermaid拡張でER図を試していて、カラム名に日本語使えなくて論理名と物理名両方書きたいのにどうしようかと思ったら、コメントとして書けば日本語も通ることに気づいた。 mermaid - Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams, gantt charts and git graphs. つまり、こう書ける。 erDiagram user { bigint id PK &amp;quot;ID Auto increment&amp;quot; text email &amp;quot;メール&amp;quot; text name &amp;quot;</description></item><item><title>GoのJSON</title><link>https://umemak.github.io/blog/posts/2022/07/16_go_json/</link><pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/16_go_json/</guid><description>PocketBaseのユーザー作成をGoからHTTP叩いて実行しようとして、正常時とエラー時で戻ってくるJSONの形式が違っていた。 structを別々に用意して、Unmarshalでエラーになったらもう片方を使う？とか思ったけど、 golang は ゆるふわに JSON を扱えまぁす! — KaoriYaによると、interfa</description></item><item><title>idとauto increment</title><link>https://umemak.github.io/blog/posts/2022/07/15_id_column/</link><pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/15_id_column/</guid><description>DB設計するときのIDカラムについて。 昔ながらのシステムだと、auto increment使って連番が定番だと思うのだけど、PocketBaseでCollectionにRecord追加したとき、idは1ldTBeJNhX3jufuみたいな文字列が割り振られていて、そういえばFirebaseもそうだった</description></item><item><title>Live Share on GitHub Codespaces</title><link>https://umemak.github.io/blog/posts/2022/07/15_live_share/</link><pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/15_live_share/</guid><description>VS CodeのLive Share - Visual Studio Marketplace拡張、Codespaces | GitHubで使えたら良いなと思って試してみた。 Web Editor（リポジトリ画面で.押すと開くやつ）だと、拡張のインストールやURLの発行はできるけど、Joinしようとするとサーバーが応答しない的なエラー（うろ覚え）で接続で</description></item><item><title>PocketBaseの更新</title><link>https://umemak.github.io/blog/posts/2022/07/15_pocketbase/</link><pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/15_pocketbase/</guid><description>PocketBaseの更新が早い。 Releases · pocketbase/pocketbase 手元のDockerfileもバージョン指定できるように変更した。 https://github.com/umemak/eventsite_go/blob/7bc46cf58fd472582fe70ec32590a43c4d19a3f7/Dockerfile.pocketbase#L3 Admin UIで日時の表示がUTC固定なのをTZ指定できるようにならないかな。</description></item><item><title>失敗から学ぶRDBの正しい歩き方</title><link>https://umemak.github.io/blog/posts/2022/07/14_rdb/</link><pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/14_rdb/</guid><description>ずっと欲しいものリストに入っていて買ってなかった、 失敗から学ぶRDBの正しい歩き方 Software Design plus | 曽根 壮大 | コンピュータ・IT | Kindleストア | Amazonをプライムデーのポイントアップ狙いで購入した。 細かいテーブルたくさん作るより、汎用テーブルにしたものを作ろうとしていたので、それはだめだと分かったの</description></item><item><title>PocketBase</title><link>https://umemak.github.io/blog/posts/2022/07/13_pocketbase/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/13_pocketbase/</guid><description>supabaseと格闘していたら、PocketBase - Open Source backend in 1 fileという似たような機能を提供するツールを見つけた。 GitHub見ると1週間ほど前に公開されたばかりのよう。 FROM alpine WORKDIR /app RUN wget https://github.com/pocketbase/pocketbase/releases/download/v0.2.4/pocketbase_0.2.4_linux_amd64.zip RUN unzip pocketbase_0.2.4_linux_amd64.zip RUN rm pocketbase_0.2.4_linux_amd64.zip CMD [ &amp;quot;/app/pocketbase&amp;quot;, &amp;quot;serve&amp;quot;, &amp;quot;--http&amp;quot;, &amp;quot;0.0.0.0:8090&amp;quot; ] これでhttp://0.0.0.0:8090/_/にアクセスしたら管理者アカウント</description></item><item><title>GoTrue</title><link>https://umemak.github.io/blog/posts/2022/07/12_gotrue/</link><pubDate>Tue, 12 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/12_gotrue/</guid><description>supabaseで使っている認証モジュールがnetlify/gotrue: An SWT based API for managing users and issuing SWT tokens。 supabaseのAPIでGoは提供されてないので、直接たたけないか調べてみる。 Architecture | Supabase見ると、/authでGoTrueに流されるようだが、Kongの公開ポート54321経由でht</description></item><item><title>supabaseを試す</title><link>https://umemak.github.io/blog/posts/2022/07/11_supabase/</link><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/11_supabase/</guid><description>以前調べたとき、ローカルで動かしたときにAuth系はサポートしてないというような記事を見て、残念に思っていたのだけれど、Kuzzleの認証も思ったのと違う感じで。 With Docker | Supabase Supabaseをローカル環境に構築してNext.jsアプリで利用する（前半） このあたりを見ると、なんかできそう。しかもDocke</description></item></channel></rss>