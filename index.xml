<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 31 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>動画編集のフロー</title><link>https://umemak.github.io/blog/posts/2022/08/31_movie/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/31_movie/</guid><description>何となく見えてきた。 Shotcutで動画を読み込んで、mp3で音声を書き出す 書き出したmp3をS3にアップロードする Amazon TranscribeでVTTファイルを作成する VTTファイルをマーカーとみなしたMLTを作成する Shotcutで編集して動画をmp4で書き出す MLTのマーカーからVTTを出力する ff</description></item><item><title>MLTファイルを読む</title><link>https://umemak.github.io/blog/posts/2022/08/30_mlt/</link><pubDate>Tue, 30 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/30_mlt/</guid><description>MLTをgoのstructに読み込もうとして、やっぱりよくわからない。 MLT自体の仕様はmltframework/mlt: MLT Multimedia Frameworkにある。 xsdファイルがあればdroyo/go-xml: utility and code-generation libraries for XMLとか使ってgoで使えるようにできそうなんだけど、dtdしかない。 っていうかdtdをs</description></item><item><title>MLTファイル生成</title><link>https://umemak.github.io/blog/posts/2022/08/29_mlt/</link><pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/29_mlt/</guid><description>機能追加していたら、ダメなコードの見本みたいになり始めてきた。 機能ごとに分けるとかし始める必要がありそう。 あと、XMLの出力をベタに文字列結合でやっているので、ちゃんとライブラリ使って生成するようにしたい。 Goだとxml package - encoding/xml - Go PackagesのMarshalを使えば良さそうだけど、構造体の定義面</description></item><item><title>MLTファイルとVTTと</title><link>https://umemak.github.io/blog/posts/2022/08/28_mlt_vtt/</link><pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/28_mlt_vtt/</guid><description>ShotcutのマーカーとVTT(SRT)が相互変換出来たら便利ではないかと妄想。 どちらも開始と終了のタイムスタンプとテキストが書けるので、要素的には問題なし。</description></item><item><title>グラフィックレコーディングの本2</title><link>https://umemak.github.io/blog/posts/2022/08/27_grarec/</link><pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/27_grarec/</guid><description>グラレコの基本 その場で「聞く・まとめる・描く」 | 本園大介 | ビジネス・経済 | Kindleストア | Amazon 読み進めている。先に読んだ本と内容が被ることもあるけれど、こっちのほうが実践的な感じ。 読む順番としては、正解だった。 どちらの本でもおすすめのiPadアプリはProcreateだった。 今インストールしてある</description></item><item><title>グラフィックレコーディングの本</title><link>https://umemak.github.io/blog/posts/2022/08/26_grarec/</link><pubDate>Fri, 26 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/26_grarec/</guid><description>Kindleで安くなっていたので、買ってみた。 グラレコの基本 その場で「聞く・まとめる・描く」 | 本園大介 | ビジネス・経済 | Kindleストア | Amazon こっちも評価が良くて、iPadでの例が見たかったので買ってみた。 はじめてのグラフィックレコーディング 考えを図にする、会議を絵にする。 | 久保田 麻美 | ビジネス・経</description></item><item><title>Ginkgoやめた</title><link>https://umemak.github.io/blog/posts/2022/08/25_ginkgo/</link><pubDate>Thu, 25 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/25_ginkgo/</guid><description>普通にGoのテストとして書いたほうが融通が利くので、そのようにすることにした。 たぶん使いどころが間違っていたのだと思う。 適所であればGinkgoも有効なはず。</description></item><item><title>Ginkgo難解</title><link>https://umemak.github.io/blog/posts/2022/08/24_ginkgo/</link><pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/24_ginkgo/</guid><description>Ginkgo使えば使うほどわからなくなってくる。 上から順番に、途中経過もチェックしながら実行したいだけなんだけどなぁ。</description></item><item><title>Next.js再入門</title><link>https://umemak.github.io/blog/posts/2022/08/23_next_book/</link><pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/23_next_book/</guid><description>VTT編集するWebアプリ作ろうと思って、環境何にしようかというところで、Next.jsが簡単そう（イメージ）な気がしたので選んだ。 リポジトリ作って初期化したあと手が止まったので、Amazon.co.jp: TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発 eBook : 手島</description></item><item><title>MLTファイルを作る3</title><link>https://umemak.github.io/blog/posts/2022/08/22_mlt/</link><pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/08/22_mlt/</guid><description>Shotcutでマーカーをchainの開始に合わせて配置したいと思って、mltにマーカーの記述を追加してみた。 Shotcutで開くと、なんかずれてる。 そもそも、mltファイルでは時間をミリ秒表記でやってるのに、アプリではフレーム単位？0～29で扱われているので、なんかその辺の誤差とかなのかなーとか、</description></item></channel></rss>