<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>umemak</title><link>https://umemak.github.io/blog/</link><description>Recent content on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 23 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Inspiron13のブルースクリーン</title><link>https://umemak.github.io/blog/posts/2022/12/23_inspiron13/</link><pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/23_inspiron13/</guid><description>作業中に操作が効かなくなって数秒後にブルースクリーンが表示された。停止コードはCLOCK_WATCHDOG_TIMEOUT。「エラー情報を収集しています。自動的に再起動します。」と表示されていたが、0%完了のまま進展ないので、電源長押しして強制終了させた。 再起動後、ログインして諸々スタートアップのア</description></item><item><title>Devbox</title><link>https://umemak.github.io/blog/posts/2022/12/22_devbox/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/22_devbox/</guid><description>ローカル環境を汚さずDockerコンテナのオーバーヘッドもなく、開発環境を自在に構築できる「Devbox 0.2.0」登場 － Publickeyの記事で初めて知った。 Devbox by Jetpack.io | Devbox WindowsだとWSL上でやらないとダメなのかな。Git bashだと権限が足りないといわれた。 感覚的には、言語ごとの○○env</description></item><item><title>rss_filter</title><link>https://umemak.github.io/blog/posts/2022/12/21_rss_filter/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/21_rss_filter/</guid><description>Inoreaderの有料プランが切れて、広告が表示されるようになり、重複フィルターが無効化され、ルールによる自動既読が効かなくなった。 広告はまあそんなに目障りではないので問題なし。 ルールの代わりに、Cloud Functions経由するときに除外するようにしたので、これも問題なし。 重複フィルターが代替</description></item><item><title>Scrapbox</title><link>https://umemak.github.io/blog/posts/2022/12/20_scrapbox/</link><pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/20_scrapbox/</guid><description>Kindle UnlimitedでScrapboxing(スクラップボクシング) | 吉良野すた | 工学 | Kindleストア | Amazonを読んで、使ってみた。 https://scrapbox.io/ 今はKindleで読んだ本のハイライトしたところをGoogle Keepにコピペしているのだけど、Keepだとメモごとのリンクが張れないので、似た内容とか頻繁</description></item><item><title>MySQLのGenerated Column</title><link>https://umemak.github.io/blog/posts/2022/12/19_mysql_generated_column/</link><pubDate>Mon, 19 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/19_mysql_generated_column/</guid><description>MySQLのGenerated Columnというものを知った。 MySQL :: MySQL 8.0 リファレンスマニュアル :: 13.1.20.8 CREATE TABLE および生成されるカラム 第150回 Generated Columnを利用してみる | gihyo.jp MySQLのGenerated Columnsまとめ with Rails - Qiita MySQL の Generated Columns のキャッチアップ - Please Sleep JSON型にindexも！MySQL 5.7のGe</description></item><item><title>HTTP/3入門</title><link>https://umemak.github.io/blog/posts/2022/12/18_http3/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/18_http3/</guid><description>WEB+DB PRESS Vol.131｜技術評論社の特集を読んだ。 概要から実践まで解説されていて、「完全に理解」できた。 サンプルはPythonで書かれていたので、他の言語でどうなのか調べてみたいと思った。</description></item><item><title>Elixir入門</title><link>https://umemak.github.io/blog/posts/2022/12/17_elixir/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/17_elixir/</guid><description>WEB+DB PRESS Vol.131｜技術評論社の特集を読んだ。 ElixirとかErlangとか、初心者向けならまず読み方を書いてくれればよいのにと思った。 WikiPediaによれば、エリクサー、アーラン。 文法の解説にページ使いすぎな気がしなくもないけど、それだけほかの言語と違うところがあるということなのだろう。 El</description></item><item><title>Rust再入門</title><link>https://umemak.github.io/blog/posts/2022/12/16_rust/</link><pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/16_rust/</guid><description>WEB+DB PRESS Vol.131｜技術評論社の特集を読んでいる途中。 やっぱりマクロが出てきたあたりで難易度が上がるような気がする。 そういえば、Amazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本も買っていたのを思い出した。 これも読まなきゃ。</description></item><item><title>Goのエラーのラップ</title><link>https://umemak.github.io/blog/posts/2022/12/15_go_error/</link><pubDate>Thu, 15 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/15_go_error/</guid><description>Goでスタイリッシュにエラーをラップする方法を学んだ - カミナシ エンジニアブログを見て、なるほどと思った。 ただ、自分の場合はエラーメッセージに、エラーを返した関数なりメソッド名を入れたい派なので、一律同じになるこの方法は見送りかな、と。 func hoge() error { err := Huga() if err != nil { return fmt.Errorf(&amp;#34;Huga: %w&amp;#34;, err) } return nil } こんな感じ。</description></item><item><title>Docker x ChatGPT</title><link>https://umemak.github.io/blog/posts/2022/12/14_docker/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/12/14_docker/</guid><description>Dockerの学習方法について、ChatGPTに聞いてみた。 おおむね自分の認識と合った回答だった。 もう一度やったら違う回答が出てきそうだったけど、エラーになってしまった。 大人気で混雑してるっぽい。</description></item></channel></rss>