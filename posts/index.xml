<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on umemak</title><link>https://umemak.github.io/blog/posts/</link><description>Recent content in Posts on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 15 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Live Share on GitHub Codespaces</title><link>https://umemak.github.io/blog/posts/2022/07/16_live_share/</link><pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/16_live_share/</guid><description>VS CodeのLive Share - Visual Studio Marketplace拡張、Codespaces | GitHubで使えたら良いなと思って試してみた。 Web Editor（リポジトリ画面で.押すと開くやつ）だと、拡張のインストールやURLの発行はできるけど、Joinしようとするとサーバーが応答しない的なエラー（うろ覚え）で接続で</description></item><item><title>PocketBaseの更新</title><link>https://umemak.github.io/blog/posts/2022/07/15_pocketbase/</link><pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/15_pocketbase/</guid><description>PocketBaseの更新が早い。 Releases · pocketbase/pocketbase 手元のDockerfileもバージョン指定できるように変更した。 https://github.com/umemak/eventsite_go/blob/7bc46cf58fd472582fe70ec32590a43c4d19a3f7/Dockerfile.pocketbase#L3 Admin UIで日時の表示がUTC固定なのをTZ指定できるようにならないかな。</description></item><item><title>失敗から学ぶRDBの正しい歩き方</title><link>https://umemak.github.io/blog/posts/2022/07/14_rdb/</link><pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/14_rdb/</guid><description>ずっと欲しいものリストに入っていて買ってなかった、 失敗から学ぶRDBの正しい歩き方 Software Design plus | 曽根 壮大 | コンピュータ・IT | Kindleストア | Amazonをプライムデーのポイントアップ狙いで購入した。 細かいテーブルたくさん作るより、汎用テーブルにしたものを作ろうとしていたので、それはだめだと分かったの</description></item><item><title>PocketBase</title><link>https://umemak.github.io/blog/posts/2022/07/13_pocketbase/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/13_pocketbase/</guid><description>supabaseと格闘していたら、PocketBase - Open Source backend in 1 fileという似たような機能を提供するツールを見つけた。 GitHub見ると1週間ほど前に公開されたばかりのよう。 FROM alpine WORKDIR /app RUN wget https://github.com/pocketbase/pocketbase/releases/download/v0.2.4/pocketbase_0.2.4_linux_amd64.zip RUN unzip pocketbase_0.2.4_linux_amd64.zip RUN rm pocketbase_0.2.4_linux_amd64.zip CMD [ &amp;quot;/app/pocketbase&amp;quot;, &amp;quot;serve&amp;quot;, &amp;quot;--http&amp;quot;, &amp;quot;0.0.0.0:8090&amp;quot; ] これでhttp://0.0.0.0:8090/_/にアクセスしたら管理者アカウント</description></item><item><title>GoTrue</title><link>https://umemak.github.io/blog/posts/2022/07/12_gotrue/</link><pubDate>Tue, 12 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/12_gotrue/</guid><description>supabaseで使っている認証モジュールがnetlify/gotrue: An SWT based API for managing users and issuing SWT tokens。 supabaseのAPIでGoは提供されてないので、直接たたけないか調べてみる。 Architecture | Supabase見ると、/authでGoTrueに流されるようだが、Kongの公開ポート54321経由でht</description></item><item><title>supabaseを試す</title><link>https://umemak.github.io/blog/posts/2022/07/11_supabase/</link><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/11_supabase/</guid><description>以前調べたとき、ローカルで動かしたときにAuth系はサポートしてないというような記事を見て、残念に思っていたのだけれど、Kuzzleの認証も思ったのと違う感じで。 With Docker | Supabase Supabaseをローカル環境に構築してNext.jsアプリで利用する（前半） このあたりを見ると、なんかできそう。しかもDocke</description></item><item><title>Airを試す</title><link>https://umemak.github.io/blog/posts/2022/07/10_air/</link><pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/10_air/</guid><description>HTMLとかコード修正したときに手動で再起動するのが面倒なので、ホットリロードツールを導入してみた。 cosmtrek/air: ☁️ Live reload for Go apps $ go install github.com/cosmtrek/air@latest $ air init $ air __ _ ___ / /\ | | | |_) /_/--\ |_| |_| \_ , built with Go mkdir /home/umemak/workspace/eventsite_go/tmp watching . watching cmd watching cmd/eventsite watching db watching db/sql watching model watching model/user !exclude tmp watching web watching web/template building... no Go files in /home/umemak/workspace/eventsite_go failed to build, error: exit status 1 ^Ccleaning... see you again~ デフォルトだと、cmdの下のmain.goを見つけてく</description></item><item><title>adminer</title><link>https://umemak.github.io/blog/posts/2022/07/09_mysql/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/09_mysql/</guid><description>MySQLコンテナ作ろうと思って、Mysql - Official Image | Docker Hubのcompose書き方見てたら、adminerというイメージを使っていて、同様に起動してみたらなかなか良い。 元のプログラムはdockette/adminer: Tiniest boxed dockerized Adminer (MySQL, PostgreSQL, SQLite, Mongo, Oracle) Dockerfilesかな。 テーブル定義作るときに、カラム名を別</description></item><item><title>Fleetお試し</title><link>https://umemak.github.io/blog/posts/2022/07/09_fleet/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/09_fleet/</guid><description>JetBrains Fleet: JetBrains の次世代 IDE、去年の11月末にPreview申し込みしていた。 昨日、使えるようになったとメールが来たので早速インストールしてみた。 ファイルツリーでCtrl+C、Vでファイルがコピーされないし、Ctrl+Wでエディタタブが閉じられない（エディタにフォーカスが当たっていれば閉じられる）。 日本語入</description></item><item><title>Goアプリ</title><link>https://umemak.github.io/blog/posts/2022/07/09_eventsite_go/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/07/09_eventsite_go/</guid><description>結局、フレームワークはgo-chi/chi: lightweight, idiomatic and composable router for building Go HTTP servicesを使うことにした。 理由は、認証で使いそうなパッケージgo-pkgz/auth: Authenticator via oauth2, direct, email and telegramのサンプルが使っていたから。 とりあえず、HTTPリクエストを受けてDB読み書きしてテンプレート加工して返すところまで</description></item></channel></rss>