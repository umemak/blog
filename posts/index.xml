<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on umemak</title><link>https://umemak.github.io/blog/posts/</link><description>Recent content in Posts on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 28 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>LAMPを今風に</title><link>https://umemak.github.io/blog/posts/2022/09/29_lamp/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/29_lamp/</guid><description>少し前、Webシステムの開発といえばLAMP（Linux、Apache、MySQL、PHP/Perl）だったものだけれど、最近だとどうなんだろう、と思った。 Linuxは変わらないとしても、実行環境という意味ではContainerとかCloudが今風かもしれない。 ApacheはもうNginxにだいぶシ</description></item><item><title>MUI DesktopDatePicker + react-hook-form</title><link>https://umemak.github.io/blog/posts/2022/09/28_mui_datepicker/</link><pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/28_mui_datepicker/</guid><description>DesktopDatePicker API - MUI Xを使いたいが、その他のフォーム項目はホーム | React Hook Form - Simple React forms validationを使っていたので、合わせて使いたい。 React + React Hook Form v7 なフォームに、MUI v5 の DateTime Picker を組み込んでみた - メモ的な思考的なを見ながらやってみて、いい感じにできたと思う。 順を追って実装されていくのがわかりやすかった。 あとからM</description></item><item><title>MUI入門</title><link>https://umemak.github.io/blog/posts/2022/09/27_mui/</link><pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/27_mui/</guid><description>MUI: The React component library you always wantedを使い始めてみた。 TanStack Table | React Table, Solid Table, Svelte Table, Vue TableをReact Table component - Material UIに置き換えてみたり。 importする部品が多いけど、使い勝手は悪くない感触。importの多さがとっつきにくさ増してると思う。</description></item><item><title>React Adminその2</title><link>https://umemak.github.io/blog/posts/2022/09/26_react_admin/</link><pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/26_react_admin/</guid><description>React Admin使ってみて、そのまま使うには便利なんだけど、ちょっと逸れたことしようとすると詰む印象。 APIをReact Adminに寄せていかないといけないというか。 それはそれでAPIを正しい形に矯正することができそうだけれど、楽をしようとしてるところにこれは悩ましい。</description></item><item><title>React Admin</title><link>https://umemak.github.io/blog/posts/2022/09/25_react_admin/</link><pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/25_react_admin/</guid><description>React Admin - Open-Source Framework for B2B applications react-adminを使って5分で作るハイカラDashboardを参考に、やってみた。 本当はNext.jsでやりたかったので、How to Run React-Admin On Next.Jsも試してみたのだけど、うまくいかなかった。 →公式のReact-admin - My First Project Tutorialを見ながらやったらできた。 Ope</description></item><item><title>WSL2の再起動</title><link>https://umemak.github.io/blog/posts/2022/09/24_wsl_reboot/</link><pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/24_wsl_reboot/</guid><description>最近、Inspiron13がスリープから復帰した後、高確率でWSL2が応答しなくなっている。 PC再起動すれば直るのだけど、面倒。 WSLだけ再起動でも直ることがわかった。 wsl --shutdown ヘルプでは直ちに、すべての実行中の配布および WSL 2 軽快なユーティリティの仮想マシンを終了します。と書かれているが（軽快なとは・・・</description></item><item><title>Reactでテーブルを使う3</title><link>https://umemak.github.io/blog/posts/2022/09/23_react_table/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/23_react_table/</guid><description>Tanstack Table続き。 とりあえず、公式のサンプルのように実装したら、動いた。 APIから取得したデータを使おうとすると、エラーになる。 useEffectを外してみたら、APIがすごい勢いでたたかれ続けた。 useEffectを戻したら、エラー出ずに表示された。 ？？？ APIサーバーを停止してみると、またエラー</description></item><item><title>Reactでテーブルを使う2</title><link>https://umemak.github.io/blog/posts/2022/09/22_react_table/</link><pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/22_react_table/</guid><description>昨日、react-tableがGitHubで別の名前になってて気になっていた件。 最近react-tableから名前が変わったらしい。 TanStack/tableを使ってみた感想 ということでreact-table改めTanStack/Tableを導入してみた。 エラーが出て思ったように動かない。 TypeError: Cannot read properties</description></item><item><title>Reactでテーブルを使う</title><link>https://umemak.github.io/blog/posts/2022/09/21_react_table/</link><pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/21_react_table/</guid><description>フォームの次は、テーブルを使って一覧表示したい。 react-table - npmが良いのかな？ GitHubだと名前が違ってたりするけど。。 TanStack/table: 🤖 Headless UI for building powerful tables &amp;amp; datagrids for TS/JS - React-Table, Vue-Table, Solid-Table, Svelte-Table 要調査。</description></item><item><title>Reactでフォームを使う</title><link>https://umemak.github.io/blog/posts/2022/09/20_react_form/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/09/20_react_form/</guid><description>Next.jsで管理画面的なものを作るのに、フォームをどうするか調べた。 先日読んだ本では、react-hook-formを使っていたので、そのようにしてみる。 思った以上に簡単に実装できた。 積極的に使ていきたい。</description></item></channel></rss>