<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on umemak</title><link>https://umemak.github.io/blog/posts/</link><description>Recent content in Posts on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 06 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/06_rust_book/</link><pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/06_rust_book/</guid><description>組み込みの章を読んだ。 あまり直接関係なさそうだったのでさらっと。 開発ツールの章を読んだ。 Goとそう変わらない感じ？</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/05_rust_book/</link><pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/05_rust_book/</guid><description>GUIの章を読んだ。 ColumnとRowをコンテナに配置して、ってFlutterっぽい（昔のHTMLテーブルレイアウトっぽいともいう）感じで配置していくのはわかりやすいと思った。 ファイルを読んでバイト配列に入れるinclude_bytes!マクロはほかでも使えそう。</description></item><item><title>実践Rustプログラミング入門</title><link>https://umemak.github.io/blog/posts/2022/04/04_rust_book/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/04_rust_book/</guid><description>Webサーバーを立てる章とWASMの章を読んだ。 これはRustに限ったことではないけれど、まだ若い言語ということもあって、Webフレームワークとかどれを選んだらよいか迷いそう。</description></item><item><title>Rust雑感</title><link>https://umemak.github.io/blog/posts/2022/04/03_rust/</link><pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/03_rust/</guid><description>ここ数日Rustから遠ざかってしまっていて、またRust筋力が落ちてしまった感。 何度か入門して感じたことは、やっぱりとっつきにくい言語だなぁということ。 用語が日本語だと直感的に理解しにくいのも一つの原因だと思う。クレートとか聞いたことないし。 まぁ、Goのスライスとかも最初何のことか理解するのに時間か</description></item><item><title>開いたままのファイルを削除したらどうなるか4</title><link>https://umemak.github.io/blog/posts/2022/04/02_open_file_delete/</link><pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/02_open_file_delete/</guid><description>あと、sambaだけではなく、NFSでどうなるかも確認したい。 NFSならWindowsサーバー用意しなくても良いから少しは簡単かな？</description></item><item><title>開いたままのファイルを削除したらどうなるか3</title><link>https://umemak.github.io/blog/posts/2022/04/01_open_file_delete/</link><pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/04/01_open_file_delete/</guid><description>昨日はAWSでEC2使って試したけど、ローカルでもdocker使ってsambaサーバー立てたら同じことできたのではないか？</description></item><item><title>開いたままのファイルを削除したらどうなるか2</title><link>https://umemak.github.io/blog/posts/2022/03/31_open_file_delete/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/31_open_file_delete/</guid><description>昨日のCパターンを実際にAWSで試してみた。Docker関係なかった。 Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume TypeとMicrosoft Windows Server 2019 Baseのインスタンスをt2.microでそれぞれ作成 Linux側からWindows側へのセキュリティグループからのアクセスを許可 Windows側 C:\Users\shared を作成してプロパティから共有</description></item><item><title>開いたままのファイルを削除したらどうなるか</title><link>https://umemak.github.io/blog/posts/2022/03/30_open_file_delete/</link><pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/30_open_file_delete/</guid><description>ホストがマウントしたディレクトリをマウントしたコンテナでプロセス1で開いてクローズせずにプロセス2で削除したあとその他のプロセスからファイルはどう見えるか。 A. ファイルは削除されディレクトリにもリストされない B. ファイルは削除できない C. ファイルは削除されアクセスできないがディレクトリにリストされたまま プ</description></item><item><title>host.docker.internalの謎</title><link>https://umemak.github.io/blog/posts/2022/03/29_host_docker_internal/</link><pubDate>Tue, 29 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/29_host_docker_internal/</guid><description>https://github.com/umemak/docker_network_test Docker Desktopのバージョンを上げたら、host.docker.internal の挙動が変わったっぽいという話。 まだ現象の再現性を確認しただけで、原因の特定まではできていない。</description></item><item><title>mdmml_rust</title><link>https://umemak.github.io/blog/posts/2022/03/28_mdmml/</link><pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/28_mdmml/</guid><description>Vecの使い方を理解した気がする。 これでどうにかSMFのバイナリを組み立てられるのではないだろうか。</description></item></channel></rss>