<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on umemak</title><link>https://umemak.github.io/blog/posts/</link><description>Recent content in Posts on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 24 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>KuzzleのDart SDKドキュメント</title><link>https://umemak.github.io/blog/posts/2022/05/24_kuzzle/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/24_kuzzle/</guid><description>ちゃんと読もうと思ったので、日本語に訳しながらやっていこうかと。 https://github.com/umemak/sdk-dart/blob/master/doc/3/getting-started/flutter/index.md DeepLでざっくり訳して細かいところを手直しする感じで。</description></item><item><title>DartPad</title><link>https://umemak.github.io/blog/posts/2022/05/23_dartpad/</link><pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/23_dartpad/</guid><description>FlutterFire のページを見に行ったらヘッダに「DartPad」というのを見つけて、開いてみた。 ブラウザでFlutterのサンプルが実行できてる・・！ GitHubのReadmeによると、2015年から作られ始めて、2019年にFlutter対応した新バージョンが公開されたらしい。 importできるパッケージが限ら</description></item><item><title>Flutter+Kuzzle サンプル</title><link>https://umemak.github.io/blog/posts/2022/05/22_flutter_kuzzle/</link><pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/22_flutter_kuzzle/</guid><description>Flutter | Kuzzle Documentation がとりあえず動くようになった。 エラーが出ないように直して回っただけなので、本当に正しい修正なのかは自信なし。 https://github.com/umemak/kuzzle_flutter_chat DBの読み書きはこれでできることが確認できた。</description></item><item><title>Flutter+Kuzzle</title><link>https://umemak.github.io/blog/posts/2022/05/21_flutter_kuzzle/</link><pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/21_flutter_kuzzle/</guid><description>KuzzleのFlutterチュートリアル的なものをやってみた。 Flutter | Kuzzle Documentation Dart Null Safety v3.x を選択しても、中身はv2と同じようだ。 pubspec.yamlのSDKバージョン指定まで同じなので、v2系がインストールされてしまってflutter build web実行したときにコンパイルエラーになる。 kuzzle: ^3.0.2に編集したら</description></item><item><title>Flutter再開</title><link>https://umemak.github.io/blog/posts/2022/05/20_flutter/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/20_flutter/</guid><description>久しぶりすぎてFlutterアプリの初手を忘れていたのでメモ。 先日、Flutter 3をインストールしてあったのでその続きから。 ~/.bashrc にexport追加＆bashrc再読み込み。 export PATH=$HOME/sdk/flutter/bin:$PATH アプリ用のディレクトリに入って初期化実行。 flutter create .</description></item><item><title>Kuzzle SDKを眺めてみる</title><link>https://umemak.github.io/blog/posts/2022/05/19_kuzzle_sdk/</link><pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/19_kuzzle_sdk/</guid><description>Go用SDKを見ていて、Authenticationにユーザー作成のAPIがないなーと思って、Dart用を見たらsecurityの下にあった。 よく見ると言語ごとにSDKドキュメントの構成が違っていて、提供されているAPIも統一されていない様子。 全部読んだわけではないけど、どの言語を選ぶかによって実現</description></item><item><title>Kuzzle Admin Consoleをネットワーク切断して使ってみる</title><link>https://umemak.github.io/blog/posts/2022/05/18_kuzzle_admin/</link><pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/18_kuzzle_admin/</guid><description>ローカルでAdmin Consoleがうまくインストールできなかったので、公式のものを使わせてもらうことにした。 試しに、https://next-console.kuzzle.io/にアクセスした後ネットワークを切断して、項目設定＆ログインできたし、DBも作成できたので外部への依存はないみたい（送信し</description></item><item><title>Kuzzle Admin Consoleをラズパイ4に入れてみる</title><link>https://umemak.github.io/blog/posts/2022/05/17_kuzzle_raspi/</link><pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/17_kuzzle_raspi/</guid><description>https://github.com/kuzzleio/kuzzle-admin-console#local-build をやってみる $ git clone https://github.com/kuzzleio/kuzzle-admin-console $ cd kuzzle-admin-console $ npm install npm ERR! command sh -c node-gyp rebuild npm ERR! gyp info it worked if it ends with ok npm ERR! gyp info using node-gyp@3.8.0 npm ERR! gyp info using node@17.3.0 | linux | arm npm ERR! gyp ERR! configure error npm ERR! gyp ERR! stack Error: Command failed: /usr/bin/python -c import sys; print &amp;#34;%s.%s.%s&amp;#34; % sys.version_info[:3]; npm ERR! gyp ERR! stack File &amp;#34;&amp;lt;string&amp;gt;&amp;#34;, line 1 npm ERR! gyp ERR! stack import sys; print &amp;#34;%s.%s.%s&amp;#34; % sys.version_info[:3]; npm ERR! gyp ERR! stack ^ npm ERR! gyp ERR! stack SyntaxError: invalid syntax ダメか。。</description></item><item><title>Kuzzleを使ってみる</title><link>https://umemak.github.io/blog/posts/2022/05/16_kuzzle/</link><pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/16_kuzzle/</guid><description>Flutter | Kuzzle Documentation から Run Kuzzle | Kuzzle Documentation でバックエンドをローカルで起動する。 $ sudo npm install -g kourou $ kourou app:scaffold playground $ cd playground &amp;amp;&amp;amp; npm run dev:docker http://localhost:7512/ でJSONで情報が取得できた。 http://next-console.kuzzle.io/ でAdmin Consoleが表示できるけど、ローカル環境なのに外部を一度経由するのかな。ちょっとこれは気になる。 What is Kuzzle | Kuzzle Documentation As it is a single-page application (SPA), no data related to your Kuzzle application will pass through our servers, so you can use the online</description></item><item><title>Firebase以外のBaaS</title><link>https://umemak.github.io/blog/posts/2022/05/15_baas/</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/05/15_baas/</guid><description>Firebase以外のBaaSについて、年初に軽く調べていた。 その時はクラウドサービスを見ていたけれど、OSSのものも見てみた。 Parse Platform The Open Source Firebase Alternative | Supabase Open Source Backend - Kuzzle Backend Low-code backend to build modern apps | Back4App Parse Platformベース SDK JS Go Flutter Parse Platform o - o Supabase o - o Kuzzle Backend o o o SDK的にはKuzzleだけど、情報量で見るとSupabaseが有</description></item></channel></rss>