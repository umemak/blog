<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on umemak</title><link>https://umemak.github.io/blog/posts/</link><description>Recent content in Posts on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 10 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>ラズパイをルーターにする2</title><link>https://umemak.github.io/blog/posts/2022/11/10_raspi_router/</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/10_raspi_router/</guid><description>SSIDが見つからない件。 linux - Raspberry Pi 4 hostapd hotspot not visible - Super Userの回答を参考に、 sudo systemctl stop dhcpcd.service sudo systemctl restart hostapd.service sudo systemctl start dhcpcd.service したらいけた。 /etc/dhcpcd.confにdenyinterfaces wlan0を追記するのは効き目なかった。 スピードテストの結果 経由 ダウンロード アップロード レイテンシ 無線LANルーター 88.2Mbps 78.4Mbps 79ms ラズパ</description></item><item><title>ラズパイをルーターにする</title><link>https://umemak.github.io/blog/posts/2022/11/09_raspi_router/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/09_raspi_router/</guid><description>PCは昨日買ってきたLANケーブルでインターネット接続は解決した。 Pixel4も同じ現象だった。 LANケーブルつないだらいけるのか、LANポート付きUSB-HUBを試してみたけれど、ダメだった。 なので、ラズパイを無線LANルーターにしてみることにした。 やり方はググったらいくつか出てきた。 ラズパイを無</description></item><item><title>DNS不調3</title><link>https://umemak.github.io/blog/posts/2022/11/08_dns/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/08_dns/</guid><description>以前書いた、DNS解決できない現象が久しぶりに頻発して、仕方がないのでホムセンでLANケーブル買ってきてRT-S300SEに直接（無線LANルーター経由せずに）接続することにした。 RT-S300SEと無線LANルーターの間に問題があるっぽいので、これで問題起きようがないはず。</description></item><item><title>SQLBoiler</title><link>https://umemak.github.io/blog/posts/2022/11/07_sqlboiler/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/07_sqlboiler/</guid><description>volatiletech/sqlboiler: Generate a Go ORM tailored to your database schema.を少し触ってみた。 普段はkyleconroy/sqlc: Generate type-safe code from SQLをよく使っているのだけれど、あらかじめSQLを書かなくて良いのは楽。 だけど結局DB操作するときには対象のレコードを指定するのに組み立てないといけないので、一長一短。 手段を一つしかもっていないと、それ</description></item><item><title>qwik</title><link>https://umemak.github.io/blog/posts/2022/11/06_qwik/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/06_qwik/</guid><description>何かのPodcastでqwikについて言及されていて、ちょっと調べてみた。 知りたいことはqwik の発明、及びマイクロフロントエンドへの活用について - mizdra&amp;rsquo;s blogに全部書かれていた。 イベント処理を後からロードするから、初期表示が速くなる、と。 フロントエンドの初期表示が問題にあるほど巨大なもの作ってないし</description></item><item><title>SWRの更新系</title><link>https://umemak.github.io/blog/posts/2022/11/05_swr_update/</link><pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/05_swr_update/</guid><description>SWRで更新系もできると思ったけれど、mutateで更新するのは、ローカルのキャッシュのようだ。 つまりPOSTやDELETEは別途実行して、その結果をローカルキャッシュに反映するのがmutate。 更新系API呼びつつキャッシュも最新化するというものではなさそう。残念。</description></item><item><title>SWR使ってみた</title><link>https://umemak.github.io/blog/posts/2022/11/04_swr/</link><pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/04_swr/</guid><description>前から気になっていたけど使う機会がなかったデータ取得のための React Hooks ライブラリ – SWRを使ってみた。 SWRを使おうぜという話2022を参考にやったら参照は簡単に実装できた。 GitpodでフロントとAPIが別ポートだとCORS問題とかそもそもポートを公開しないと到達できないとかあったけど、APIサーバーの</description></item><item><title>GitHubのセキュリティアラートを片付ける</title><link>https://umemak.github.io/blog/posts/2022/11/03_dependabot/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/03_dependabot/</guid><description>試しにexpoとかnextとか使ってみるのに作ったリポジトリでパッケージのセキュリティアラートが割とよく来るけど、放置気味だった。 きれいにしたいと思い立って、やってみた。 まず、npm updateだとあまり解消しない。 コンフリクトとか言われて、個別パッケージ指定してもやっぱりダメな感じ。正直よくわから</description></item><item><title>ko</title><link>https://umemak.github.io/blog/posts/2022/11/02_ko/</link><pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/02_ko/</guid><description>ko-build/ko: Build and deploy Go applications on Kubernetes Goのアプリケーションを、Dockerなしでコンテナ化できるツール。 でも作ったコンテナをローカルで実行するにはDockerが必要？ コンテナ実行環境とコンテナビルド環境を分けたいとき（どんな時？）に便利そう。 Go製アプリケーションのコンテナ化にはkoを推したい - YAMAGUCHI::w</description></item><item><title>AWS SSOの認証</title><link>https://umemak.github.io/blog/posts/2022/11/01_sam_ip/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/11/01_sam_ip/</guid><description>AWS IAM アイデンティティセンター (AWS SSO の後継)で新規ユーザーをワンタイムパスワード連携で作って、ログインしようとしたらできなかった。 設定したメールアドレスにメール認証を送って認証処理をしたら、ログインできるようになった。 そのあとも認証コードが設定メールアドレスに送られてきたりするので、メール使わずにユーザ</description></item></channel></rss>