<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on umemak</title><link>https://umemak.github.io/blog/posts/</link><description>Recent content in Posts on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 18 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>CrystalDiskInfoインストールしてみた</title><link>https://umemak.github.io/blog/posts/2022/03/18_crystaldiskinfo/</link><pubDate>Fri, 18 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/18_crystaldiskinfo/</guid><description>またS.M.A.R.T.のエラーらしき通知が出たが、通知を開いても何も情報が得られなかったので監視ツールを探してみた。 「CrystalDiskInfo」HDD/SSDの健康状態をチェック - 窓の杜が良さそうだったのでインストールしてみた（ファイルサイズの小さい通常版）。 とくに問題なさそう。 しばらく常駐</description></item><item><title>Rust再々入門</title><link>https://umemak.github.io/blog/posts/2022/03/17_ms_rust/</link><pubDate>Thu, 17 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/17_ms_rust/</guid><description>今日はモジュール、パッケージ、サードパーティーのクレートを調べる - Learn | Microsoft Docsを学習した。 この辺りはmdmml_rustですでにやっていることだったので、軽く流す程度で。</description></item><item><title>Rust再々入門</title><link>https://umemak.github.io/blog/posts/2022/03/16_ms_rust/</link><pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/16_ms_rust/</guid><description>今日の学習モジュール ジェネリック型と特性を実装する - Learn | Microsoft Docs ちょうど今日リリースされたGo 1.18でも導入されたジェネリクスですね。 個人的にはジェネリクスをどうしても使いたいと思ったことがないので、さらっと流す感じで。 特性というのはGoのinterfaceみたいなものかな。 イテレーターはmdmmlで</description></item><item><title>Rust再々入門</title><link>https://umemak.github.io/blog/posts/2022/03/15_ms_rust/</link><pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/15_ms_rust/</guid><description>所有とか借用とか、既知の言語では聞かない概念を学習した。 Rust によるメモリ管理の方法を理解する - Learn | Microsoft Docs 日本語訳がおかしいところがあって理解に支障が。。 機械翻訳なのかな。</description></item><item><title>Rust再々入門</title><link>https://umemak.github.io/blog/posts/2022/03/14_ms_rust/</link><pubDate>Mon, 14 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/14_ms_rust/</guid><description>エラー処理を学んだ。 Rust でエラーを処理する - Learn | Microsoft Docs やっぱり例題わかりにくい。。</description></item><item><title>Rust再々入門</title><link>https://umemak.github.io/blog/posts/2022/03/13_ms_rust/</link><pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/13_ms_rust/</guid><description>昨日の続きでRust の最初のステップ - Learn | Microsoft Docsを進める。 ちょっと説明不足で何をしたらよいかわからないところがあるけど、コードの解答例もあるから最終的にはどうしたらよかったのかはわかる。 地道に進めていこう。</description></item><item><title>Rust再々入門</title><link>https://umemak.github.io/blog/posts/2022/03/12_ms_rust/</link><pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/12_ms_rust/</guid><description>昨日、すっかり初心者に戻ってしまったので、Rust の最初のステップ - Learn | Microsoft Docsをやってみることにした。 最初のモジュールのまとめに書かれていた、Table of Contents - Rust Cookbookがいろいろ参考になりそう。</description></item><item><title>Rust移植再開</title><link>https://umemak.github.io/blog/posts/2022/03/11_rust/</link><pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/11_rust/</guid><description>go版のリファクタリングも進めたので、またRust版を進めようと思ったら、すっかり構文など忘れてしまっていた。 やっぱり集中＆継続して触らないとダメだ。。</description></item><item><title>関数化</title><link>https://umemak.github.io/blog/posts/2022/03/10_func/</link><pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/10_func/</guid><description>細かい変換を関数化してみた。 strconv.Atoiをエラーだったらデフォルト値で返すやつとか。 titleやtempoを[]byteにして返すやつとか。</description></item><item><title>メソッドか関数か</title><link>https://umemak.github.io/blog/posts/2022/03/09_method_func/</link><pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/03/09_method_func/</guid><description>最初は、構造体のフィールドを参照しているものはメソッドにしていた。 けど、フィールドのごく一部しか使っていないものはメソッドではなく関数にして、疎結合な感じにしてみた。 もちろんフィールドを更新しているものはメソッドのほうが良いかもしれないが、それでも新しく構造体を生成して返すようにすれば必ずしもメソッ</description></item></channel></rss>