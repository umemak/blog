<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on umemak</title><link>https://umemak.github.io/blog/posts/</link><description>Recent content in Posts on umemak</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 23 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://umemak.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>dotfilesリポジトリ</title><link>https://umemak.github.io/blog/posts/2022/10/23_dotfiles/</link><pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/23_dotfiles/</guid><description>Preferences — Gitpodを見ていて、Dotfilesを指定できる項目があるのに気づいた。 そういえば昔作ったような気がするな、と思い見てみたら、.gitconfigしかなかった。 umemak/dotfiles</description></item><item><title>Pythonで非同期処理</title><link>https://umemak.github.io/blog/posts/2022/10/22_python_async/</link><pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/22_python_async/</guid><description>今の作りだと、翻訳や英語再生の間、待たされる気がするので、翻訳APIから先は非同期で実行できないか調べてみた。 【Python】同期処理をラッピングして非同期処理にする方法 – 株式会社シーポイントラボ ｜ 浜松のシステム・RTK-GNSS開発 python - asyncioを使った簡単なプログラムでエラーがでる。 - スタッ</description></item><item><title>pyttsx3</title><link>https://umemak.github.io/blog/posts/2022/10/21_pyttsx3/</link><pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/21_pyttsx3/</guid><description>日本語音声→日本語文字列→英語文字列 ができたので、英語文字列→英語音声 も追加してみたくなって、やってみた。 Pythonでオフラインでできるものをググって見つかったのが、nateshmbhat/pyttsx3: Offline Text To Speech synthesis for python。 これもREADMEに書いてあるように書くだけで実装できた。 あとは翻</description></item><item><title>Vosk使ってみる2</title><link>https://umemak.github.io/blog/posts/2022/10/20_vosk_python/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/20_vosk_python/</guid><description>node.jsで使うのあきらめて、Pythonで試してみた。 vosk-api/test_microphone.py at master · alphacep/vosk-api あっさり使えた。 ついでに、3 分で作る無料の翻訳 API with Google Apps Script - Qiitaを参考に、日本語→英語翻訳APIを立てて連携してみた。 Pythonの文字列操作するのにちょっと手間取ったけど、意外とすんなりリアルタイム音声認識＆翻訳が出来上がっ</description></item><item><title>Vosk使ってみる</title><link>https://umemak.github.io/blog/posts/2022/10/19_vosk/</link><pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/19_vosk/</guid><description>日本語音声のマイク入力をオフラインでリアルタイム音声認識：「VOSK」を JavaScript（Node.js）で扱う - Qiita こちらを参考に。 早速npm install voskしたところ、GitbashだとVisualStudioが見つからない的なエラー。WSL2環境で動かしたら通った。 そしてサンプルをコピーして実行す</description></item><item><title>GitpodでMySQLを使う</title><link>https://umemak.github.io/blog/posts/2022/10/18_gitpod_mysql/</link><pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/18_gitpod_mysql/</guid><description>Gitpod上で開発をするにあたって、DBが欲しかったのでMySQLが使えないか調べてみた。 Workspace Imageにあるように、.gitpod.ymlファイルを作成してimageを指定すれば良いようだ。 image:gitpod/workspace-mysqlファイル作成してリポジトリにプッシュしてワークスペー</description></item><item><title>BitbucketとGitpod</title><link>https://umemak.github.io/blog/posts/2022/10/16_gitlab_gitpod/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/16_gitlab_gitpod/</guid><description>Gitpodの機能見ていたら、GitHub以外にもGitLabとBitbucketとも連携できるのに気づいて、やってみた。 最初にGitLabでアカウント作ろうとしたら、途中から先に進めなくなって断念。 Bitbucketは、以前AWSの何かを試したときに作ったアカウントが生きていたので、そのまま使った</description></item><item><title>Vosk</title><link>https://umemak.github.io/blog/posts/2022/10/15_vosk/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/15_vosk/</guid><description>ffmpeg.wasmをgithub pagesで動かすよを読んでいて、Offline Transcribeを見に行ったらccoreilly/vosk-browser: A speech recognition library running in the browser thanks to a WebAssembly build of Vosk経由してalphacep/vosk-api: Offline speech recognition API for Android, iOS, Raspberry Pi and servers with Python, Java, C# and Nodeというものの存在</description></item><item><title>WSLのmakeでmkdir</title><link>https://umemak.github.io/blog/posts/2022/10/14_wsl_make/</link><pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/14_wsl_make/</guid><description>.PHONY: mkdir mkdir: mkdir -p ./work/{a,b,c} $ make mkdir mkdir -p ./work/{a,b,c} $ ls work {a,b,c} なんでや。 $ rm -r work $ mkdir -p ./work/{a,b,c} $ ls work a b c こうなってほしい。 →make内では、デフォルトのシェルが/bin/shになっているので、MakefileでSHELL=/bin/bashを書く必要がある。 とあるエンジニアの備忘log: Make のポータビリティについて考える Makefil</description></item><item><title>PrismaとOpenAPI</title><link>https://umemak.github.io/blog/posts/2022/10/13_prisma_openapi/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><guid>https://umemak.github.io/blog/posts/2022/10/13_prisma_openapi/</guid><description>Prismaのドキュメント眺めていて、Build a REST API with NestJS, Prisma, PostgreSQL and Swaggerを見つけた。 PrismaというかNestJSの機能かもしれないけれど、OpenAPIドキュメントも表示できるっぽい。 これでいい感が出てきた。</description></item></channel></rss>