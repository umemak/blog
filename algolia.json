[{"categories":null,"objectID":"4c3d1513df609357e5ca5d5106b8088e","permalink":"https://umemak.github.io/blog/posts/2023/03/04_yoga770i/","publish_date":"2023-03-04T00:00:00Z","summary":"実際にモノを見るまで不安だったけれど、ちゃんとAmazonに書かれていた通りの仕様だった。Officeも入っているようだ（まだ起動してないけど）。 意外とタッチパッドのクリック音が大きい。 キーボードは特に違和感ないかな。 マカフィーがプリインストールされてる。 Dellは初期化用のUSBドライブ作成ツール","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"4a06b7bf8dd9931fb4111001d8e9924c","permalink":"https://umemak.github.io/blog/posts/2023/03/03_lenovo_note/","publish_date":"2023-03-03T00:00:00Z","summary":"朝見たらクーポンが復活していたので、注文した。 なおOfficeなしのほうはなぜか高騰している模様。 裏側どういうロジックになってるんだろう。。","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"7c17daa964ab1234e94ce4127ca19002","permalink":"https://umemak.github.io/blog/posts/2023/03/02_lenovo_note/","publish_date":"2023-03-02T00:00:00Z","summary":"セールが始まって値段は元に戻っていた。が、クーポンがなくなっていた。 Officeなしのほうも微妙に価格上下しているし、セール期間はまだあるから少し様子見してみよう。 それはそれとして、型番が直販モデルと違うものが表示されているのだけど、スペック的には同じように見える。 そして直販モデルと同じ型番でも出て","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"af69dc24112bd604e3b8c39b550a2c10","permalink":"https://umemak.github.io/blog/posts/2023/03/01_lenovo_note/","publish_date":"2023-03-01T00:00:00Z","summary":"今日見たら値段が上がっていた。25万て。直販より高いのはさすがに何かの間違いだと思いたい。 Officeなしのほうはやや下がっていた。 明日のセール開始まで価格は維持されるのかどうか。","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"248c4e469aecf863e291776ad8e9dbcc","permalink":"https://umemak.github.io/blog/posts/2023/02/28_lenovo_note/","publish_date":"2023-02-28T00:00:00Z","summary":"値段戻って下がらないなーって思ってたら、クーポンついてて、適用すると目標金額クリアしてるのに気づいてしまった。 これは新生活セールのポイントアップキャンペーン始まったらポチってしまうか。","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"0a3eabee780a32a65af26847b4dc49b7","permalink":"https://umemak.github.io/blog/posts/2023/02/27_lenovo_note/","publish_date":"2023-02-27T00:00:00Z","summary":"ThinkPadの主要モデルに2023年モデル 第13世代CoreプロセッサやRyzen 7000シリーズを搭載して性能アップ（ITmedia PC USER） - Yahoo!ニュース やっぱり先週安くなっていたのはこれの布石だったか、と思ったがThinkPadじゃない方のYogaは発表されていなかった。 じゃあ何","tags":[],"title":"Lenovoの新型ノートPC"},{"categories":null,"objectID":"93828d4f287ec1010c2d6406c0490c9b","permalink":"https://umemak.github.io/blog/posts/2023/02/26_unity/","publish_date":"2023-02-26T00:00:00Z","summary":"メタバース進化論――仮想現実の荒野に芽吹く「解放」と「創造」の新世界 | バーチャル美少女ねむ | コンピュータ・IT | Kindleストア | Amazonを読んで、とりあえずVR機器がなくてもいけそうなメタバースプラットフォーム cluster（クラスター）に触ってみようと思い、Unity初心者におすすめ「自分","tags":["unity"],"title":"Unity入門"},{"categories":null,"objectID":"20cfa7d02c45585a7d5b3e17bc978b35","permalink":"https://umemak.github.io/blog/posts/2023/02/25_github_security/","publish_date":"2023-02-25T00:00:00Z","summary":"go.sum消したのにまたGitHubからメールが来た。 古い情報をもとにセキュリティチェックしているのかなぁ。 どうするのが正解なんだろう。","tags":["go"],"title":"go.sumを消してみた"},{"categories":null,"objectID":"f89e13c93d121ef1f39e4317a23ae2ee","permalink":"https://umemak.github.io/blog/posts/2023/02/24_github_security/","publish_date":"2023-02-24T00:00:00Z","summary":"GitHubのセキュリティメールが最近頻繁に来て、古いテスト用のリポジトリだったので、アラート対象になっているgo.sumファイルを消してみた。 これが正しい対応なのかわからないけど、go.modで指定しているバージョンより古いもののsumが書かれていて、go mod tidyしても消えず、ファイルを消してg","tags":["go"],"title":"go.sumを消してみる"},{"categories":null,"objectID":"938c8f5e702dead0d03f74e2e5697a58","permalink":"https://umemak.github.io/blog/posts/2023/02/23_chromebook/","publish_date":"2023-02-23T00:00:00Z","summary":"しばらく使っていなかったChromebookを初期化した。 Ctrl+Alt+Shift+rを長押し。キーボードがついてないCT100Pの場合は、設定画面にメニューがあった。 Sofmapで買取査定検索したら、数百円にしかならないし、そう考えるとApple製品のリセールバリューはすごいなぁ、と。","tags":[],"title":"ChromebookをPowerwash"},{"categories":null,"objectID":"044f9162b611681435cd4a87b7a57449","permalink":"https://umemak.github.io/blog/posts/2023/02/22_github_ubuntu/","publish_date":"2023-02-22T00:00:00Z","summary":"昨日の更新がエラーになっていて、add post · umemak/blog@a834cf9見たらubuntu-18.04 environment is deprecatedとのこと。 GitHub Actionsのubuntu-18.04がDeprecatedとなったので、ubuntu-latestへマイグレーションする だいぶ前からアナウンスされてい","tags":[],"title":"GitHub Actionsのubuntuがdeprecatedでエラー"},{"categories":null,"objectID":"88632ce73ab7b8b74572b0683bf79060","permalink":"https://umemak.github.io/blog/posts/2023/02/21_metaverse/","publish_date":"2023-02-21T00:00:00Z","summary":"ITエンジニア本大賞2023のビジネス書部門大賞だったメタバース進化論 ――仮想現実の荒野に芽吹く「解放」と「創造」の新世界：書籍案内｜技術評論社を読み始めた。 まだ半分くらい残ってるけど、どんなサービスがあってどんな技術が使われていて、どんな課題があってというところはわかりやすく説明されていると思う。","tags":[],"title":"メタバース進化論"},{"categories":null,"objectID":"cb2625fa053aeeaf1f3db9e38f159e31","permalink":"https://umemak.github.io/blog/posts/2023/02/20_notepc/","publish_date":"2023-02-20T00:00:00Z","summary":"Amazonの欲しいものリストに入れてから値段が8%下がって、もう一段下がったらポチってしまいそう。。 こう安くなると何か裏があるのではないか（新製品が出るとか実はスペック違うものが送られてくるとか）と気になりもする。","tags":[],"title":"Yoga 770i"},{"categories":null,"objectID":"42bc39a638442fbf91ca77a9a537a361","permalink":"https://umemak.github.io/blog/posts/2023/02/19_ddd/","publish_date":"2023-02-19T00:00:00Z","summary":"Software Design (ソフトウェアデザイン) 2023年2月号 [雑誌] | Software Design 編集部 | コンピュータ・テクノロジー | Kindleストア | Amazonのドメイン駆動設計入門と現場で役立つシステム設計の原則 〜変更を楽で安全にするオブジェクト指向の実践技法 | 増田 亨 | コンピュータサイエンス | Kindleストア | Amazonをザッ","tags":[],"title":"ドメイン駆動設計"},{"categories":null,"objectID":"eb89dd8d847708c6801d43d114c0fb87","permalink":"https://umemak.github.io/blog/posts/2023/02/18_surfacego2_win11/","publish_date":"2023-02-18T00:00:00Z","summary":"やってみた。 最初、ダウンロードしてインストール中に空き容量不足で失敗した。 どれくらい空きがなければインストールできないかって最初に分かりそうなものだけど。 いくつかアプリ削除したりして容量空けて、再挑戦したら無事完了した。 なんかWindows10より全体的に動作が重いような。。 ということでWindow","tags":[],"title":"Surface Go2にWindows 11インストール"},{"categories":null,"objectID":"f163f0fa81c90b085d2d5fd63ffaa798","permalink":"https://umemak.github.io/blog/posts/2023/02/17_reflesh_token/","publish_date":"2023-02-17T00:00:00Z","summary":"存在意義がわからなかったので、調べてみた。 リフレッシュ・トークン - IBM Documentation これが一番わかりやすいと思った。 アクセストークンは頻繁にネットワーク上を流れるから、有効期限を短くする。 リフレッシュトークンは、アクセストークンが切れた時しかネットワーク上を流れないので、有効期限が長くても良い。 ワンタイムで破棄す","tags":[],"title":"リフレッシュトークンについて調べた"},{"categories":null,"objectID":"e9072e1e9ce0692028f7c00783d87dca","permalink":"https://umemak.github.io/blog/posts/2023/02/16_notepc/","publish_date":"2023-02-16T00:00:00Z","summary":"次に買いたいPCの候補が絞れてきた。 HP ENVY x360 13-bf Lenovo Yoga 770i この辺り。 共通した特徴は2in1で2880x1800 OLED。 性能的にはYogaの方が上で、値段も2万5千くらい高い。 MS Office要らないけど、何故かOfficeなしのほうが高い。 Office Personal 2021 を購入 - Microsoft Store ¥32,784 (税込)もするんだ。。でもSurfa","tags":[],"title":"ノートPC"},{"categories":null,"objectID":"19e230a35057fe920fa43c83656e27cb","permalink":"https://umemak.github.io/blog/posts/2023/02/15_wikijs/","publish_date":"2023-02-15T00:00:00Z","summary":"docker-compose.yml 一本で、日本語検索できるWiki.jsをサクッと構築する - Qiitaという記事を見て、ローカル環境でやってみた。 なぜかログインした後認証されないという現象が起きて、ブラウザのシークレットモードだと普通に動いたので、昔使った時の古いバージョンの何かブラウザに残っていて悪さしている気がする。 →Cook","tags":[],"title":"Wiki.js"},{"categories":null,"objectID":"740cf4a544f15ceb825dfbf89e8c45ce","permalink":"https://umemak.github.io/blog/posts/2023/02/14_format/","publish_date":"2023-02-14T00:00:00Z","summary":"昨日、フォーマット途中でエラーになる件、ふと思い立ってUSB HUB使わずに直差しでやってみたら、エラーにならず80%超えるところまで来た。 ぜひこのまま完走してほしいし、次のノートPCもTYPE-A端子がついているものにしたほうが良さそうな気がした。 →完走した。HUBのせいだったか。。電源もつないでい","tags":[],"title":"USB HDDのフォーマット2"},{"categories":null,"objectID":"46e306e49409b68d599edb8eda348a2e","permalink":"https://umemak.github.io/blog/posts/2023/02/13_format/","publish_date":"2023-02-13T00:00:00Z","summary":"Macフォーマットの外付けHDDをWindowsにつないでNTFSフォーマットにした。 ここまでは良かったのだけど、一度全削除しておこうとformat X: /fs:NTFS /p:1 /yを実行したら、途中でデバイスが見えなくなったなどというエラーで終了してしまった。 CrystalDiskInfoからは見えてるのに、エクスプロー","tags":[],"title":"USB HDDのフォーマット"},{"categories":null,"objectID":"1e55945d1b1cfa720ce1b6383981fc56","permalink":"https://umemak.github.io/blog/posts/2023/02/12_find_delete/","publish_date":"2023-02-12T00:00:00Z","summary":"空ファイルや空ディレクトリをまとめて削除したいときはfindでいける。 $ find . -empty -delete これでカレントディレクトリ配下の空ファイルおよび空ディレクトリが削除できる。 ファイルだけとかディレクトリだけに絞りたいときは、-typeを指定する。 $ find . -type d -empty -delete $ find . -type f -empty -delete 削除しないで対象だけ見たいときは、-dele","tags":[],"title":"空ファイルを削除するコマンド"},{"categories":null,"objectID":"1eb71ac03896bbaa70d23a8b135943cd","permalink":"https://umemak.github.io/blog/posts/2023/02/11_winmerge/","publish_date":"2023-02-11T00:00:00Z","summary":"fdupesにかける前に、明らかに同じようなファイルを削除するためにWinMerge/winmerge: WinMerge is an Open Source differencing and merging tool for Windows. WinMerge can compare both folders and files, presenting differences in a visual text format that is easy to understand and handle.を使った。 いい感じに削減できている。 それでももまだファイルが多い。主にiTunes関連だけど、なんかヘッダのあたりだけ違","tags":[],"title":"winmerge"},{"categories":null,"objectID":"8f72434e582344b2e9304fc98369c242","permalink":"https://umemak.github.io/blog/posts/2023/02/10_fdupes/","publish_date":"2023-02-10T00:00:00Z","summary":"外付けHDDから取り出したファイル、明らかに重複があるのできれいにしてから再待避したい。 ということで良いツールがないか探して、adrianlopezroche/fdupes: FDUPES is a program for identifying or deleting duplicate files residing within specified directories.というのがあるようで、WSLでもaptでインストールできた。 重複ファイルを削","tags":[],"title":"fdupes"},{"categories":null,"objectID":"6adbb1a21649b9fa62c896c122884194","permalink":"https://umemak.github.io/blog/posts/2023/02/09_macmini/","publish_date":"2023-02-09T00:00:00Z","summary":"Mac mini(2006)をリモート操作するためにしたこと。 Amazon | UGREEN HDMI DVI 変換アダプタ オス-メス DVI-D 24+1 双方向伝送 1080P 金メッキ (DVI-D 24+1) | UGREEN | DVI-HDMIアダプタ 通販 Amazon | DTECH 2 - Pack HDMIバーチャル・ディスプレイ HDMI virtual display HDMI グラフィックカード 表示 GPU 検出監視 ダミープラグアダプタ 4K@60HZ | DTech | 家電＆カメラ 画像出力がDVI端子なので","tags":[],"title":"Mac miniとVNC"},{"categories":null,"objectID":"83f8ecc9c0f7500bf1c6c544b26a8b97","permalink":"https://umemak.github.io/blog/posts/2023/02/08_notepc/","publish_date":"2023-02-08T00:00:00Z","summary":"GeForce RTX 4090搭載でも薄型で静か。進化した16型ゲーミングノート「ROG Zephyrus M16」（Impress Watch） - Yahoo!ニュース ASUS、Core i9とRTX 4090搭載の16型/18型ゲーミングノート（Impress Watch） - Yahoo!ニュース 上位と下位の2モデル展開で、価格はそれぞれ62","tags":[],"title":"ROG Zephyrus M16(2023)"},{"categories":null,"objectID":"4b0744073a544dcef6b7df844f34e000","permalink":"https://umemak.github.io/blog/posts/2023/02/07_macmini/","publish_date":"2023-02-07T00:00:00Z","summary":"Mac miniのOSを10.4.11から10.6.8にしようとしたら、インストーラーを実行するためには10.5を経由しないといけないらしく。 Mac OS X v10.6.8 統合アップデート v1.1 (日本) ダウンロード - Mac OS X 10.5.8 統合アップデート (日本) 10.5.8Comboのインストールにも10.5要求される。。 10.5のインストーラ","tags":[],"title":"Mac mini"},{"categories":null,"objectID":"05a2af07ce0148d8a2531f344be34c85","permalink":"https://umemak.github.io/blog/posts/2023/02/06_macmini/","publish_date":"2023-02-06T00:00:00Z","summary":"昔のものを掘り出してきた。シリアル番号で検索したら、Early 2006だった。17年物。。 OSは10.4.11（Tiger）で、一応10.6.8までは対応しているらしい。 Webブラウザ（Safari、Firefox）で何かしようとしても、TLS証明書が検証できなくて？いちいち警告が出る。Chrome","tags":[],"title":"Mac mini"},{"categories":null,"objectID":"aacbbd6fd99f61e528fe51b7e6e11c29","permalink":"https://umemak.github.io/blog/posts/2023/02/05_books/","publish_date":"2023-02-05T00:00:00Z","summary":"Kindleで5冊買ったらポイント増量とかいうキャンペーンが割と頻繁に開催されているおかげで、未読の本がどんどん増えていっている。 いつかはキャンペーンがあっても欲しいものがなくなってこれ以上増えなくなる・・・のだろうか。 Kindleは基本的にはiPad airで読むようにしていて、理由はデバイス間の同","tags":[],"title":"積ん読"},{"categories":null,"objectID":"d357bde010491af92cc85d052e81d24a","permalink":"https://umemak.github.io/blog/posts/2023/02/04_notepc/","publish_date":"2023-02-04T00:00:00Z","summary":"いろいろ迷っているけど、まだ決めかねている。 そもそも前回Inspiron13を買ったときは、Surface Go 2だと画面サイズと処理能力に課題があったからで、現状そういった問題はないので、無理に次を決める必要はないのではないか、と。 とはいえ、ブルースクリーンの前科もあるので、急に壊れることも考慮して、","tags":[],"title":"ノートPC検討"},{"categories":null,"objectID":"0af533e635f9c1d9b1bdd91d4c8e1735","permalink":"https://umemak.github.io/blog/posts/2023/02/03_macbookair/","publish_date":"2023-02-03T00:00:00Z","summary":"Amazonよりヨドバシとかビックの方がポイント率高い。 そしてヨドバシやビックはCTOも選べる。 Amazonはメモリ8GBしか選択肢ないけど、16GBが選べるのは大きい。 Amazonは8GBで176,300円1,763ポイント、ヨドバシは16GBで221,400円11,070ポイント。 実質3万5千円","tags":[],"title":"M2 MacBook Air"},{"categories":null,"objectID":"3586e68338a85d3e70c4bb449a2e9321","permalink":"https://umemak.github.io/blog/posts/2023/02/02_notepc/","publish_date":"2023-02-02T00:00:00Z","summary":"Amazonタイムセール祭りとは関係なく、M2 MacBook Airが安くなっていて悩む。 Inspiron13もブルースクリーン再発してないし、まだ大丈夫かなぁ。。","tags":[],"title":"ノートPC"},{"categories":null,"objectID":"74582070ce5e97978907ed964987fc17","permalink":"https://umemak.github.io/blog/posts/2023/02/01_serverpod/","publish_date":"2023-02-01T00:00:00Z","summary":"FlutterのためのDart製サーバフレームワーク「Serverpod 1.0」正式リリース。Dartでサーバからクライアントまで開発可能に － Publickey そういえばDartってFlutterからしか使ったことなかったな、コマンドラインからも使えるんだっけ？ Get started: Command-line and server apps | Dart dartコマンドで実行できたし、実行フ","tags":["dart"],"title":"Serverpod"},{"categories":null,"objectID":"ba72fddc120abfee3421292659ef5a4e","permalink":"https://umemak.github.io/blog/posts/2023/01/31_notepc/","publish_date":"2023-01-31T00:00:00Z","summary":"デル、第13世代Coreで16:10液晶搭載の個人向けノート「Inspiron」 - PC Watch 買う予定はないけど、ディスプレイが2560x1600なのがいいね。 明後日からのタイムセール祭りで掘り出し物があればいいなあ。CPUは13世代じゃなくても第12世代で十分な気がしている。 Zephyrus M16はAmazonとASU","tags":[],"title":"ノートPC"},{"categories":null,"objectID":"fd725a46cfbaa4370f800f374e309df9","permalink":"https://umemak.github.io/blog/posts/2023/01/30_refine/","publish_date":"2023-01-30T00:00:00Z","summary":"refine | Build your React-based CRUD applications, without constraints! | refine 自前のAPIでもいい感じに接続できるの？ちょっと気になる。 Data Provider | refineを書けばどんな形式でもイケる感じかな。OpenAPIのyamlから作ってくれたりしないかな。","tags":["react"],"title":"refine"},{"categories":null,"objectID":"7d543000c383746bf687df6ae98d7da0","permalink":"https://umemak.github.io/blog/posts/2023/01/29_musiclm/","publish_date":"2023-01-29T00:00:00Z","summary":"Google、テキストから音楽を生成する「MusicLM」発表 リリースはせず - ITmedia NEWS MusicLM 出力はオーディオファイルみたいだけど、それだと生成物を調整するのが面倒そう。 最近のDAWならいい感じにできるのかな。 そもそもMIDIデータで生成されれば活用できそう。ってすでにあったような。。 Magenta これは指示方法が違うか","tags":["AI"],"title":"MusicLM"},{"categories":null,"objectID":"bc4a441491d7c4cb3ad3b8384e19438d","permalink":"https://umemak.github.io/blog/posts/2023/01/28_wasm/","publish_date":"2023-01-28T00:00:00Z","summary":"Goでクロスコンパイルしてwasmバイナリ作ってブラウザで動かすとか、Rustの本で紹介されているのとか知っているけど、実際動かしたことはなかったので試してみる。 WebAssembly - Wikipedia WebAssembly 言語 I want to… - WebAssembly 意外と選択肢が少ない印象。その中にGoが入っているのも意外。 とりあえず、Goでやってみる。 GoのWASMがライブ","tags":["wasm"],"title":"WebAssembly入門"},{"categories":null,"objectID":"13552177aeb4210bea3869971d079b6e","permalink":"https://umemak.github.io/blog/posts/2023/01/27_grpc_filter/","publish_date":"2023-01-27T00:00:00Z","summary":"filtering package - go.einride.tech/aip/filtering - Go Packages を使おうとしてみたけれど、よくわからない。 aip-go/parser_test.go at master · einride/aip-goを見て、まずInitに文字列渡して、ParseでExprが作られるのはわかった。 そのExprをWarkで見て回るところができず。 とりあえず、入力パターンを制限してstrings.Splitとかでしのいでおく。","tags":["gRPC"],"title":"einride/aip-go使ってみる"},{"categories":null,"objectID":"c5a6ccf6c24da74157cc05941345e1cc","permalink":"https://umemak.github.io/blog/posts/2023/01/26_grpc_filter/","publish_date":"2023-01-26T00:00:00Z","summary":"AIP-160: Filtering よくわからん。 filtering package - go.einride.tech/aip/filtering - Go Packages goならこれでパースできるのかな。","tags":["gRPC"],"title":"gRPCのfilterの書き方"},{"categories":null,"objectID":"9982a364c63e02798b8cb2687b63a494","permalink":"https://umemak.github.io/blog/posts/2023/01/25_ibmcloud/","publish_date":"2023-01-25T00:00:00Z","summary":"Your IBM Cloud account xxxxx with IBMid email is now canceled. カード認証エラーで進めなくて本登録できなかったのが取り消されたっぽい。 その後登録したFly.ioも活用できてないしもったいないので何か作ろう。","tags":["IBM"],"title":"IBM Cloudからのメール"},{"categories":null,"objectID":"68c653eb6ec814b14284cf52b1ed007c","permalink":"https://umemak.github.io/blog/posts/2023/01/24_goreleaser/","publish_date":"2023-01-24T00:00:00Z","summary":"GoReleaser - GoReleaser使ってみた。 うまく動かなかった。 $ go install github.com/goreleaser/goreleaser@latest $ goreleaser init $ goreleaser release --snapshot --rm-dist • starting release... • loading config file file=.goreleaser.yaml • loading environment variables • getting and validating git state • ignoring errors because this is a snapshot error=git doesn\u0026#39;t contain any tags. Either add a tag or use --snapshot • building... commit=c555bfd95c67f41425d8155510f376d0015665eb latest tag=v0.0.0 • pipe skipped reason=disabled during snapshot mode • parsing tag • setting defaults • running before hooks • running hook=go mod tidy • running hook=go generate ./... • took: 6s • snapshotting • building snapshot... version=0.0.1-next • checking distribution directory • loading go mod information • build prerequisites • writing effective config file • writing config=dist\\config.yaml • building binaries • building binary=dist\\asin2md_linux_386\\asin2md • building binary=dist\\asin2md_linux_amd64_v1\\asin2md • building","tags":["go"],"title":"GoReleaser"},{"categories":null,"objectID":"a22636b223faec31a9d8fd5506a43453","permalink":"https://umemak.github.io/blog/posts/2023/01/23_gitjournal/","publish_date":"2023-01-23T00:00:00Z","summary":"GitJournal使ってみて、Android版は編集モードとプレビューモードの切り替えで固まるのが気になるけど、編集モードのままで使っている分には問題なさそう。 iOS版は、編集モードの切り替えでは固まらないけど、ファイルの切り替えで固まる。 まぁどちらの問題も、デイリーノートを追記する通常の使用では","tags":["obsidian","github"],"title":"GitJournal"},{"categories":null,"objectID":"fd129de30742f62cba817e2fe9b8e506","permalink":"https://umemak.github.io/blog/posts/2023/01/22_gitjournal/","publish_date":"2023-01-22T00:00:00Z","summary":"Obsidianのモバイル同期問題で、モバイル用の小さなリポジトリを作って使う運用にしていたが、これだと蓄積したノートの検索ができないことが地味に不便。 GitHub - Google Play のアプリを入れてみたところ、検索機能がないという残念な結果。 他にもGitHubクライアントアプリないか探していたところで見つけたのがGitJ","tags":["obsidian","github"],"title":"GitJournal"},{"categories":null,"objectID":"249e4ace146e9ce9234dfe491963ae08","permalink":"https://umemak.github.io/blog/posts/2023/01/21_chromebook/","publish_date":"2023-01-21T00:00:00Z","summary":"Inspiron13のあと何にするか。Windowsはスリープからの復帰が遅いので、そういえばChromebookは速かったな、と。 Chromebookといえどどうせなら第12世代以降のCoreプロセッサ搭載機で画面比は16:10でと絞り込むと ASUS Store（エイスース ストア） - ASUS Chromebook Flip CX5 (CX5601FBA-MC0042) ThinkPad C14 Chromebook Gen 1 (","tags":["chromebook"],"title":"Chromebook調査"},{"categories":null,"objectID":"1ebc5446b7b8125b018c5c3a41705e6b","permalink":"https://umemak.github.io/blog/posts/2023/01/20_grpc_connect/","publish_date":"2023-01-20T00:00:00Z","summary":"bufbuild/connect-go: Simple, reliable, interoperable. A better gRPC. テスト用にgRPCのサーバーが欲しかったので、使ってみた。 READMEに書いてあるサンプルのように作ったら、grpcurlでリフレクションのエラーになったので、次世代gRPC?『connect-go』やってみたを参考にリフレクションを入れたら動いた。 ついでにクライアントもConnect","tags":["go","gRPC"],"title":"gRPC Connect"},{"categories":null,"objectID":"18e1adf3739875be8b9d79ec75526663","permalink":"https://umemak.github.io/blog/posts/2023/01/19_spring/","publish_date":"2023-01-19T00:00:00Z","summary":"Docker で Spring Boot - 公式サンプルコードを見ながらやってみた。 ローカルにJDKが入っていなかったので、Dockerでビルドしてみたところ、うまく動かず。。 リンクされているSpring Initializrで、Javaが11を選択されていたので、Dockerイメージも11を使ったのだが、Spring Initiali","tags":["docker","Spring Boot"],"title":"DockerでSpring Boot"},{"categories":null,"objectID":"2ea34c9b96a177fbc893aa91e25cf17a","permalink":"https://umemak.github.io/blog/posts/2023/01/18_mac/","publish_date":"2023-01-18T00:00:00Z","summary":"Apple、M2とM2 Proを搭載した新しいMac miniを発表 — これまで以上にパワフル、高性能、万能に - Apple (日本) Apple、M2 ProおよびM2 Maxを搭載したMacBook Proを発表 - Apple (日本) これで型落ちのM1搭載機が安くなるか？と期待してたら、ラインナップから消えていた。 とりあえず、発売","tags":["mac"],"title":"新型mac発表"},{"categories":null,"objectID":"38cdabcef68b2e36a52e31a8c5fa6ddd","permalink":"https://umemak.github.io/blog/posts/2023/01/17_go_mod_sum/","publish_date":"2023-01-17T00:00:00Z","summary":"昨日のgo buildでエラーになってgo runだと動く件、正確にはbuildのほうはmake経由での実行で、runは直接という違いがあった。 goのバージョン管理について、新しいバージョンが出たらManaging Go installations - The Go Programming Languageのようにgo installを使ってインストールしていて、ali","tags":["go"],"title":"goでmissing go.sum entry cacheエラー"},{"categories":null,"objectID":"fe98c60b3d513bd202e1263774903d40","permalink":"https://umemak.github.io/blog/posts/2023/01/16_go_mod_sum/","publish_date":"2023-01-16T00:00:00Z","summary":"go buildしようとするとmissing go.sum entry cacheなエラーが出る。 ググってもgo mod tidyすれば直る的なものしかヒットせず。 go clean --modcacheしてみてもダメ。 go runだと実行できてしまうので余計訳が分からない。","tags":["go"],"title":"goでmissing go.sum entry cacheエラー"},{"categories":null,"objectID":"7e113e14be1f4337c1bbe2ce182a5cf0","permalink":"https://umemak.github.io/blog/posts/2023/01/15_macmini/","publish_date":"2023-01-15T00:00:00Z","summary":"MacBookで書き込んだHDDがあって、HFSExplorerでWindowsから見れたのだけども、ファイルを取り出すのに時間がかかるので、そういえば古いmac miniがあったはず、と見つけたのは良かったが、ディスプレイ出力がDIVでモニタも発掘しないといけないのは大変なので諦めた。 DIV-HDM","tags":["mac"],"title":"mac mini発掘"},{"categories":null,"objectID":"129fc18575c42ff585a61deeeefd96a5","permalink":"https://umemak.github.io/blog/posts/2023/01/14_lowcode/","publish_date":"2023-01-14T00:00:00Z","summary":"昨日調べていた中に、興味深いまとめサイトがあった。 オープンソースなローコード、ノーコードまとめ | WASP株式会社 よくこんなに集めたと感心して読むと、GitHubのlow-code · GitHub Topicsがソースらしい。 とはいえこれを精査していくのも結構な労力だったと思う。","tags":[],"title":"ローコード"},{"categories":null,"objectID":"699632b3565e0f95e1eb06ddce2e5b2d","permalink":"https://umemak.github.io/blog/posts/2023/01/13_budibase/","publish_date":"2023-01-13T00:00:00Z","summary":"CSVファイルをもとに3分でウェブアプリ完成！ NASでも動くローコード開発環境「Budibase」【イニシャルB】 - INTERNET Watchで紹介されているのを見て面白そうだったので、調べてみる。 Budibase | Build internal tools in minutes, the easy way Budibase/budibase: Low code platform for creating internal tools, workflows, and admin panels in minutes. Supports PostgreSQL, MySQL, MSSQL, MongoDB, Rest API, Docker, K8s, and more 🚀. Budibase, the low code platform you\u0026rsquo;ll enjoy using ⚡ 内部アプリを簡単に構築で","tags":["Budibase"],"title":"Budibase入門"},{"categories":null,"objectID":"818660a89eecb2353c38e627df4d18bb","permalink":"https://umemak.github.io/blog/posts/2023/01/12_sveltekit/","publish_date":"2023-01-12T00:00:00Z","summary":"チュートリアルのPart2まで終わった。 ここまでの印象としては、「よくわからないけどルールに沿って書いていけばいい感じに動く」という、昔Ruby on Railsを触っていた時のような感じ。 用意されたレールに乗っている分には快適だけど、そこから外れようとすると苦労するというか。 まぁそれは既存のフレームワー","tags":["SvelteKit"],"title":"SvelteKit入門"},{"categories":null,"objectID":"4bf11bdd0193cda44409a5143ef824b2","permalink":"https://umemak.github.io/blog/posts/2023/01/11_sveltekit/","publish_date":"2023-01-11T00:00:00Z","summary":"SvelteKit • 効率的で無駄のない、研ぎ澄まされた Web 開発 Version1.0に到達ということで、オンラインチュートリアルをやってみた（途中）。 ファイル名の頭に+付けるのはなかなか見慣れない。 MUIも使えるっぽいので、チュートリアル終わたら何か作ってみたい。 svelte-mui - npm","tags":["SvelteKit"],"title":"SvelteKit入門"},{"categories":null,"objectID":"376d61baba2bcfc9725609d66e123f9e","permalink":"https://umemak.github.io/blog/posts/2023/01/10_asin2md/","publish_date":"2023-01-10T00:00:00Z","summary":"著者がうまく取れない問題に対応できた。 goqueryの使い方がわかっていないだけだった。 とはいえ、そもそも同じ項目なのに違う表現をしていたamazonのページがどうしてそういう作りになったのかが疑問。 途中でデータ構造が変わったりしたのだろうか。","tags":["asin2md"],"title":"asin2md修正"},{"categories":null,"objectID":"2c7d7a4b943d787db6e584c3476403fc","permalink":"https://umemak.github.io/blog/posts/2023/01/09_asin2md/","publish_date":"2023-01-09T00:00:00Z","summary":"売り上げがなくてPA-APIが使えなかったので、HTMLから抜き出すようにしてみた。 umemak/asin2md とりあえずKindleのASINから取り出してフロントマターに書き出した。 抽出にはPuerkitoBio/goquery: A little like that j-thing, only in Go.を使っている。 Kindle以外はあまり試していないが、うまく取れない商品","tags":["amazon"],"title":"ASINからMD生成する"},{"categories":null,"objectID":"1ac273d034a3ff4eb8f3c883fdb4a706","permalink":"https://umemak.github.io/blog/posts/2023/01/08_paapi/","publish_date":"2023-01-08T00:00:00Z","summary":"「読んだ本」をObsidianで管理する｜masuipeo｜noteで書かれている、PA-API（Product Advertising API）を使って情報取得をしてみようとした。 アソシエイトIDはだいぶ前に取得してあったので、それを使用して認証キーの発行はできた。 【Amazon API】アクセスキーID・シークレットキー","tags":["amazon"],"title":"PA-API使ってみる"},{"categories":null,"objectID":"428faf9d713e46ba28147f886baabbbb","permalink":"https://umemak.github.io/blog/posts/2023/01/07_obsidian_sync/","publish_date":"2023-01-07T00:00:00Z","summary":"デバイス間同期のためのリポジトリを新しく作成して、デイリーノートの直近の分を共有するようにしてみた。 定期的にPCでもとのリポジトリにコピペする運用にしようかと。 振り返りにもなってちょうどいいと思う。 まだ1日目なので、同期の待ち時間や電池の減りは気にならない。 ファイルが増えてきて同期に時間がかかるよう","tags":["obsidian"],"title":"Obsidian同期問題 Gitふたたび"},{"categories":null,"objectID":"b8aa39f35811ee13cf3254a611f8bb8a","permalink":"https://umemak.github.io/blog/posts/2023/01/06_obsidian_sync/","publish_date":"2023-01-06T00:00:00Z","summary":"KeepとObsidian併用すると、Keepからコピーしたときに行末に余計な空白が入るのが気になる。 かといってVS Codeで空白を削除してコピペしなおすと何故かObsidian上では余計な改行が入るという・・ どうせKeep経由するなら、デバイス同期用の小さなVault作ってGitプラグインでやった","tags":["obsidian"],"title":"Obsidian同期問題 Keepとコピペ"},{"categories":null,"objectID":"d1c3c5455643b10ee79a3ab11232aaf2","permalink":"https://umemak.github.io/blog/posts/2023/01/05_obsidian_sync/","publish_date":"2023-01-05T00:00:00Z","summary":"なかなかこれといった方法が決まらない。 昔やっていたように、各デバイスはKeepに書き込んで、一日の最後にObsidianにまとめなおす運用が無難な気がしてきた。","tags":["obsidian"],"title":"Obsidian同期問題"},{"categories":null,"objectID":"d4fae1d845580104ab1df5515c67edb9","permalink":"https://umemak.github.io/blog/posts/2023/01/04_notepc/","publish_date":"2023-01-04T00:00:00Z","summary":"Amazonの初売りでAmazon | ASUS 【16インチ・インテル最新高性能CPU・165Hz・RTX3060】 ゲーミングノートPC ROG Zephyrus M16 GU603ZM ( Core i7-12700H 16GB 512GB RTX3060 16型 WQXGA 165Hz ) GU603ZM-I7R3060E 【日本正規代理店品】 | ASUS | パソコン・周辺機器 通販が15%引きになってるじゃん。って思って買いそうになってたのだけど、Intel、ノートPCで","tags":[],"title":"ノートPC選択2023"},{"categories":null,"objectID":"53d26e312adb29d0e565b6c4f8118abf","permalink":"https://umemak.github.io/blog/posts/2023/01/03_flyio/","publish_date":"2023-01-03T00:00:00Z","summary":"IBM Cloudが使えないので、Deploy app servers close to your users · Flyを試してみた。 Fly.ioあまり聞いたことなかったけど、Heroku的な立ち位置らしい。 Fly.io for self hosting CouchDB · Discussion #85 · vrtmrz/obsidian-livesyncの通りにやっていたたら、あっさり動いた。 一か所、6. Create data volumeのところのコマンド","tags":["Fly.io"],"title":"Fly.io"},{"categories":null,"objectID":"9d6a73b336840830eb2e46ce7c5f127c","permalink":"https://umemak.github.io/blog/posts/2023/01/02_ibm_cloud/","publish_date":"2023-01-02T00:00:00Z","summary":"自前でCouchDB動かすのはいったんあきらめて、obsidian-livesync/setup_cloudant_ja.md at main · vrtmrz/obsidian-livesyncにあるようにIBM Cloudを使おうとした。 アカウント登録時のクレジットカード認証が通らない。。 エラー 注文できませんでし","tags":["IBM"],"title":"IBM Cloud"},{"categories":null,"objectID":"a901a6212ad835e329013828187b15fa","permalink":"https://umemak.github.io/blog/posts/2023/01/01_obsidian_sync/","publish_date":"2023-01-01T00:00:00Z","summary":"Obsidian Self-hosted LiveSyncプラグイン を試してみた。 手始めに、ラズパイでサーバー起動しようとしたら、対応しているDockerイメージが無かった。 せっかくなので、OSを64bit版に入れなおして、動くようにした。 WindowsPCでクライアント側のプラグインを入れても設定が表示されず、無効にしてみたり他のプラ","tags":["obsidian"],"title":"Obsidian同期問題"},{"categories":null,"objectID":"45e5cc5fb85cef2a869a81ff3a0ccc27","permalink":"https://umemak.github.io/blog/posts/2022/12/31_github2022/","publish_date":"2022-12-31T00:00:00Z","summary":"今年のGitHub毎日更新チャレンジは、2日足りず。 来年は完走したい。","tags":["GitHub"],"title":"GitHub草2022"},{"categories":null,"objectID":"80d2803079553ac3c7674ff26fca3d6a","permalink":"https://umemak.github.io/blog/posts/2022/12/31_obsidian_sync/","publish_date":"2022-12-31T00:00:00Z","summary":"iPhoneの電池消費が結構やばい。 別の方法考えたほうがいいかも。。 WindowsPCとiPhoneとiPadとAndroidで同期とるのはどうするのが良いのだろう。 Obsidianの複数端末同期方法まとめ (Mac/Windows/iOS/Android) を見ると、Obsidian Self-hosted LiveSyncプラグインも良さそう。 Obsidianのプラグイ","tags":["obsidian"],"title":"Obsidian同期問題"},{"categories":null,"objectID":"f6ed536233365e301b3c5316d855a145","permalink":"https://umemak.github.io/blog/posts/2022/12/30_obsidian_mobile/","publish_date":"2022-12-30T00:00:00Z","summary":"denolehov/obsidian-git: Backup your Obsidian.md vault with gitを使ってデバイス間の同期をとっているのだけど、iPhone8もPixel4も結構時間がかかる。iPad air4も遅いけどまあ許容範囲。 まだディレクトリ構成とか試行錯誤しているので毎回差分が多いというのもあるけど、思いついたときに書き込める手軽さが損なわれるのはつらい。 とりあえず書き","tags":["obsidian"],"title":"スマホObsidian"},{"categories":null,"objectID":"4b61849fb5a0b1105b4273670d85e6ba","permalink":"https://umemak.github.io/blog/posts/2022/12/29_keep2md/","publish_date":"2022-12-29T00:00:00Z","summary":"Google KeepのエクスポートしたJSONをマークダウンファイルに変換する部分は一応できた。 umemak/keep2md 一応というのは、本文がtextContentに出力されているものしか対応していないし、プラグインにもしていないから。 チェックボックスとか使うと別の項目名になるので、取れていない。 自分の用途だとこれでほぼ変換できた","tags":["obsidian"],"title":"keep2md"},{"categories":null,"objectID":"d63da5473f4db35fa2446201516f3776","permalink":"https://umemak.github.io/blog/posts/2022/12/28_keep2md/","publish_date":"2022-12-28T00:00:00Z","summary":"Google KeepのエクスポートしたJSONをマークダウンファイルに変換するプラグインが見つからないので、作ってみることにした。 ゼロから始めるObsidianプラグイン開発-01 この記事が参考になりそう。 言語はTypeScriptで作るようだ。 まずは変換処理をライブラリとして実装するところからやったほうが良","tags":["obsidian"],"title":"Obsidianのプラグインに入門"},{"categories":null,"objectID":"20e4a97f3fcae49745e6f536ab70c0f4","permalink":"https://umemak.github.io/blog/posts/2022/12/27_keep2obsidian/","publish_date":"2022-12-27T00:00:00Z","summary":"Google Keep からデータをエクスポートする - Google Keep ヘルプ でエクスポートしたデータ、htmlとjson形式で、そのままObsidianに貼り付けて移行終わりということにはならず。 html表示してもインデントが表現されてなくて結局Keepでひとつづつ開いてコピペな感じ。 900ファイルくらいあるので、もうちょっと何と","tags":["obsidian"],"title":"Google KeepからObsidianに移行"},{"categories":null,"objectID":"a2bcd600665886b85a568a5b66d4319f","permalink":"https://umemak.github.io/blog/posts/2022/12/26_obsidian/","publish_date":"2022-12-26T00:00:00Z","summary":"Obsidian一時期使っていたけど、Google Keepで良いのでは？となってKeepをメモアプリとして運用していた。 Keepの検索で検索しきれない気がしていて、別のアプリを模索していたところ、Obsidian git プラグインが面白そうだったので、またObsidianを使ってみることにした。 参考にした","tags":["obsidian"],"title":"Obsidian再入門"},{"categories":null,"objectID":"da3497a0be727a349d2f01e9b5abd949","permalink":"https://umemak.github.io/blog/posts/2022/12/25_oci_ssh/","publish_date":"2022-12-25T00:00:00Z","summary":"OracleCloudの無料インスタンスにSSHしようとしてできない。 Compute \u0026gt; Instances \u0026gt; Instance detailsでPublic IP addressとUsernameは確認できる。 Console connectionを開くと、Launch Cloud Shell connectionとCreate local connectionが選択できて、Cloud Shellのほう","tags":["oci"],"title":"OracleCloudにSSH"},{"categories":null,"objectID":"8f4d52a2cdba4defc1c34ff9c9f4795b","permalink":"https://umemak.github.io/blog/posts/2022/12/24_notepc/","publish_date":"2022-12-24T00:00:00Z","summary":"昨日再起動してからはブルースクリーンは出ていないが、念のためファイルをバックアップしつつノートPCの情報収集。 条件としては、 13.5インチ以上 1920 x 1200 以上（3:2か16:10） 第12世代Core以降CPU メモリ16GB以上 SSD512GB程度 JIS配列キーボード この辺りが必須で。 ChatGPTに聞いて","tags":[],"title":"ノートPC選び2022"},{"categories":null,"objectID":"00fbc2257028e60c48527910b0cdaf3c","permalink":"https://umemak.github.io/blog/posts/2022/12/23_inspiron13/","publish_date":"2022-12-23T00:00:00Z","summary":"作業中に操作が効かなくなって数秒後にブルースクリーンが表示された。停止コードはCLOCK_WATCHDOG_TIMEOUT。「エラー情報を収集しています。自動的に再起動します。」と表示されていたが、0%完了のまま進展ないので、電源長押しして強制終了させた。 再起動後、ログインして諸々スタートアップのア","tags":[],"title":"Inspiron13のブルースクリーン"},{"categories":null,"objectID":"2af5652060599ab9cacc0fc153fb195b","permalink":"https://umemak.github.io/blog/posts/2022/12/22_devbox/","publish_date":"2022-12-22T00:00:00Z","summary":"ローカル環境を汚さずDockerコンテナのオーバーヘッドもなく、開発環境を自在に構築できる「Devbox 0.2.0」登場 － Publickeyの記事で初めて知った。 Devbox by Jetpack.io | Devbox WindowsだとWSL上でやらないとダメなのかな。Git bashだと権限が足りないといわれた。 感覚的には、言語ごとの○○env","tags":["devbox"],"title":"Devbox"},{"categories":null,"objectID":"2fe01e5375478adc0c1b2b0e9be59704","permalink":"https://umemak.github.io/blog/posts/2022/12/21_rss_filter/","publish_date":"2022-12-21T00:00:00Z","summary":"Inoreaderの有料プランが切れて、広告が表示されるようになり、重複フィルターが無効化され、ルールによる自動既読が効かなくなった。 広告はまあそんなに目障りではないので問題なし。 ルールの代わりに、Cloud Functions経由するときに除外するようにしたので、これも問題なし。 重複フィルターが代替","tags":["RSS"],"title":"rss_filter"},{"categories":null,"objectID":"928d157b71c3764c6972b6a0d57f8bbe","permalink":"https://umemak.github.io/blog/posts/2022/12/20_scrapbox/","publish_date":"2022-12-20T00:00:00Z","summary":"Kindle UnlimitedでScrapboxing(スクラップボクシング) | 吉良野すた | 工学 | Kindleストア | Amazonを読んで、使ってみた。 https://scrapbox.io/ 今はKindleで読んだ本のハイライトしたところをGoogle Keepにコピペしているのだけど、Keepだとメモごとのリンクが張れないので、似た内容とか頻繁","tags":["Scrapbox"],"title":"Scrapbox"},{"categories":null,"objectID":"ce97d6253321c728bdd026c55b496314","permalink":"https://umemak.github.io/blog/posts/2022/12/19_mysql_generated_column/","publish_date":"2022-12-19T00:00:00Z","summary":"MySQLのGenerated Columnというものを知った。 MySQL :: MySQL 8.0 リファレンスマニュアル :: 13.1.20.8 CREATE TABLE および生成されるカラム 第150回 Generated Columnを利用してみる | gihyo.jp MySQLのGenerated Columnsまとめ with Rails - Qiita MySQL の Generated Columns のキャッチアップ - Please Sleep JSON型にindexも！MySQL 5.7のGe","tags":["MySQL"],"title":"MySQLのGenerated Column"},{"categories":null,"objectID":"04eeee67bf7fbe2f8214640f91ba92ec","permalink":"https://umemak.github.io/blog/posts/2022/12/18_http3/","publish_date":"2022-12-18T00:00:00Z","summary":"WEB+DB PRESS Vol.131｜技術評論社の特集を読んだ。 概要から実践まで解説されていて、「完全に理解」できた。 サンプルはPythonで書かれていたので、他の言語でどうなのか調べてみたいと思った。","tags":["http3"],"title":"HTTP/3入門"},{"categories":null,"objectID":"8e20afd664dce780202384b01ef31456","permalink":"https://umemak.github.io/blog/posts/2022/12/17_elixir/","publish_date":"2022-12-17T00:00:00Z","summary":"WEB+DB PRESS Vol.131｜技術評論社の特集を読んだ。 ElixirとかErlangとか、初心者向けならまず読み方を書いてくれればよいのにと思った。 WikiPediaによれば、エリクサー、アーラン。 文法の解説にページ使いすぎな気がしなくもないけど、それだけほかの言語と違うところがあるということなのだろう。 El","tags":["elixir"],"title":"Elixir入門"},{"categories":null,"objectID":"1e0f97be43772455afeb2d486f0e081e","permalink":"https://umemak.github.io/blog/posts/2022/12/16_rust/","publish_date":"2022-12-16T00:00:00Z","summary":"WEB+DB PRESS Vol.131｜技術評論社の特集を読んでいる途中。 やっぱりマクロが出てきたあたりで難易度が上がるような気がする。 そういえば、Amazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本も買っていたのを思い出した。 これも読まなきゃ。","tags":["rust"],"title":"Rust再入門"},{"categories":null,"objectID":"0a6bb1c3f77366ff34e35718c7656874","permalink":"https://umemak.github.io/blog/posts/2022/12/15_go_error/","publish_date":"2022-12-15T00:00:00Z","summary":"Goでスタイリッシュにエラーをラップする方法を学んだ - カミナシ エンジニアブログを見て、なるほどと思った。 ただ、自分の場合はエラーメッセージに、エラーを返した関数なりメソッド名を入れたい派なので、一律同じになるこの方法は見送りかな、と。 func hoge() error { err := Huga() if err != nil { return fmt.Errorf(\u0026#34;Huga: %w\u0026#34;, err) } return nil } こんな感じ。","tags":["golang"],"title":"Goのエラーのラップ"},{"categories":null,"objectID":"5d0302b51a50e7b4a18f5538bf7b98c1","permalink":"https://umemak.github.io/blog/posts/2022/12/14_docker/","publish_date":"2022-12-14T00:00:00Z","summary":"Dockerの学習方法について、ChatGPTに聞いてみた。 おおむね自分の認識と合った回答だった。 もう一度やったら違う回答が出てきそうだったけど、エラーになってしまった。 大人気で混雑してるっぽい。","tags":["docker"],"title":"Docker x ChatGPT"},{"categories":null,"objectID":"f4ad146607cbb1f5d741da3128352bbd","permalink":"https://umemak.github.io/blog/posts/2022/12/13_jamstack/","publish_date":"2022-12-13T00:00:00Z","summary":"昨日の続きで、Software Design 2022年11月号｜技術評論社の特集を読んだ。 このページもHugoで生成しているので、jamstackと言えるはず。 今はGitHub Pages使っていて、特に不都合ないので引っ越すつもりもないけど、特集読んでnetlifyとか使ってみたいと思った。","tags":[],"title":"jamstack再入門"},{"categories":null,"objectID":"42f16ff6ac6ca8498a0a5b757155486d","permalink":"https://umemak.github.io/blog/posts/2022/12/12_docker/","publish_date":"2022-12-12T00:00:00Z","summary":"Dockerのおさらいをするために、Software Design 2022年11月号｜技術評論社の特集を読んだ。 基本的なコンテナの仕組みへの理解が深まった気がする。 個人的には、以前ほど何でもコンテナ化したらいいじゃんって感じではなくなって、選択肢の一つとして存在している感じ。 まぁDocker使ってもMacとWi","tags":["docker"],"title":"Docker再入門"},{"categories":null,"objectID":"36eb14fcff4bec6c72b077a65789b2df","permalink":"https://umemak.github.io/blog/posts/2022/12/11_go_present/","publish_date":"2022-12-11T00:00:00Z","summary":"Go製プレゼンツール「present」のインストール手順 - Qiitaを見て、そんなものがあるのかと初めて知った。 どんなものかと検索したら、Goのpresentで発表用スライドを作成する - Carpe Diemの記事で実際の例がリンクされてて、それ見たらこういうスライド見たことがあった。 最近はスライド作るのはMa","tags":["golang"],"title":"Goのpresentパッケージ"},{"categories":null,"objectID":"18ca65b33847a3e669c3323f1aea9812","permalink":"https://umemak.github.io/blog/posts/2022/12/10_raspberry_pi_vscode/","publish_date":"2022-12-10T00:00:00Z","summary":"GitHub Codespacesが使えるようになるのを待つ間、ラズパイで何とかならないか試してみた。 VS Codeからリモート接続して、Dockerインストールするところまでは順調だったけれど、docker compose upしたところでエラー。 MySQLのコンテナイメージが提供されていないようだ。 意外だった。 mysql Tags | Docker Hubに","tags":["raspberry-pi","docker"],"title":"ラズパイでDockerでMySQL"},{"categories":null,"objectID":"27df20dc57529505ee3444241db9844e","permalink":"https://umemak.github.io/blog/posts/2022/12/09_codespaces/","publish_date":"2022-12-09T00:00:00Z","summary":"GitpodからVS Codeに作業環境を引っ越して、docker-composeでコンテナ立てて動かせるようにしてみた。 が、airとかnextjsのホットリロードが効かない。 Windowsだとダメらしい。WSLで起動しても変わらず。 じゃあGitpodがPWAならある程度使い勝手が良いのでは？と思った","tags":["GitHub"],"title":"Codespacesの制限"},{"categories":null,"objectID":"231b6046fa19e59767a39d051cdd0f69","permalink":"https://umemak.github.io/blog/posts/2022/12/08_prism/","publish_date":"2022-12-08T00:00:00Z","summary":"APIサーバーのモックを手っ取り早くほしかったのでstoplightio/prism: Turn any OpenAPI2/3 and Postman Collection file into an API server with mocking, transformations and validations.を試してみた。 POSTのレスポンスがexample指定してるはずなのに、空で返ってきてよくわからない。 モック対象がそんなに多くなかったから、とりあえずgoで組ん","tags":["OpenAPI"],"title":"Prism使ってみた"},{"categories":null,"objectID":"a59b90de705a7452947b361ac249fe76","permalink":"https://umemak.github.io/blog/posts/2022/12/07_chatgpt/","publish_date":"2022-12-07T00:00:00Z","summary":"流行に乗ってみた。 ChatGPT、公開6日目で100万ユーザー突破 - ITmedia NEWS マイグレーションツールのおすすめを聞いてみたら、回答まで思ったより時間がかかってエラーを返してきた。 もうちょっと条件を付けて、Go言語のDBマイグレーションツールのおすすめを聞いたら、golang-migrate/migrate","tags":["ChatGPT"],"title":"ChatGPT使ってみた"},{"categories":null,"objectID":"6058d26dcb17c151f21791f46bf6f479","permalink":"https://umemak.github.io/blog/posts/2022/12/06_bitbucket/","publish_date":"2022-12-06T00:00:00Z","summary":"Bitbucket+Gitpodでどこまでできるかやっていたのだけれど、ブラウザであるが故の細かいストレスが蓄積してきて、VS Codeでやることにしてみた。 リポジトリをVS Codeで開くと拡張機能のインストールが案内されて、それに従ってインストールしてBitbucket認証通して、認証通して、認証通","tags":["Bitbucket","vscode"],"title":"BitbucketとVS Code"},{"categories":null,"objectID":"a114639509fd7b5915c7b955324ccc68","permalink":"https://umemak.github.io/blog/posts/2022/12/05_cython/","publish_date":"2022-12-05T00:00:00Z","summary":"CythonによるPythonの高速化!!をやってみた。 書かれているようにエラーが出たので、Microsoft C++ Build Tools - Visual StudioでBuild Toolsのダウンロードをしてインストール。 C++によるデスクトップ開発を選択してインストール。1.7GBもダウンロードするのか。。 で、インストールが終わっ","tags":["python","cython"],"title":"Cython入門"},{"categories":null,"objectID":"77a1dd4979c9a4acced731dedd920bc7","permalink":"https://umemak.github.io/blog/posts/2022/12/04_wifi/","publish_date":"2022-12-04T00:00:00Z","summary":"結局NECのにした。 今度のは、ちゃんとブリッジモードに設定できた。 スピードテストしたら交換前とそんなに変わらず。あとはしばらく使ってみてDNS引けない現象が起きるかどうか。","tags":[],"title":"無線LANルーター"},{"categories":null,"objectID":"722ed80983bb819c28aafe8f810e5015","permalink":"https://umemak.github.io/blog/posts/2022/12/03_mouse/","publish_date":"2022-12-03T00:00:00Z","summary":"ロジクール M590GTを使っていて、時々カーソルが引っかかることがあるので寿命かと思い、ロジクール MX ANYWHERE 2Sを買い足したのだが、結局カーソル引っ掛かり現象は2Sでも発生して、これは有線にしないと解決しないのかと。 Amazonを探検してみたところ、いくつか候補が出てきたが、これといった決定的なものは見つ","tags":[],"title":"有線マウス"},{"categories":null,"objectID":"8cadc24aa93b9c069703b9f1b9aa4ecf","permalink":"https://umemak.github.io/blog/posts/2022/12/02_cython/","publish_date":"2022-12-02T00:00:00Z","summary":"Software Design 2022年12月号｜技術評論社で、 Cython: C-Extensions for Pythonというものを知った。 ちょっとした変更でかなり高速化できるようなので、いつか試してみたい。","tags":["python","cython"],"title":"Cython"},{"categories":null,"objectID":"f952d207cbb2c0ed92186b1b54232bb9","permalink":"https://umemak.github.io/blog/posts/2022/12/01_xml2tsv/","publish_date":"2022-12-01T00:00:00Z","summary":"umemak/kindle_xml_to_tsv作った。 ExcelだとXMLファイル読めるらしい（試してない）けど、Googleスプレッドシートだと読み込めなかったので、TSVに変換して読み込めた。 goのencoding/xml使って、割と簡単に書けたけど、AuthorsとPublishersが配列","tags":["go"],"title":"KindleのXMLをTSVに変換する"},{"categories":null,"objectID":"a689faa44f2896e2c228ed710fb60607","permalink":"https://umemak.github.io/blog/posts/2022/11/30_cloudfunctions_log/","publish_date":"2022-11-30T00:00:00Z","summary":"デプロイのエラーは、go clean -modcacheしてgo.sum削除してgo.modのrequire全削除してgo mod tidyしたら直った。 何が効いたのかはわからない。 ログは、JSON形式で出力しないといけないのかと思ってそのように書いてみたら、そのまま記録されて構造化されなかった。 集計するものでもなけれ","tags":["gcp","go"],"title":"CloudFunctionsのログ"},{"categories":null,"objectID":"106a8c6f85f35d0468b1bab40e2a4824","permalink":"https://umemak.github.io/blog/posts/2022/11/29_techbookread/","publish_date":"2022-11-29T00:00:00Z","summary":"「技術書」の読書術 達人が教える選び方・読み方・情報発信\u0026amp;共有のコツとテクニック | IPUSIRON, 増井 敏克 | コンピュータ・IT | Kindleストア | Amazonを読んだ。 自分もセールのたびに積読が増えていくので何とかしたいが、雑誌の定期購読が良いと書いてあったのを見て、Software DesignとWEB+","tags":["book"],"title":"「技術書」の読書術"},{"categories":null,"objectID":"189e9497db81dd937e2f9183678099b2","permalink":"https://umemak.github.io/blog/posts/2022/11/28_cloudfunctions_log/","publish_date":"2022-11-28T00:00:00Z","summary":"何もしないと、リクエストパラメータすらログに出力されないので、何かと不便。 ログの作成、表示、処理 | Google Cloud Functions に関するドキュメントによると、標準出力や標準エラーに書き込めば良いが、Entry構造体を定義して、Stringメソッドを作り、logにPrintlnで渡せばもっと良い感じにできるらしい。 とりあえず","tags":["gcp","go"],"title":"CloudFunctionsのログ"},{"categories":null,"objectID":"6ba94783eeb9e3cb910a1663f50fda0a","permalink":"https://umemak.github.io/blog/posts/2022/11/27_wifi_nec/","publish_date":"2022-11-27T00:00:00Z","summary":"結局、最近調子悪くなったとはいえ今まで数年間安定して動いていた実績があるNECでも良いのではないか？と思うようになってきた。 Amazon.co.jp: 【Amazon.co.jp 限定】NEC Aterm 無線LAN WiFi ルーター Wi-Fi6 4×4 AX5400HP Atermシリーズ 6ストリーム (5GHz / 2.4GHz) AM-AX5400HP【 iPhone 13 / 12 / iPhone SE(第二世代) / Nintendo Switch メーカー動","tags":[],"title":"無線LANルーター3"},{"categories":null,"objectID":"e507bc52602dc02ca8d1e50d01eb2efa","permalink":"https://umemak.github.io/blog/posts/2022/11/26_wifi_iodata/","publish_date":"2022-11-26T00:00:00Z","summary":"売れ筋ランキングとは別に、 Amazon.co.jp 新着ランキング: 無線・有線LANルーター の新着ランキングです。 Amazon.co.jp ほしい物ランキング: 無線・有線LANルーター で、ほしい物リストとレジストリに最も多く追加された商品 Amazon.co.jp 人気ギフトランキング: 無線・有線LANルーター で、ギフトの設定を使用して最もご注文いただいている商品 があって","tags":[],"title":"無線LANルーター2"},{"categories":null,"objectID":"36f2287024a7c272def937cf3bb8623d","permalink":"https://umemak.github.io/blog/posts/2022/11/25_wifi/","publish_date":"2022-11-25T00:00:00Z","summary":"Amazonのセールが始まったので、この機会に買い換えを検討。 Amazon.co.jp 売れ筋ランキング: 無線・有線LANルーター の中で最も人気のある商品です バッファロー、TP-Link、NECが多い。 今使ってて調子悪いのがNECだから、ちょっと避けたい。バッファローは大昔良くない思い出があるのでパス。TP-Linkは見た","tags":[],"title":"無線LANルーター"},{"categories":null,"objectID":"ce4d102a226c096cb50a726f33a2260d","permalink":"https://umemak.github.io/blog/posts/2022/11/24_gcp_charge/","publish_date":"2022-11-24T00:00:00Z","summary":"Cloud FunctionsでAPIデプロイしてから、課金が発生しているのに気が付いた。 200万回までは無料では？と思い詳細を見てみると、Cloud Storageの料金だった。 料金 | Cloud Functions | Google Cloud 関数が Container Registry に保存される場合、Container Registry には無料枠がないため、デプロイ後にわずかな料金が発生します。 これか。","tags":["gcp"],"title":"GCPの課金"},{"categories":null,"objectID":"e124454888e93930e76d7d28915abc2c","permalink":"https://umemak.github.io/blog/posts/2022/11/23_rss_filter/","publish_date":"2022-11-23T00:00:00Z","summary":"encoding/xmlを使って複数RSS読み込んでマージして出力するのはできたけど、読み込むRSSの形式によってencoding/xmlでは読めないものが出てきた。 やっぱりmmcdole/gofeed: Parse RSS, Atom and JSON feeds in Goとか形式の違いを吸収してくれるライブラリを利用したほうが良さそう。 作ってみてわ","tags":["RSS"],"title":"encoding/xml"},{"categories":null,"objectID":"4d66dab908e2696d70649ebe67c3d5ca","permalink":"https://umemak.github.io/blog/posts/2022/11/22_runn/","publish_date":"2022-11-22T00:00:00Z","summary":"runnでDBの操作もできるのだけど、BINARY型のカラムがあるテーブルだとうまく動かない（気がする）。 深く考えずにCHAR型に変更したら通ったので、おそらくBINARY型が原因だったと思う。 時間ができたら検証してみたい。","tags":["go","mysql"],"title":"runnでgRPCのテスト3"},{"categories":null,"objectID":"63007557ea4c194dd7252c51e1a3ed69","permalink":"https://umemak.github.io/blog/posts/2022/11/21_gitea_to_github/","publish_date":"2022-11-21T00:00:00Z","summary":"GiteaのリポジトリをGitHubに移行してみる。 Giteaのほうは、バックアップのzipがある状態。 zipを展開して、リポジトリ（.git拡張子のディレクトリ）をgit cloneでローカルリポジトリとして取り込む。 移行先のGitHubリポジトリを作成して、git remote set-url originでリモートリポジト","tags":["gitea","github"],"title":"GiteaからGitHubへの移行"},{"categories":null,"objectID":"98b0e54655b56c91a05dd6b87c75d7b8","permalink":"https://umemak.github.io/blog/posts/2022/11/20_rss_filter/","publish_date":"2022-11-20T00:00:00Z","summary":"Lambdaで動かそうと思っていたけど、Cloud Functionsにデプロイしてみた。 設定周りをDB管理したいと思ったら、それFirebaseで良いのでは？という気持ちになってきた。 FirebaseとGoの組み合わせは今までやったことない気がするので、この機会に試してみようと思ったけど、Fireb","tags":["RSS"],"title":"RSSフィルタ2"},{"categories":null,"objectID":"0b9bda3fda99998a86d450ba4addc7d7","permalink":"https://umemak.github.io/blog/posts/2022/11/19_rss_filter/","publish_date":"2022-11-19T00:00:00Z","summary":"mmcdole/gofeed: Parse RSS, Atom and JSON feeds in Goを使ったら、RSSの読み込みが超簡単にできた。 が、不要なエントリを削除してまたRSSとして出力しようとしたときに、手段が用意されていなさそう。 なので、encoding/xmlを使って作るのが良さそう。 Goのencoding/xmlの使い方について雑に紹介 Go言語 - XMLを読んで特","tags":["RSS"],"title":"RSSフィルタ"},{"categories":null,"objectID":"c67c61784b0e770b392d614fe0125b4b","permalink":"https://umemak.github.io/blog/posts/2022/11/18_runn/","publish_date":"2022-11-18T00:00:00Z","summary":"runnのコマンドライン実行でうまく動かない件、オプション--grpc-no-tlsを指定したら解消した。 デバッグ用に詳細オプションないかなーってコマンドラインヘルプ見ていて見つけた。 マニュアルはちゃんと読みましょう（今年何度目かの反省","tags":["go","gRPC"],"title":"runnでgRPCのテスト2"},{"categories":null,"objectID":"1eb4ae945f09487de1fce5d77a9d97d9","permalink":"https://umemak.github.io/blog/posts/2022/11/17_runn/","publish_date":"2022-11-17T00:00:00Z","summary":"gRPCサーバーをテストするのに、fullstorydev/grpcurl: Like cURL, but for gRPC: Command-line tool for interacting with gRPC serversを使っていたのだけど、自動化するのに良いものはないかと探して、k1LoW/runn: runn is a package/tool for running operations following a scenario.を試してみた。 go testから使うのは何となくできたような気がするけど","tags":["go","gRPC"],"title":"runnでgRPCのテスト"},{"categories":null,"objectID":"0d5249cd74335adeca005bb30ae57110","permalink":"https://umemak.github.io/blog/posts/2022/11/16_rss_crawler/","publish_date":"2022-11-16T00:00:00Z","summary":"RSSリーダーはInoreaderをProプランで使っているのだけれど、そろそろ年払いの更新時期で、最近ちょっと下がったとはいえまだドルが高いので思案中。 そもそもProプランにしてるのは、ルールとフィルターが使いたいからで、それさえ自前で実現できれば、広告付きFreeプランでも問題ない（はず）。 とい","tags":["RSS"],"title":"RSSクローラー"},{"categories":null,"objectID":"1eb46f81ff2ce4742d5483d6752d19e3","permalink":"https://umemak.github.io/blog/posts/2022/11/15_github_pro/","publish_date":"2022-11-15T00:00:00Z","summary":"料金プランの話。 いままでFreeでやってきたけど、Codespacesの使用量アラートがくるようになったし、そろそろ課金しても良いかなと。 ドル円が不安定なのと年払いにしても割引とかないので、とりあえず1か月で。","tags":["GitHub"],"title":"GitHubのProになった"},{"categories":null,"objectID":"9c0647b6dc8d9012f33a71fb11851108","permalink":"https://umemak.github.io/blog/posts/2022/11/14_sqlboiler_undelete/","publish_date":"2022-11-14T00:00:00Z","summary":"SQLBoilerはDeleteするときに論理削除が使える。 詳細は【Go】sqlboilerで論理削除を実装する | ISSUEが詳しい。 論理削除のときはdeleted_atカラムがセットされる。 で、そのときupdated_atは更新されない。 論理削除した行を元に戻したいとき、deleted_atにnu","tags":["go"],"title":"SQLBoilerで論理削除の復旧"},{"categories":null,"objectID":"cd4ccfbbb44e0ac9baea12ce990e67c8","permalink":"https://umemak.github.io/blog/posts/2022/11/13_d.ts/","publish_date":"2022-11-13T00:00:00Z","summary":"Saul-Mirone/milkdown: 🍼 Plugin driven WYSIWYG markdown editor framework.とjazz-soft/react-midi-player: React MIDI Playerを組み合わせて使おうとしたら、React MIDI PlayerがTypeScript未対応らしく、モジュール 'react-midi-player' の宣言ファイルが見つかりませんでした。とのこと。 react-midi-player.d.t","tags":["TypeScript"],"title":".d.tsファイル"},{"categories":null,"objectID":"7be633528bdcd3cd261cbb70d66c1a58","permalink":"https://umemak.github.io/blog/posts/2022/11/12_mdeditor/","publish_date":"2022-11-12T00:00:00Z","summary":"久しぶりに検索してみた。 tinymce/tinymce: The world\u0026rsquo;s #1 JavaScript library for rich text editing. Available for React, Vue and Angular 保存形式が良くわからない summernote/summernote: Super simple WYSIWYG editor マークダウンではなくてHTMLで取り出す？ Saul-Mirone/milkdown: 🍼 Plugin driven WYSIWYG markdown editor framework. 良さそう。 mycolorway/simditor: An Easy and Fast WYSIWYG Editor 行やカラムの追加削除ができない？ 以前調べていた時もMilkdownは候補に挙がっていて、Reactとか面倒だと思って不採用にして","tags":["JavaScript","editor"],"title":"マークダウンエディター"},{"categories":null,"objectID":"c5328e10e504de3a3b520b36d582cecb","permalink":"https://umemak.github.io/blog/posts/2022/11/11_sqlboiler/","publish_date":"2022-11-11T00:00:00Z","summary":"SQLBoilerを使うロジックをDATA-DOG/go-sqlmock: Sql mock driver for golang to test database interactionsでテストしようとしてハマった。 使わない便利機能は複雑さが増すだけで良いことないな。。 使いこなせば、それなしとか考えられないんだろうけど、つらい。","tags":["go"],"title":"SQLBoiler"},{"categories":null,"objectID":"e90e19b844436da5dcedc50120f61ad8","permalink":"https://umemak.github.io/blog/posts/2022/11/10_raspi_router/","publish_date":"2022-11-10T00:00:00Z","summary":"SSIDが見つからない件。 linux - Raspberry Pi 4 hostapd hotspot not visible - Super Userの回答を参考に、 sudo systemctl stop dhcpcd.service sudo systemctl restart hostapd.service sudo systemctl start dhcpcd.service したらいけた。 /etc/dhcpcd.confにdenyinterfaces wlan0を追記するのは効き目なかった。 スピードテストの結果 経由 ダウンロード アップロード レイテンシ 無線LANルーター 88.2Mbps 78.4Mbps 79ms ラズパ","tags":["raspberry-pi"],"title":"ラズパイをルーターにする2"},{"categories":null,"objectID":"0bc14c2afed84ab82bf2cde9fbb5d623","permalink":"https://umemak.github.io/blog/posts/2022/11/09_raspi_router/","publish_date":"2022-11-09T00:00:00Z","summary":"PCは昨日買ってきたLANケーブルでインターネット接続は解決した。 Pixel4も同じ現象だった。 LANケーブルつないだらいけるのか、LANポート付きUSB-HUBを試してみたけれど、ダメだった。 なので、ラズパイを無線LANルーターにしてみることにした。 やり方はググったらいくつか出てきた。 ラズパイを無","tags":["raspberry-pi"],"title":"ラズパイをルーターにする"},{"categories":null,"objectID":"a5591887e929fc252e920340b9f9c466","permalink":"https://umemak.github.io/blog/posts/2022/11/08_dns/","publish_date":"2022-11-08T00:00:00Z","summary":"以前書いた、DNS解決できない現象が久しぶりに頻発して、仕方がないのでホムセンでLANケーブル買ってきてRT-S300SEに直接（無線LANルーター経由せずに）接続することにした。 RT-S300SEと無線LANルーターの間に問題があるっぽいので、これで問題起きようがないはず。","tags":[],"title":"DNS不調3"},{"categories":null,"objectID":"92c689c9ec37c47661f309b74425fde5","permalink":"https://umemak.github.io/blog/posts/2022/11/07_sqlboiler/","publish_date":"2022-11-07T00:00:00Z","summary":"volatiletech/sqlboiler: Generate a Go ORM tailored to your database schema.を少し触ってみた。 普段はkyleconroy/sqlc: Generate type-safe code from SQLをよく使っているのだけれど、あらかじめSQLを書かなくて良いのは楽。 だけど結局DB操作するときには対象のレコードを指定するのに組み立てないといけないので、一長一短。 手段を一つしかもっていないと、それ","tags":["go"],"title":"SQLBoiler"},{"categories":null,"objectID":"8e5fbb91525e82cfc1b017c15873f89d","permalink":"https://umemak.github.io/blog/posts/2022/11/06_qwik/","publish_date":"2022-11-06T00:00:00Z","summary":"何かのPodcastでqwikについて言及されていて、ちょっと調べてみた。 知りたいことはqwik の発明、及びマイクロフロントエンドへの活用について - mizdra\u0026rsquo;s blogに全部書かれていた。 イベント処理を後からロードするから、初期表示が速くなる、と。 フロントエンドの初期表示が問題にあるほど巨大なもの作ってないし","tags":["qwik"],"title":"qwik"},{"categories":null,"objectID":"b3aa5f79e485f172df30d2e442e723a2","permalink":"https://umemak.github.io/blog/posts/2022/11/05_swr_update/","publish_date":"2022-11-05T00:00:00Z","summary":"SWRで更新系もできると思ったけれど、mutateで更新するのは、ローカルのキャッシュのようだ。 つまりPOSTやDELETEは別途実行して、その結果をローカルキャッシュに反映するのがmutate。 更新系API呼びつつキャッシュも最新化するというものではなさそう。残念。","tags":["swr"],"title":"SWRの更新系"},{"categories":null,"objectID":"2b1a3f8e61767e6b991ed471e50d6ce8","permalink":"https://umemak.github.io/blog/posts/2022/11/04_swr/","publish_date":"2022-11-04T00:00:00Z","summary":"前から気になっていたけど使う機会がなかったデータ取得のための React Hooks ライブラリ – SWRを使ってみた。 SWRを使おうぜという話2022を参考にやったら参照は簡単に実装できた。 GitpodでフロントとAPIが別ポートだとCORS問題とかそもそもポートを公開しないと到達できないとかあったけど、APIサーバーの","tags":["swr","next.js"],"title":"SWR使ってみた"},{"categories":null,"objectID":"46a9606b813ad3079b3c4a5bffb3cfd8","permalink":"https://umemak.github.io/blog/posts/2022/11/03_dependabot/","publish_date":"2022-11-03T00:00:00Z","summary":"試しにexpoとかnextとか使ってみるのに作ったリポジトリでパッケージのセキュリティアラートが割とよく来るけど、放置気味だった。 きれいにしたいと思い立って、やってみた。 まず、npm updateだとあまり解消しない。 コンフリクトとか言われて、個別パッケージ指定してもやっぱりダメな感じ。正直よくわから","tags":["GitHub","npm"],"title":"GitHubのセキュリティアラートを片付ける"},{"categories":null,"objectID":"47fd279e9b75a31e5a53979eede7c045","permalink":"https://umemak.github.io/blog/posts/2022/11/02_ko/","publish_date":"2022-11-02T00:00:00Z","summary":"ko-build/ko: Build and deploy Go applications on Kubernetes Goのアプリケーションを、Dockerなしでコンテナ化できるツール。 でも作ったコンテナをローカルで実行するにはDockerが必要？ コンテナ実行環境とコンテナビルド環境を分けたいとき（どんな時？）に便利そう。 Go製アプリケーションのコンテナ化にはkoを推したい - YAMAGUCHI::w","tags":["ko"],"title":"ko"},{"categories":null,"objectID":"290c866973e77e1878262dd198d34221","permalink":"https://umemak.github.io/blog/posts/2022/11/01_sam_ip/","publish_date":"2022-11-01T00:00:00Z","summary":"AWS IAM アイデンティティセンター (AWS SSO の後継)で新規ユーザーをワンタイムパスワード連携で作って、ログインしようとしたらできなかった。 設定したメールアドレスにメール認証を送って認証処理をしたら、ログインできるようになった。 そのあとも認証コードが設定メールアドレスに送られてきたりするので、メール使わずにユーザ","tags":["aws"],"title":"AWS SSOの認証"},{"categories":null,"objectID":"94e87c5c7c682da28a91fde0e88505d7","permalink":"https://umemak.github.io/blog/posts/2022/10/31_sam_ip/","publish_date":"2022-10-31T00:00:00Z","summary":"SAMを使ってデプロイしたLambdaの、リクエスト元のIPアドレスを制限したいとき。 Lambdaに制限を入れるのではなく、API Gatewayの設定でいける。 api gateway + samでapiの環境を作る(ip制限) - Qiita ここにたどり着くまでに、Lambdaをセキュリティグループに入れてみたりしたけど効かなかった","tags":["aws","sam"],"title":"SAMでIP制限"},{"categories":null,"objectID":"7510d4bc6d723987a48ebaa8b83a6ac8","permalink":"https://umemak.github.io/blog/posts/2022/10/30_ffmpeg_sub/","publish_date":"2022-10-30T00:00:00Z","summary":"movie.mp4に日本語字幕jpn.vttと英語字幕eng.vttを埋め込んだout.mp4を作成するコマンド。 ffmpeg -i \u0026#39;movie.mp4\u0026#39; -i \u0026#39;jpn.vtt\u0026#39; -i \u0026#39;eng.vtt\u0026#39; \\ -map 0:v -map 0:a -map 1 -map 2 \\ -c:v copy -c:a copy -c:s mov_text \\ -metadata:s:s:0 language=jpn \\ -metadata:s:s:1 language=eng \\ out.mp4","tags":["ffmpeg"],"title":"ffmpegで複数言語の字幕を埋め込む"},{"categories":null,"objectID":"361a577afaae705a02189f17803ea0f7","permalink":"https://umemak.github.io/blog/posts/2022/10/29_sam/","publish_date":"2022-10-29T00:00:00Z","summary":"SAM使ったらいい感じにLambdaできそうなので、やってみる。 Installing the AWS SAM CLI - AWS Serverless Application Model からインストーラーをダウンロードして、インストール。 VS Codeのターミナルからsamが実行できない（コマンドプロンプトからだとできる）。 いきなり躓いてやる気が。。 とりあえず、Windows版をアンインストールして、W","tags":["aws","sam"],"title":"SAM入門"},{"categories":null,"objectID":"b7fa5d4ff9d7c34dd826c9cc8618db03","permalink":"https://umemak.github.io/blog/posts/2022/10/28_lambda_deploy/","publish_date":"2022-10-28T00:00:00Z","summary":"AWSにLambdaをデプロイする方法、いくつかあると思うのだけれど、最近の主流は何だろう。 デプロイにも2段階あると思って、0→1のLambda自体作成するときと、それ以降の更新と。 初回はCloudFormationとかTerraformとか？ SAM使ったら最初もそれ以降もまとめていける？CDKは？","tags":["aws"],"title":"Lambdaのデプロイ"},{"categories":null,"objectID":"967bd549a72a1dcf1bf5622f2a6ce386","permalink":"https://umemak.github.io/blog/posts/2022/10/27_localstack/","publish_date":"2022-10-27T00:00:00Z","summary":"aws-lambda-go-api-proxy でAPI作るとして、ローカルでのテスト環境どうするか問題。 localstack/localstack: 💻 A fully functional local AWS cloud stack. Develop and test your cloud \u0026amp; Serverless apps offline!を使うのが鉄板だと思うんだけど。 API Gateway V2はPro版じゃないと使えない。 AWS環境にデプロイして動かすのが簡単なのかなぁ。","tags":["aws"],"title":"GoとLambda"},{"categories":null,"objectID":"d00dd0cff7b786f5c4aa11d6b5416f8b","permalink":"https://umemak.github.io/blog/posts/2022/10/26_lambda_go/","publish_date":"2022-10-26T00:00:00Z","summary":"昨日、API GW+Lambdaの可能性について調べたとき、aws-lambda-go-api-proxy というものを見つけた。 awslabs/aws-lambda-go-api-proxy: lambda-go-api-proxy makes it easy to port APIs written with Go frameworks such as Gin (https://gin-gonic.github.io/gin/ ) to AWS Lambda and Amazon API Gateway. 良さそうだけど、PRが結構たまっているなーと思い、よく見てみると Deprecation in favor of Lambda Web Adapter · Issue #143 · awslabs/aws-lambda-go-api-proxy とのことで awslabs/aws-lambda-web-adapter: Run web applications on AWS Lambda の使用を勧めら","tags":["aws"],"title":"GoとLambda"},{"categories":null,"objectID":"5ed55a145d9113b520fdd81278c46462","permalink":"https://umemak.github.io/blog/posts/2022/10/25_aws_container/","publish_date":"2022-10-25T00:00:00Z","summary":"APIコンテナ動かすのにどのインスタンスタイプが良いのか。 ECS+Fargateも良さそうだけど、動かしっぱなしの用途だとEC2とそんなに料金も変わらないかな。 App Runnerがゼロスケールできれば一番手間がなさそうだけど、最低1つは動いてるっぽい。 API GW+Lambdaだと、使わないときは料金抑えられ","tags":["aws"],"title":"コンテナ動かす場所"},{"categories":null,"objectID":"07f33abd171334cc8a0784297d3be884","permalink":"https://umemak.github.io/blog/posts/2022/10/24_github_profile_readme/","publish_date":"2022-10-24T00:00:00Z","summary":"Managing your profile README - GitHub Docs 昔リポジトリ作って、反映されないじゃんって放置してた。 久しぶりに見てみたらShare to profileボタンがあって、押したら有効化された。 見落としていたのかなぁ。。 Metrics anuraghazra/github-readme-stats: Dynamically generated stats for your github readmes の2つを導入してみた。 Most Used Languagesを見て、Goが意外と低かった。もっと使おう。","tags":["github"],"title":"profileリポジトリ"},{"categories":null,"objectID":"d57055f10c83f5b47e53fa69d27a5ac8","permalink":"https://umemak.github.io/blog/posts/2022/10/24_vosk_vtt/","publish_date":"2022-10-24T00:00:00Z","summary":"Voskのサンプルで、WebVTT生成があったのでやってみた。 vosk-api/test_webvtt.py at master · alphacep/vosk-api サンプルコードのmodel部分だけ変更でいけた。 あとpip install webvtt-pyの実行も必要だった。 便利なライブラリがあってPythonが流行るのがわかった気がする。","tags":["vosk"],"title":"VoskでWebVTT作成"},{"categories":null,"objectID":"86174af94e4843a3c51db5915a365062","permalink":"https://umemak.github.io/blog/posts/2022/10/23_dotfiles/","publish_date":"2022-10-23T00:00:00Z","summary":"Preferences — Gitpodを見ていて、Dotfilesを指定できる項目があるのに気づいた。 そういえば昔作ったような気がするな、と思い見てみたら、.gitconfigしかなかった。 umemak/dotfiles","tags":[],"title":"dotfilesリポジトリ"},{"categories":null,"objectID":"8ea1cea1902aea03e405d45ccf18e428","permalink":"https://umemak.github.io/blog/posts/2022/10/22_python_async/","publish_date":"2022-10-22T00:00:00Z","summary":"今の作りだと、翻訳や英語再生の間、待たされる気がするので、翻訳APIから先は非同期で実行できないか調べてみた。 【Python】同期処理をラッピングして非同期処理にする方法 – 株式会社シーポイントラボ ｜ 浜松のシステム・RTK-GNSS開発 python - asyncioを使った簡単なプログラムでエラーがでる。 - スタッ","tags":["python"],"title":"Pythonで非同期処理"},{"categories":null,"objectID":"ba518de0e692edab118163c50e0c5b53","permalink":"https://umemak.github.io/blog/posts/2022/10/21_pyttsx3/","publish_date":"2022-10-21T00:00:00Z","summary":"日本語音声→日本語文字列→英語文字列 ができたので、英語文字列→英語音声 も追加してみたくなって、やってみた。 Pythonでオフラインでできるものをググって見つかったのが、nateshmbhat/pyttsx3: Offline Text To Speech synthesis for python。 これもREADMEに書いてあるように書くだけで実装できた。 あとは翻","tags":["python"],"title":"pyttsx3"},{"categories":null,"objectID":"09d0b192ef9431b59a26a23d3a702ad6","permalink":"https://umemak.github.io/blog/posts/2022/10/20_vosk_python/","publish_date":"2022-10-20T00:00:00Z","summary":"node.jsで使うのあきらめて、Pythonで試してみた。 vosk-api/test_microphone.py at master · alphacep/vosk-api あっさり使えた。 ついでに、3 分で作る無料の翻訳 API with Google Apps Script - Qiitaを参考に、日本語→英語翻訳APIを立てて連携してみた。 Pythonの文字列操作するのにちょっと手間取ったけど、意外とすんなりリアルタイム音声認識＆翻訳が出来上がっ","tags":["Vosk","python"],"title":"Vosk使ってみる2"},{"categories":null,"objectID":"3fb3bf6438df000c7ba7c85674bfde16","permalink":"https://umemak.github.io/blog/posts/2022/10/19_vosk/","publish_date":"2022-10-19T00:00:00Z","summary":"日本語音声のマイク入力をオフラインでリアルタイム音声認識：「VOSK」を JavaScript（Node.js）で扱う - Qiita こちらを参考に。 早速npm install voskしたところ、GitbashだとVisualStudioが見つからない的なエラー。WSL2環境で動かしたら通った。 そしてサンプルをコピーして実行す","tags":["Vosk"],"title":"Vosk使ってみる"},{"categories":null,"objectID":"330977a3164637d3045e0e783cff263b","permalink":"https://umemak.github.io/blog/posts/2022/10/18_gitpod_mysql/","publish_date":"2022-10-18T00:00:00Z","summary":"Gitpod上で開発をするにあたって、DBが欲しかったのでMySQLが使えないか調べてみた。 Workspace Imageにあるように、.gitpod.ymlファイルを作成してimageを指定すれば良いようだ。 image: gitpod/workspace-mysql ファイル作成してリポジトリにプッシュしてワークスペースを停止→スタートしてみる。 $ mysql -v bash: mysql: command not found 再起動で","tags":["Gitpod"],"title":"GitpodでMySQLを使う"},{"categories":null,"objectID":"14769c7e442fb9509144ff127aa8cbf3","permalink":"https://umemak.github.io/blog/posts/2022/10/16_gitlab_gitpod/","publish_date":"2022-10-16T00:00:00Z","summary":"Gitpodの機能見ていたら、GitHub以外にもGitLabとBitbucketとも連携できるのに気づいて、やってみた。 最初にGitLabでアカウント作ろうとしたら、途中から先に進めなくなって断念。 Bitbucketは、以前AWSの何かを試したときに作ったアカウントが生きていたので、そのまま使った","tags":["Bitbucket","Gitpod"],"title":"BitbucketとGitpod"},{"categories":null,"objectID":"72626906df7fc63eb345f6ff151addaf","permalink":"https://umemak.github.io/blog/posts/2022/10/15_vosk/","publish_date":"2022-10-15T00:00:00Z","summary":"ffmpeg.wasmをgithub pagesで動かすよを読んでいて、Offline Transcribeを見に行ったらccoreilly/vosk-browser: A speech recognition library running in the browser thanks to a WebAssembly build of Vosk経由してalphacep/vosk-api: Offline speech recognition API for Android, iOS, Raspberry Pi and servers with Python, Java, C# and Nodeというものの存在","tags":["Vosk"],"title":"Vosk"},{"categories":null,"objectID":"db2ec8cae1178d2fe01e940c8bc8a3e4","permalink":"https://umemak.github.io/blog/posts/2022/10/14_wsl_make/","publish_date":"2022-10-14T00:00:00Z","summary":".PHONY: mkdir mkdir: mkdir -p ./work/{a,b,c} $ make mkdir mkdir -p ./work/{a,b,c} $ ls work {a,b,c} なんでや。 $ rm -r work $ mkdir -p ./work/{a,b,c} $ ls work a b c こうなってほしい。 →make内では、デフォルトのシェルが/bin/shになっているので、MakefileでSHELL=/bin/bashを書く必要がある。 とあるエンジニアの備忘log: Make のポータビリティについて考える Makefil","tags":["WSL"],"title":"WSLのmakeでmkdir"},{"categories":null,"objectID":"13654483d744c7ef4d4cb743019ebd05","permalink":"https://umemak.github.io/blog/posts/2022/10/13_prisma_openapi/","publish_date":"2022-10-13T00:00:00Z","summary":"Prismaのドキュメント眺めていて、Build a REST API with NestJS, Prisma, PostgreSQL and Swaggerを見つけた。 PrismaというかNestJSの機能かもしれないけれど、OpenAPIドキュメントも表示できるっぽい。 これでいい感が出てきた。","tags":["Prisma","OpenAPI"],"title":"PrismaとOpenAPI"},{"categories":null,"objectID":"adc8299048a6090c3c83cdf1a7fb5638","permalink":"https://umemak.github.io/blog/posts/2022/10/12_prisma/","publish_date":"2022-10-12T00:00:00Z","summary":"先日のスキーマ指向開発の一つの解になるかもしれない。 Prisma | Next-generation ORM for Node.js \u0026amp; TypeScript 存在は知っていたのだけれど、言語がTypeScriptということでちゃんとチェックしていなかった。 フロントをNext.jsとかTypeScript系で作るなら、APIサーバー側もTypeScriptで書けたほうが効率が良いかもしれな","tags":["Prisma"],"title":"Prisma"},{"categories":null,"objectID":"9e95239e788c79c6005d153598807021","permalink":"https://umemak.github.io/blog/posts/2022/10/11_openapi_template/","publish_date":"2022-10-11T00:00:00Z","summary":"以前、OpenAPI generatorの出力をカスタマイズするにはJavaを読み解かねば・・みたいなことを書いていた。 OpenAPIとsqlcの連携 - umemak OpenAPI generatorのソース - umemak 公式のUsing Templatesによると、author templateを指定すれば組み込みテンプレートが出力される","tags":["OpenAPI"],"title":"OpenAPI generatorのテンプレート"},{"categories":null,"objectID":"466db0acceac98b03c97f6c5d3b7b679","permalink":"https://umemak.github.io/blog/posts/2022/10/10_schema/","publish_date":"2022-10-10T00:00:00Z","summary":"最近、 DBのCREATE TABLE OpenAPIのYAML gRPCのproto GraphQLのschema この辺の定義って共通している部分が多いというか、どれか一つから相互変換ができれば管理も楽なんじゃないかなと思う。 項目の追加削除するたびに修正漏れがないか気にするのは生産的ではないなー、と。 何となく、DB","tags":[],"title":"スキーマ指向開発"},{"categories":null,"objectID":"de9d202e3f295f6060e298e830f9c652","permalink":"https://umemak.github.io/blog/posts/2022/10/09_nocode_book/","publish_date":"2022-10-09T00:00:00Z","summary":"ノーコードシフト プログラミングを使わない開発へ | 安藤昭太, 宮崎 翼, NoCode Ninja | 工学 | Kindleストア | Amazonを読んだ。 紹介されていたツールで気になったもの Adalo - Build Your Own No Code App The best way to build web apps without code | Bubble","tags":["nocode"],"title":"ノーコード"},{"categories":null,"objectID":"5aed48078d6721fc4b0393f616d2beee","permalink":"https://umemak.github.io/blog/posts/2022/10/08_cors/","publish_date":"2022-10-08T00:00:00Z","summary":"openapi-generator-cliのtypescript-axiosで生成したクライアントでConfigureにaccessTokenをセットして取得APIを叩いたらうまく通信できなかった。 API側のログにはOPTIONSのリクエストが来ていて、200で返している。 chiのcors.Opti","tags":["chi"],"title":"CORS対応"},{"categories":null,"objectID":"6e944cf934d5f87a2278347b8ed8660b","permalink":"https://umemak.github.io/blog/posts/2022/10/07_nextjs/","publish_date":"2022-10-07T00:00:00Z","summary":"ログイン状態によってヘッダーの表示を変えたくて、何も考えずにクッキーの有無でif書いてたらエラーになった。 【Next.js】Warningが発生する誤ったCookieの使用例と改善方法 | Enjoy IT Life このページを参考に解決。 Nextの言いたいこともわかるけど、いい感じにやってくれたらいいのに、とも思う。","tags":["nextjs"],"title":"Next.jsのエラー対応"},{"categories":null,"objectID":"2bc98c9bc1aa9249882ee0e4b9258605","permalink":"https://umemak.github.io/blog/posts/2022/10/06_wsl2/","publish_date":"2022-10-06T00:00:00Z","summary":"スリープ後にWSLが応答しなくなる現象はまだ起きていないけれど、すぐ本体が熱くなってファンが回るのは変わらず。 頻繁にSSDの警告も出るし大丈夫なのかなこれ。。","tags":["wsl"],"title":"WSL2その後"},{"categories":null,"objectID":"be5f404a1db5793c17f33e146c6b43aa","permalink":"https://umemak.github.io/blog/posts/2022/10/05_wsl2_install/","publish_date":"2022-10-05T00:00:00Z","summary":"Windows11 22H2が降ってきたので、インストールした。 特に問題なさそうなので、WSL2を再インストールしようとしたところ WSL 2 を実行するには、カーネル コンポーネントの更新が必要です。詳細については https://aka.ms/wsl2kernel を参照してください とのメッセージが。 リンク先で「x64 マシン用 WSL2 Linux カーネル更新プログラム パッケージ」をダウンロー","tags":["wsl"],"title":"WSL2の再インストール"},{"categories":null,"objectID":"73d1509a7e0fbc33581e351c997758d3","permalink":"https://umemak.github.io/blog/posts/2022/10/04_dockerfile/","publish_date":"2022-10-04T00:00:00Z","summary":"golangのベースイメージにnodejsを入れたくて、 Step by step instructions to install node and npm using Linux binaries - DEV Community 👩‍💻👨‍💻 この手順見ながらやってみていたのだけれど、 RUN cp -r ./{lib,share,include,bin} /usr でファイル未存在のエラーになってしまった。 RUN cp -r ./lib /usr RUN cp -r ./share /usr RUN cp -r ./include /usr RUN cp -r ./bin /usr とすると通るので、ファイルが存在しないわけではなく、ブレース展開がで","tags":["docker"],"title":"Dockerfileでブレース展開"},{"categories":null,"objectID":"16c080c2ac0d0e3649928b0a7f3260e6","permalink":"https://umemak.github.io/blog/posts/2022/10/03_wsl_uninstall/","publish_date":"2022-10-03T00:00:00Z","summary":"いいかげん改善しないので、WSLをアンインストールしてみた。 WSLがないと使えないDocker Desktopもついでに消した。 これでしばらく運用してみて、スリープ後の負荷上昇（地味に内部の温度上昇もやばい気がしている）が落ち着けば、またインストールしなおしてみようかと。 Dockerがないとちょっとし","tags":["wsl"],"title":"WSL2アンインストール"},{"categories":null,"objectID":"e78b4586eaf194a849be3c904c229f88","permalink":"https://umemak.github.io/blog/posts/2022/10/02_api_gateway/","publish_date":"2022-10-02T00:00:00Z","summary":"API GatewayにOpenAPIの定義を適用できる。 OpenAPI を使用した REST API の設定 - Amazon API Gateway API Gatewayの後ろにLambdaを使えば、EC2とかでGoのコンテナ動かすより安上がりになるのではないか？という思い付き。 この場合、APIサーバーはどういう構成で作るのかイメージがわかない。 現状は、openapi-","tags":["aws","OpenAPI"],"title":"OpenAPIとAPI Gateway"},{"categories":null,"objectID":"a434bf22923f6012a6108c00403f186b","permalink":"https://umemak.github.io/blog/posts/2022/10/01_docker_gitbash/","publish_date":"2022-10-01T00:00:00Z","summary":"WSL2が不安定なので、開発環境をGitBash使うようにして、おおむね問題なかったのだが、Dockerでローカルをマウントして使うときに問題が。 OpenAPIのコード生成するときに docker run --rm \\ -v ${PWD}:/local openapitools/openapi-generator-cli generate \\ -i /local/openapi.yml \\ -g go-server \\ --additional-properties=router=chi,featureCORS=true \\ -o /local/out だと [error] The spec file is not found: C:/Program Files/Git/local/openapi.yml [error] Check the path of the OpenAPI spec and try again. こんなエラーになる。 Mount volume doesn\u0026rsquo;t work on Windows 10 using","tags":["gitbash","docker"],"title":"GitBashでDockerでMount"},{"categories":null,"objectID":"3b9ccec0966dceda1baf8f5d417d48fd","permalink":"https://umemak.github.io/blog/posts/2022/09/30_wsl/","publish_date":"2022-09-30T00:00:00Z","summary":"WSL2の不調の影響か、Docker Desktopも応答がなくなることが多い。 せっかくのノートPCなのに、毎回シャットダウンする運用はしたくないなぁ。 Windows11の新しいの入れたら改善したりするのかしら。 【特集】ついに出た！Windows 11「22H2」の変更点まとめ。どこが変わって何が新しく","tags":["wsl","docker"],"title":"Docker不調"},{"categories":null,"objectID":"eb8934d74a94cca93eb2f571241c6688","permalink":"https://umemak.github.io/blog/posts/2022/09/29_lamp/","publish_date":"2022-09-29T00:00:00Z","summary":"少し前、Webシステムの開発といえばLAMP（Linux、Apache、MySQL、PHP/Perl）だったものだけれど、最近だとどうなんだろう、と思った。 Linuxは変わらないとしても、実行環境という意味ではContainerとかCloudが今風かもしれない。 ApacheはもうNginxにだいぶシ","tags":[],"title":"LAMPを今風に"},{"categories":null,"objectID":"f85c83d2f9f3581a9497e46f3166a67e","permalink":"https://umemak.github.io/blog/posts/2022/09/28_mui_datepicker/","publish_date":"2022-09-28T00:00:00Z","summary":"DesktopDatePicker API - MUI Xを使いたいが、その他のフォーム項目はホーム | React Hook Form - Simple React forms validationを使っていたので、合わせて使いたい。 React + React Hook Form v7 なフォームに、MUI v5 の DateTime Picker を組み込んでみた - メモ的な思考的なを見ながらやってみて、いい感じにできたと思う。 順を追って実装されていくのがわかりやすかった。 あとからM","tags":["mui"],"title":"MUI DesktopDatePicker + react-hook-form"},{"categories":null,"objectID":"0196b06371f009e1fa8be7db009cb633","permalink":"https://umemak.github.io/blog/posts/2022/09/27_mui/","publish_date":"2022-09-27T00:00:00Z","summary":"MUI: The React component library you always wantedを使い始めてみた。 TanStack Table | React Table, Solid Table, Svelte Table, Vue TableをReact Table component - Material UIに置き換えてみたり。 importする部品が多いけど、使い勝手は悪くない感触。importの多さがとっつきにくさ増してると思う。","tags":["mui"],"title":"MUI入門"},{"categories":null,"objectID":"98e00c8ec381314300da4226d5311147","permalink":"https://umemak.github.io/blog/posts/2022/09/26_react_admin/","publish_date":"2022-09-26T00:00:00Z","summary":"React Admin使ってみて、そのまま使うには便利なんだけど、ちょっと逸れたことしようとすると詰む印象。 APIをReact Adminに寄せていかないといけないというか。 それはそれでAPIを正しい形に矯正することができそうだけれど、楽をしようとしてるところにこれは悩ましい。","tags":["react"],"title":"React Adminその2"},{"categories":null,"objectID":"cc4a5254f4b8d2ffe6e257c4c1de38d2","permalink":"https://umemak.github.io/blog/posts/2022/09/25_react_admin/","publish_date":"2022-09-25T00:00:00Z","summary":"React Admin - Open-Source Framework for B2B applications react-adminを使って5分で作るハイカラDashboardを参考に、やってみた。 本当はNext.jsでやりたかったので、How to Run React-Admin On Next.Jsも試してみたのだけど、うまくいかなかった。 →公式のReact-admin - My First Project Tutorialを見ながらやったらできた。 Ope","tags":["react"],"title":"React Admin"},{"categories":null,"objectID":"2e98fd917974c2acc4d1150a8e78f825","permalink":"https://umemak.github.io/blog/posts/2022/09/24_wsl_reboot/","publish_date":"2022-09-24T00:00:00Z","summary":"最近、Inspiron13がスリープから復帰した後、高確率でWSL2が応答しなくなっている。 PC再起動すれば直るのだけど、面倒。 WSLだけ再起動でも直ることがわかった。 wsl --shutdown ヘルプでは直ちに、すべての実行中の配布および WSL 2 軽快なユーティリティの仮想マシンを終了します。と書かれているが（軽快なとは・・・","tags":["wsl"],"title":"WSL2の再起動"},{"categories":null,"objectID":"f49588a90502bc2a1caf0bfe8756e7a6","permalink":"https://umemak.github.io/blog/posts/2022/09/23_react_table/","publish_date":"2022-09-23T00:00:00Z","summary":"Tanstack Table続き。 とりあえず、公式のサンプルのように実装したら、動いた。 APIから取得したデータを使おうとすると、エラーになる。 useEffectを外してみたら、APIがすごい勢いでたたかれ続けた。 useEffectを戻したら、エラー出ずに表示された。 ？？？ APIサーバーを停止してみると、またエラー","tags":["react"],"title":"Reactでテーブルを使う3"},{"categories":null,"objectID":"fe97cac9ee8202ac4f81b368949240f2","permalink":"https://umemak.github.io/blog/posts/2022/09/22_react_table/","publish_date":"2022-09-22T00:00:00Z","summary":"昨日、react-tableがGitHubで別の名前になってて気になっていた件。 最近react-tableから名前が変わったらしい。 TanStack/tableを使ってみた感想 ということでreact-table改めTanStack/Tableを導入してみた。 エラーが出て思ったように動かない。 TypeError: Cannot read properties","tags":["react"],"title":"Reactでテーブルを使う2"},{"categories":null,"objectID":"99970fd255fa12e76c5146a3f431b47e","permalink":"https://umemak.github.io/blog/posts/2022/09/21_react_table/","publish_date":"2022-09-21T00:00:00Z","summary":"フォームの次は、テーブルを使って一覧表示したい。 react-table - npmが良いのかな？ GitHubだと名前が違ってたりするけど。。 TanStack/table: 🤖 Headless UI for building powerful tables \u0026amp; datagrids for TS/JS - React-Table, Vue-Table, Solid-Table, Svelte-Table 要調査。","tags":["react"],"title":"Reactでテーブルを使う"},{"categories":null,"objectID":"d522d0c2b47902cdb87b55d91f1733b0","permalink":"https://umemak.github.io/blog/posts/2022/09/20_react_form/","publish_date":"2022-09-20T00:00:00Z","summary":"Next.jsで管理画面的なものを作るのに、フォームをどうするか調べた。 先日読んだ本では、react-hook-formを使っていたので、そのようにしてみる。 思った以上に簡単に実装できた。 積極的に使ていきたい。","tags":["react"],"title":"Reactでフォームを使う"},{"categories":null,"objectID":"6d0e86adc3fa596417082c17b487e86d","permalink":"https://umemak.github.io/blog/posts/2022/09/19_openapi_typescript/","publish_date":"2022-09-19T00:00:00Z","summary":"結局、いくつか動かして試してみた。additional-propertiesは無指定で。 Documentation for the typescript-fetch Generator ReferenceError: _ is not defined Documentation for the typescript-node Generator Module not found: Can't resolve 'request' requestパッケージはDeprecated!らしい。 Documentation for the typescript-axios Generator とりあえず動いた。 axiosパッケージの追加インストールが必要。 ということで、typescript-ax","tags":["TypeScript","OpenAPI"],"title":"OpenAPIのTypeScriptクライアント"},{"categories":null,"objectID":"f3e592544c936a5004d17c71d0f8af21","permalink":"https://umemak.github.io/blog/posts/2022/09/18_openapi_test/","publish_date":"2022-09-18T00:00:00Z","summary":"E2Eテスト書くなら、OpenAPIのクライアントコードジェネレータ使って出力したもの使えばよいのでは？ と思いついたので、どのクライアントにしようかとGenerators Listを眺める。 せっかくだからTypeScriptが良いなと思うが、11種類もあってどれが適切なのか判断付かない。 実際に生成して","tags":["TypeScript","OpenAPI"],"title":"OpenAPIで生成したサーバーのテスト2"},{"categories":null,"objectID":"f496a176556487ce79e4857316b2fe0d","permalink":"https://umemak.github.io/blog/posts/2022/09/17_figma_book/","publish_date":"2022-09-17T00:00:00Z","summary":"先日、アドビはFigmaを買収する意向を表明しました。共同クリエイティビティは新時代へというニュースを見て、セールで買って積んであったAmazon.co.jp: Figma for UIデザイン アプリ開発のためのデザイン、プロトタイプ、ハンドオフ eBook : 沢田 俊介: 本を急いで読んだ。 一通りのFigmaでできることを知ること","tags":["Figma"],"title":"Figma for UIデザイン"},{"categories":null,"objectID":"ca577bf8b6ee11303305a448185cd774","permalink":"https://umemak.github.io/blog/posts/2022/09/16_openapi_test/","publish_date":"2022-09-16T00:00:00Z","summary":"よくわからない。 ググるとhttptest使う例が良く出てくるけど、型が合わなくて組み立てられない。 仕方ないので、APIサーバー起動してhttp.NewRequestWithContextで叩いて結果を見るという、E2Eっぽいテストに落ち着きそう。","tags":["go","OpenAPI"],"title":"OpenAPIで生成したサーバーのテスト"},{"categories":null,"objectID":"fc3b6e68a917aea2542dcc25e7f27a08","permalink":"https://umemak.github.io/blog/posts/2022/09/15_chi_proxy/","publish_date":"2022-09-15T00:00:00Z","summary":"grpc-gatewayでgRPCとREST両対応のサーバを作る | フューチャー技術ブログのサンプルでmux.Handle(\u0026quot;/docs/\u0026quot;, docsProxy)となっているところを、go-chi/chi: lightweight, idiomatic and composable router for building Go HTTP servicesを使っているのでrouter.Handle","tags":["go","chi"],"title":"chiでproxy"},{"categories":null,"objectID":"9297327738b3b0bc427db4bf9ccbd469","permalink":"https://umemak.github.io/blog/posts/2022/09/14_proto/","publish_date":"2022-09-14T00:00:00Z","summary":"昨日のエラーは、grpc-ecosystem/grpc-gateway: gRPC to JSON proxy generator following the gRPC HTTP specにあるようにbuf.yamlに deps: - buf.build/googleapis/googleapis を追記してbuf mod updateを実行したら直ったような気がする。 気がする、というのは他にもprotoファイルをダウンロードしてきたりとかいろいろやっていて何が決定打だ","tags":["go","gRPC"],"title":"proto"},{"categories":null,"objectID":"46f322d7336747b4da80b9dbfa18fac8","permalink":"https://umemak.github.io/blog/posts/2022/09/13_proto/","publish_date":"2022-09-13T00:00:00Z","summary":"proto定義何もわからない。。 REST用のパスを定義するために option (google.api.http) = { get : \u0026#34;/example-messages/{id}\u0026#34; }; といった定義が必要で、これを使うには import \u0026#34;google/api/annotations.proto\u0026#34;; が必要らしいという理解なのだけど、これをビルドしようとすると event.proto:6:1: Import \u0026#34;google/api/annotations.proto\u0026#34; was not found or had errors. というエラーが出てしまう。 こういうところで躓くの嫌すぎる。","tags":["go","gRPC"],"title":"proto"},{"categories":null,"objectID":"9b6a8e36188bf78b3e43e3ba8360376d","permalink":"https://umemak.github.io/blog/posts/2022/09/12_proto2openapi/","publish_date":"2022-09-12T00:00:00Z","summary":"protoをAPIスキーマのマスターにしようとした場合、既存のOpenAPIで用意していたUIとかどうしよう、ということになるけれど、OpenAPI-\u0026gt;gRPCとは違って逆の変換はたくさんツールがあることは調査済み。 全体の作りとしてはgrpc-gatewayでgRPCとREST両対応のサーバを","tags":["go","gRPC"],"title":"protoをマスターにする"},{"categories":null,"objectID":"419945f4dd9a91d5fac60ca84970cb23","permalink":"https://umemak.github.io/blog/posts/2022/09/11_openapi2proto/","publish_date":"2022-09-11T00:00:00Z","summary":"今あるOpenAPI用の定義yamlファイルからgRPC用のprotoファイルが生成できないかなと思い、検索したら良さそうなものが見つかった。 nytimes/openapi2proto: A tool for generating Protobuf v3 schemas and gRPC service definitions from OpenAPI specifications https://github.com/umemak/eventsite_go/blob/main/openapi.yml でやってみた。 $ go install github.com/NYTimes/openapi2proto/cmd/openapi2proto $ openapi2proto -spec openapi.yml -annotate syntax = \u0026#34;proto3\u0026#34;; package eventsite; import \u0026#34;google/api/annotations.proto\u0026#34;; import \u0026#34;google/protobuf/empty.proto\u0026#34;; service EventsiteService { // Get all events. rpc GetEvents(google.protobuf.Empty) returns (google.protobuf.Empty) { option (google.api.http) = { get: \u0026#34;/events\u0026#34; }; } // Create event. rpc PostEvents(google.protobuf.Empty) returns (google.protobuf.Empty) { option (google.api.http) = { post: \u0026#34;/events\u0026#34; }; } } s","tags":["go","gRPC"],"title":"OpenAPIからgRPCへの移行"},{"categories":null,"objectID":"9ed30ba35ed579e4be1cf89b1ff750db","permalink":"https://umemak.github.io/blog/posts/2022/09/10_connect/","publish_date":"2022-09-10T00:00:00Z","summary":"gRPCを触ってみたくなったので、gRPCがフロントエンド通信の第一の選択肢になる時代がやってきたかも？ | フューチャー技術ブログをやってみる。 frontendでnpm installするところでgitエラーになってしまう。 $ npm install --save-dev bufbuild/protoc-gen-connect-web bufbuild/protoc-gen-es npm ERR! code 128 npm ERR! An unknown git error occurred npm ERR! command git --no-replace-objects ls-remote ssh://git@github.com/bufbuild/protoc-gen-connect-web.git npm ERR! git@github.com: Permission denied (publickey). npm ERR! fatal: Could not read from remote repository. npm","tags":["go","gRPC"],"title":"gRPCを触ってみる"},{"categories":null,"objectID":"125f38e9d091680f7de6943776549783","permalink":"https://umemak.github.io/blog/posts/2022/09/09_go_config/","publish_date":"2022-09-09T00:00:00Z","summary":"コマンドラインで引数を処理する順番は以前調べたことがあるのだけど、これをいい感じに処理してくれるGoのライブラリが欲しい気がする。 まず設定ファイルを読み、環境変数が設定されていれば上書き、コマンドラインで指定されていればさらに上書き joho/godotenv: A Go port of Ruby\u0026rsquo;s dotenv library (Loads environment variables from .env.) Netflix/go-env: a golang library to manage environment variables caarlos0/env: A simple and zero-dependencies library to parse environment variables into structs. ilyakaznacheev/cleanenv:","tags":["go"],"title":"Goで設定を良い感じに処理する方法"},{"categories":null,"objectID":"449a963d0b8def411c1f1b0efae0113d","permalink":"https://umemak.github.io/blog/posts/2022/09/08_next_book/","publish_date":"2022-09-08T00:00:00Z","summary":"途中から写経するのあきらめて流し読みした。 長くて（フォント的に）読みにくいコードを見るのがつらすぎたので。。 CSSの書き方は、こっちのスタイルではなくてファイル分けるほうが自分には合っていそう。 テストの書き方など、あとで見返すと参考になりそうなことはたくさんあった。 Kindle版のフォントは何とかな","tags":["react","nextjs"],"title":"TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発、読了"},{"categories":null,"objectID":"67afe4b1d1846ff31691fc1ad2a2b5c6","permalink":"https://umemak.github.io/blog/posts/2022/09/07_next_book/","publish_date":"2022-09-07T00:00:00Z","summary":"読むの再開した。 作って学ぶ～の方とはCSSの定義の仕方が違ってstyled-componentsを使っているし、モジュールのディレクトリ構成も違う。 Storybookも導入しているし、Linterも設定している。 読んだところまでで1か所だけソースが画像になっているところがあって、全部これでいいのに・","tags":["react","nextjs"],"title":"TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発"},{"categories":null,"objectID":"966f163a712535f548e61f5975385186","permalink":"https://umemak.github.io/blog/posts/2022/09/06_gitea/","publish_date":"2022-09-06T00:00:00Z","summary":"Giteaをセルフホスティングで動かしていて、古いCentOSからUbuntuに移行してみた。 基本的にはUsage: Backup and Restore - Docsにあるようにbackupしてrestoreなんだけど、もとのバージョンが低いせいか、Wikiが空なのとIssueが表示されない問題が。。 Issueは版行指定でURL直打","tags":["gitea"],"title":"Gitea移行"},{"categories":null,"objectID":"4ead2c56de285e87ed5e0453b21376f8","permalink":"https://umemak.github.io/blog/posts/2022/09/05_next_book/","publish_date":"2022-09-05T00:00:00Z","summary":"後半のCMS連携以降は読むだけで手は動かさずに読み終えた。 データ用意するのも面倒だしね・・ とりあえず、Next.jsの基本は完全に理解した。 しかしCSSがまったく理解できていない。 また別の本読むか・・","tags":["react","nextjs"],"title":"作って学ぶ　Next.js/React　Webサイト構築"},{"categories":null,"objectID":"890a3d247dbcfdefdaff0631c42abc38","permalink":"https://umemak.github.io/blog/posts/2022/09/04_next_book/","publish_date":"2022-09-04T00:00:00Z","summary":"Amazon.co.jp: 作って学ぶ Next.js/React Webサイト構築 eBook : エビスコム: 本を半分くらいまで進んだ。 時折、初出の単語が説明なしに出てきて止まるが（後で説明があるならそうと書いておいてほしい）おおむね順調。 フロント寄りの内容で、Imageやmetaタグの説明が結構長く書かれていたりする。 この辺は雰囲気で理解していた部分なので、学","tags":["react","nextjs"],"title":"別のNext.js本写経"},{"categories":null,"objectID":"97558375c72c21bb9eab9293dadfee3b","permalink":"https://umemak.github.io/blog/posts/2022/09/03_next_book/","publish_date":"2022-09-03T00:00:00Z","summary":"Amazon.co.jp: 作って学ぶ Next.js/React Webサイト構築 eBook : エビスコム: 本を買ってみた。 TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発と違って、固定レイアウトなので読みにくさは少ない。字は小さいけど。。 あとマーカーも使えないので、この辺りはTypeScriptと～のほうが使い勝手が良い","tags":["react","nextjs"],"title":"別のNext.js本"},{"categories":null,"objectID":"7966d06d99a70acf68f693b63e232bec","permalink":"https://umemak.github.io/blog/posts/2022/09/02_next_book/","publish_date":"2022-09-02T00:00:00Z","summary":"Amazon.co.jp: TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発 eBook : 手島 拓也, 吉田 健人, 高林 佳稀: 本読んでいるのだけど、なんか読みづらい。 Kindleの文字サイズの問題かもしれないけど、コードの行が長くて途中で折り返されていることが多い。 そしてコメントもコードも同じ色なので、","tags":["react","nextjs"],"title":"Next.js本"},{"categories":null,"objectID":"09b7ced21a223b85c5514c9a9dad66ea","permalink":"https://umemak.github.io/blog/posts/2022/09/01_docker_restart/","publish_date":"2022-09-01T00:00:00Z","summary":"docker compose up -dで複数コンテナを動かしているときに、その中の特定のコンテナのイメージを更新して再起動したい。 できればその他のコンテナは再起動したくない。 そんなのdocker compose stop hogehogeしてdocker compose start hogehogeしたらいいと思ってた。 ログ的には再起動されるけれども、コンテナイメージは古いま","tags":["docker"],"title":"docker composeで特定コンテナの再起動"},{"categories":null,"objectID":"64181c1d3c31211fab62823d8847501f","permalink":"https://umemak.github.io/blog/posts/2022/08/31_movie/","publish_date":"2022-08-31T00:00:00Z","summary":"何となく見えてきた。 Shotcutで動画を読み込んで、mp3で音声を書き出す 書き出したmp3をS3にアップロードする Amazon TranscribeでVTTファイルを作成する VTTファイルをマーカーとみなしたMLTを作成する Shotcutで編集して動画をmp4で書き出す MLTのマーカーからVTTを出力する ff","tags":[],"title":"動画編集のフロー"},{"categories":null,"objectID":"4176fbd683f2dee554feb0a7a09f09fe","permalink":"https://umemak.github.io/blog/posts/2022/08/30_mlt/","publish_date":"2022-08-30T00:00:00Z","summary":"MLTをgoのstructに読み込もうとして、やっぱりよくわからない。 MLT自体の仕様はmltframework/mlt: MLT Multimedia Frameworkにある。 xsdファイルがあればdroyo/go-xml: utility and code-generation libraries for XMLとか使ってgoで使えるようにできそうなんだけど、dtdしかない。 っていうかdtdをs","tags":["go"],"title":"MLTファイルを読む"},{"categories":null,"objectID":"b186a9999793f52fcf2939f77257f6b0","permalink":"https://umemak.github.io/blog/posts/2022/08/29_mlt/","publish_date":"2022-08-29T00:00:00Z","summary":"機能追加していたら、ダメなコードの見本みたいになり始めてきた。 機能ごとに分けるとかし始める必要がありそう。 あと、XMLの出力をベタに文字列結合でやっているので、ちゃんとライブラリ使って生成するようにしたい。 Goだとxml package - encoding/xml - Go PackagesのMarshalを使えば良さそうだけど、構造体の定義面","tags":["go"],"title":"MLTファイル生成"},{"categories":null,"objectID":"fa63f8399df3a535688ed40f81e7e939","permalink":"https://umemak.github.io/blog/posts/2022/08/28_mlt_vtt/","publish_date":"2022-08-28T00:00:00Z","summary":"ShotcutのマーカーとVTT(SRT)が相互変換出来たら便利ではないかと妄想。 どちらも開始と終了のタイムスタンプとテキストが書けるので、要素的には問題なし。","tags":[],"title":"MLTファイルとVTTと"},{"categories":null,"objectID":"28d17939fb9d859e56565136713dc8aa","permalink":"https://umemak.github.io/blog/posts/2022/08/27_grarec/","publish_date":"2022-08-27T00:00:00Z","summary":"グラレコの基本 その場で「聞く・まとめる・描く」 | 本園大介 | ビジネス・経済 | Kindleストア | Amazon 読み進めている。先に読んだ本と内容が被ることもあるけれど、こっちのほうが実践的な感じ。 読む順番としては、正解だった。 どちらの本でもおすすめのiPadアプリはProcreateだった。 今インストールしてある","tags":[],"title":"グラフィックレコーディングの本2"},{"categories":null,"objectID":"e1ee820463cb25abdafa0bc53981bcd4","permalink":"https://umemak.github.io/blog/posts/2022/08/26_grarec/","publish_date":"2022-08-26T00:00:00Z","summary":"Kindleで安くなっていたので、買ってみた。 グラレコの基本 その場で「聞く・まとめる・描く」 | 本園大介 | ビジネス・経済 | Kindleストア | Amazon こっちも評価が良くて、iPadでの例が見たかったので買ってみた。 はじめてのグラフィックレコーディング 考えを図にする、会議を絵にする。 | 久保田 麻美 | ビジネス・経","tags":[],"title":"グラフィックレコーディングの本"},{"categories":null,"objectID":"705f0403ccbe1c9167a09037066a11cc","permalink":"https://umemak.github.io/blog/posts/2022/08/25_ginkgo/","publish_date":"2022-08-25T00:00:00Z","summary":"普通にGoのテストとして書いたほうが融通が利くので、そのようにすることにした。 たぶん使いどころが間違っていたのだと思う。 適所であればGinkgoも有効なはず。","tags":["go"],"title":"Ginkgoやめた"},{"categories":null,"objectID":"92c0487a6bd0287c6230f47d4feb97b0","permalink":"https://umemak.github.io/blog/posts/2022/08/24_ginkgo/","publish_date":"2022-08-24T00:00:00Z","summary":"Ginkgo使えば使うほどわからなくなってくる。 上から順番に、途中経過もチェックしながら実行したいだけなんだけどなぁ。","tags":["go"],"title":"Ginkgo難解"},{"categories":null,"objectID":"a664a114e9fc818f4666150a680cdc81","permalink":"https://umemak.github.io/blog/posts/2022/08/23_next_book/","publish_date":"2022-08-23T00:00:00Z","summary":"VTT編集するWebアプリ作ろうと思って、環境何にしようかというところで、Next.jsが簡単そう（イメージ）な気がしたので選んだ。 リポジトリ作って初期化したあと手が止まったので、Amazon.co.jp: TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発 eBook : 手島","tags":["react","nextjs"],"title":"Next.js再入門"},{"categories":null,"objectID":"fb03ce516d5f0dc13e94dfa1b9a34b78","permalink":"https://umemak.github.io/blog/posts/2022/08/22_mlt/","publish_date":"2022-08-22T00:00:00Z","summary":"Shotcutでマーカーをchainの開始に合わせて配置したいと思って、mltにマーカーの記述を追加してみた。 Shotcutで開くと、なんかずれてる。 そもそも、mltファイルでは時間をミリ秒表記でやってるのに、アプリではフレーム単位？0～29で扱われているので、なんかその辺の誤差とかなのかなーとか、","tags":[],"title":"MLTファイルを作る3"},{"categories":null,"objectID":"a5a89cbaf18d9bfd6dbbbbcb90c1a909","permalink":"https://umemak.github.io/blog/posts/2022/08/21_go_book/","publish_date":"2022-08-21T00:00:00Z","summary":"詳解Go言語Webアプリケーション開発 | 清水陽一郎 | 工学 | Kindleストア | Amazon読み終わった。 後半のハンズオン、途中から説明が足りない感じで、何度かbudougumi0617/go_todo_app: 書籍「詳解Go言語Webアプリケーション開発」のサンプルコードリポジトリです。を見る必要が","tags":["go"],"title":"詳解Go言語Webアプリケーション開発"},{"categories":null,"objectID":"7a1c46c18dd73f6ff0c8d22f5ff8a9cf","permalink":"https://umemak.github.io/blog/posts/2022/08/20_github_auth/","publish_date":"2022-08-20T00:00:00Z","summary":"VS Code再起動したタイミングで、git pushでエラーが出るようになった。 Support for password authentication was removed on August 13, 2021. Please use a personal access token instead. だいぶ前じゃないか、と思いつつ、PAT作ってやり直したら通った。 しばらくして次のpushしようとしたら、また同じエラー。 毎回PAT入れるのだるすぎるし、何でこのタイミングで出るようになったの","tags":["github"],"title":"GitHubでpushできなかった"},{"categories":null,"objectID":"d0fbb735663cf905a7557fff8b67275e","permalink":"https://umemak.github.io/blog/posts/2022/08/19_apprunner/","publish_date":"2022-08-19T00:00:00Z","summary":"AWS App Runner – フルマネージド型のコンテナアプリケーション - Amazon Web Services ちょっと使ってみた。 App Runner の新機能 — Amazon Virtual Private Cloud (VPC) をサポート | Amazon Web Services ブログを見て、RDSに接続してみようと。 コードリポジトリはGitHubしか対応していないし、GitHub側にインストールしないといけないものもあるようなので、とりあえずECRを使っ","tags":["aws"],"title":"AWS App Runner"},{"categories":null,"objectID":"1c3ef38e1c301a852a74c2ab6a53ad03","permalink":"https://umemak.github.io/blog/posts/2022/08/18_wavesurfer_js/","publish_date":"2022-08-18T00:00:00Z","summary":"wavesurfer.js使ったら、VTTの編集とか直感的にできないかなー、と構想。 Regions pluginと組み合わせれば、波形見ながら開始と終了が指定できて便利だと思うんだ。 VTTファイル読み込んで、パースして配列作ってRegionsと紐づけて、相互に変更が反映されて、VTTファイルとして保存できる機能。","tags":["js"],"title":"wavesurfer.js"},{"categories":null,"objectID":"363d39cdfd59b3213cc0f8f1c9b51cbe","permalink":"https://umemak.github.io/blog/posts/2022/08/17_host_docker_internal/","publish_date":"2022-08-17T00:00:00Z","summary":"Docker Desktopでは、host.docker.internalで母艦のIPアドレスが参照できるようになっているのだけど、Docker DesktopではないLinux環境だと使えない。 で、とりあえず172.17.0.1でやってたりするのだけど、これだとうまくいかないときがあるっぽい。 推測調なのは、まだ","tags":["docker"],"title":"host.docker.internalとlinux"},{"categories":null,"objectID":"08601daa7a815967291937c21a3f8f75","permalink":"https://umemak.github.io/blog/posts/2022/08/16_openapi_client/","publish_date":"2022-08-16T00:00:00Z","summary":"Documentation for the go Generatorで生成したは良いけれど、使い方がわからず試行錯誤してみていたら、生成したdocsの中にサンプルコードが書かれていた。。 構造体のドキュメントとかだと思ってスルーしてたのが敗因。 生成物はちゃんと見ましょう。","tags":["go","OpenAPI"],"title":"OpenAPIクライアントの使い方"},{"categories":null,"objectID":"1dfc77fb8f0dda25e077d93687c02653","permalink":"https://umemak.github.io/blog/posts/2022/08/15_ginkgo/","publish_date":"2022-08-15T00:00:00Z","summary":"久しぶりにonsi/ginkgo: A Modern Testing Framework for Go触って、やっぱりよくわからないなー、と。 BeforeEachとか使って、初期化処理を共通化しようとしたのだけれど、初期化されていない現象とか。 テスト用の構造体ってちゃんと作ろうとすると結構行数食ってしまうけど、あまりテストコードと離れたところに置きたく","tags":["go"],"title":"Ginkgo難解"},{"categories":null,"objectID":"a631fa651234ec91fb8cff2da71730cc","permalink":"https://umemak.github.io/blog/posts/2022/08/14_go_book/","publish_date":"2022-08-14T00:00:00Z","summary":"詳解Go言語Webアプリケーション開発 | 清水陽一郎 | 工学 | Kindleストア | Amazonの後半のハンズオンを写経しながらやってみている。 あらためて手を動かして書くことで、新しい発見があったりして楽しい。","tags":["go"],"title":"詳解Go言語Webアプリケーション開発"},{"categories":null,"objectID":"f241c2d61db2bde0d5956d35299899ee","permalink":"https://umemak.github.io/blog/posts/2022/08/13_srt_vtt/","publish_date":"2022-08-13T00:00:00Z","summary":"SRT形式で、途中改行するやり方がわからなかったので、VTT形式を使うことにした。 Amazon Transcribeはどちらの形式でも出力してくれるし、ffmpegもどちらの形式でも認識してくれた。 まあ改行が必要なくらい長いのは、分けた方が良いというのは正しい。 この辺りは試行錯誤しながら最適解を探っていきたい。","tags":[],"title":"字幕ファイルの形式"},{"categories":null,"objectID":"0bac42540cb15c28625c0dfbccb49387","permalink":"https://umemak.github.io/blog/posts/2022/08/12_mlt/","publish_date":"2022-08-12T00:00:00Z","summary":"silencedetectがなんか思ったのと違う感じで、代わりにPythonとffmpegで動画の無音部分をカットする - QiitaにあるPythonのプログラムの無音検出部分を使ってみた。 Goでもmkb218/gosndfile: Go bindings for libsndfileを使ったらできそうだけど、importしただ","tags":["go","python"],"title":"MLTファイルを作る2"},{"categories":null,"objectID":"03a13ad83b1df8c2deeed0c87acdc6ec","permalink":"https://umemak.github.io/blog/posts/2022/08/11_mlt/","publish_date":"2022-08-11T00:00:00Z","summary":"Shotcutのプロジェクトの保存形式がMLTで、中身はXMLのテキスト。 作業動画を編集していて、無音部分はスキップして尺を短くしたい。 無音部分はffmpegのsilencedetectで検出できるので、そのタイムスタンプで切ったShotcutプロジェクトを開けば、効率的に不要な部分を切り詰めつつ必","tags":["go"],"title":"MLTファイルを作る"},{"categories":null,"objectID":"6140c7b50bdb4798b4ebc325f2f7b11b","permalink":"https://umemak.github.io/blog/posts/2022/08/10_dns/","publish_date":"2022-08-10T00:00:00Z","summary":"今日もDNS解決できない感じのインターネトに接続できない現象が発生した。 IPアドレス指定だと接続できてたので、たぶんDNS。 RT-S300SEと無線LANルーターの間の有線を抜き差ししたら直った。 何かが詰まっているのだろうか。。","tags":[],"title":"DNS不調2"},{"categories":null,"objectID":"95199f0088ff2110a2abfa18ec6598d9","permalink":"https://umemak.github.io/blog/posts/2022/08/09_dns/","publish_date":"2022-08-09T00:00:00Z","summary":"昨日からインターネット接続が突然できなくなる現象が発生していて、RT-S300SEの電源抜き差しでとりあえず復帰するものの、連日の不具合でちょっと困った。 Slackの通話とかすでに接続しているものは使い続けられていたので、完全にネットワークがダメなわけではなさそう、新規の接続するときにDNSが引けな","tags":[],"title":"DNS不調"},{"categories":null,"objectID":"e46ab6d4749ffb3651dfd7f0b8facfcd","permalink":"https://umemak.github.io/blog/posts/2022/08/08_ffmpeg_srt/","publish_date":"2022-08-08T00:00:00Z","summary":"動画の音声をAmazon Transcribe（音声をテキストに変換する機能を簡単に追加）| AWSでsrt形式の日本語文字起こしをして、DockerのUbuntuにインストールしたFFmpegで動画に字幕を焼きこもうとした。 日本語文字が豆腐になってしまった。 日本語フォントとかインストールしてやらないと","tags":["ffmpeg"],"title":"FFmpegで字幕"},{"categories":null,"objectID":"73f5fb0bcc4d703cb81bb27e140fbcfd","permalink":"https://umemak.github.io/blog/posts/2022/08/07_sqlc_with/","publish_date":"2022-08-07T00:00:00Z","summary":"sqlc@v1.10.0だと、 -- name: ListCommentsTree :many WITH RECURSIVE r AS ( SELECT * FROM comments WHERE comments.id = ? UNION ALL SELECT comments.* FROM comments, r WHERE comments.parent_id = r.id ) SELECT * FROM r; これが $ sqlc generate # package sqlc db/query.sql:35:5: syntax error near \u0026#34;WITH RECURSIVE r AS (\u0026#34; こう。 sqlc@latestにするとこれは解消するけれど、昨日のtable aliasエラーが。。 うーん。","tags":["sqlc"],"title":"sqlcのエラー2"},{"categories":null,"objectID":"cdd5e447566d67a217a1f31c40f8cc40","permalink":"https://umemak.github.io/blog/posts/2022/08/06_sqlc/","publish_date":"2022-08-06T00:00:00Z","summary":"-- name: ListEventUsers :many SELECT eu.id, eu.eventid, eu.userid, eu.`status`, u.name FROM ( SELECT id, eventid, userid, `status`, row_number() OVER (PARTITION BY eventid, userid ORDER BY id DESC) AS num FROM eventUser ) eu, user u WHERE eu.eventid = ? AND eu.num = 1 AND eu.userid = u.id ORDER BY eu.id; これが $ sqlc generate # package sqlc db/query.sql:14:1: table alias \u0026#34;eu\u0026#34; does not exist adminerで実行したらちゃんと思った結果得られるのに。 Table alias not working · Issue #1385 · kyleconroy/sqlcのissueだとv1.10.0だと使えていたっぽい。 $ sqlc version v1.14.0 $ go","tags":["sqlc"],"title":"sqlcのエラー"},{"categories":null,"objectID":"d6dca504e32812fef3a1563f898e5266","permalink":"https://umemak.github.io/blog/posts/2022/08/05_openapi_generator_src/","publish_date":"2022-08-05T00:00:00Z","summary":"openapi-generator/GoServerCodegen.java at master · OpenAPITools/openapi-generator この辺りから読み始めればよいのかな？ けどJavaかぁ。。 Javaは出始めのころちょっと触って、今もそうかもしれないけど、パッケージ名の命名にドメインを逆順で、みたいのが当時ドメインとか持ってなくてどうすればいいんだ？ってなって躓いた。 あとなんかインポートするの長くて呪文みたいだなーって思っ","tags":["OpenAPI"],"title":"OpenAPI generatorのソース"},{"categories":null,"objectID":"b098a10a811a54457822f5f705f526f9","permalink":"https://umemak.github.io/blog/posts/2022/08/04_openapi_sqlc/","publish_date":"2022-08-04T00:00:00Z","summary":"Documentation for the go-server Generatorで生成したファイルとsqlc.dev | Compile SQL to type-safe Goで生成したファイル、うまく連携できればもっと手数少なくAPIサーバーが作れるのになー・・ 現状用意するものとしては、DDLとqueryとAPI定義で、APIのリソースとDBのテーブルが1:1なら決め打ちでかける部分が出てくるは","tags":["OpenAPI","sqlc"],"title":"OpenAPIとsqlcの連携"},{"categories":null,"objectID":"84eb79e309b3f473278311150423aa29","permalink":"https://umemak.github.io/blog/posts/2022/08/03_go_air/","publish_date":"2022-08-03T00:00:00Z","summary":"cosmtrek/air: ☁️ Live reload for Go appsで、コマンドラインでオプション指定できるみたいだけど、思ったように動かないな・・という内容で書こうとして見直してたら、beta featureってちゃんと書いてあるし。 エラーになったり、完全に動かないわけではなく、build.cmdとか指定が効いてたので気づかなかった。 モノレポで","tags":["air"],"title":"airのオプション"},{"categories":null,"objectID":"7379b0c98a9af0081afa2caa18ac9668","permalink":"https://umemak.github.io/blog/posts/2022/08/02_codesandbox/","publish_date":"2022-08-02T00:00:00Z","summary":"CodeSandbox: Online Code Editor and IDE for Rapid Web Development YouTube チャンネル「ニコニコプログラミング」を開設しましたの記事で知った。 普段こういう用途だとGitHubに適当なリポジトリ作って、CodespacesかGitpodで開く感じだけど、さらにお手軽に環境が作れてすごい。 元記事のプログラミングRTAも見てみたけど、勉強になる。","tags":[],"title":"CodeSandbox"},{"categories":null,"objectID":"f0129692c2de6a0c568059bdcb47affb","permalink":"https://umemak.github.io/blog/posts/2022/08/01_vscode_webview/","publish_date":"2022-08-01T00:00:00Z","summary":"VS Codeとブラウザを行き来するのが面倒なので、VS Code内でブラウザ表示できれば良いのでは？と思い方法を探してみた。 デバッグ作業が快適に！VS Codeにブラウザのプレビュー機能を加える機能拡張 -Browser Preview for VS Code | コリス これでいけるじゃん、ってインストールしようとしたら、Deprecated と書かれていて","tags":["VS Code"],"title":"VS Codeでブラウザ表示したい"},{"categories":null,"objectID":"88b8ad16ae3d3f3fa4dfa22b983cd08b","permalink":"https://umemak.github.io/blog/posts/2022/07/31_go_error_wrap/","publish_date":"2022-07-31T00:00:00Z","summary":"エラーのラッピングをすると何がうれしいのかという問いへの解答が見えた気がする。 ラッピングしない場合、元のエラーの文字列以外の情報が失われてしまうが、ラッピングするとエラー情報をアンラップして取り出すことができる。 失われてしまう情報が呼び出し元で必要な場合は、エラーをそのままreturnして返すか、必","tags":["go"],"title":"Go言語のエラーラッピング"},{"categories":null,"objectID":"6bf97c156aa889db3c749f3aac2cdb6c","permalink":"https://umemak.github.io/blog/posts/2022/07/30_code_book/","publish_date":"2022-07-30T00:00:00Z","summary":"良いコード／悪いコードで学ぶ設計入門―保守しやすい 成長し続けるコードの書き方 | 仙塲 大也 | コンピュータ・IT | Kindleストア | Amazon 読み終えた。 最後のほうは、前に出てきたことの応用とかでせっかくKindleなんだからリンクしておいて参照できれば良いのに、と思った。 書いてある内容にはおおむね同意。ちゃん","tags":["book"],"title":"良いコード／悪いコードで学ぶ設計入門"},{"categories":null,"objectID":"5f30570b587c1bc29d005ed41fae3fe8","permalink":"https://umemak.github.io/blog/posts/2022/07/29_openapi_generator/","publish_date":"2022-07-29T00:00:00Z","summary":"Documentation for the go-server Generatorで、routerはmuxとchiが選べると書いてあって、省略時はmuxとのこと。 chiの指定方法がわからなかったので調べた。 $ wget https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml $ docker run --rm \\ -v ${PWD}:/local openapitools/openapi-generator-cli generate \\ -i /local/petstore.yaml \\ -g go-server \\ --additional-properties=router=chi \\ -o /local/out と、--additional-propertiesにつけるらしい。、 他のパラメータ、たとえばsererP","tags":["OpenAPI"],"title":"OpenAPI Generator go-server"},{"categories":null,"objectID":"42cd286a2a1c0aac163dff5f04c5731e","permalink":"https://umemak.github.io/blog/posts/2022/07/28_sqlc/","publish_date":"2022-07-28T00:00:00Z","summary":"別の調べものをしていて見つけたsqlc.dev | Compile SQL to type-safe Goを試してみた。 schema.sqlは、今までMySQLの起動時に読み込ませていたSQLファイルがそのまま使えた。 query.sqlもgoのmodelパッケージ内に書いていたSQLをコピペで作れた。 結構良いかも。","tags":["Go","DB"],"title":"sqlc"},{"categories":null,"objectID":"0215eb66d88f871ad05d206d048fcf76","permalink":"https://umemak.github.io/blog/posts/2022/07/27_adminer_oracle/","publish_date":"2022-07-27T00:00:00Z","summary":"昨日はとりあえず動くところまでできたので、Dockerfileを整えてみた。 https://github.com/umemak/docker-adminer/blob/master/4/Dockerfile イメージサイズ800MB弱。 もっとスリム化できないかな。","tags":["Docker","Oracle"],"title":"AdminerのOracle対応"},{"categories":null,"objectID":"f88f11135c9a2b6f8a56a5c0828a17ff","permalink":"https://umemak.github.io/blog/posts/2022/07/26_adminer_oracle/","publish_date":"2022-07-26T00:00:00Z","summary":"昨日の続き。 とりあえず接続してテーブル一覧作ったりテーブル作成したりできた。 Docker + Laravel + Oracleの開発環境の構築方法が参考になった。","tags":["Docker","Oracle"],"title":"AdminerのOracle対応"},{"categories":null,"objectID":"6f6347a4879999c31567e25721aa0a2f","permalink":"https://umemak.github.io/blog/posts/2022/07/25_adminer_oracle/","publish_date":"2022-07-25T00:00:00Z","summary":"Adminer - Database management in a single PHP fileのDockerイメージAdminer - Official Image | Docker Hubは、Oracle接続に必要なモジュールが入っていない。 PHP: インストール/設定 - Manualによると、Instant Client for Linux x86-64 (64-bit)のBasicと、oci8が必要らしい。 DockerfileはOfficial Imageの","tags":["Docker","Oracle"],"title":"AdminerのOracle対応"},{"categories":null,"objectID":"7a7737286978c77f56d2e4478827fb3e","permalink":"https://umemak.github.io/blog/posts/2022/07/25_prisma/","publish_date":"2022-07-25T00:00:00Z","summary":"Prismaを使ってDB設計ってできるのかな、と思い調べてみた。 Prisma自体は、ORMということだけれど、スキーマファイルをもとにDBに対してマイグレーションで定義を反映できる。 モデル間の関連もスキーマファイルで表現できる。 でも、API側をOpenAPIやGraphQLで定義するとすると、似たよ","tags":["Prisma"],"title":"Prisma"},{"categories":null,"objectID":"acba2bff37ab359e98644b27127c94f0","permalink":"https://umemak.github.io/blog/posts/2022/07/24_graphql/","publish_date":"2022-07-24T00:00:00Z","summary":"API設計するのに、GraphQLの可能性はどうなのかと思ってちょっとググってみた。 個人的にはAmplifyを試していたときに良くわからなくて挫折した思い出がある。 なんとなく、参照系はGraphQLで柔軟性を持たせつつ、更新系は従来のリソース志向のAPIで使い分けるのはどうかなと思った。 Goでのサー","tags":["GraphQL"],"title":"GraphQL"},{"categories":null,"objectID":"59d179bde78a4a1fc914aef8d77cf92f","permalink":"https://umemak.github.io/blog/posts/2022/07/23_database/","publish_date":"2022-07-23T00:00:00Z","summary":"昨日はコンテナ実行環境の比較、今日はマネージドDB（MySQL）を比較してみる。 Amazon RDS for MySQL （MySQLのためのマネージドリレーショナルデータベース） | AWS Cloud SQL for MySQL マネージドデータベース | Cloud SQL: リレーショナル データベース サービス | Google Cloud Azure Database for MySQL - マネージド MySQL データベース | Microsoft Azure リージョンは東京で、シングル構成の","tags":["aws","azure","gcp"],"title":"データベース比較"},{"categories":null,"objectID":"bf3ebad0a49794d60c65bf85b370e28a","permalink":"https://umemak.github.io/blog/posts/2022/07/22_container/","publish_date":"2022-07-22T00:00:00Z","summary":"AWSとAzureとGCPで、コンテナ実行環境の比較をしてみたくなった。 GCPのCloud Run: コンテナを秒単位で本番環境にデプロイ | Google Cloudみたいなやつ。 AWSはAWS App Runner – フルマネージド型のコンテナアプリケーション - Amazon Web Services、AzureはAzure Container Apps | Microsoft Azureが比較対象となるか","tags":["aws","azure","gcp"],"title":"コンテナ実行環境比較"},{"categories":null,"objectID":"ad34236fe016db0bb7904f300be96567","permalink":"https://umemak.github.io/blog/posts/2022/07/21_openapi_generator/","publish_date":"2022-07-21T00:00:00Z","summary":"Generators Listを眺めていたら、mysql-schemaなんてのがあったので、試してみた。 $ wget https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml $ docker run --rm \\ -v ${PWD}:/local openapitools/openapi-generator-cli generate \\ -i /local/petstore.yaml \\ -g mysql-schema \\ -o /local/out $ ls -R out/ out/: Model README.md mysql_schema.sql out/Model: ApiResponse.sql Category.sql Order.sql Pet.sql Tag.sql User.sql out/mysql_schema.sqlにDDLが作成されていた。 out/Modelには、CRUD用SQLのテンプレートが作られていた。 pets","tags":["OpenAPI"],"title":"OpenAPI Generator"},{"categories":null,"objectID":"30d92696b82b5584d4896be6cd396317","permalink":"https://umemak.github.io/blog/posts/2022/07/20_pocketbase_migratin/","publish_date":"2022-07-20T00:00:00Z","summary":"昨日、Migratinが用意されているのを知って、試してみたけれど思ったように動かず。 マイグレーションにしか使わないパッケージもいくつかimportが必要だし、明示的にmigrate upしないといけない。 であれば、普通にHTTP APIでCreate Collectionしても良いかなという気持ちになっ","tags":["poketbase"],"title":"PocketbaseのMigration"},{"categories":null,"objectID":"6e5efb69c1ab6bd096094a07d282fe15","permalink":"https://umemak.github.io/blog/posts/2022/07/19_error_handring/","publish_date":"2022-07-19T00:00:00Z","summary":"fmt.Errorf(\u0026quot;～～: %w\u0026quot;, err)の書き方にルールあるのかな、と思って調べたら、先人の記事があった。 fmt.Errorfのメッセージについての調査と、linterとしての実装について | CyberAgent Developers Blog いつもその時の雰囲気で書いていたので、こういったルールで揃えられるのは良い。 もうひとつ、tem","tags":["go"],"title":"Goのエラー処理"},{"categories":null,"objectID":"e94a900cff672d24d5ce6c65067873e5","permalink":"https://umemak.github.io/blog/posts/2022/07/19_pocketbase/","publish_date":"2022-07-19T00:00:00Z","summary":"コンテナで起動時にコレクションを作成したい時のやり方が見つからない。 MySQLとかだと、/docker-entrypoint-initdb.dにSQLを置いておけば実行してくれる、そういうやつ。 →DB migrations - Docs - PocketBase Pocketbaseの起動時に初期化するのではなく、利用するアプリ側でマイグレーションを実","tags":["poketbase"],"title":"PocketbaseのCollections"},{"categories":null,"objectID":"a053ab9013c1a2f0af739328e6d1074b","permalink":"https://umemak.github.io/blog/posts/2022/07/18_go_redirect/","publish_date":"2022-07-18T00:00:00Z","summary":"ログアウトの処理（GET /logout）実行後にトップページにリダイレクトしようとした。 http.Redirect(w, r, \u0026ldquo;/\u0026rdquo;, 301) おや？動作しない時がある。。 301だと、ブラウザはリダイレクト先を覚えて、次からはリダイレクト先を最初から叩くっぽい。 なので、302にしてあげないと思ったような動きにならない。 ところで、Goのhttpパッ","tags":["go"],"title":"Goのredirect"},{"categories":null,"objectID":"5083f1c579a51a5689371f09eb3ce9d7","permalink":"https://umemak.github.io/blog/posts/2022/07/18_go_include/","publish_date":"2022-07-18T00:00:00Z","summary":"テンプレートのincludeってどうやるんだっけ、と思って検索した。 Go の html/template でヘッダーやフッター等の共通化を実現する方法 · Yutaka 🍊 Kato なるほど、{{define \u0026quot;header\u0026quot;}}～{{end}}で定義して、{{template \u0026quot;header\u0026quot; .}}で呼び出すのか。","tags":["go"],"title":"Goのtemplateのinclude"},{"categories":null,"objectID":"fd9d96b4a2b7d9f89f0cb8ff233e18c4","permalink":"https://umemak.github.io/blog/posts/2022/07/17_mermaid/","publish_date":"2022-07-17T00:00:00Z","summary":"VS Codeのmermaid拡張でER図を試していて、カラム名に日本語使えなくて論理名と物理名両方書きたいのにどうしようかと思ったら、コメントとして書けば日本語も通ることに気づいた。 mermaid - Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams, gantt charts and git graphs. つまり、こう書ける。 erDiagram user { bigint id PK \u0026#34;ID Auto increment\u0026#34; text email \u0026#34;メール\u0026#34; text name \u0026#34;名前\u0026","tags":["mermaid"],"title":"mermaidのER図"},{"categories":null,"objectID":"6b80cc08c01a1e988a890ddd4a9a96fd","permalink":"https://umemak.github.io/blog/posts/2022/07/16_go_json/","publish_date":"2022-07-16T00:00:00Z","summary":"PocketBaseのユーザー作成をGoからHTTP叩いて実行しようとして、正常時とエラー時で戻ってくるJSONの形式が違っていた。 structを別々に用意して、Unmarshalでエラーになったらもう片方を使う？とか思ったけど、 golang は ゆるふわに JSON を扱えまぁす! — KaoriYaによると、interfa","tags":["Go"],"title":"GoのJSON"},{"categories":null,"objectID":"02f6302303ab0d56986aefccafbb199c","permalink":"https://umemak.github.io/blog/posts/2022/07/15_id_column/","publish_date":"2022-07-15T00:00:00Z","summary":"DB設計するときのIDカラムについて。 昔ながらのシステムだと、auto increment使って連番が定番だと思うのだけど、PocketBaseでCollectionにRecord追加したとき、idは1ldTBeJNhX3jufuみたいな文字列が割り振られていて、そういえばFirebaseもそうだった","tags":["db"],"title":"idとauto increment"},{"categories":null,"objectID":"1925559bea1bb769b8f49f4f0453f638","permalink":"https://umemak.github.io/blog/posts/2022/07/15_live_share/","publish_date":"2022-07-15T00:00:00Z","summary":"VS CodeのLive Share - Visual Studio Marketplace拡張、Codespaces | GitHubで使えたら良いなと思って試してみた。 Web Editor（リポジトリ画面で.押すと開くやつ）だと、拡張のインストールやURLの発行はできるけど、Joinしようとするとサーバーが応答しない的なエラー（うろ覚え）で接続で","tags":["GitHub"],"title":"Live Share on GitHub Codespaces"},{"categories":null,"objectID":"edaceddaaa44a4359a28d4b79133bbbe","permalink":"https://umemak.github.io/blog/posts/2022/07/15_pocketbase/","publish_date":"2022-07-15T00:00:00Z","summary":"PocketBaseの更新が早い。 Releases · pocketbase/pocketbase 手元のDockerfileもバージョン指定できるように変更した。 https://github.com/umemak/eventsite_go/blob/7bc46cf58fd472582fe70ec32590a43c4d19a3f7/Dockerfile.pocketbase#L3 Admin UIで日時の表示がUTC固定なのをTZ指定できるようにならないかな。","tags":["PocketBase"],"title":"PocketBaseの更新"},{"categories":null,"objectID":"154b0b2f31e1071f3c9a5fc78d5e5642","permalink":"https://umemak.github.io/blog/posts/2022/07/14_rdb/","publish_date":"2022-07-14T00:00:00Z","summary":"ずっと欲しいものリストに入っていて買ってなかった、 失敗から学ぶRDBの正しい歩き方 Software Design plus | 曽根 壮大 | コンピュータ・IT | Kindleストア | Amazonをプライムデーのポイントアップ狙いで購入した。 細かいテーブルたくさん作るより、汎用テーブルにしたものを作ろうとしていたので、それはだめだと分かったの","tags":["book"],"title":"失敗から学ぶRDBの正しい歩き方"},{"categories":null,"objectID":"8e54fa7e29ba21846eb1b6ac4f58d7f5","permalink":"https://umemak.github.io/blog/posts/2022/07/13_pocketbase/","publish_date":"2022-07-13T00:00:00Z","summary":"supabaseと格闘していたら、PocketBase - Open Source backend in 1 fileという似たような機能を提供するツールを見つけた。 GitHub見ると1週間ほど前に公開されたばかりのよう。 FROM alpine WORKDIR /app RUN wget https://github.com/pocketbase/pocketbase/releases/download/v0.2.4/pocketbase_0.2.4_linux_amd64.zip RUN unzip pocketbase_0.2.4_linux_amd64.zip RUN rm pocketbase_0.2.4_linux_amd64.zip CMD [ \u0026#34;/app/pocketbase\u0026#34;, \u0026#34;serve\u0026#34;, \u0026#34;--http\u0026#34;, \u0026#34;0.0.0.0:8090\u0026#34; ] これでhttp://0.0.0.0:8090/_/にアクセスしたら管理者アカウント","tags":["PocketBase"],"title":"PocketBase"},{"categories":null,"objectID":"d9327777f9a2f59db5a069d711002943","permalink":"https://umemak.github.io/blog/posts/2022/07/12_gotrue/","publish_date":"2022-07-12T00:00:00Z","summary":"supabaseで使っている認証モジュールがnetlify/gotrue: An SWT based API for managing users and issuing SWT tokens。 supabaseのAPIでGoは提供されてないので、直接たたけないか調べてみる。 Architecture | Supabase見ると、/authでGoTrueに流されるようだが、Kongの公開ポート54321経由でht","tags":["supabase"],"title":"GoTrue"},{"categories":null,"objectID":"ab6f7e14bcda4f02be052b0add103ad4","permalink":"https://umemak.github.io/blog/posts/2022/07/11_supabase/","publish_date":"2022-07-11T00:00:00Z","summary":"以前調べたとき、ローカルで動かしたときにAuth系はサポートしてないというような記事を見て、残念に思っていたのだけれど、Kuzzleの認証も思ったのと違う感じで。 With Docker | Supabase Supabaseをローカル環境に構築してNext.jsアプリで利用する（前半） このあたりを見ると、なんかできそう。しかもDocke","tags":["supabase"],"title":"supabaseを試す"},{"categories":null,"objectID":"b8e25d2cef7beff5ea821e4b33d69b4e","permalink":"https://umemak.github.io/blog/posts/2022/07/10_air/","publish_date":"2022-07-10T00:00:00Z","summary":"HTMLとかコード修正したときに手動で再起動するのが面倒なので、ホットリロードツールを導入してみた。 cosmtrek/air: ☁️ Live reload for Go apps $ go install github.com/cosmtrek/air@latest $ air init $ air __ _ ___ / /\\ | | | |_) /_/--\\ |_| |_| \\_ , built with Go mkdir /home/umemak/workspace/eventsite_go/tmp watching . watching cmd watching cmd/eventsite watching db watching db/sql watching model watching model/user !exclude tmp watching web watching web/template building... no Go files in /home/umemak/workspace/eventsite_go failed to build, error: exit status 1 ^Ccleaning... see you again~ デフォルトだと、cmdの下のmain.goを見つけてく","tags":["go","air"],"title":"Airを試す"},{"categories":null,"objectID":"b76047f27e6a5307df407d0d11ca451b","permalink":"https://umemak.github.io/blog/posts/2022/07/09_mysql/","publish_date":"2022-07-09T00:00:00Z","summary":"MySQLコンテナ作ろうと思って、Mysql - Official Image | Docker Hubのcompose書き方見てたら、adminerというイメージを使っていて、同様に起動してみたらなかなか良い。 元のプログラムはdockette/adminer: Tiniest boxed dockerized Adminer (MySQL, PostgreSQL, SQLite, Mongo, Oracle) Dockerfilesかな。 テーブル定義作るときに、カラム名を別","tags":["mysql"],"title":"adminer"},{"categories":null,"objectID":"6d91787f45916e1ea051d9bc0cd79087","permalink":"https://umemak.github.io/blog/posts/2022/07/09_fleet/","publish_date":"2022-07-09T00:00:00Z","summary":"JetBrains Fleet: JetBrains の次世代 IDE、去年の11月末にPreview申し込みしていた。 昨日、使えるようになったとメールが来たので早速インストールしてみた。 ファイルツリーでCtrl+C、Vでファイルがコピーされないし、Ctrl+Wでエディタタブが閉じられない（エディタにフォーカスが当たっていれば閉じられる）。 日本語入","tags":["fleet"],"title":"Fleetお試し"},{"categories":null,"objectID":"ffb57c8b7004bc4dbc35ea452445b2ea","permalink":"https://umemak.github.io/blog/posts/2022/07/09_eventsite_go/","publish_date":"2022-07-09T00:00:00Z","summary":"結局、フレームワークはgo-chi/chi: lightweight, idiomatic and composable router for building Go HTTP servicesを使うことにした。 理由は、認証で使いそうなパッケージgo-pkgz/auth: Authenticator via oauth2, direct, email and telegramのサンプルが使っていたから。 とりあえず、HTTPリクエストを受けてDB読み書きしてテンプレート加工して返すところまで","tags":["go","chi","mysql"],"title":"Goアプリ"},{"categories":null,"objectID":"e6d39857e41d5e8e0e59c3421417efd1","permalink":"https://umemak.github.io/blog/posts/2022/07/09_revel/","publish_date":"2022-07-09T00:00:00Z","summary":"ちょっとしたWebアプリを作りたくなったので、GoでRailsみたいなフレームワークないのかなと探した。 revel/revel: A high productivity, full-stack web framework for the Go language. が近そうだったので、試してみた。 $ go install github.com/revel/cmd/revel@latest go: downloading github.com/revel/cmd v1.1.2 go: downloading github.com/agtorre/gocolorize v1.0.0 go: downloading github.com/jessevdk/go-flags v1.4.0 go: downloading github.com/revel/config v1.1.0 go: downloading github.com/revel/log15 v2.11.20+incompatible go: downloading github.com/mattn/go-colorable v0.1.8 go: downloading gopkg.in/natefinch/lumberjack.v2 v2.0.0 go: downloading gopkg.in/stack.v0 v0.0.0-20141108040640-9b43fcefddd0 go: downloading github.com/pkg/errors v0.9.1 go: downloading github.com/fsnotify/fsnotify v1.4.9 go: downloading github.com/mattn/go-isatty v0.0.14 go: downloading github.com/inconshreveable/log15 v0.0.0-20201112154412-8562bdadbbac $ revel new -a events_go -r revel: command not found おや？パスが通って","tags":["go","revel"],"title":"Revel入門"},{"categories":null,"objectID":"69b1eff0352f187ac00f0f12be739da9","permalink":"https://umemak.github.io/blog/posts/2022/07/08_amazon_ivs/","publish_date":"2022-07-08T00:00:00Z","summary":"ストリームの再生にトークンが必要になる。 ほぼこのブログのやり方でできた。 [アップデート] Amazon Interactive Video Service で再生時の認証が行えるようになりました！ | DevelopersIO 一点だけ、秘密鍵を Secrets Manager にアップロードのところでエラーになった。 cliのバージョンが変わって、コマンドに--cli-binary-format raw-in-bas","tags":["aws"],"title":"Amazon IVSプライベートチャネル"},{"categories":null,"objectID":"c6b9e61529d135532312d7e53e5f3648","permalink":"https://umemak.github.io/blog/posts/2022/07/07_amazon_ivs/","publish_date":"2022-07-07T00:00:00Z","summary":"IVSのサンプルアプリ（React製）をAmplifyにデプロイしてみた。 npm run buildしたbuildディレクトリを丸ごとアップロードで。 jsとcssがHTTPコード301でファイル名の最後に/をつけたアドレスにリダイレクトされてエラーになっていたので、書き換えないようリダイレクト設定をしたら動いた","tags":["aws"],"title":"Amazon IVS+Amplify"},{"categories":null,"objectID":"3bb27f92ddb690c7857734d9d41c6b04","permalink":"https://umemak.github.io/blog/posts/2022/07/06_amazon_ivs/","publish_date":"2022-07-06T00:00:00Z","summary":"IVSのチャットルームがエラーで作れない件、試しにもう一つアカウント作ってみたけれど、同じ現象だった。 2年前に作ったアカウントと何が違うのだろう。。","tags":["aws"],"title":"Amazon IVSのエラー"},{"categories":null,"objectID":"6ef1557ee85f6efd91950c39ce9216fd","permalink":"https://umemak.github.io/blog/posts/2022/07/05_amazon_ivs/","publish_date":"2022-07-05T00:00:00Z","summary":"相変わらずエラーでIVSのチャットルームが作れない Your account is pending verification. Until the verification process is complete, you may not be able to carry out requests with this account. If you have questions, contact AWS Support. 仕方ないので、作れる方のアカウントで動作確認を進めることにした。 前に試したのと同じように、ap-northeast-1 でS3バケット作ってsam deployして、IVSチャットルームはus-","tags":["aws"],"title":"Amazon IVSのサンプル"},{"categories":null,"objectID":"96a6d185eed44e8738af123ae5d40272","permalink":"https://umemak.github.io/blog/posts/2022/07/04_flutter_crop/","publish_date":"2022-07-04T00:00:00Z","summary":"hnvn/flutter_image_cropper: A Flutter plugin for Android and iOS supports cropping imagesを使うときにエラーが出ていた件、解決。 Flutter Webで使うときはweb/index.htmlにcssとjsを追加するようにREADMEに書かれていた。 ドキュメントはちゃんと読まないと、かえって時間を浪費してしまう例だ。 ただ、スマホのブラウザで表示したときにはみ出してしまうの","tags":["Flutter"],"title":"Image Cropper"},{"categories":null,"objectID":"0aa38368b86bcbf2b7ba7cebd5b6848f","permalink":"https://umemak.github.io/blog/posts/2022/07/03_flutter_cors/","publish_date":"2022-07-03T00:00:00Z","summary":"crop使うために、\u0026ndash;web-rendererをcanvaskitにしたら、Firebase Storageの画像を表示できなくなってしまった。 Displaying images on the web | Flutterにも書かれていて、いくつか回避策が提示されていた。 Firebase Hostingはfirebase.jsonで設定できるらしいが、今回","tags":["Flutter"],"title":"FlutterでCORS"},{"categories":null,"objectID":"7d2a846976b4deba4072230b4e2c9049","permalink":"https://umemak.github.io/blog/posts/2022/07/02_amazon_ivs/","publish_date":"2022-07-02T00:00:00Z","summary":"aws-samples/amazon-ivs-chat-web-demo: A demo web application that shows how to implement a basic video + chat application using the AWS serverless application model (SAM) and Javascript (React). これを試すにあたり、作ったものをまるごと削除できるようにAWS Organizationsで専用アカウント作成した。 ついでにAWS Single Sign-Onも設定してログインを集中管理できるようにした。 CloudShellで作業する。 $ git clone https://github.com/aws-samples/amazon-ivs-chat-web-demo.git $ cd amazon-ivs-chat-web-demo/serverless/dependencies/nodejs $ npm install $ cd ../../","tags":["aws"],"title":"Amazon IVSのサンプルを試してみた"},{"categories":null,"objectID":"066aac601cead9e4787c7bce917043d5","permalink":"https://umemak.github.io/blog/posts/2022/07/01_flutter_state/","publish_date":"2022-07-01T00:00:00Z","summary":"画像の選択前後で表示だし分けしたい件、Prvider使って実装してたけど、setStateで良いことに気づいた。 だいぶFlutterのことがわかってきた気がする。 （cropはまだできていない）","tags":["Flutter"],"title":"Flutterの状態管理"},{"categories":null,"objectID":"90aea90cbbd607c1c84e076a4765a24d","permalink":"https://umemak.github.io/blog/posts/2022/06/30_flutter_web_font/","publish_date":"2022-06-30T00:00:00Z","summary":"Flutter Webでブラウザ表示したときに、漢字が中国風になってしまう件。 --web-renderer htmlで動かせば回避できていたのだけれど、cropを試すのに--web-renderer canvaskitにしたら再発した。 Flutter Webでのフォント問題を解決するを参考にsawarabiGothicにして解決。","tags":["Flutter"],"title":"Flutter Webのフォント問題"},{"categories":null,"objectID":"3b74b484b945b5b23be76abd81fcff88","permalink":"https://umemak.github.io/blog/posts/2022/06/30_oracle_docker_go/","publish_date":"2022-06-30T00:00:00Z","summary":"go-oci8を使ったイメージの、oraclelinux8をベースイメージにしたやつが1.25GBにもなったので、もっと小さくならないか試してみた。 golang:1-bullseyeをベースにした場合、rpmが使えないのでOracleInstantClient関連のzipを展開する方法でやって、1.","tags":["Docker","oracle","go"],"title":"OracleにGoで接続するイメージの軽量化"},{"categories":null,"objectID":"0e2121215342e77701c5b83f92198de2","permalink":"https://umemak.github.io/blog/posts/2022/06/29_flutter_image_cropper/","publish_date":"2022-06-29T00:00:00Z","summary":"アップロードする画像を正方形にしたかったので、加工用のパッケージを入れてみた。 hnvn/flutter_image_cropper: A Flutter plugin for Android and iOS supports cropping images これがFlutter Webだとどうもうまく動かない。 croppie_dart.dart:129 Uncaught (in promise) TypeError: dart.global.Croppie is not a constructor at new croppie_dart._Croppie.new (croppie_dart.dart:129:50) at Croppie.new (croppie_dart.dart:68:12) at cropImage (image_cropper_for_web.dart:120:21) at cropImage.next (\u0026lt;anonymous\u0026gt;) at runBody (async_patch.dart:84:54) at Object._async [as async] (async_patch.dart:123:5) at image_cropper_for_web.ImageCropperPlugin.new.cropImage (image_cropper_for_web.dart:74:33) at cropper.ImageCropper.new.cropImage (cropper.dart:86:21) at NewPostPage.dart:206:52 Flutter、まだわからないことが多い。。 次は、Top Flutter Image Cropping, Image Cropper packages |","tags":["Flutter"],"title":"Image Cropper"},{"categories":null,"objectID":"78008d50aeaae654dcfb043955744150","permalink":"https://umemak.github.io/blog/posts/2022/06/28_flutter_model/","publish_date":"2022-06-28T00:00:00Z","summary":"昨日の2度呼ばれて2度目の内容が反映されない件。 結局よくわからなかったので、反映されない部品（WebViewX）だけ古い実装に戻すことにより回避した。 Firestore倍の回数呼び出すことになりそうだけど、仕方ない。","tags":["Flutter"],"title":"Flutterでmodelを使う"},{"categories":null,"objectID":"71d6a9220e24a83f802b2362f95f9328","permalink":"https://umemak.github.io/blog/posts/2022/06/27_flutter_model/","publish_date":"2022-06-27T00:00:00Z","summary":"Firestoreから取得したデータを、Wighetの構築に受け渡しするのに引数並べるの大変になってきたので、 modelクラスの導入をしてみた。 参考： 【Flutter \u0026amp; FireStore】Modelを作成して、データの一覧を取得 する 【Flutter \u0026amp; FireStore】Modelを作成して、データの","tags":["Flutter"],"title":"Flutterでmodelを使う"},{"categories":null,"objectID":"42990101ab90a2a6ae562f24448571d8","permalink":"https://umemak.github.io/blog/posts/2022/06/26_flutter_study/","publish_date":"2022-06-26T00:00:00Z","summary":"Flutterでのレイアウトの組み合わせ方を学ぼう～実際の画面例を使用 (1/2)：CodeZine（コードジン）を参考に実装し始めたら、サンプルコードがわかりにくいのに気づいた。 lib/list/CouponListView.dartの抜粋など抜粋と明示されているものの、全体がないので部分をどう組み","tags":["Flutter"],"title":"Flutter学習"},{"categories":null,"objectID":"b401288ff727b47940857718069de5b6","permalink":"https://umemak.github.io/blog/posts/2022/06/25_flutter_drawer/","publish_date":"2022-06-25T00:00:00Z","summary":"Drawerが表示できるようになったが、onTapが反応しない。 Flutter webだからかと思ったけど、Add a Drawer to a screen | Flutterのサンプルは動いているので、他の原因っぽい。 ログアウト機能しか使う予定なかったし、ドロワー以外の方法でも良いか。。","tags":["Flutter"],"title":"Drawer"},{"categories":null,"objectID":"9e9dd2762fb1124eb15bf486df4c9899","permalink":"https://umemak.github.io/blog/posts/2022/06/24_flutter_study/","publish_date":"2022-06-24T00:00:00Z","summary":"Flutterで始めるモバイルアプリ開発連載一覧：CodeZine（コードジン）の第8回以降を読んだ。 サンプルがわりと分かりやすくて良いと思った。 ChoiceChip と Drawer を取り入れてみた。","tags":["Flutter"],"title":"Flutter学習"},{"categories":null,"objectID":"4c0ddbb822532ed1c1a6e65400ca98d8","permalink":"https://umemak.github.io/blog/posts/2022/06/23_dart_study/","publish_date":"2022-06-23T00:00:00Z","summary":"昨日見つけたFlutterで始めるモバイルアプリ開発連載一覧：CodeZine（コードジン）の第7回まで読んだ。 ここまではFlutterというよりはDartの言語的な解説がメインで、いままで何となくでやっていた所が復習できた。 ただ、書かれた時期がFlutter2の登場以前なので、細かいところや作法は","tags":["Flutter"],"title":"Dart復習"},{"categories":null,"objectID":"df4cfe11485cd6e92f0afbac1498132f","permalink":"https://umemak.github.io/blog/posts/2022/06/21_flutter_web_scroll/","publish_date":"2022-06-22T00:00:00Z","summary":"基本的な実装ができたので、Firebase HostingにデプロイしてPixel4で表示してみた。 画像をアップロードして画面の表示項目が増えたら、画面下部のボタンが画面外に出て押せなくなってしまった。 SingleChildScrollView でまるっと囲んでしまえば良いらしい。 PWAとしてインストールしていた場合は、再インストールしないと","tags":["Flutter"],"title":"Flutter Webをスマホで表示したらスクロールできなかった"},{"categories":null,"objectID":"75e8b718bde29a3236aa4521f0f69530","permalink":"https://umemak.github.io/blog/posts/2022/06/22_flutter_study/","publish_date":"2022-06-22T00:00:00Z","summary":"Flutterでのレイアウトの組み合わせ方を学ぼう～実際の画面例を使用 (1/2)：CodeZine（コードジン） こういうリスト作りたいなと思って検索してたどり着いたのだけど、 Flutterで始めるモバイルアプリ開発連載一覧：CodeZine（コードジン） この連載一通り読んでみれば勉強になりそう。","tags":["Flutter"],"title":"Flutterを学ぶ"},{"categories":null,"objectID":"a3d8d953ceec0f9af4ec83c277c55d2c","permalink":"https://umemak.github.io/blog/posts/2022/06/20_flutter_firestore/","publish_date":"2022-06-21T00:00:00Z","summary":"親コレクションと子コレクションがあったとして、子を親のサブコレクションにするか、子に親のIDを持たせて別のコレクションにするか問題。 別のコレクションにした場合、クエリ時にwhereを使って親IDを指定して絞り込むと、orderByが使えない。 エラーにならないけど、ゼロマッチになってしまう。 order","tags":["Flutter"],"title":"Firestoreでサブコレクションを使う理由"},{"categories":null,"objectID":"c07478a2accf17fcf29a7e33d5ded34d","permalink":"https://umemak.github.io/blog/posts/2022/06/20_flutter_auth/","publish_date":"2022-06-20T00:00:00Z","summary":"毎回ログイン画面に遷移して面倒だなぁと思っていた件。 FlutterWebでFirebaseAuthのcurrentUserがリロード時にnullになることに対しての対処法 同様に、runAppの前に await FirebaseAuth.instance.userChanges().first; を入れたら解消した。","tags":["Flutter"],"title":"Flutterでリロードしたときもログイン状態を維持する"},{"categories":null,"objectID":"f3c807eacc6aae72471e8d1cde0c782d","permalink":"https://umemak.github.io/blog/posts/2022/06/19_flutter_dir/","publish_date":"2022-06-19T00:00:00Z","summary":"lib直下にmainとstateと画面ごとのファイルをおいているけど、ProviderやらRiverpodの参考に見てるページはmainに全部書いていて、ページごとに分割した書き方がいまいちわからない。 状態管理も考慮したファイル構成はどうなのかなとググったら、repositoryやらserviceや","tags":["Flutter"],"title":"Flutterのディレクトリ構成"},{"categories":null,"objectID":"e43d0c8e3fca14893eb5253842ca06af","permalink":"https://umemak.github.io/blog/posts/2022/06/18_amazon_ivs/","publish_date":"2022-06-18T00:00:00Z","summary":"YouTubeみたいな動画配信とチャットできるサイト作るのに良さそうなサービスないかな、と思って探したのがAmazon Interactive Video Service。 動画の配信はOBSを使って簡単にできそう。 Live Streaming with Amazon Interactive Video Service S3に自動的に保存することもできるようなので、後から視聴することもできそう。 Amazon S3 への自動録画 - Amazon Interactive Video Service チャ","tags":["aws"],"title":"Amazon IVS入門"},{"categories":null,"objectID":"b453d70267d4c375ecc354e6764049dc","permalink":"https://umemak.github.io/blog/posts/2022/06/17_flutter_upload/","publish_date":"2022-06-17T00:00:00Z","summary":"ファイルを選択してFirebase Storageにアップロードする処理は昨日できた。 フォーム画面で選択したファイルを、アップロードする前にプレビュー表示をしたい。 画像の表示はImage class - widgets library - Dart APIを使えばできる、のだけれど、画面を表示したタイミングではまだ画像が選択されていないので何も表示でき","tags":["Flutter"],"title":"アップロードしたファイルを表示する"},{"categories":null,"objectID":"04db20c0db43ea5bd77debdcb481ec01","permalink":"https://umemak.github.io/blog/posts/2022/06/16_flutter_upload/","publish_date":"2022-06-16T00:00:00Z","summary":"画像を選択してアップロードする機能を付けたい。 アップロード先はFirebase Storageで。 Flutter×Firebase(CloudStorage)でファイルダウンロードとアップロードを簡単に実現する方法 - Qiita を見て実装してみたところ、Unsupported operation: Platform._operati","tags":["Flutter"],"title":"Flutterでファイルアップロード"},{"categories":null,"objectID":"a7b099c9aa8e588d27a9946d870cd25c","permalink":"https://umemak.github.io/blog/posts/2022/06/15_flutter_router/","publish_date":"2022-06-15T00:00:00Z","summary":"go_router 続き。 パラメータを渡すところは、go_router/parameters.mdx at main · csells/go_routerを見て書いたらうまくいった。 あとはログイン周り（リロードしたときにログイン状態を維持したい）は、routerとは別次元の問題なのでいったん置いておく。 開発中は自分しか使わないし問題","tags":["Flutter"],"title":"Flutterのrouter"},{"categories":null,"objectID":"4fddf31c82930a4a0f41b3aea0cab658","permalink":"https://umemak.github.io/blog/posts/2022/06/14_flutter_router/","publish_date":"2022-06-14T00:00:00Z","summary":"画面レイアウトの調整が面倒な件、ロジックを作り始めると、目的の画面にたどり着くまでに手数が必要になるせいだと気づいた。 ということで、目的の画面に直接アクセスできるように（Webアプリ版なので）URL指定で開けるようにする。 そのためにはrouterを使うのが良さそう。 軽く検索したところ、以下のパッケー","tags":["Flutter"],"title":"Flutterのrouter選定"},{"categories":null,"objectID":"a5e4e9d20deef09af5c97f2558127b5b","permalink":"https://umemak.github.io/blog/posts/2022/06/13_flutter_dropdown/","publish_date":"2022-06-13T00:00:00Z","summary":"DropdownButton class - material library - Dart APIのサンプルを持ってきて、サンプルではchildとvalueを同じ文字列にしてるのを別々に指定できるようにして、とりあえずループ使わないで配列直接指定にしてみたら、エラー。 Assertion failed: file:///home/umemak/sdk/flutter/packages/flutter/lib/src/material/dropdown.dart:882:15 items == null || items.isEmpty || value == null || items.where((DropdownMenuItem\u0026lt;T\u0026gt; item) { return item.value == value; }).length == 1 \u0026#34;There should be exactly one item with [DropdownButton]\u0026#39;s value: One. \\nEither zero or 2 or more [DropdownMenuItem]s were detected with the same value\u0026#34; dropdownV","tags":["Flutter"],"title":"FlutterのDropdownを使う"},{"categories":null,"objectID":"97465f53fb0794b59694184f5a3004d8","permalink":"https://umemak.github.io/blog/posts/2022/06/12_oracle_docker_go3/","publish_date":"2022-06-12T00:00:00Z","summary":"昨日は、mattn/go-oci8: Oracle driver for Go using database/sqlとsijms/go-ora: Pure go oracle clientを使ったサンプルをコンテナ上でgo runして動かしていた。 今日はgo buildでバイナリにして実行できるようにしてみる。 何もオプション付けずにビルドしたら、どちらも問題なし。 バイナリサ","tags":["Docker","oracle","go"],"title":"OracleにGoで接続する3"},{"categories":null,"objectID":"6712468b830f908446db188d06cfc684","permalink":"https://umemak.github.io/blog/posts/2022/06/11_oracle_docker/","publish_date":"2022-06-11T00:00:00Z","summary":"docker-images/OracleDatabase/SingleInstance at main · oracle/docker-imagesはクライアント側みたいにビルド済みイメージが用意されていないのかな、と思ったらOracle Container Registryにそれらしいものを見つけた。 Home \u0026gt; Database \u0026gt; express $ docker pull container-registry.oracle.com/database/express:latest サイズやばい $ docker images | grep ora oraclelinux 8 3bbe8a2c4b82 9 days ago 226MB oraclelinux 8-slim 1fcc1e6dda05 3 weeks ago 101MB container-registry.oracle.com/database/express latest e986fd612413 2 months ago 11.2GB $ docker run -d container-registry.oracle.com/database/express $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES","tags":["Docker","oracle"],"title":"OracleサーバーのDockerイメージ"},{"categories":null,"objectID":"66b393cfbbaa031ac788abbd9476f469","permalink":"https://umemak.github.io/blog/posts/2022/06/11_oracle_docker_go/","publish_date":"2022-06-11T00:00:00Z","summary":"前の記事でsqlplusで接続できたので、Goのプログラムから接続してみる。 instantclientベースでGoをインストールするDockerfile作成 FROM ghcr.io/oracle/oraclelinux8-instantclient:21 RUN yum install -y wget tar RUN wget https://go.dev/dl/go1.18.3.linux-amd64.tar.gz RUN rm -rf /usr/local/go \u0026amp;\u0026amp; tar -C /usr/local -xzf go1.18.3.linux-amd64.tar.gz ENV PATH=\u0026#34;${PATH}:/usr/local/go/bin\u0026#34; CMD [ \u0026#34;go\u0026#34;, \u0026#34;version\u0026#34; ] docker-composeもそれを使うように修正 version: \u0026#39;3\u0026#39; services: db: image: container-registry.oracle.com/database/express ports: - 1521:1521 environment: - ORACLE_PWD=OraclePwd cli: build: . image: oraclegocli tty: true","tags":["Docker","oracle","go"],"title":"OracleにGoで接続する"},{"categories":null,"objectID":"014ac3e89ac2489cb5ccd70b2ac1345f","permalink":"https://umemak.github.io/blog/posts/2022/06/11_oracle_docker_go2/","publish_date":"2022-06-11T00:00:00Z","summary":"mattn/go-oci8: Oracle driver for Go using database/sqlでやってみる。 sh-4.4# go run go-oci8/main.go # pkg-config --cflags -- oci8 pkg-config: exec: \u0026#34;pkg-config\u0026#34;: executable file not found in $PATH sh-4.4# yum install -y pkgconfig sh-4.4# go run go-oci8/main.go # pkg-config --cflags -- oci8 Package oci8 was not found in the pkg-config search path. Perhaps you should add the directory containing `oci8.pc\u0026#39; to the PKG_CONFIG_PATH environment variable Package \u0026#39;oci8\u0026#39;, required by \u0026#39;virtual:world\u0026#39;, not found pkg-config: exit status 1 とりあえずmain.goと同じところにoci8.pcを作成。中身はExamples。 sh-4.4# export PKG_CONFIG_PATH=. sh-4.4# go run go-oci8/main.go # github.com/mattn/go-oci8 cgo: C compiler \u0026#34;gcc\u0026#34; not found: exec: \u0026#34;gcc\u0026#34;:","tags":["Docker","oracle","go"],"title":"OracleにGoで接続する2"},{"categories":null,"objectID":"acd9e2997863bfe1f56e4ecb7c57cf57","permalink":"https://umemak.github.io/blog/posts/2022/06/10_flutter_geochart/","publish_date":"2022-06-10T00:00:00Z","summary":"リクエスト受けてHTML組み立てて返すFirebase Functions作って、これをWebViewXで利用することで実現できた。 photomap/index.ts at main · umemak/photomap https://github.com/umemak/photomap/blob/c70f1a41038bd5a82edd72b63971ea83a393b41a/lib/MapDetailPage.dart#L140-L149 webview_flutter | Flutter PackageはAndroid/iOSしか対応していないみたいなので、あきらめた。","tags":["Flutter"],"title":"FlutterでGeoChart"},{"categories":null,"objectID":"f28973ba37f60da0151c9729bc7e7b0f","permalink":"https://umemak.github.io/blog/posts/2022/06/09_flutter_paint/","publish_date":"2022-06-09T00:00:00Z","summary":"どんな感じで作るのかなと思って、ググった。 Flutterで手書きを実装する - Qiita 【Flutter】Flutterでお絵かきアプリ（ペイント機能）の実装を紹介します | 株式会社イーガオ 【Flutter】お絵描きアプリを作ってみた - InheritedNotifier / CustomPainter DartPadで動くサンプルが用意されててすごい 【Flutter】Ge","tags":["Flutter"],"title":"Flutterでお絵描きアプリ"},{"categories":null,"objectID":"84cad6c109db4082adfea0ae868dd5d6","permalink":"https://umemak.github.io/blog/posts/2022/06/08_oracle_docker/","publish_date":"2022-06-08T00:00:00Z","summary":"oracle/docker-images: Official source for Docker configurations, images, and examples of Dockerfiles for Oracle products and projects にまとめられている。 サーバー側：docker-images/OracleDatabase at main · oracle/docker-images クライアント側：docker-images/OracleInstantClient at main · oracle/docker-images ベースイメージはOraclelinux - Official Image | Docker Hubが使われている（結構でかい）","tags":["Docker","oracle"],"title":"OracleのDockerイメージ"},{"categories":null,"objectID":"e26df33c219b94e37c59227633a92bca","permalink":"https://umemak.github.io/blog/posts/2022/06/07_geochart/","publish_date":"2022-06-07T00:00:00Z","summary":"Visualization: GeoChart | Charts | Google Developers FlutterアプリでGeoChartを使いたかったのだけれど、charts_flutterには含まれていない様子。 いずれにしてもSVGかVMLで出力されるので、それを返すWebAPIを作ってあげれば何とかなる？ ドキュメント見た感じ、画像だけ取り出すのは難しそう？WebViewにするほ","tags":["flutter"],"title":"GeoChart"},{"categories":null,"objectID":"8629a425d77b7e501d66fc9ccd23126f","permalink":"https://umemak.github.io/blog/posts/2022/06/06_newapp/","publish_date":"2022-06-06T00:00:00Z","summary":"以前（途中まで）作ったアプリを流用してみたものの、Flutterのバージョンが上がったせいかそのままだと警告がたくさん出る。 ほとんどはconstを追加する程度なので、問題はなさそう。 とりあえず、認証とFirestore登録までできた。","tags":["flutter"],"title":"新規Flutterアプリ"},{"categories":null,"objectID":"10aa3b7f9cee40de8f30a04e6fc15398","permalink":"https://umemak.github.io/blog/posts/2022/06/05_wsl_portforward/","publish_date":"2022-06-05T00:00:00Z","summary":"WSL2で開発中のWebアプリを同じLANのスマホで動作確認する方法 ExpoじゃなくてFlutterだけど、上記ページの方法で接続することができた。 まるでここ数日の苦労を見ていたかのようなタイミングでの投稿に感謝。 New-NetFireWallRuleが重要っぽい。","tags":["wsl2"],"title":"WSL2にLAN内のAndroidから接続したい"},{"categories":null,"objectID":"d5e6a51798c7427aa02d4af6d683770f","permalink":"https://umemak.github.io/blog/posts/2022/06/05_newapp/","publish_date":"2022-06-05T00:00:00Z","summary":"とりあえず手作業でFlutterアプリを構築していく。 認証とか基本的なところは、以前作ったアプリの流用で。 こういう自分テンプレみたいのをそろえていくと良いのだろうな。","tags":["flutter"],"title":"新規Flutterアプリ"},{"categories":null,"objectID":"913ee1499a5f4845a5d30681385b7afd","permalink":"https://umemak.github.io/blog/posts/2022/06/04_flutterflow/","publish_date":"2022-06-04T00:00:00Z","summary":"FlutterFlow - Build Native Apps Visually 前にチュートリアルやって、確か途中で分からなくなって放置してた。 FlutterFlowのススメを読んで、再度挑戦する気になってやってみた。 やっぱりよくわからなかった。 慣れの問題かもしれないけれど、いきなり何でもできる状態に放り込まれると、逆に何をしたらよいかわからなくなる状態。 コードだと","tags":["flutter"],"title":"FlutterFlow"},{"categories":null,"objectID":"a4b643a0e74bf5efe5da095b1305274e","permalink":"https://umemak.github.io/blog/posts/2022/06/03_expo_flutter/","publish_date":"2022-06-03T00:00:00Z","summary":"ちょっとしたアプリを作るのに、どちらが良いのか迷っている。 ExpoはWindows環境でもiOS実機で動作確認ができるのが魅力。 ただ、「ちょっとした」アプリでそこまでする必要があるのかというと微妙。 やっぱりFlutterの習熟度を上げていくのが良いのかなぁ。","tags":["expo","flutter"],"title":"ExpoとFlutter選択"},{"categories":null,"objectID":"262f2ffb71c80ff75dc1e658c4cd8875","permalink":"https://umemak.github.io/blog/posts/2022/06/02_wsl_portforward/","publish_date":"2022-06-02T00:00:00Z","summary":"WSL2 の localhostForwarding 機能がうまくうごかない - mrk21::blog {} この記事を見ながらやってみたけど、うまくいかない。 もしかしたら経路のどこかでブロックされているのかもしれない。 うまくいったとしても、QRコードがWSL2のIPで作られているので、手打ちでWindows11のIPを打たないといけないのは面倒。","tags":["expo","wsl2"],"title":"WSL2のExpoにLAN内のAndroidから接続したい（未完）"},{"categories":null,"objectID":"d052d4d5d4b76472f437f17bf4342d82","permalink":"https://umemak.github.io/blog/posts/2022/06/01_expo/","publish_date":"2022-06-01T00:00:00Z","summary":"以前一度使ってみたことがあるExpoに再入門。 前にやったときはWSLだとダメでラズパイで動かしていたけど、もう１年以上たっているしいけるのでは？という期待を込めてWSL2でやってみる。 $ sudo npm install --global expo-cli $ cd photomap $ expo init . ✔ Choose a template: › tabs (TypeScript) several example screens and tabs using react-navigation and TypeScript ✔ Downloaded template. 📦 Using npm to install packages. ✔ Installed JavaScript dependencies. ✅ Your project is ready! To run your project, run one of the following npm commands.","tags":["expo"],"title":"Expo"},{"categories":null,"objectID":"f9f9bb7ef07108ad9f6714856a68cf2d","permalink":"https://umemak.github.io/blog/posts/2022/05/31_firebase_hosting/","publish_date":"2022-05-31T00:00:00Z","summary":"WebViewを使うとして、MDMMLのJS版を公開する場所をFirebase Hostingにした。 久しぶりにFirebase使ったらオプションが色々増えている気がする。 $ firebase init ######## #### ######## ######## ######## ### ###### ######## ## ## ## ## ## ## ## ## ## ## ## ###### ## ######## ###### ######## ######### ###### ###### ## ## ## ## ## ## ## ## ## ## ## ## #### ## ## ######## ######## ## ## ###### ######## You\u0026#39;re about to initialize a Firebase project in this directory: /home/umemak/workspace/mdmml_js ? Which Firebase","tags":["Firebase"],"title":"Firebase設定"},{"categories":null,"objectID":"82752557f8c146efef16ad982a3da935","permalink":"https://umemak.github.io/blog/posts/2022/05/30_json2md/","publish_date":"2022-05-30T00:00:00Z","summary":"\u0026lt;が消えるのはエスケープ処理を入れることで回避できた。 https://github.com/umemak/mdmml_js/commit/7227e554490538dca2a2dce428fb0382297100f4 ここまでできたら、アプリ化したい。 Flutterは言語が違うけど、WebView的なものでラップすればいけるかな。","tags":["JavaScript"],"title":"json2md"},{"categories":null,"objectID":"bc7cd0cc94aa909bbf7e7abf3875cd4d","permalink":"https://umemak.github.io/blog/posts/2022/05/29_json2md/","publish_date":"2022-05-29T00:00:00Z","summary":"JSONをマークダウンに変換するのは比較的簡単にできた。 mdmmlに組み込んでサンプル鳴らしてみたらなんかおかしい。 よく見ると\u0026lt;と\u0026gt;に囲まれたところが消えている。タグ扱いされてしまっているようだ。 JSONに保存するタイミングで\u0026lt;などが\u0026amp;lt;などに変換されているなぁ。","tags":["JavaScript"],"title":"json2md"},{"categories":null,"objectID":"9b2c6050f1da54db1e61b74eeaf42321","permalink":"https://umemak.github.io/blog/posts/2022/05/28_json2md/","publish_date":"2022-05-28T00:00:00Z","summary":"codex-team/editor.jsの出力をIonicaBizau/json2md: A JSON to Markdown converter.に入れてみた。 思ってはいたけど、ダメだった。 面倒でも自作しないといけないか。。","tags":["JavaScript"],"title":"json2md"},{"categories":null,"objectID":"8acc3a5564b78206d35c9de531d4847c","permalink":"https://umemak.github.io/blog/posts/2022/05/27_editorjs/","publish_date":"2022-05-27T00:00:00Z","summary":"以前調べたマークダウンエディタ、codex-team/editor.jsは保存形式がJSONだったのであきらめたけど、JSONとマークダウンを相互変換できればやりたいことが実現できるのではないか？","tags":["JavaScript","editor"],"title":"マークダウンエディター選び"},{"categories":null,"objectID":"d551b817cce88fa4655e4d4d330312ff","permalink":"https://umemak.github.io/blog/posts/2022/05/26_kuzzle_auth/","publish_date":"2022-05-26T00:00:00Z","summary":"Authenticate Users | Kuzzle Documentation 標準で用意されている認証方法は、ユーザー名＋パスワードもしくはOAuthで、Passport.jsに依存している様子。 Firebaseみたいなメールアドレスを使った認証はないのかとPassport.jsのFeaturesで検索しても、それらしいものはない。 ちょっとこれは自分の使い方だと困っ","tags":["Kuzzle"],"title":"Kuzzleのユーザー認証"},{"categories":null,"objectID":"c5a8aa100b9ab80abee766f5197710a6","permalink":"https://umemak.github.io/blog/posts/2022/05/25_snow_crash/","publish_date":"2022-05-25T00:00:00Z","summary":"スノウ・クラッシュ (全2巻) Kindle版 これでメタヴァース完全に理解した。 終わり方がちょっと物足りない気がする。","tags":["Book"],"title":"スノウ・クラッシュ読了"},{"categories":null,"objectID":"ab27a1d24f8add533b14baee138695cd","permalink":"https://umemak.github.io/blog/posts/2022/05/24_kuzzle_doc/","publish_date":"2022-05-24T00:00:00Z","summary":"ちゃんと読もうと思ったので、日本語に訳しながらやっていこうかと。 https://github.com/umemak/sdk-dart/blob/master/doc/3/getting-started/flutter/index.md DeepLでざっくり訳して細かいところを手直しする感じで。 で、ファイル構成眺めていたら、getting-startedのコード見つけた。 https://github.com/kuzzleio/sdk-dart/tree/master/doc/3/getting-started/.flutter/lib これはリンク張っといてほしかった。","tags":["Kuzzle","Dart"],"title":"KuzzleのDart SDKドキュメント"},{"categories":null,"objectID":"476e7637cc8785457f4cd30624e5e449","permalink":"https://umemak.github.io/blog/posts/2022/05/23_dartpad/","publish_date":"2022-05-23T00:00:00Z","summary":"FlutterFire のページを見に行ったらヘッダに「DartPad」というのを見つけて、開いてみた。 ブラウザでFlutterのサンプルが実行できてる・・！ GitHubのReadmeによると、2015年から作られ始めて、2019年にFlutter対応した新バージョンが公開されたらしい。 importできるパッケージが限ら","tags":["flutter","Dart"],"title":"DartPad"},{"categories":null,"objectID":"4ae356bab745e0bbe313ea72e1d5b536","permalink":"https://umemak.github.io/blog/posts/2022/05/22_flutter_kuzzle/","publish_date":"2022-05-22T00:00:00Z","summary":"Flutter | Kuzzle Documentation がとりあえず動くようになった。 エラーが出ないように直して回っただけなので、本当に正しい修正なのかは自信なし。 https://github.com/umemak/kuzzle_flutter_chat DBの読み書きはこれでできることが確認できた。","tags":["flutter","Kuzzle"],"title":"Flutter+Kuzzle サンプル"},{"categories":null,"objectID":"3effcf7997910266423e4c1280858094","permalink":"https://umemak.github.io/blog/posts/2022/05/21_flutter_kuzzle/","publish_date":"2022-05-21T00:00:00Z","summary":"KuzzleのFlutterチュートリアル的なものをやってみた。 Flutter | Kuzzle Documentation Dart Null Safety v3.x を選択しても、中身はv2と同じようだ。 pubspec.yamlのSDKバージョン指定まで同じなので、v2系がインストールされてしまってflutter build web実行したときにコンパイルエラーになる。 kuzzle: ^3.0.2に編集したら","tags":["flutter","Kuzzle"],"title":"Flutter+Kuzzle"},{"categories":null,"objectID":"ca50b2ff01770776d11fe4daf0fb59da","permalink":"https://umemak.github.io/blog/posts/2022/05/20_flutter/","publish_date":"2022-05-20T00:00:00Z","summary":"久しぶりすぎてFlutterアプリの初手を忘れていたのでメモ。 先日、Flutter 3をインストールしてあったのでその続きから。 ~/.bashrc にexport追加＆bashrc再読み込み。 export PATH=$HOME/sdk/flutter/bin:$PATH アプリ用のディレクトリに入って初期化実行。 flutter create .","tags":["flutter"],"title":"Flutter再開"},{"categories":null,"objectID":"e25389ba53f671901e8eb1c3c3166f03","permalink":"https://umemak.github.io/blog/posts/2022/05/19_kuzzle_sdk/","publish_date":"2022-05-19T00:00:00Z","summary":"Go用SDKを見ていて、Authenticationにユーザー作成のAPIがないなーと思って、Dart用を見たらsecurityの下にあった。 よく見ると言語ごとにSDKドキュメントの構成が違っていて、提供されているAPIも統一されていない様子。 全部読んだわけではないけど、どの言語を選ぶかによって実現","tags":["Kuzzle"],"title":"Kuzzle SDKを眺めてみる"},{"categories":null,"objectID":"abd144cde3ca5f53e5c120cacf801e46","permalink":"https://umemak.github.io/blog/posts/2022/05/18_kuzzle_admin/","publish_date":"2022-05-18T00:00:00Z","summary":"ローカルでAdmin Consoleがうまくインストールできなかったので、公式のものを使わせてもらうことにした。 試しに、https://next-console.kuzzle.io/にアクセスした後ネットワークを切断して、項目設定＆ログインできたし、DBも作成できたので外部への依存はないみたい（送信し","tags":["Kuzzle"],"title":"Kuzzle Admin Consoleをネットワーク切断して使ってみる"},{"categories":null,"objectID":"72b7d523ba6bdbff1b7917305e6b6b97","permalink":"https://umemak.github.io/blog/posts/2022/05/17_kuzzle_raspi/","publish_date":"2022-05-17T00:00:00Z","summary":"https://github.com/kuzzleio/kuzzle-admin-console#local-build をやってみる $ git clone https://github.com/kuzzleio/kuzzle-admin-console $ cd kuzzle-admin-console $ npm install npm ERR! command sh -c node-gyp rebuild npm ERR! gyp info it worked if it ends with ok npm ERR! gyp info using node-gyp@3.8.0 npm ERR! gyp info using node@17.3.0 | linux | arm npm ERR! gyp ERR! configure error npm ERR! gyp ERR! stack Error: Command failed: /usr/bin/python -c import sys; print \u0026#34;%s.%s.%s\u0026#34; % sys.version_info[:3]; npm ERR! gyp ERR! stack File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1 npm ERR! gyp ERR! stack import sys; print \u0026#34;%s.%s.%s\u0026#34; % sys.version_info[:3]; npm ERR! gyp ERR! stack ^ npm ERR! gyp ERR! stack SyntaxError: invalid syntax ダメか。。","tags":["Kuzzle","raspberry-pi"],"title":"Kuzzle Admin Consoleをラズパイ4に入れてみる"},{"categories":null,"objectID":"155cfe760c0b841ac1e2b94bb2df79ec","permalink":"https://umemak.github.io/blog/posts/2022/05/16_kuzzle/","publish_date":"2022-05-16T00:00:00Z","summary":"Flutter | Kuzzle Documentation から Run Kuzzle | Kuzzle Documentation でバックエンドをローカルで起動する。 $ sudo npm install -g kourou $ kourou app:scaffold playground $ cd playground \u0026amp;\u0026amp; npm run dev:docker http://localhost:7512/ でJSONで情報が取得できた。 http://next-console.kuzzle.io/ でAdmin Consoleが表示できるけど、ローカル環境なのに外部を一度経由するのかな。ちょっとこれは気になる。 What is Kuzzle | Kuzzle Documentation As it is a single-page application (SPA), no data related to your Kuzzle application will pass through our servers, so you can use the online","tags":["Kuzzle"],"title":"Kuzzleを使ってみる"},{"categories":null,"objectID":"747f4f965ac96d9c82d6d1ba8d1d3df0","permalink":"https://umemak.github.io/blog/posts/2022/05/15_baas/","publish_date":"2022-05-15T00:00:00Z","summary":"Firebase以外のBaaSについて、年初に軽く調べていた。 その時はクラウドサービスを見ていたけれど、OSSのものも見てみた。 Parse Platform The Open Source Firebase Alternative | Supabase Open Source Backend - Kuzzle Backend Low-code backend to build modern apps | Back4App Parse Platformベース SDK JS Go Flutter Parse Platform o - o Supabase o - o Kuzzle Backend o o o SDK的にはKuzzleだけど、情報量で見るとSupabaseが有","tags":["Firebase"],"title":"Firebase以外のBaaS"},{"categories":null,"objectID":"17a9a884822a6c6066d96044fb2e4079","permalink":"https://umemak.github.io/blog/posts/2022/05/14_js_book/","publish_date":"2022-05-14T00:00:00Z","summary":"先日買ったJavaScriptモダンプログラミング完全ガイド、まだ途中だけど結構理解が進む気がする。 節ごとに難易度表示のアイコンがあるのも親切で良い。","tags":["JavaScript"],"title":"JavaScriptモダンプログラミング完全ガイド"},{"categories":null,"objectID":"97ecdb92051ec1d1cddc6755d018924f","permalink":"https://umemak.github.io/blog/posts/2022/05/13_flutter_3/","publish_date":"2022-05-13T00:00:00Z","summary":"WSL2にインストールしてみる。 Linux install | Flutter $ cd ~/sdk $ git clone https://github.com/flutter/flutter.git -b stable $ export PATH=\u0026#34;$PATH:`pwd`/flutter/bin\u0026#34; $ flutter doctor Missing \u0026#34;unzip\u0026#34; tool. Unable to extract Dart SDK. Consider running \u0026#34;sudo apt-get install unzip\u0026#34;. $ sudo apt-get install unzip $ flutter doctor [✓] Flutter (Channel stable, 3.0.0, on Ubuntu 20.04 LTS 5.10.16.3-microsoft-standard-WSL2, locale C.UTF-8) [✗] Android toolchain - develop for Android devices ✗ Unable to locate Android SDK. Install Android Studio from: https://developer.android.com/studio/index.html On first launch it will assist you in installing the Android SDK components. (or visit https://flutter.dev/docs/get-started/install/linux#android-setup for detailed instructions). If the Android SDK has been installed to a custom location, please use `flutter config --android-sdk` to update to that location. [✗] Chrome - develop for the web (Cannot find Chrome executable at google-chrome) ! Cannot find","tags":["flutter"],"title":"Flutter 3をインストールしてみる"},{"categories":null,"objectID":"f692a646dd71924b4fde014ff0a0d01b","permalink":"https://umemak.github.io/blog/posts/2022/05/12_flutter3/","publish_date":"2022-05-12T00:00:00Z","summary":"［速報］「Flutter 3」登場、FlutterによるmacOSとLinuxアプリ開発が正式版に。Macのユニバーサルバイナリにも対応 － Publickey MacとLinuxのアプリケーション開発の正式版より、「Firebase plugin for Flutter」のほうが気になった。 これは前に使っていたFlutterFireとは別物","tags":["flutter"],"title":"Flutter 3"},{"categories":null,"objectID":"c975ab4c99fad9106ff403946a9e5ffd","permalink":"https://umemak.github.io/blog/posts/2022/05/11_docker_desktop_481/","publish_date":"2022-05-11T00:00:00Z","summary":"Docker Desktopの4.8.1が出たので、host.docker.internalの件が変化あったか試してみた。 https://github.com/umemak/docker_network_test 直っていた。 4.8.0でも試してみたところ、4.8.0のタイミングで修正された模様。","tags":["docker"],"title":"Docker Desktop 4.8.1でhost.docker.internal"},{"categories":null,"objectID":"249557722dcf397483ecd99ba73becd4","permalink":"https://umemak.github.io/blog/posts/2022/05/10_harbor/","publish_date":"2022-05-10T00:00:00Z","summary":"ローカルサーバーでやってみた。 検索は問題なく導入できて動作も問題なさそうだけど、見た目がだいぶ印象変わってしまうのがちょっと悩ましい。 あと、一覧で日付が出てるのに個別ページに遷移すると日付が出ないのはなぜだろう。デモサイトでは個別ページにも出てるのに。 乗り換えはいったん保留。","tags":["hugo"],"title":"harbor試してみた"},{"categories":null,"objectID":"638c2297df979cfec09df27672b6b934","permalink":"https://umemak.github.io/blog/posts/2022/05/09_harbor/","publish_date":"2022-05-09T00:00:00Z","summary":"matsuyoshi30/harbor: Simple and minimal personal blog theme. このテーマ、全文検索対応しているようなので気になっている。 検索に使われているのはnextapps-de/flexsearch: Next-Generation full text search library for Browser and Node.jsらしい。 flexsearch.jsは日本語だと半角英数字が検索できないとかあるみたいだけど、簡単に使うだけなら問題ないのではないか","tags":["hugo"],"title":"Hugoテーマharbor"},{"categories":null,"objectID":"bc56ea945f0c27b3f84e636cd5910cf9","permalink":"https://umemak.github.io/blog/posts/2022/05/08_mdeditor/","publish_date":"2022-05-08T00:00:00Z","summary":"マークダウン部分の入力に使うライブラリを探す。 markdown WYSIWYGをキーワードにnpmを検索した結果、 outline/rich-markdown-editor: The open source React and Prosemirror based markdown editor that powers Outline. Want to try it out? Create an account: 良さそうだけどArchivedになっててメンテナンスされてない？ nhn/tui.editor: 🍞📝 Markdown WYSIWYG Editor. GFM Standard + Chart \u0026amp; UML Extensible. プレビュー形式ではなくて、直接編集したい codex-team/editor.js: A block-styled editor with clean JSON output 良さそう Saul-Mirone/milkdown: 🍼 Plugin","tags":["JavaScript","editor"],"title":"マークダウンエディター選び"},{"categories":null,"objectID":"12ae7a24103f66c0d01f75e8a6f6e34d","permalink":"https://umemak.github.io/blog/posts/2022/05/07_js_book/","publish_date":"2022-05-07T00:00:00Z","summary":"JavaScriptモダンプログラミング完全ガイド 堅牢なコードを効率的に開発できる！ impress top gearシリーズ | Cay S. Horstmann, 吉川 邦夫 | 工学 | Kindleストア | Amazon Kindle版が安く売ってたので買ってみた。","tags":["JavaScript"],"title":"JavaScriptモダンプログラミング完全ガイド"},{"categories":null,"objectID":"2b8014954ce96bc8abf940bc9c0da214","permalink":"https://umemak.github.io/blog/posts/2022/05/07_jzz/","publish_date":"2022-05-07T00:00:00Z","summary":"magenta-jsがうまく動いてくれなくて、他に似たもの探して jazz-soft/JZZ-gui-Player: MIDI Player for browsersを使ってみた。 readmeのサンプルの通りだと音が出なかったけど、デモページのソースを参考にJZZ.synth.Tiny.register('Web Audio');を追加したらできた。 あとはエディタ部分をマークダ","tags":["JavaScript","midi"],"title":"JZZ-gui-Player"},{"categories":null,"objectID":"c22b2aefae808da1bc27ba9ce02b2798","permalink":"https://umemak.github.io/blog/posts/2022/05/06_ts_export/","publish_date":"2022-05-06T00:00:00Z","summary":"MDMMLのTypeScript移植が大体できたので、HTMLから呼び出せるようにしたい。 先日はexportしてるはずなのに見つからないというエラーでどうしたら良いかわからず。 HTMLから外部のJavascriptファイルのfunctionを呼びたいはやりたいこととあっているように思える。 interface Window { Hello(): void;","tags":["TypeScript"],"title":"TypeScriptのexport"},{"categories":null,"objectID":"0ad0b10e23f4d8cce2e17b3dd3b6180e","permalink":"https://umemak.github.io/blog/posts/2022/05/05_tdt/","publish_date":"2022-05-05T00:00:00Z","summary":"もともとGoで書いていたテストがこんな感じだったのだけど、 こんな風に移植してて面倒だと感じていた。 TS と Jest で Table Driven Test をする · tblogを参考に書き換えて、こうなった。","tags":["TypeScript","test"],"title":"TypeScriptでTable Driven Test"},{"categories":null,"objectID":"3c713dd9368175dad23a152517c87bf9","permalink":"https://umemak.github.io/blog/posts/2022/05/05_stdout/","publish_date":"2022-05-05T00:00:00Z","summary":"マークダウンから変換したSMFデータを標準出力に書き出したいのだけれど、バイナリをそのまま出力する方法がわからず。。 console.logだと型情報とかついた普通のテキストになってしまう。 $ node dist/main.js Uint8Array(45) [ 77, 84, 104, 100, 0, 0, 0, 6, 0, 1, 0, 1, 3, 192, 77, 84, 114, 107, 0, 0, 0, 23, 0, 255, 3, 0, 0, 255, 81, 3, 7, 161, 32, 0, 255, 88, 4, 4, 2, 24, 8, 0, 255, 47, 0 ] fsパッケ","tags":["TypeScript","mdmml"],"title":"TypeScriptで標準出力"},{"categories":null,"objectID":"e94cc05770a61d13e3be4c1501d19187","permalink":"https://umemak.github.io/blog/posts/2022/05/04_textencoder/","publish_date":"2022-05-04T00:00:00Z","summary":"replaceAllを使いたくて、tsconfig.jsonに以下設定を追加した。 \u0026#34;lib\u0026#34;: [ \u0026#34;ES2021.String\u0026#34; ] replaceAllが使えるようになったが、TextEncoderを使っているところでエラーになるようになってしまった。 error TS2304: Cannot find name \u0026#39;TextEncoder\u0026#39;. 定義がないのか？と思って@types/text-encoding - npmにある","tags":["TypeScript"],"title":"TextEncoderのエラー"},{"categories":null,"objectID":"29f1c464bad56b182f83287851fb7cef","permalink":"https://umemak.github.io/blog/posts/2022/05/03_jest/","publish_date":"2022-05-03T00:00:00Z","summary":"ブラウザからの動作確認はいったん置いておいて、コマンドライン実行で動くものを目指す。 どうせなら自動テストも動かしながらやっていきたい。 JavaScriptのテストフレームワークは、Jest · 🃏 Delightful JavaScript Testingが主流らしいので、それに乗っかる。 Typescriptでの単体テストの書き方(Jest) |","tags":["JavaScript","Jest"],"title":"Jestの導入"},{"categories":null,"objectID":"4f8242718bf9e3507a303d6ebe882a5f","permalink":"https://umemak.github.io/blog/posts/2022/05/03_n/","publish_date":"2022-05-03T00:00:00Z","summary":"Jest実行しようとしたらnode.jsのバージョンが低いらしく、エラーになったのでバージョンを上げる方法を検索したらnというものがあると知ったので試してみた。 Node.jsとnpmをアップデートする方法 | Rriver $ node -v v10.19.0 $ sudo npm install -g n $ sudo n stable $ node -v v10.19.0 $ hash -r $ node -v v16.15.0","tags":["JavaScript","n"],"title":"node.jsバージョン管理"},{"categories":null,"objectID":"75a39387a1b2e4c77679f87555de0395","permalink":"https://umemak.github.io/blog/posts/2022/05/03_rewire/","publish_date":"2022-05-03T00:00:00Z","summary":"テストのために関数exportしないといけないの、チョット気持ち悪いので、解決策を探ってみる。 jhnns/rewire: Easy monkey-patching for node.js unit testsが一般的らしい。 $ npm install -D rewire @types/rewire テストコードのimportを修正 import rewire from \u0026#39;rewire\u0026#39;; const __local__ = rewire(\u0026#39;./mdmml.ts\u0026#39;); const atoi = __local__.__get__(\u0026#39;atoi\u0026#39;) テスト実行 $ npm test \u0026gt; mdmml_js@1.0.0 test \u0026gt; jest FAIL src/mdmml.test.ts ● Test suite failed to run /home/umemak/workspace/mdmml_js/src/mdmml.ts:8 Tracks: Track[] = []; SyntaxError: Unexpected identifier at Object.load (node_modules/rewire/lib/moduleEnv.js:57:18) at internalRewire (node_modules/rewire/lib/rewire.js:49:15) at rewire (node_modules/rewire/lib/index.js:11:12) Test Suites: 1 failed, 1 total Tests: 0 total Snapshots: 0 total","tags":["JavaScript","rewire","jest"],"title":"rewireでjest"},{"categories":null,"objectID":"11b619a74f31a1735b98cfc5dc591aa0","permalink":"https://umemak.github.io/blog/posts/2022/05/02_http_server/","publish_date":"2022-05-02T00:00:00Z","summary":"ローカルでチョット確認するためのhttpサーバー立てるのに便利なhttp-party/http-server: a simple zero-configuration command-line http server。 最近、起動はするもののリクエストを送ると終了してしまう現象が起きていて、ググったらissueがあった。 Server Crashing with \u0026ldquo;Cannot set headers after they are sent to the client\u0026rdquo; · Issue #634 · http-party/http-server バージョン13.0.2だと大","tags":["npm"],"title":"http-serverメモ"},{"categories":null,"objectID":"5b28219df1cd5796e5298640e4bf238d","permalink":"https://umemak.github.io/blog/posts/2022/05/02_webpack/","publish_date":"2022-05-02T00:00:00Z","summary":"昨日は、TypeScript環境構築に手間をかけたくないという想いでParcelを試してみたところ、エラーで途方に暮れていた。 今日は、古き良きwebpackを試した。 参考にしたページはこちら 最新版TypeScript+webpack 5の環境構築まとめ(React, Vue.js, Three.jsのサンプル付き) -","tags":["JavaScript","webpack"],"title":"webpackで構築"},{"categories":null,"objectID":"1d28ea54bcd6b31c9d3b46e83024b8ff","permalink":"https://umemak.github.io/blog/posts/2022/05/01_parcel/","publish_date":"2022-05-01T00:00:00Z","summary":"久しぶりにJavaScript（TypeScript）を書こうとしたら、何から始めてよいかわからなくなっていた。 あまり環境構築に手間をかけたくなかったので、parcel-bundler/parcel: The zero configuration build tool for the web. 📦🚀を使ってみた。 Building a web app with Parcelを見ながら npm init npm install --save-dev parcel src/index.h","tags":["JavaScript","Parcel"],"title":"Parcelを使ってみる"},{"categories":null,"objectID":"06c09edf0fe6882c60133adec9197bea","permalink":"https://umemak.github.io/blog/posts/2022/04/30_magenta/","publish_date":"2022-04-30T00:00:00Z","summary":"昨日のcifkao/html-midi-player: 🎹 Play and display MIDI files on the webの使い方見ようとして、magenta-js/music at master · magenta/magenta-jsを使っているのを知った。 Magentaは出始めのときにそんなのがあるのか、って思って深くは見ていなかったのだけど、今度はちゃんと","tags":["JavaScript"],"title":"Magenta.js"},{"categories":null,"objectID":"5b41172c0ebd40d06ca0ef092282f959","permalink":"https://umemak.github.io/blog/posts/2022/04/29_mdmml_js/","publish_date":"2022-04-29T00:00:00Z","summary":"Rust移植は未完だけれどもいい勉強になった。 今度はJavaScript（TypeScript）に移植しようと思う。 というのもcifkao/html-midi-player: 🎹 Play and display MIDI files on the webと連携してブラウザで完結出来たら良さそうなので。 もともとのGoの実装でも、サーバー立てるなりローカルにバ","tags":["mdmml"],"title":"MDMMLのJavaScript移植"},{"categories":null,"objectID":"ba330d53ab6d39e7acb29c1689cdd834","permalink":"https://umemak.github.io/blog/posts/2022/04/28_github_actions/","publish_date":"2022-04-28T00:00:00Z","summary":"GitHub Actionsのワークフロー構文 - GitHub Docs このjobs.\u0026lt;job_id\u0026gt;.strategy.matrixは、jobに含まれるstepsをmatrixの組み合わせでループ実行するという理解。 同じようなことを、step単位でやりたいときにうまい方法がないかなぁ、と。 jobs: example: steps: - name: example begin run: echo \u0026#34;begin\u0026#34; - name: example A","tags":["github"],"title":"GitHub Actionsのmatrix"},{"categories":null,"objectID":"22fda9ae8f293f53c1a210625abc025d","permalink":"https://umemak.github.io/blog/posts/2022/04/27_audio_interface/","publish_date":"2022-04-27T00:00:00Z","summary":"Amazonのタイムセール祭りでオーディオインターフェース買おうと思っていたけれど、特に安くなってなかったので見送った。 候補はこの辺り Focusrite フォーカスライト オーディオインターフェース 2イン/2アウト 24bit/192kHz Scarlett Solo (3rd Gen) ステッカー付きセット 【国内正規品】 : 楽器・音響機器 Amazon | audient 「EVO4」2in/2out オーディオ・","tags":[],"title":"オーディオインターフェース選び"},{"categories":null,"objectID":"40ddf906a9d4f8d7378e66bc438fe773","permalink":"https://umemak.github.io/blog/posts/2022/04/26_ginkgo/","publish_date":"2022-04-26T00:00:00Z","summary":"昨日の調べもので出てきた、 Ginkgo has several capabilities that can only be accessed via ginkgo. （Ginkgoには、ginkgoを経由してしかアクセスできない機能がいくつかあります。） そのいくつかの機能を知りたい。 https://onsi.github.io/ginkgo/#ginkgo-cli-overview には、コマンドライン引数について書かれているが、むしろginkgoでサポートしていないものがあるという記述なので、思っていたのとは違","tags":["golang","ginkgo"],"title":"ginkgoの特殊機能とは？"},{"categories":null,"objectID":"6a4db3587a204c881754faceb24c556e","permalink":"https://umemak.github.io/blog/posts/2022/04/25_ginkgo/","publish_date":"2022-04-25T00:00:00Z","summary":"GinkgoのV1とV2のテストケースが混在しているときに、V2のCLIでV1用のコードをテストしようとすると、ginkgo.timeoutが定義されてい内的なエラーになってしまう（うろ覚え）。 importをv2にすれば多分良いのだけれど、そうしなくても、テストの実行をgo testに任せれば、imp","tags":["golang","ginkgo"],"title":"ginkgoとgo test"},{"categories":null,"objectID":"d6faa7ec643d1b91aa2f87dd78b70d40","permalink":"https://umemak.github.io/blog/posts/2022/04/24_screeps_arena/","publish_date":"2022-04-24T00:00:00Z","summary":"Steam：Screeps: ArenaのDemo版をやってみた。 チュートリアルの途中までやったけど、普通に何か自分で開発してたほうが良いかな。 ノートPCで1画面でやってると、VS CodeとScreepsの行き来が面倒だったので、エディタは内蔵されていたほうが良いと思った。","tags":["steam","JavaScript"],"title":"Screeps: Arena体験"},{"categories":null,"objectID":"5fbe412dc8d0a48a2ac72d15169866b6","permalink":"https://umemak.github.io/blog/posts/2022/04/23_hugo_search/","publish_date":"2022-04-23T00:00:00Z","summary":"Algoliaを使ってブログに全文検索をつける（検索ページ編） - PIYO - Tech \u0026amp; Life - を見ながらやって、何とか検索できるのはできたんだけど、色々混ぜて試行錯誤した結果、よくわからないものになってしまっている現状。 なおGitHub Actionsへの組み込みはまだ。","tags":["hugo","algolia"],"title":"HugoにAlgoliaを導入してみる"},{"categories":null,"objectID":"1d0eef7606cbbae615c18e30868d3cb1","permalink":"https://umemak.github.io/blog/posts/2022/04/22_hugo_search/","publish_date":"2022-04-22T00:00:00Z","summary":"Hugo + Algolia + Instantsearch.jsで静的サイトに全文検索を導入 - OTTANXYZを見ながらやってみた。 とりあえずローカルでできることを確認してから、GitHub Actionsに組み込もうかと。 で、上記サイトは設定ファイルがYAMLだったのでTOMLで書くところで躓いた。 [outputFormats.Algolia] baseName = \u0026#34;algolia\u0026#34; isPlainText = true mediaType = \u0026#34;application/json\u0026#34; notAlternative =","tags":["hugo","algolia"],"title":"HugoにAlgoliaを導入してみる"},{"categories":null,"objectID":"c6de33dfb3507774a2ebe8640b5440d6","permalink":"https://umemak.github.io/blog/posts/2022/04/20_makefile/","publish_date":"2022-04-20T00:00:00Z","summary":"昨日の件、 VAR1 = \u0026#34;abc\u0026#34; if [ \u0026#34;$(CI)\u0026#34; = \u0026#34;true\u0026#34; ]; then \\ VAR1 += \u0026#34;def\u0026#34;; \\ fi ではなく VAR1 = \u0026#34;abc\u0026#34; ifeq ($(CI),true) VAR1 += \u0026#34;def\u0026#34; endif で良かった。 ひとつ賢くなった。","tags":["Makefile"],"title":"Makefile入門"},{"categories":null,"objectID":"75d7b52bdabb0cf5e3ff30ef594f83fc","permalink":"https://umemak.github.io/blog/posts/2022/04/19_makefile/","publish_date":"2022-04-19T00:00:00Z","summary":"普段使っていないわけではないけれど、GitHub Actionsで動かしたときに変数を変えたくて、ifで条件分ければ行けると思ったんだけど、うまくいかない。 VAR1 = \u0026#34;abc\u0026#34; if [ \u0026#34;$(CI)\u0026#34; = \u0026#34;true\u0026#34; ]; then \\ VAR1 += \u0026#34;def\u0026#34;; \\ fi やりたいことはこんな感じなんだけど。","tags":["Makefile"],"title":"Makefile入門"},{"categories":null,"objectID":"10d5c4fd648f86cb6e41e9d1ff38d647","permalink":"https://umemak.github.io/blog/posts/2022/04/18_algolia/","publish_date":"2022-04-18T00:00:00Z","summary":"Algoliaにアカウント登録してみた。 登録完了すると、Applicationsに2つのunnamed applicationが作成されていた。 とりあえず、dashboardからAPI Keysを確認できた。 そして、hugo側の設定は、使用しているテーマがAlgolia未対応なので、どうしよう。 参考にな","tags":["Algolia"],"title":"Algoliaサインアップ"},{"categories":null,"objectID":"cb97a7ce427051ff474ae976cc2b599a","permalink":"https://umemak.github.io/blog/posts/2022/04/17_hugo_search/","publish_date":"2022-04-17T00:00:00Z","summary":"公式にいくつかやり方が紹介されている。 公式自体はAlgoliaを使っているので、無料枠もあるみたいだしAlgolia使ってみようかな。","tags":["hugo"],"title":"Hugoのblogに検索機能を付けたい"},{"categories":null,"objectID":"e379d16274f8fe9e31a12f2b2e38afb5","permalink":"https://umemak.github.io/blog/posts/2022/04/16_movie_caption/","publish_date":"2022-04-16T00:00:00Z","summary":"動画に字幕入れるのに、今回はShotcutのテキストを重ねる方法で実現していた。 Adobe PremiereとVoicepeakを使った簡単・なめらか音声合成ナレーション - YouTubeみたいにするともっと簡単にできそうな気もするけど、Premiereとか自分には敷居が高そう・・・ Speech-to-Text: 自動音声認識 | Google Cloud","tags":["movie"],"title":"動画の字幕"},{"categories":null,"objectID":"ba111fb224ee794fa08c62605002a25f","permalink":"https://umemak.github.io/blog/posts/2022/04/15_movie_edit/","publish_date":"2022-04-15T00:00:00Z","summary":"Shotcutの操作方法の参考になったページ 無料の動画編集ツール Shotcut の使い方 その1 - 強まっていこう 無料の動画編集ツール Shotcut の使い方 その2 - 動画の切り貼り - 強まっていこう 無料の動画編集ツール Shotcut の使い方 その3 - 複数トラックを用いた編集 - 強まっていこう 続編がないのが残念。 とりあえず、同じの3回撮ってタイムライ","tags":["movie"],"title":"動画編集入門"},{"categories":null,"objectID":"d22cf7bc560b897a69089996f885113f","permalink":"https://umemak.github.io/blog/posts/2022/04/14_docker_desktop_470/","publish_date":"2022-04-14T00:00:00Z","summary":"Docker Desktopの4.7.0が出たので、host.docker.internalの件が変化あったか試してみた。 https://github.com/umemak/docker_network_test 変わっていなかった。 リリースノート見てもそれらしい変更なかったし、残念だが当然。 世界中でほかに誰も困っていないのかなぁ。。","tags":["docker"],"title":"Docker Desktop 4.7.0でhost.docker.internal"},{"categories":null,"objectID":"00de1bad24eda69150edec7840056593","permalink":"https://umemak.github.io/blog/posts/2022/04/13_movie_edit/","publish_date":"2022-04-13T00:00:00Z","summary":"Shotcutで動画にテロップつけるの、意外と難しいというかいろいろ理解するのに時間がかかって難航。。 今週中に仕上げられるのだろうか。","tags":["movie"],"title":"動画編集入門"},{"categories":null,"objectID":"be3777a099906c69b4c65c275c11a9df","permalink":"https://umemak.github.io/blog/posts/2022/04/12_shotcut/","publish_date":"2022-04-12T00:00:00Z","summary":"OBSで収録した動画にテロップつけたいと思って、Shotcut - Home をインストールした。 Windows11のフォトアプリでも動画編集できるらしいのだけれど、アプリが落ちまくって使い物にならなかった。。","tags":["windows"],"title":"Shotcut"},{"categories":null,"objectID":"0281657290baa949676a29aca559b36f","permalink":"https://umemak.github.io/blog/posts/2022/04/11_xsplit_vcam/","publish_date":"2022-04-11T00:00:00Z","summary":"XSplit VCam: OBSでバーチャルグリーンバックを手に入れよう | XSplit を試してみた。 OBSで合成するのに、Zoomで背景緑にしてウィンドウキャプチャしていたけど、もっと簡単に導入できた。 無料版だとロゴが入るので、課金するかは検討中。年に2回程度しか使わない予定なので、だったら少しくらい面倒でもZoomで良い気もする","tags":["windows"],"title":"XSplit VCam"},{"categories":null,"objectID":"efae480e66218411ad49d2193e5f660e","permalink":"https://umemak.github.io/blog/posts/2022/04/10_rust_book/","publish_date":"2022-04-10T00:00:00Z","summary":"unsafeの節を読んだ。 Rustでも安全でないコードを書くことができる。しかしそれを局所化しておくことが大事。 直近で必要になることはなさそう。 その他Tipsを読んで読了した。 自分にはRustより先に習得すべきものがある気がした。","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"d29648a187595ceec512c19c8e675a0d","permalink":"https://umemak.github.io/blog/posts/2022/04/09_rust_book/","publish_date":"2022-04-09T00:00:00Z","summary":"他言語（C,Ruby）との連携の節を読んだ。 章的にはTipsなので、こんなこともできるんだねといった感じで。","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"95e5ed67768423cd89413fddd2b5ca1b","permalink":"https://umemak.github.io/blog/posts/2022/04/08_rust_book/","publish_date":"2022-04-08T00:00:00Z","summary":"マクロの節を読んだ。 結構ボリュームがあった。 実行速度を上げるには実行時の関数呼び出しよりコンパイル時に展開したほうが良いのはわかる。 そこまで速度を気にしないといけないものを作る機会がないというのもあるけど、使いどころが今一つイメージできなかった。 他人の書いたコードを読み解く必要があるときに知っている","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"8622f8018850374bb67a9dbb53209ce2","permalink":"https://umemak.github.io/blog/posts/2022/04/07_rust_book/","publish_date":"2022-04-07T00:00:00Z","summary":"バイナリの最適化などの章を読んだ。 この辺はまだ成熟していない印象。","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"509a858a3196c5294bd0df7c4fe21495","permalink":"https://umemak.github.io/blog/posts/2022/04/06_rust_book/","publish_date":"2022-04-06T00:00:00Z","summary":"組み込みの章を読んだ。 あまり直接関係なさそうだったのでさらっと。 開発ツールの章を読んだ。 Goとそう変わらない感じ？","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"64e9ac24fd90f7e24a738eb87828f243","permalink":"https://umemak.github.io/blog/posts/2022/04/05_rust_book/","publish_date":"2022-04-05T00:00:00Z","summary":"GUIの章を読んだ。 ColumnとRowをコンテナに配置して、ってFlutterっぽい（昔のHTMLテーブルレイアウトっぽいともいう）感じで配置していくのはわかりやすいと思った。 ファイルを読んでバイト配列に入れるinclude_bytes!マクロはほかでも使えそう。","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"d58a2b8baa98cd86b16382eb6e6470cd","permalink":"https://umemak.github.io/blog/posts/2022/04/04_rust_book/","publish_date":"2022-04-04T00:00:00Z","summary":"Webサーバーを立てる章とWASMの章を読んだ。 これはRustに限ったことではないけれど、まだ若い言語ということもあって、Webフレームワークとかどれを選んだらよいか迷いそう。","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"09b6b3d6124786373d5d731c5afab536","permalink":"https://umemak.github.io/blog/posts/2022/04/03_rust/","publish_date":"2022-04-03T00:00:00Z","summary":"ここ数日Rustから遠ざかってしまっていて、またRust筋力が落ちてしまった感。 何度か入門して感じたことは、やっぱりとっつきにくい言語だなぁということ。 用語が日本語だと直感的に理解しにくいのも一つの原因だと思う。クレートとか聞いたことないし。 まぁ、Goのスライスとかも最初何のことか理解するのに時間か","tags":["rust"],"title":"Rust雑感"},{"categories":null,"objectID":"5988af20ce6861ba9df8c602363c5d11","permalink":"https://umemak.github.io/blog/posts/2022/04/02_open_file_delete/","publish_date":"2022-04-02T00:00:00Z","summary":"あと、sambaだけではなく、NFSでどうなるかも確認したい。 NFSならWindowsサーバー用意しなくても良いから少しは簡単かな？","tags":["linux"],"title":"開いたままのファイルを削除したらどうなるか4"},{"categories":null,"objectID":"4919d68e7a28973ca4e82979f7902ef5","permalink":"https://umemak.github.io/blog/posts/2022/04/01_open_file_delete/","publish_date":"2022-04-01T00:00:00Z","summary":"昨日はAWSでEC2使って試したけど、ローカルでもdocker使ってsambaサーバー立てたら同じことできたのではないか？","tags":["linux"],"title":"開いたままのファイルを削除したらどうなるか3"},{"categories":null,"objectID":"bc4e819d6595cdad9c112b65603446a9","permalink":"https://umemak.github.io/blog/posts/2022/03/31_open_file_delete/","publish_date":"2022-03-31T00:00:00Z","summary":"昨日のCパターンを実際にAWSで試してみた。Docker関係なかった。 Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume TypeとMicrosoft Windows Server 2019 Baseのインスタンスをt2.microでそれぞれ作成 Linux側からWindows側へのセキュリティグループからのアクセスを許可 Windows側 C:\\Users\\shared を作成してプロパティから共有","tags":["linux"],"title":"開いたままのファイルを削除したらどうなるか2"},{"categories":null,"objectID":"3cb6f7099894967403a5d24c68f92e24","permalink":"https://umemak.github.io/blog/posts/2022/03/30_open_file_delete/","publish_date":"2022-03-30T00:00:00Z","summary":"ホストがマウントしたディレクトリをマウントしたコンテナでプロセス1で開いてクローズせずにプロセス2で削除したあとその他のプロセスからファイルはどう見えるか。 A. ファイルは削除されディレクトリにもリストされない B. ファイルは削除できない C. ファイルは削除されアクセスできないがディレクトリにリストされたまま プ","tags":["docker"],"title":"開いたままのファイルを削除したらどうなるか"},{"categories":null,"objectID":"c9afda7c08162d9a15d528039c0ea232","permalink":"https://umemak.github.io/blog/posts/2022/03/29_host_docker_internal/","publish_date":"2022-03-29T00:00:00Z","summary":"https://github.com/umemak/docker_network_test Docker Desktopのバージョンを上げたら、host.docker.internal の挙動が変わったっぽいという話。 まだ現象の再現性を確認しただけで、原因の特定まではできていない。","tags":["docker"],"title":"host.docker.internalの謎"},{"categories":null,"objectID":"73f8f3084d40ad5b76c2011a8c71f4e7","permalink":"https://umemak.github.io/blog/posts/2022/03/28_mdmml/","publish_date":"2022-03-28T00:00:00Z","summary":"Vecの使い方を理解した気がする。 これでどうにかSMFのバイナリを組み立てられるのではないだろうか。","tags":["mdmml","rust"],"title":"mdmml_rust"},{"categories":null,"objectID":"690b42af51bd4056581037ae81fa64d0","permalink":"https://umemak.github.io/blog/posts/2022/03/27_mdmml/","publish_date":"2022-03-27T00:00:00Z","summary":"Rust版を少し進めた。 こういうときはこう書けばよい、というのが身についていないのでなかなか進まない。","tags":["mdmml","rust"],"title":"mdmml_rust"},{"categories":null,"objectID":"706de214984b032c80bb1f2980be0bc8","permalink":"https://umemak.github.io/blog/posts/2022/03/26_mdmml_remote/","publish_date":"2022-03-26T00:00:00Z","summary":"ローカルファイルだけではなく、URL指定で読み込みできるようにしてみた。 issue立てておいたのにPRせずにmaster直PUSHしてしまった。。","tags":["mdmml"],"title":"mdmml機能追加"},{"categories":null,"objectID":"b281515a16c0085f10d7d4e20389df7b","permalink":"https://umemak.github.io/blog/posts/2022/03/25_rust_book/","publish_date":"2022-03-25T00:00:00Z","summary":"Cargoについて学んだ。 Goはgoコマンドでビルドもテストも外部モジュール管理もするけど、Rustはそうではないらしい。 というかrustコマンドが存在していない？rustcはあるけど。","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"4b5e43e08a472425022f11addd1acf3e","permalink":"https://umemak.github.io/blog/posts/2022/03/24_rust_book/","publish_date":"2022-03-24T00:00:00Z","summary":"クレートとモジュールについて学んだ。 しかし、なんでクレートなんて名前にしたのだろう。名前から機能がイメージできない。 ファイル名がそのままモジュール名になるのは良いと思う。 Goはディレクトリ名がパッケージ名だけど、その中のファイル名はパッケージ名と一致していなくてもよいので、紛らわしい名前でも付けよう","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"be78ec2e3538d9c61e1c80a82927386c","permalink":"https://umemak.github.io/blog/posts/2022/03/23_rust_book/","publish_date":"2022-03-23T00:00:00Z","summary":"マルチスレッドについて学んだ。 メッセージパッシングはGoより分かりやすいかも（矢印の書き方いつも忘れる）。 非同期処理について学んだ。 async/awaitはReactとかFlutterで雰囲気で使っていたけど、ちょっと理解が進んだ気がした。","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"178fe446b58728cff04e33f944de104c","permalink":"https://umemak.github.io/blog/posts/2022/03/22_rust_book/","publish_date":"2022-03-22T00:00:00Z","summary":"読み進めていく。 別にこの本のせいではないのだけれど、、 マクロ、最後に!が付くのがちょっと落ち着かない（否定っぽい感じ）。 トレイトが何者かすぐ忘れてしまう。 implはGoでいうところのメソッドだというのはわかった。 Boxもすぐ忘れそう。。","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"961c7e6c4e9109364d0504a190c0061b","permalink":"https://umemak.github.io/blog/posts/2022/03/21_rust_book/","publish_date":"2022-03-21T00:00:00Z","summary":"キャンペーンでKindle版が安くなっていたので買った。 実践Rustプログラミング入門 | 初田直也, 山口聖弘, 吉川哲史, 豊田優貴, 松本健太郎, 原将己, 中村謙弘, フォルシア株式会社 | 工学 | Kindleストア | Amazon MSのチュートリアル終わった後だからか、何言ってるのかわからない状態ではなく読み進められている","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"90fbffb0a800ac91fe92e6d61a0315ed","permalink":"https://umemak.github.io/blog/posts/2022/03/20_go_118/","publish_date":"2022-03-20T00:00:00Z","summary":"WSLのGoのバージョンをあげて、GitHub Actionsのバージョン指定も1.18にしてみた。 問題なくCIが通ったので、大丈夫そう。","tags":["go"],"title":"Go 1.18"},{"categories":null,"objectID":"8e7d78b32b3a9b670ab3f9cb56feb0b9","permalink":"https://umemak.github.io/blog/posts/2022/03/19_ms_rust/","publish_date":"2022-03-19T00:00:00Z","summary":"ついに最後のモジュール。 コマンドラインの to-do リスト プログラムを作成する - Learn | Microsoft Docs 途中で紹介されていた、Introduction - OWASP Cheat Sheet Seriesが便利そう。 これでRust完全に理解した。","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"8c28c19d8a2ddeab9191ad8a728e23fa","permalink":"https://umemak.github.io/blog/posts/2022/03/18_crystaldiskinfo/","publish_date":"2022-03-18T00:00:00Z","summary":"またS.M.A.R.T.のエラーらしき通知が出たが、通知を開いても何も情報が得られなかったので監視ツールを探してみた。 →インテル® ドライバー \u0026amp; サポート・アシスタントをインストールしないと見れないようで、これも追加インストールした。 「CrystalDiskInfo」HDD/SSDの健康状態をチェック -","tags":["inspiron"],"title":"CrystalDiskInfoインストールしてみた"},{"categories":null,"objectID":"438aff5f63cd6e4a25b59bebe9de42cc","permalink":"https://umemak.github.io/blog/posts/2022/03/18_ms_rust/","publish_date":"2022-03-18T00:00:00Z","summary":"みんな大好き自動テストの回。 自動テストを記述する - Learn | Microsoft Docs テスト対象のコードとテストコードを同じファイルに書くことができる（別のファイルに分けることもできる）。 個人的には、分けて書きたい派。同じファイルだとカーソルの行き来で混乱するから。","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"aa2119f1d657eb1d0848c5e1f5309d39","permalink":"https://umemak.github.io/blog/posts/2022/03/17_ms_rust/","publish_date":"2022-03-17T00:00:00Z","summary":"今日はモジュール、パッケージ、サードパーティーのクレートを調べる - Learn | Microsoft Docsを学習した。 この辺りはmdmml_rustですでにやっていることだったので、軽く流す程度で。","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"4b8a946fd1e84c639358280870b653cf","permalink":"https://umemak.github.io/blog/posts/2022/03/16_ms_rust/","publish_date":"2022-03-16T00:00:00Z","summary":"今日の学習モジュール ジェネリック型と特性を実装する - Learn | Microsoft Docs ちょうど今日リリースされたGo 1.18でも導入されたジェネリクスですね。 個人的にはジェネリクスをどうしても使いたいと思ったことがないので、さらっと流す感じで。 特性というのはGoのinterfaceみたいなものかな。 イテレーターはmdmmlで","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"f3c6096ebc23a9fb8bf55fdedbda398c","permalink":"https://umemak.github.io/blog/posts/2022/03/15_ms_rust/","publish_date":"2022-03-15T00:00:00Z","summary":"所有とか借用とか、既知の言語では聞かない概念を学習した。 Rust によるメモリ管理の方法を理解する - Learn | Microsoft Docs 日本語訳がおかしいところがあって理解に支障が。。 機械翻訳なのかな。","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"f85b19db434ee6ad04cd06e5f6f16d33","permalink":"https://umemak.github.io/blog/posts/2022/03/14_ms_rust/","publish_date":"2022-03-14T00:00:00Z","summary":"エラー処理を学んだ。 Rust でエラーを処理する - Learn | Microsoft Docs やっぱり例題わかりにくい。。","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"9b125f8670956fc5f01ada9d91316c34","permalink":"https://umemak.github.io/blog/posts/2022/03/13_ms_rust/","publish_date":"2022-03-13T00:00:00Z","summary":"昨日の続きでRust の最初のステップ - Learn | Microsoft Docsを進める。 ちょっと説明不足で何をしたらよいかわからないところがあるけど、コードの解答例もあるから最終的にはどうしたらよかったのかはわかる。 地道に進めていこう。","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"df143d0d84ce6411db9099b3176b478a","permalink":"https://umemak.github.io/blog/posts/2022/03/12_ms_rust/","publish_date":"2022-03-12T00:00:00Z","summary":"昨日、すっかり初心者に戻ってしまったので、Rust の最初のステップ - Learn | Microsoft Docsをやってみることにした。 最初のモジュールのまとめに書かれていた、Table of Contents - Rust Cookbookがいろいろ参考になりそう。","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"0342510b8f794ee449212e289927ad73","permalink":"https://umemak.github.io/blog/posts/2022/03/11_rust/","publish_date":"2022-03-11T00:00:00Z","summary":"go版のリファクタリングも進めたので、またRust版を進めようと思ったら、すっかり構文など忘れてしまっていた。 やっぱり集中＆継続して触らないとダメだ。。","tags":["rust"],"title":"Rust移植再開"},{"categories":null,"objectID":"60eeea0cd6b23cbeb6d2528d990e8d39","permalink":"https://umemak.github.io/blog/posts/2022/03/10_func/","publish_date":"2022-03-10T00:00:00Z","summary":"細かい変換を関数化してみた。 strconv.Atoiをエラーだったらデフォルト値で返すやつとか。 titleやtempoを[]byteにして返すやつとか。","tags":["go"],"title":"関数化"},{"categories":null,"objectID":"77714ab8d4e4bb03ae88364c2b32e016","permalink":"https://umemak.github.io/blog/posts/2022/03/09_method_func/","publish_date":"2022-03-09T00:00:00Z","summary":"最初は、構造体のフィールドを参照しているものはメソッドにしていた。 けど、フィールドのごく一部しか使っていないものはメソッドではなく関数にして、疎結合な感じにしてみた。 もちろんフィールドを更新しているものはメソッドのほうが良いかもしれないが、それでも新しく構造体を生成して返すようにすれば必ずしもメソッ","tags":["go"],"title":"メソッドか関数か"},{"categories":null,"objectID":"487d8800ae7a6829ae85353a85a6d5dc","permalink":"https://umemak.github.io/blog/posts/2022/03/08_go_main_test/","publish_date":"2022-03-08T00:00:00Z","summary":"mainのテストは、os.Argsを直接設定するという割と無理やりな書き方でテストしていたけれど、処理部分を別関数にしたので、引数を変えて正常系と異常系をテストし分けることができるようになった。","tags":["go"],"title":"main関数を分けたのでテストも書く"},{"categories":null,"objectID":"704168a300aefed62de72267563f15c8","permalink":"https://umemak.github.io/blog/posts/2022/03/07_docker_compose/","publish_date":"2022-03-07T00:00:00Z","summary":"Docker Desktopでは設定でcomposeのバージョン（1系と2系）を切り替えることができる。 ところで、いつまでV1が使えるのか気になったので調べてみた。 https://github.com/docker/compose では、デフォルトのブランチがv2となっている。masterブランチに切り替えてREADME.mdを見ると、 New features and bug fixes will only be considered in the V2 codebase とあるが、 but as","tags":["docker"],"title":"docker-compose v1のEOL"},{"categories":null,"objectID":"8ba126a74757673bd7399a0dd6d7d57e","permalink":"https://umemak.github.io/blog/posts/2022/03/06_go_main/","publish_date":"2022-03-06T00:00:00Z","summary":"Rust版でやっているように、main関数から処理を分離してrun関数を作ってみた。","tags":["go"],"title":"main関数を分ける"},{"categories":null,"objectID":"f19a46cabb7daeb2a0feda4180a1b0c7","permalink":"https://umemak.github.io/blog/posts/2022/03/05_go_flag/","publish_date":"2022-03-05T00:00:00Z","summary":"入力ファイルをos.Args[1]で取得していたので、引数指定しないと範囲外アクセスでpanicしていた。 flagパッケージ使ってflag.Arg(0)で取得するようにしたので、引数指定しなかった場合にはファイルなしエラーで終わるようになった。 もっと親切にするなら、エラー終了ではなくヘルプ表示にする","tags":["go"],"title":"コマンドライン引数をflagで処理する"},{"categories":null,"objectID":"11e97d9997d4798140c6480a6782687a","permalink":"https://umemak.github.io/blog/posts/2022/03/04_go_const/","publish_date":"2022-03-04T00:00:00Z","summary":"EOTとかbyteのスライスをconstで定義しようとしてできなかった。 const EOT = []byte{0x00, 0xFF, 0x2F, 0x00} $ go run cmd/mdmml/main.go # github.com/umemak/mdmml ./mdmml.go:10:7: const initializer []byte{...} is not a constant The Go Programming Language Specification - The Go Programming Language 文字列リテラルが許されるならbyteスライスも許されてもよいではないかと思ったけれど、ダメらしい。 varで我慢する。","tags":["go"],"title":"Goのconst"},{"categories":null,"objectID":"8c0e917e06f1e5016b03f246ef3dea53","permalink":"https://umemak.github.io/blog/posts/2022/03/03_mdmml/","publish_date":"2022-03-03T00:00:00Z","summary":"MDMMLのループバグ、デバッグが面倒だったのでループの展開だけ前処理に分けることにした。 これだと文字列の状態でテストできるので、16進数より見やすい。 たぶん直ったと思う。","tags":["mdmml"],"title":"バグ取り"},{"categories":null,"objectID":"b15eeb9d7f66d3b74aadb3301f934f7e","permalink":"https://umemak.github.io/blog/posts/2022/03/02_voicevox/","publish_date":"2022-03-02T00:00:00Z","summary":"Docker Desktopもインストールしたので、最近話題のVOICEVOX | 無料で使える中品質なテキスト読み上げソフトウェアを試してみた。 $ docker run -it --rm -p 50021:50021 hiroshiba/voicevox_engine:cpu-ubuntu20.04-latest 最初、GoとDockerでつくる音声合成CLIのページを参考にしてバージョン指定してたけど、latestにしたら使えるキャラクターが増えた。つい最近追加さ","tags":null,"title":"VOICEVOX"},{"categories":null,"objectID":"d453c9aff960e0aa49eeb2c85ce7c51b","permalink":"https://umemak.github.io/blog/posts/2022/03/01_rancher_desktop/","publish_date":"2022-03-01T00:00:00Z","summary":"Inspironクリーンインストールした後、Dockerのセットアップしてなかったの忘れていて、せっかくなのでRancher Desktopを試してみることにした。 公式ページからWindows用のインストーラーをダウンロードして実行。 起動時に聞かれるContainer Runtimeはdockerdを選","tags":null,"title":"Rancher Desktop"},{"categories":null,"objectID":"06a04cb05d60bbd7e56ef41ca0aed229","permalink":"https://umemak.github.io/blog/posts/2022/02/28_mdmml/","publish_date":"2022-02-28T00:00:00Z","summary":"ループと休符の組み合わせで、休符が消える現象が起きてる気がする。 後から実装したところはちょっと入り組んでしまっているね。。","tags":["mdmml"],"title":"バグ発見"},{"categories":null,"objectID":"aad9e3369588d9f545b69da627d0c582","permalink":"https://umemak.github.io/blog/posts/2022/02/27_rust/","publish_date":"2022-02-27T00:00:00Z","summary":"The Rust Programming Language 日本語版 - The Rust Programming Language 日本語版、途中飛ばして12章やってたけれど、やっぱり最初からやったほうが良い気がしてきた。 そして、最初のページに すべてのプロジェクトの Cargo.toml に edition=\u0026ldquo;2018\u0026rdquo; とあることを前提にしています。 との注意書きがあるのに今更ながら気づいた。 昨日エラーが出ると言っていたのは、edition = \u0026quot;","tags":["rust"],"title":"Rust学習"},{"categories":null,"objectID":"129811a2302695724f751467515456c2","permalink":"https://umemak.github.io/blog/posts/2022/02/26_rust_dyn/","publish_date":"2022-02-26T00:00:00Z","summary":"リファクタリングしてモジュール性とエラー処理を向上させる - The Rust Programming Language 日本語版 を写経していて、コンパイルエラーに遭遇した。 $ cargo run Compiling mdmml_rust v0.1.0 (mdmml_rust) error[E0782]: trait objects must include the `dyn` keyword --\u0026gt; src/main.rs:21:41 | 21 | fn run(config: Config)-\u0026gt; Result\u0026lt;(), Box\u0026lt;Error\u0026gt;\u0026gt; { | ^^^^^ | help: add `dyn` keyword before this trait | 21 - fn run(config: Config)-\u0026gt; Result\u0026lt;(), Box\u0026lt;Error\u0026gt;\u0026gt; { 21 + fn run(config: Config)-\u0026gt; Result\u0026lt;(), Box\u0026lt;dyn Error\u0026gt;\u0026gt; { | For more information about this error, try `rustc --explain E0782`. error: could not compile `mdmml_rust` due to previous error 修正方法も提示してくれて親切。 で、","tags":["rust"],"title":"dynとは？"},{"categories":null,"objectID":"93ef0f13e081c84fe50876c01d8a16b2","permalink":"https://umemak.github.io/blog/posts/2022/02/26_rust/","publish_date":"2022-02-26T00:00:00Z","summary":"コードフォーマッターが欲しいと思って、プラグインを入れたけれど動かない。 Couldn\u0026#39;t start client Rust Language Server --- Rustup not available. Install from https://www.rustup.rs/ どうやらツールが足りないようなので、追加でインストールした。 $ curl --proto \u0026#39;=https\u0026#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh $ source $HOME/.cargo/env $ rustup --version rustup 1.24.3 (ce5817a94 2021-05-31) info: This is the version for the rustup toolchain manager, not the rustc compiler. info: The currently active `rustc` version is `rustc 1.59.0 (9d1b2106e 2022-02-23)` それでもエラーが解消しなかったので、OSごと再起動した","tags":["rust"],"title":"VS CodeのRust用設定"},{"categories":null,"objectID":"a697b973b10ddde69800763b4d46339f","permalink":"https://umemak.github.io/blog/posts/2022/02/25_mdmml_rust/","publish_date":"2022-02-25T00:00:00Z","summary":"リファクタリングしてモジュール性とエラー処理を向上させる - The Rust Programming Language 日本語版 を読みながら。 ちょっと分量多いけど、この第12章をひととおりなぞれば、Rustを「完全に理解」できる気がする。","tags":["rust"],"title":"モジュール化"},{"categories":null,"objectID":"fc860a0d7e964103db22b45907143369","permalink":"https://umemak.github.io/blog/posts/2022/02/24_mdmml_rust/","publish_date":"2022-02-24T00:00:00Z","summary":"以下ドキュメントを参考にしたら、引数で指定したファイルを読み込むのは簡単にできた。 コマンドライン引数を受け付ける - The Rust Programming Language 日本語版 ファイルを読み込む - The Rust Programming Language 日本語版 次は読み込んだテキストをパースしていくのだけれど、goの時のようにパッケージとして分けたい。","tags":["rust"],"title":"ファイルを読み込む"},{"categories":null,"objectID":"52d335bbb1bef0ef8dfaebd4cbea8591","permalink":"https://umemak.github.io/blog/posts/2022/02/23_rust/","publish_date":"2022-02-23T00:00:00Z","summary":"以前RustでHello Worldするのはやってたので、再入門。 The Rust Programming Language 日本語版 - The Rust Programming Language 日本語版を見ながら。 今回はcargoを使ってビルドするようにしてみた。 マニュアルだとcargo newで作成しているが、先にGitHubでリポジトリを作ってしまっていたので、cargo initを使っている。 $ curl --proto","tags":["rust"],"title":"Rust再入門"},{"categories":null,"objectID":"0cbcc87c94498e1bd74b7e5de3a50f39","permalink":"https://umemak.github.io/blog/posts/2022/02/23_mdmml/","publish_date":"2022-02-23T00:00:00Z","summary":"大体やりたいことはやった感が出てきたので、go以外の言語で実装してみたいと思う。 やってることはテキスト変換なので、未知の言語の練習にもちょうどよいかと。 ということでRustでやってみる。 前二日間更新がなかったのは、ワクチン副作用でダウンしていたため。","tags":null,"title":"別言語で実装"},{"categories":null,"objectID":"2ee20387fa23e6d32ad063d321ac7ce4","permalink":"https://umemak.github.io/blog/posts/2022/02/20_mdmml_test/","publish_date":"2022-02-20T00:00:00Z","summary":"テストカバレッジを100％まであげた。 どうしてここ通らないんだろうってよく見たら変数名間違えていたバグだった。","tags":null,"title":"テスト追加2"},{"categories":null,"objectID":"1c25110a68f0295ae0a7ba5cd5220010","permalink":"https://umemak.github.io/blog/posts/2022/02/19_mdmml_test/","publish_date":"2022-02-19T00:00:00Z","summary":"MDMMLで関数分割してテスト反映してなかったりしていたのを追加。 パラメータゼロ値で呼んだら落ちたり思ったのと違う動きをしていたり。 テストもたまに見返すと面白い。","tags":null,"title":"テスト追加"},{"categories":null,"objectID":"477e3c6aa10d9d43b856956012a45b65","permalink":"https://umemak.github.io/blog/posts/2022/04/21_ginkgo/","publish_date":"2022-02-18T00:00:00Z","summary":"Ginkgoわからん - umemak の続編。 Itが上から順番に実行されない問題、V2で導入されたOrderedを使えば解決できそう。 https://onsi.github.io/ginkgo/#ordered-containers","tags":["golang","ginkgo"],"title":"Ginkgoわかった"},{"categories":null,"objectID":"7d6acdb2cdc319277c3b5dff2d63d613","permalink":"https://umemak.github.io/blog/posts/2022/02/18_ginkgo/","publish_date":"2022-02-18T00:00:00Z","summary":"MDMMLじゃない話。 https://onsi.github.io/ginkgo/ でテストを、 Describe(){ Context(){ // 準備 It(){ Expect() } // 次の準備 It(){ Expect() } // 後片付け } } みたいな感じで書いていたら、思った通りの動きにならなくてハマった。 どうやら、Contextの中は上から順番に実行されるのではなく、 Describe(){ Context(){ // 準備 // 次の準備 // 後片付け It(){ Expect() } It(){ Expect() } } } となるらしい。 やりたい順番で実行したければ","tags":["golang","ginkgo"],"title":"Ginkgoわからん"},{"categories":null,"objectID":"e043b12c9b3395f346e0227c559eb385","permalink":"https://umemak.github.io/blog/posts/2022/02/17_mdmml/","publish_date":"2022-02-17T00:00:00Z","summary":"いまさらながらGitHub ActionsでCIを設定した。 Actionsのバージョン指定なしgoは1.15.15なんだね。もうじき1.18が出るのに。","tags":null,"title":"MDMML CI構築"},{"categories":null,"objectID":"10a1eaaf355f554eeba109840093dbc4","permalink":"https://umemak.github.io/blog/posts/2022/02/16_crontab/","publish_date":"2022-02-16T00:00:00Z","summary":"crontab、-で範囲指定ができるけれど、大小関係が逆だったらどうなるか気になったので調べてみた。 59-1 * * * * time こういうやつ。 dockerでalpine使って動かしたところ、想定通り59,0,1で実行された。","tags":null,"title":"crontabの範囲指定について"},{"categories":null,"objectID":"a018db4cfbe045c18931d03b349201bd","permalink":"https://umemak.github.io/blog/posts/2022/02/16_mdmml/","publish_date":"2022-02-16T00:00:00Z","summary":"通らなくなっていたテストを通した。 バイナリものはパッと見でどこが違うかわかりにくいのが難点。。","tags":null,"title":"リファクタリング"},{"categories":null,"objectID":"b3d7cfeff52644cc50fe78b21b0c6800","permalink":"https://umemak.github.io/blog/posts/2022/02/15_mdmml/","publish_date":"2022-02-15T00:00:00Z","summary":"データ構造の変更と、それに関連する部分を修正。 テーブルのセルごとに読み込んで保持するようにした。 テストが通らなくなった。。 セル（小節）ごとに変換したら、ループとか現在のオクターブとか状態として持たせないといけないのか・・ちょっと、あまり、よくない気がする。","tags":null,"title":"リファクタリング"},{"categories":null,"objectID":"a5ba60cf796dcaef777e3f46e839aacd","permalink":"https://umemak.github.io/blog/posts/2022/02/14_mdmml/","publish_date":"2022-02-14T00:00:00Z","summary":"やりたかったのは、hタグでセクションをブロック化して取り出して加工だったのだけど、 実際やってみて、hタグでブロック化はHTML的にも無理じゃんってなった。 結局自前でやっていくしかないのか。。 で、これをやっていて思いついたのが、今は読み捨てているテーブルのヘッダー部分をセクション代わりに使えないかなと","tags":null,"title":"マークダウンパーサーを使ってみたが"},{"categories":null,"objectID":"99cc55682e0da340937ba7adaedc3cc2","permalink":"https://umemak.github.io/blog/posts/2022/02/13_goldmark/","publish_date":"2022-02-13T00:00:00Z","summary":"難解だと思って避けていたASTを直接見れば、goqueryを使わなくてもよいのでは？と思ってgoldmarkのソースを眺めてみた。 rendererのhtml.goが参考になると思うんだけど、なかなか長大な感じ。 RegisterFuncsで各要素ごとの処理を登録していけばよいのかな。 うーん。変換結果と","tags":null,"title":"goldmarkを読む"},{"categories":null,"objectID":"04566f4fdfd7f742128fe03eddab1f1c","permalink":"https://umemak.github.io/blog/posts/2022/02/12_mdmml/","publish_date":"2022-02-12T00:00:00Z","summary":"機能を追加していってだんだんマークダウンのパターンマッチが面倒になってきたので、パーサー使おうかと。 マークダウンのパーサーはyuin/goldmark: A markdown parser written in Go. Easy to extend, standard(CommonMark) compliant, well structured.が良さそう。 で、HTMLに変換したのをPuerkitoBio/goquery: A little like that j-thing, only in Go.で必","tags":null,"title":"ライブラリの力を借りる"},{"categories":null,"objectID":"59de62013539fc14989edb8e9f274bdc","permalink":"https://umemak.github.io/blog/posts/2022/02/11_mdmml/","publish_date":"2022-02-11T00:00:00Z","summary":"結局、Sectionsで実装することにした。 データ構造変更したのでテストも修正。修正の影響範囲がわかるから、テスト書いておいてよかったと思う。","tags":null,"title":"構成指定実装"},{"categories":null,"objectID":"f2044904f5586cbf4741474e2c164093","permalink":"https://umemak.github.io/blog/posts/2022/02/10_mdmml/","publish_date":"2022-02-10T00:00:00Z","summary":"昨日思いついた、曲の構成もマークダウン上で管理するのをやってみようと思ったところ、変数名をどうするか悩んでいる。 イメージ的にはパートとかセクションかなーと思うんだけど、自信がない。","tags":null,"title":"曲の構成の変数名"},{"categories":null,"objectID":"896af4b677881b7ebf0bc9f17bf0f94a","permalink":"https://umemak.github.io/blog/posts/2022/02/09_mdmml/","publish_date":"2022-02-09T00:00:00Z","summary":"曲の全体の構成と部品を分けて定義できるとよいのではないかと思いついた。 マークダウンなので、見出しでそのあたりの管理をするのは適していそう。 ## Song - Intro - A - B - A ## Intro | | | |---|---| | pf | cdef | ## A | | | |---|---| | pf | defg | ## B | | | |---|---| | pf | gfed | こんなイメージ？","tags":null,"title":"MDMML 機能追加"},{"categories":null,"objectID":"224278402eecaa846ee879707cbc7d3b","permalink":"https://umemak.github.io/blog/posts/2022/02/08_mdmml/","publish_date":"2022-02-08T00:00:00Z","summary":"数値の下限と上限をチェックするようにした。 そろそろ一区切りかな。","tags":null,"title":"MDMML"},{"categories":null,"objectID":"8ad2ddb8cccc600c13fe0a9e02633a32","permalink":"https://umemak.github.io/blog/posts/2022/02/07_mdmml/","publish_date":"2022-02-07T00:00:00Z","summary":"メタ情報をMarkDownのFront Matterで書けるようにした。 タイトルとかテンポとか。","tags":null,"title":"MDMML"},{"categories":null,"objectID":"1dcd2e57777710a6e90c7c51d647efbc","permalink":"https://umemak.github.io/blog/posts/2022/02/06_logik400p/","publish_date":"2022-02-06T00:00:00Z","summary":"Inspironのタッチパッドが相変わらず不調なのと、だいぶ前から欲しいものリストに入れていたので、Amazon.co.jp: ロジクール ワイヤレスキーボード タッチ キーボード K400pBK 国内正規品 : パソコン・周辺機器を買った。 パッド部分のタップでクリック動作になるのを抑制するには、専用のアプリを入れないといけな","tags":null,"title":"ロジクールK400p購入"},{"categories":null,"objectID":"4e36eed2109337291ab5e6e9aa8eb3ef","permalink":"https://umemak.github.io/blog/posts/2022/02/05_mdmml/","publish_date":"2022-02-05T00:00:00Z","summary":"タイと繰り返しを実装した。 繰り返しが入れ子になるとpanic起こすのでいつか直す。 テストが書きにくくなってきたので、もっと小さい単位で関数化していきたい。 和音も何とか実装した。 前後の文字列によりpanicすることがあるのでいつか直す。 ひとまず予定していたコマンド群は全部実装できた・・かな。","tags":null,"title":"MML実装"},{"categories":null,"objectID":"989c54b6e9178530edb956b09447e58c","permalink":"https://umemak.github.io/blog/posts/2022/02/04_mdmml/","publish_date":"2022-02-04T00:00:00Z","summary":"おとといあげた実装したいコマンド群、あとはタイと繰り返しと和音を残すところまできた。 ちょっと今の作りだとやりにくくなってきたからリファクタリングしたい気持ち。 ノートオンオフを一つのメソッドにしてしまっているのを何とかしないとタイと和音ができない気がする。","tags":null,"title":"MML実装"},{"categories":null,"objectID":"dd31a99a36acb9f36f43983c4b2c7eff","permalink":"https://umemak.github.io/blog/posts/2022/02/03_inspiron/","publish_date":"2022-02-03T00:00:00Z","summary":"InspironにDellのOSリカバリーツール使ったら、途中で先に進まなくなってWindows起動しなくなってしまった。 Surface Goでリカバリー用USB作って何とか復旧。 ただしWindows11Homeだと同じところで落ちたので、Windows11Sモード版で入れなおした。 設定 Sモード解除 タッチパッドの","tags":null,"title":"Inspiron再セットアップ"},{"categories":null,"objectID":"06954711a2808f711c35ed02fd3d4bea","permalink":"https://umemak.github.io/blog/posts/2022/02/02_mdmml/","publish_date":"2022-02-02T00:00:00Z","summary":"それなりになってきたので、文法的なところもちゃんと決めていきたい。 MMLの標準化がされていないのは前に調べた通りなので、仕方ない。 記号 意味 備考 cdefgab 音階 +, # 半音上げ 音階の直後に書く - 半音下げ 音階の直後に書く . 符点 ^ タイ r 休符 l 省略時音長 o オクターブ \u0026gt; 1オクターブ上げ \u0026lt; 1オクターブ下げ v ベロシティ 0～12","tags":null,"title":"MML仕様"},{"categories":null,"objectID":"5c33d36461df5fa8a0eed2ea744ac810","permalink":"https://umemak.github.io/blog/posts/2022/02/01_mdmml/","publish_date":"2022-02-01T00:00:00Z","summary":"SMFのこと何もわかっていなかった。 2トラック目の音が出ないのは、1トラック目のlength指定が間違っていたせい。 音色が変わらないのは、プログラムチェンジだけ書いてMSB/LSBがなかったせい。 とりあえず形になってきた。 参考ページ： SMF(Standard MIDI File)フォーマット解説 | 技術的読み物 | FISH\u0026amp;BREAD DTM技術情報 - 5","tags":null,"title":"mdmml"},{"categories":null,"objectID":"ee0ad3ca9b0f10a22981c58f51a42f55","permalink":"https://umemak.github.io/blog/posts/2022/01/31_mdmml/","publish_date":"2022-01-31T00:00:00Z","summary":"とりあえず Timidity で再生できるSMFを吐き出すことはできるようになったのだけれど、なんか違う。 複数トラック作成しても、1トラック分しか再生されてないように聞こえる。 プログラムチェンジを入れても音色が変わらない。 何が間違っているのか・・","tags":null,"title":"mdmml"},{"categories":null,"objectID":"5f37e8743c0f93bd4332b9a3b0aca0c2","permalink":"https://umemak.github.io/blog/posts/2022/01/30_go_args/","publish_date":"2022-01-30T00:00:00Z","summary":"昨日のgo runとgo testで挙動が違うのは、os.argsのインデックスが間違っていただけだった・・ os.args[0] はコンパイルしたバイナリで、欲しかったものはos.args[1] でとれた。 なんか初歩的なところで時間溶かした。。","tags":null,"title":"args"},{"categories":null,"objectID":"61e979b910e3960f33f638ecc7500658","permalink":"https://umemak.github.io/blog/posts/2022/01/30_hexdump/","publish_date":"2022-01-30T00:00:00Z","summary":"SMF出力を確認したくて、hexdump使ったところ、2バイト単位の出力（しかもリトルエンディアン）なのね。 -Cオプション付ければ1バイト単位になるけど、右側にASCII文字も出る。 これのASCIIなし版が見たいんだけど、そういうオプションはないみたい。 $ go run main.go ../../testdata/test.md | hexdump -C 00000000 4d 54 68 64 00 00 00 06 00 01 00 03 03 c0","tags":null,"title":"hexdump"},{"categories":null,"objectID":"e18defa114f626418855dd39eccd6192","permalink":"https://umemak.github.io/blog/posts/2022/01/29_mdmml/","publish_date":"2022-01-29T00:00:00Z","summary":"昨日マークダウンからMMLを抜き出すところをとりあえず作ったので、 今日はMMLをSMF形式に変換するところを作る。 なかなか思ったように動いてくれない。。 go test と go run で挙動が違うのなんでだ・・","tags":null,"title":"mdmml"},{"categories":null,"objectID":"26ae42db864e8ee743036cd0d4ffa43e","permalink":"https://umemak.github.io/blog/posts/2022/01/28_mdmml/","publish_date":"2022-01-28T00:00:00Z","summary":"マークダウンからテーブル部分をmmlとして読み込むところを作っていたら日付が変わってしまって毎日更新に穴があいてしまった。","tags":null,"title":"マークダウンでMMLを書く"},{"categories":null,"objectID":"6a8554e4260962d01cb8beb4953d125b","permalink":"https://umemak.github.io/blog/posts/2022/01/27_mdmml/","publish_date":"2022-01-27T00:00:00Z","summary":"main.go と、とりあえず固定値を返すパッケージを書いた。 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;os\u0026#34; \u0026#34;github.com/umemak/mdmml\u0026#34; ) func main() { src, err := os.ReadFile(os.Args[0]) if err != nil { fmt.Printf(\u0026#34;%+v\\n\u0026#34;, err) os.Exit(1) } mm := mdmml.NewMDMML(src) os.Stdout.Write(mm.SMF()) }","tags":null,"title":"マークダウンでMMLを書く"},{"categories":null,"objectID":"2d7d99ae52d2747821f03491693a2c4a","permalink":"https://umemak.github.io/blog/posts/2022/01/26_mdmml/","publish_date":"2022-01-26T00:00:00Z","summary":"とりあえずリポジトリを作成して、VS CodeのDev Containerで開発できるようにした。 timidityはコンテナ内で実行しても出力デバイスが見つからないとかで動かなかった。 SMFの仕様は、Wikipedia見ても具体的にどうなのって感じで、脚注のリンク先も公式以外は消えてしまっていた。 エンデ","tags":null,"title":"マークダウンでMMLを書く"},{"categories":null,"objectID":"d3ef0da442cc6a19f2afa415d8545e8e","permalink":"https://umemak.github.io/blog/posts/2022/01/25_mdmml/","publish_date":"2022-01-25T00:00:00Z","summary":"どうせ方言が多いなら、ということで自分ならどうするか考えてみた。 で、タイトルのとおりマークダウン記法と組み合わせるといい感じになるんじゃないかなー、と。 具体的には|で区切れるようにする。|はマークダウンだとテーブルになるので、VS Codeとかでプレビューしたときに見やすくなるのではないか。 テーブルの","tags":null,"title":"MMLとマークダウンの組み合わせ"},{"categories":null,"objectID":"0cbff2809dbd5e05e468a00b1dc2220e","permalink":"https://umemak.github.io/blog/posts/2022/01/24_mml/","publish_date":"2022-01-24T00:00:00Z","summary":"こんなページを見つけた。 MMLの楽譜を作成しMIDIやMP3に変換・再生 ネット音楽教室 こないだやりたいと思っていたことがすでに実現されていたとは。 ところで、MMLって方言が結構あるようで、標準化はされてないのだろうか。 音階やオクターブ上下などはどこも同じだけど、コードとかループなんかは特に表記が揺れ","tags":null,"title":"MML再生サービス"},{"categories":null,"objectID":"052add6992b9d60029fedbb8013160f9","permalink":"https://umemak.github.io/blog/posts/2022/01/23_mml/","publish_date":"2022-01-23T00:00:00Z","summary":"runvnc/music1: A simple way to play with MML (Music Macro Language). Enter MML in text area and press play button. は、中身はmohayonao/mml-emitter: MML(Music Macro Language) event emitter for Web Audio API.で、そこからmohayonao/mml-iterator: MML(Music Macro Language) Iteratorを使っているので、mml-iteratorを読んでみた。 とてもシンプルで読みやすいソースだと思った。 他","tags":null,"title":"mml-iteratorのソースを読む"},{"categories":null,"objectID":"f97199737bdad195552c6b759e277783","permalink":"https://umemak.github.io/blog/posts/2022/01/22_wsl_midi/","publish_date":"2022-01-22T00:00:00Z","summary":"MMLを再生するために何が必要か考えてみた。 MMLから直接再生できるのが良いけれど、大変そうなので既存の何かがあれば使っていきたい。 midiファイルを再生するアプリはTiMidityというのがよさそう。 timidityとSoundFontをインストール $ sudo apt install timidity freepats fluid-soundfont-gm fluid-soundfont-gs 参考 FrontPage - KemaSoft 適当なmidiファイル","tags":null,"title":"WSL2でmidi再生"},{"categories":null,"objectID":"e956494a6c168acf3bc3ba5850ca5114","permalink":"https://umemak.github.io/blog/posts/2022/01/21_mml/","publish_date":"2022-01-21T00:00:00Z","summary":"Music Macro Langurageの略。 音楽をテキストで作成するための記法。 ベーマガに載っているリストをひたすら打ち込んでいた思い出。 片手でもそこそこキーボード打てるのは、この時の経験があるからかもしれない（左手で本を抑えて、右手で入力してた）。 GitHub検索したらいくつかパーサーが公開されているけれど、Go","tags":null,"title":"MML"},{"categories":null,"objectID":"82233b6c61410f1fcd9711222577e071","permalink":"https://umemak.github.io/blog/posts/2022/01/20_wireless_debug/","publish_date":"2022-01-20T00:00:00Z","summary":"Pixel4でAndroid12の時の現象。ほかの組み合わせは未確認。 Androidのワイヤレスデバッグを使おうとして $ adb pair 192.168.***.***:nnnnn Enter pairing code: 999999 Failed: Unable to start pairing client. こんなエラーになったとき $ ping 192.168.***.*** PING 192.168.***.*** (192.168.***.***) 56(84) bytes of data. From 192.168.***.*** icmp_seq=3 Destination Host Unreachable ^C --- 192.168.***.*** ping statistics --- 4 packets transmitted, 0 received, +1 errors, 100% packet loss, time 3093ms pingも通らないなら デバイスを再起動すると直る。","tags":null,"title":"ワイヤレスデバッグの接続ができないとき"},{"categories":null,"objectID":"b727e1594abc94161a398f77f085a18c","permalink":"https://umemak.github.io/blog/posts/2022/01/19_flutter_wsl/","publish_date":"2022-01-19T00:00:00Z","summary":"Android実機でのワイヤレスデバッグができない件、Pixel4を再起動したらあっさり解決。 時間返して・・ ということで、Flutterのでもアプリを実機で確認することができた。","tags":null,"title":"続々・FlutterをWSL2で開発したい"},{"categories":null,"objectID":"5f3e39c78b43e37161ddde9891830dd9","permalink":"https://umemak.github.io/blog/posts/2022/01/18_flutter_wsl/","publish_date":"2022-01-18T00:00:00Z","summary":"昨日調べた中で手っ取り早そうな、デバイスは実機を使うパターンを試してみた。 VS CodeでFlutterデバッグ動かすところまでは行けたけど、デバイスの接続でエラーになってしまう。 $ adb pair \u0026lt;ipaddress\u0026gt;:\u0026lt;port\u0026gt; Enter pairing code: \u0026lt;code\u0026gt; Failed: Unable to start pairing client. ping打ってもDestination Host Unreachableだし、WindowsのFirewa","tags":null,"title":"続・FlutterをWSL2で開発したい"},{"categories":null,"objectID":"07d50517976b68f56f50147d904507e1","permalink":"https://umemak.github.io/blog/posts/2022/01/17_flutter_wsl/","publish_date":"2022-01-17T00:00:00Z","summary":"ちょっと気分転換に。 Surface Go2では力不足だと思って遠慮していた、Flutterのローカル環境での開発をやりたい。 以前はFlutter Webを使っていたので、ホットリロードの恩恵が受けられずにいた。 InspironになってCore i7+16GBを手にした今、Androidエミュレータ使ってホットリロード","tags":null,"title":"FlutterをWSL2で開発したい"},{"categories":null,"objectID":"0e009d5fb13bdc46948aff6fad5fb0e8","permalink":"https://umemak.github.io/blog/posts/2022/01/16_firebase/","publish_date":"2022-01-16T00:00:00Z","summary":"エラーメッセージUncaught TypeError: Cannot read properties of undefined (reading 'initializeApp')でぐぐって出てきた javascript - Uncaught TypeError: Cannot read property \u0026lsquo;initializeApp\u0026rsquo; of undefined - Stack Overflow を参考にしたら、エラー解消して一歩進んだ。 上記回答にも書いてあるが、 Upgrade from version 8 to the modular Web SDK | Firebase Documentation ドキュメントに書いてある（以前自分も見つけてたやつだけど、ふむふむ互換パッケージが用意","tags":null,"title":"続々・Firebase認証をvueで使う"},{"categories":null,"objectID":"7945b9882bb483ff22f9ad9c26057550","permalink":"https://umemak.github.io/blog/posts/2022/01/15_firebase/","publish_date":"2022-01-15T00:00:00Z","summary":"どうもうまくいかない。 ライブラリのバージョンの問題なのか何か見落としていることがあるのか。 AmplifyのGraphQLもそうだけど、こういう、本質的ではないと（個人的には）思うところで躓いて先に進めないのはとてもストレスになる。","tags":null,"title":"続・Firebase認証をvueで使う"},{"categories":null,"objectID":"5007c2e0860ec7af1046120fe41de7ff","permalink":"https://umemak.github.io/blog/posts/2022/01/14_firebase_auth/","publish_date":"2022-01-14T00:00:00Z","summary":"環境が整ってきたので、また再開。 前回はAmplifyからFirebaseへの差し替えは意外と面倒そうだというところで終わっていた。 このあたりの記事が参考になりそう。 Firebase+Vue.js(Vue3 Composition API)でログイン/サインアップフォームを作成する | devsakaso Vue3でFirabaseログイン FriendlyEats-vue3 - Firebase9 Vue.js 3 Turorial","tags":null,"title":"Firebase認証をvueで使う"},{"categories":null,"objectID":"013d71e9c615347f4f9dbdcdebb74353","permalink":"https://umemak.github.io/blog/posts/2022/01/14_antiv/","publish_date":"2022-01-14T00:00:00Z","summary":"Inspiron13にプリインストールされていた、マカフィー関連をアンインストールした。 Microsoft Difenderで十分だと思うし、いちいちユーザー登録させようとするのが嫌。","tags":null,"title":"マカフィーアンインストール"},{"categories":null,"objectID":"59bddd79b8248dcac5d75dfc66322df8","permalink":"https://umemak.github.io/blog/posts/2022/01/13_wsl2docker/","publish_date":"2022-01-13T00:00:00Z","summary":"WSL2でFirebaseの作業再開しようとしたら、npmやらなにやら入ってない（Surfaceのほうは過去にインストールしてたらしい）ので、 docker入れてみることにした。 https://docs.docker.com/engine/install/ubuntu/ $ sudo apt-get remove docker docker-engine docker.io containerd runc $ sudo apt-get update $ sudo apt-get install \\ ca-certificates \\ curl \\ gnupg \\ lsb-release $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg $ echo \\ \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null $ sudo apt-get update $ sudo apt-get install","tags":null,"title":"WSL2でdocker"},{"categories":null,"objectID":"210a909b3c037d9783a4f2bc7cfea106","permalink":"https://umemak.github.io/blog/posts/2022/01/12_inspiron13/","publish_date":"2022-01-12T00:00:00Z","summary":"Inspiron13が到着した。意外と簡素な梱包。 OSははじめてのWindows11。 とりあえずChromeとVS Codeインストール。 WSL2もインストール。terminalを管理者権限で起動して、 wsl --install タッチパッドが頻繁に反応なくなるのはちょっと。。 キーボード、全体的にもう少し左に寄せてもよかった","tags":null,"title":"Inspiron13購入"},{"categories":null,"objectID":"192bfc5409f963c841223a2de82fb927","permalink":"https://umemak.github.io/blog/posts/2022/01/11_css/","publish_date":"2022-01-11T00:00:00Z","summary":"Hugoのテーマ、Inkblottyを使わせてもらっているのだけれど、codeとリンクが見えにくいと思って、GitHubっぽくしてみた。","tags":null,"title":"HugoのCSSいじり"},{"categories":null,"objectID":"e4c80a9938e25cff1f54b19b1ddb0b9c","permalink":"https://umemak.github.io/blog/posts/2022/01/10_firebase_auth/","publish_date":"2022-01-10T00:00:00Z","summary":"FirebaseのAuth組み込み、参考にしているWebサイトの例が import firebase from \u0026#34;firebase\u0026#34;; firebase.auth().hogehoge で、真似して実装しても This dependency was not found: * firebase in ./src/router/index.js To install it, you can run: npm install --save firebase エラーになって悩んでいた。 結局、 import { getAuth } from \u0026#34;firebase/auth\u0026#34;; getAuth().hogehoge で書くと通ることに気づいた。 これはJavaScript モジュール形式の Firebase JS SDK バージョン 9（v9 SDK）というものらし","tags":null,"title":"Firebase v9 SDK"},{"categories":null,"objectID":"70e2a352844e1cda8b62a891482ed70b","permalink":"https://umemak.github.io/blog/posts/2022/01/09_vue/","publish_date":"2022-01-09T00:00:00Z","summary":"Vueはtemplateとscriptがひとつのファイルに同居しているので（少なくとも今回作っていたアプリはそう）、AmplifyからFirebaseに乗り換えようとしたときは、結局scriptの方は書き換えないといけない。 templateとscriptがまとめて管理できることが良くも悪くも特徴なん","tags":null,"title":"VueアプリのAmplifyからFirebaseの移行"},{"categories":null,"objectID":"1ed79d1982a3253896dfd1d567509d0d","permalink":"https://umemak.github.io/blog/posts/2022/01/08_newpc/","publish_date":"2022-01-08T00:00:00Z","summary":"アマゾンの欲しいものリスト眺めてたら、Inspiron14が10%オフになってて、買ってしまおうかと思った。 いったん落ち着いてDELLの直販見に行ったら、アマゾンのよりもストレージ容量上でも値段が若干安くなっていた。 じゃあ直販から買うかと思ったけど、どうせ直販から買うならもともと狙っていたInspi","tags":null,"title":"新しいPC注文"},{"categories":null,"objectID":"49049de3b568e07ea16192a73b675ca2","permalink":"https://umemak.github.io/blog/posts/2022/01/07_newpc/","publish_date":"2022-01-07T00:00:00Z","summary":"ローカルでもちゃんと開発できるようにしたいと思ったら、Serface Go 2では厳しいことがわかった。 そもそも持ち歩くことが多い可能性があったから、小型軽量を優先していたわけで、出歩くことが激減した昨今、小型軽量は優先度が下がってしまった。 で、代わりに優先度が上がってきたのが、性能。CPUはCore i5","tags":null,"title":"新しいPC検討"},{"categories":null,"objectID":"7b16a8f155c0d13a8e0b342150fbc9cc","permalink":"https://umemak.github.io/blog/posts/2022/01/06_firebase_auth2/","publish_date":"2022-01-06T00:00:00Z","summary":"routerでログイン状態のチェック入れて遷移先の制御などしていたけれど、状態の取得方法がFirebaseとAmplifyで違っているようで、単純に置き換えるだけということにはならなそう、というのが昨日からの学び。 もしかしてFirebaseの場合はstore経由で状態管理しなくてもよい？ だいぶ作りが","tags":null,"title":"続・認証の置き換え"},{"categories":null,"objectID":"afc84a8013737ec000965533b7d1a20c","permalink":"https://umemak.github.io/blog/posts/2022/01/05_firebase_auth/","publish_date":"2022-01-05T00:00:00Z","summary":"Amplify AuthをFirebase Authに置きかえる。 FirebaseUI でウェブアプリに簡単にログイン機能を追加する | Firebase Documentation FirebaseUI + vueでログイン処理 - Qiita $ npm install firebaseui --save $ npm install firebaseui-ja --save","tags":null,"title":"認証の置き換え"},{"categories":null,"objectID":"7097f7f913691ba6441bca74c160e541","permalink":"https://umemak.github.io/blog/posts/2022/01/04_firebase/","publish_date":"2022-01-04T00:00:00Z","summary":"Amplifyで挫折したお題を、Firebaseで作り比べてみる。 Firebaseでプロジェクトを作成、前回と同じリポジトリでCodespacesを起動。 「ウェブアプリへのFirebaseの追加」手順に沿ってインストール。 $ npm install firebase src/main.js のAmplify関連で追加した部分を削除、Firebaseのコードを","tags":null,"title":"Firebaseでやってみる"},{"categories":null,"objectID":"0784e7f43efa969bfa1afac202c8181f","permalink":"https://umemak.github.io/blog/posts/2022/01/02_mbaas/","publish_date":"2022-01-02T00:00:00Z","summary":"機能やSDKの対応言語をまとめようと思って始めたけれど、Firebaseが数歩リードしている印象。 AWS AmplifyやAzure App Servicesでも同じようなことはできるかもだけど、ひとつのサービスとして揃っている（既存のサービスを組み合わせて都度構築する必要がない）のが強みだと思う。","tags":null,"title":"MBaaSの比較"},{"categories":null,"objectID":"336c8b1be8a06f15fde2e024a329d14b","permalink":"https://umemak.github.io/blog/posts/2022/01/01_mbaas/","publish_date":"2022-01-01T00:00:00Z","summary":"一月ほどAmplify触ってみて、Firebaseのほうが使い勝手よさそうだなと思った。 ほかにこのジャンル、Mobile Backend as a Service（MBaaS）はどんなのがあるのか気になったので調べてみた。 Mobile backend as a service - Wikipedia MBaaSでアプリ開発をスピーディに！モバイル開発サービス6選 | QEEE ニフクラmobile","tags":null,"title":"MBaaSを調べる"},{"categories":null,"objectID":"d2b81bea28406bfd1af29c02b077eed7","permalink":"https://umemak.github.io/blog/posts/2021/12/31_ac/","publish_date":"2021-12-31T00:00:00Z","summary":"今日で1か月。よく続いた。 アプリは完成までたどり着かなかったけど、学びは得られた。 GraphQL理解すればまた評価変わるかもしれないけど、AmplifyよりFirebaseのほうがとっつきやすいと感じた。 自分の環境ではモックがまともに使えなかったのも痛い。モックが使えなくても、pushが速ければ気に","tags":["AdventCalendar2021"],"title":"まとめ"},{"categories":null,"objectID":"90acea164d751078e83e9d72e95c85b6","permalink":"https://umemak.github.io/blog/posts/2021/12/30_ac/","publish_date":"2021-12-30T00:00:00Z","summary":"昨日の続き。 AND以外に、ORも同様のエラーでNGだった。 ANDやORを使わなければ想定通りのフィルタになるので、間違ってないと思うんだけど。 何度目かの詰み。","tags":["AdventCalendar2021"],"title":"GraphQLでAND条件検索"},{"categories":null,"objectID":"0492ec5b450c90940014a0a346f5f3fa","permalink":"https://umemak.github.io/blog/posts/2021/12/29_ac/","publish_date":"2021-12-29T00:00:00Z","summary":"エントリー処理ができるようになったので、同じようなノリでキャンセル処理も実装する。 同じノリなのになぜかエラーが出る、と思ったらエントリーの方もエラーが出ていた。 Variable \u0026#39;id\u0026#39; has coerced Null value for NonNull type \u0026#39;ID!\u0026#39; eventIDとuserIDをキーに検索したいのに、idを指定しろと言われている。 getEventUserではなくlis","tags":["AdventCalendar2021"],"title":"キャンセル処理入れる"},{"categories":null,"objectID":"7c9e9060d5ce25461076b4d8b93a1563","permalink":"https://umemak.github.io/blog/posts/2021/12/28_ac/","publish_date":"2021-12-28T00:00:00Z","summary":"データがある状態でデータ構造の変更をかけたせいか、挙動が怪しくなったので一度DynamoDBのテーブルを削除した。 その後、amplify update api、apmlify pushを実行。 したらAppSyncのupdateでエラー終了してしまった。 amplify deleteで丸ごと削除してからamplify pushしたらN","tags":["AdventCalendar2021"],"title":"DB再作成"},{"categories":null,"objectID":"96333655a877c54699b824a9dbbcde85","permalink":"https://umemak.github.io/blog/posts/2021/12/27_ac/","publish_date":"2021-12-26T00:00:00Z","summary":"リレーション張ろうとするからややこしくなるのであって、IDだけ持たせればとりあえずやりたいことは実現できるのでは？","tags":["AdventCalendar2021"],"title":"データ構造再考"},{"categories":null,"objectID":"858a471808892b41989591e470805c49","permalink":"https://umemak.github.io/blog/posts/2021/12/26_ac/","publish_date":"2021-12-26T00:00:00Z","summary":"やったこと Amplifyのチュートリアル Codespacesでの開発 VSCode+WSLでの開発 VSCode+EC2での開発 VSCode+RaspberryPi4での開発 わかったこと AmplifyはFirebaseみたいなもの Vueはわかりやすい データベースはGraphQLわからないとつらい クラウド","tags":["AdventCalendar2021"],"title":"ここまでのまとめ"},{"categories":null,"objectID":"17b815eabdbe4fccfc842d932a783a92","permalink":"https://umemak.github.io/blog/posts/2021/12/25_ac/","publish_date":"2021-12-25T00:00:00Z","summary":"Surface Go2 で厳しいので、EC2インスタンス立ててやってみる。 とりあえず無料枠のt2.microでAmazonLinux。 gitが入ってなかったのでインストール。 $ sudo yum update $ sudo yum install git $ git --version git version 2.32.0 npmも入っていなかった。 チュートリアル: Amazon EC2 インスタンスでの Node.js のセットアップ - AWS SDK for JavaScript $ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash $ . ~/.nvm/nvm.sh $ nvm install node $","tags":["AdventCalendar2021"],"title":"EC2で開発"},{"categories":null,"objectID":"acd6d089949f2ca198582bf7e308d08c","permalink":"https://umemak.github.io/blog/posts/2021/12/25_ac2/","publish_date":"2021-12-25T00:00:00Z","summary":"寝る前にEC2で試してダメで、起きたらラズパイがあること思い出したので、ラズパイでも試してみる。 久しぶりの起動だし、OSクリーンインストールからやったら結構時間かかる。こんなにかかったっけ。 毎日のようにAmplify設定やっているとだいぶ慣れてくる。 JavaはWSLのときのコマンドで入れる。 add-apt-repository コマン","tags":["AdventCalendar2021"],"title":"Raspberry pi 4でやってみる"},{"categories":null,"objectID":"4745581b2178519efcf73f9906273bf3","permalink":"https://umemak.github.io/blog/posts/2021/12/24_ac/","publish_date":"2021-12-24T00:00:00Z","summary":"イベントにエントリーするときにユーザーテーブルとイベントテーブルの関連付けするので、それぞれのテーブルにデータがないといけない。 イベントテーブルの作成と編集はできるようになっているので、ユーザーテーブルにデータ登録するところを作る。 サインインのタイミングで登録できれば良いのだけれど、とりあえずログイ","tags":["AdventCalendar2021"],"title":"ユーザーテーブルにデータ登録する"},{"categories":null,"objectID":"c6b50d512dc8c497017d7c4b1c280f5c","permalink":"https://umemak.github.io/blog/posts/2021/12/23_ac/","publish_date":"2021-12-23T00:00:00Z","summary":"最初に試したチュートリアルもCodespaceでやってたのを思い出して、まだ残っていたのでaws-exporter.jsを持ってくることができた。 で、aws_appsync_graphqlEndpoint はAWSコンソールから確認できるだろう、と見に行ったら、バックエンドの設定をもってくるっぽいコマ","tags":["AdventCalendar2021"],"title":"壊れたファイルを取り戻す"},{"categories":null,"objectID":"ceac070a1b85a1e6dfa1f3443d4e3168","permalink":"https://umemak.github.io/blog/posts/2021/12/22_ac/","publish_date":"2021-12-22T00:00:00Z","summary":"データ構造試行錯誤するのに、毎回amplify pushすると時間がかかって面倒だなーと思っていたら、ローカルで動かせるモックがあることを知った。 Codespacesでまともに動くかわからないけど、やってみる。 $ amplify mock api 動いた。けど、アプリから接続しに行くのがIPアドレス指定で、Codespacesの公","tags":["AdventCalendar2021"],"title":"Amplify mock使ってみる"},{"categories":null,"objectID":"b24d54db11f9e9f63f92d1f15bd416f8","permalink":"https://umemak.github.io/blog/posts/2021/12/21_ac/","publish_date":"2021-12-21T00:00:00Z","summary":"manyToMany だとエントリーとキャンセルの状態を持たせるのができなさそうなので、やっぱり関連を持つテーブルを作ったほうがよさそう（おとといの設計 そしてレコード追加の書き方がわからない・・","tags":["AdventCalendar2021"],"title":"データ構成続き2"},{"categories":null,"objectID":"a445f69ed61a79217468f8b22c30a2ac","permalink":"https://umemak.github.io/blog/posts/2021/12/20_ac/","publish_date":"2021-12-20T00:00:00Z","summary":"昨日、多対多の関連を持つテーブルを定義したけれど、manyToManyの指定で実現できるのではないか。 API (GraphQL) - Data modeling - AWS Amplify Docs","tags":["AdventCalendar2021"],"title":"データ構成続き"},{"categories":null,"objectID":"a20c745f29a65d02ceea12d2951e57b1","permalink":"https://umemak.github.io/blog/posts/2021/12/19_ac/","publish_date":"2021-12-19T00:00:00Z","summary":"テーブル内に配列を持たせるのではなく、当初考えていたように、関連を管理するテーブルを別に用意したほうが良いのではないだろうか。 $ amplify push ? Do you want to update code for your updated GraphQL API Yes ? Do you want to generate GraphQL statements (queries, mutations and subscription) based on your schema types? This will overwrite your current graphql queries, mutations and subscriptions Yes 気軽に全部Yesしたけど、結構待たされる。 GraphQL（というかDynamoDB？）","tags":["AdventCalendar2021"],"title":"データ構造の見直し"},{"categories":null,"objectID":"008a9858e06036793389fb164e1fb913","permalink":"https://umemak.github.io/blog/posts/2021/12/18_ac/","publish_date":"2021-12-18T00:00:00Z","summary":"イベントにエントリーできるようにする。 参加者をイベント内の配列で持たせようとしたのだけれど、追加の方法がわからない。。 array.push() で行けるだろうと思ったけどエラー。","tags":["AdventCalendar2021"],"title":"エントリー機能追加"},{"categories":null,"objectID":"7ae9a576c1db2369d3f33679f5765520","permalink":"https://umemak.github.io/blog/posts/2021/12/17_ac/","publish_date":"2021-12-17T00:00:00Z","summary":"IDの指定ができるようになったので、それをキーに更新ができるようにする。 ここはそれほど悩むことなく実装できた。","tags":["AdventCalendar2021"],"title":"データ更新機能"},{"categories":null,"objectID":"e4eadde7704ed34902e599ff266aa1cb","permalink":"https://umemak.github.io/blog/posts/2021/12/16_ac/","publish_date":"2021-12-16T00:00:00Z","summary":"イベント作成と一覧が確認できたので、個別表示と編集のためのパラメータを渡す方法を調べる。 参考： API (GraphQL) - Create, update, delete data - JavaScript - AWS Amplify Docs API.graphql の戻り値を見ればよさそうだけど、長いIDだ、、 まあとりあえずはこれで。 router.js にパラメータ追加して、props: trueも設定。 props設定が抜けていて、\u0026ldquo;Variabl","tags":["AdventCalendar2021"],"title":"作成したレコードのID取得"},{"categories":null,"objectID":"20bb7c5f84ca425dee52090bc8f77268","permalink":"https://umemak.github.io/blog/posts/2021/12/15_ac/","publish_date":"2021-12-15T00:00:00Z","summary":"昨日、CORSのエラーで躓いていたものの解決ができず。 チュートリアルでやったときも出てたのか、出てなかったのか今となっては確認が面倒。。 問題の切り分けをするため、hostingに上げてみる。 $ amplify add hosting ? Select the plugin module to execute Hosting with Amplify Console (Managed hosting with custom domains, Continuous deployment) ? Choose a type Manual deployment $ amplify publish エラーは出ない。やっぱりCodespacesで実","tags":["AdventCalendar2021"],"title":"CORS続き"},{"categories":null,"objectID":"b632deaeb262a87a12a359227e415d75","permalink":"https://umemak.github.io/blog/posts/2021/12/14_ac/","publish_date":"2021-12-14T00:00:00Z","summary":"データの格納先ができたので、画面からデータ登録できるようにしてみる。 参考： Tutorial - Connect API and database to the app - Vue - AWS Amplify Docs Codespacesでnpm run serveで実行してアクセスすると、ブラウザのコンソールにInvalid Host/Origin headerが出ている。 package.json を修正して回避。codespaces前提だけど。 \u0026#34;serve\u0026#34;: \u0026#34;vue-cli-service serve --public ${CODESPACE_NAME}.githubpreview.dev\u0026#34;, 参考： AWS","tags":["AdventCalendar2021"],"title":"データ登録やってみる"},{"categories":null,"objectID":"471a35db4e2e67136f3124e4e5b47e62","permalink":"https://umemak.github.io/blog/posts/2021/12/13_ac/","publish_date":"2021-12-13T00:00:00Z","summary":"データ構造を考えたので、それをスキーマ情報に落としていく。 の前にamplifyコマンド $ amplify add api ? Select from one of the below mentioned services: GraphQL ? Here is the GraphQL API that we will create. Select a setting to edit or continue Continue ? Choose a schema template: One-to-many relationship (e.g., “Blogs” with “Posts” and “Comments”) ⚠️ WARNING: your GraphQL API currently allows public create, read, update, and delete access to all models via an API Key. To configure PRODUCTION-READY authorization rules, review: https://docs.amplify.aws/cli/graphql/authorization-rules GraphQL schema compiled successfully. Edit your schema at /workspaces/eventsite/amplify/backend/api/eventsite/schema.graphql or place","tags":["AdventCalendar2021"],"title":"schemaファイルを作る"},{"categories":null,"objectID":"12657f939a64d0a402ef1af1e18ff406","permalink":"https://umemak.github.io/blog/posts/2021/12/12_ac/","publish_date":"2021-12-12T00:00:00Z","summary":"各画面で必要な項目からデータ構造を作る。 event 項目名 name type ID id int イベント名 title string 開催日時 start timestamp 開催場所 place string 公開期間From open datetime 公開期間To close datetime 作成者 author int -\u0026gt; user.id user 項目名 name type ID id int ユーザー名 username string eventUser 項目名 name type ID id int イベントID eventid int -\u0026gt; event.id ユーザーID userid int -\u0026gt; user.id upload 項目名 name type ID id int イベントID eventid int -\u0026gt; event.id 資料URL url string comment 項目名 name type","tags":["AdventCalendar2021"],"title":"データ構造を考える"},{"categories":null,"objectID":"f6ff9b7e869a3931b43d466d2ce1012e","permalink":"https://umemak.github.io/blog/posts/2021/12/11_ac/","publish_date":"2021-12-11T00:00:00Z","summary":"https://docs.amplify.aws/start/getting-started/auth/q/integration/vue/#authentication-with-amplify この手順 amplify add auth amplify push ログイン情報を保存するために、storeを使用する 参考： 【AWS Amplify × Vue.js 簡単サーバーレスアプリ構築チュートリアル】③ Authでユーザー登録、ログイン機能実装編 - Qiita npm install vuex@4 次はデータの読み書き","tags":["AdventCalendar2021"],"title":"authを追加"},{"categories":null,"objectID":"d52398e6989e2e96c91c87a6cb8797c8","permalink":"https://umemak.github.io/blog/posts/2021/12/10_ac/","publish_date":"2021-12-10T00:00:00Z","summary":"各画面のファイルができたので、必要な項目を並べていく作業。 uiflow作ったときにおおむね書いておいたので、それをタグに落としていく。 一通り書いて、ボタンで画面遷移もするようにできた。 次はログイン機能をつける（チュートリアルでやったやつ）。","tags":["AdventCalendar2021"],"title":"画面を作る"},{"categories":null,"objectID":"5cccd2bb95af7b0ed19099fb8f0b8f03","permalink":"https://umemak.github.io/blog/posts/2021/12/09_ac/","publish_date":"2021-12-09T00:00:00Z","summary":"参考にしたページ Vue.js 3 入門 「ルーティング」（Vue Router） - Qiita このままだと動かなかったので、vue-routerをバージョンアップ。最初インストールしたときはバージョン指定しなかったせいか3系が入っていた。 npm install vue-router@4 これで画面が表示されるようになった。","tags":["AdventCalendar2021"],"title":"画面モック作成続き"},{"categories":null,"objectID":"5d59f9244f255c3e8d0addb87115b485","permalink":"https://umemak.github.io/blog/posts/2021/12/08_ac/","publish_date":"2021-12-08T00:00:00Z","summary":"昨日洗い出した画面をとりあえず書いてみる。 画面遷移にvue-routerを使うので、インストールしておく。 npm install vue-router 各画面は、src/views/に置く。 $ ls -1 src/views/ CancelConfirm.vue EntryConfirm.vue EventCreate.vue EventDetail.vue EventEdit.vue EventSearch.vue Login.vue MyPage.vue Top.vue ファイル作るところまでで今日は時間切れ。。","tags":["AdventCalendar2021"],"title":"画面モックを作る"},{"categories":null,"objectID":"41a0ce182a37fb7bda61358cfc777efd","permalink":"https://umemak.github.io/blog/posts/2021/12/07_ac/","publish_date":"2021-12-07T00:00:00Z","summary":"初日にあげた機能をもとに、必要な画面とそれらの関連を考える。 イベントページの作成と編集 イベントの検索 参加エントリー、キャンセル コメント投稿 UI Flow図で書いてみた。 https://github.com/umemak/eventsite/blob/main/doc/uiflow.txt とりあえずこんな感じかな。 足りないところがあればその都度足していく方針で。","tags":["AdventCalendar2021"],"title":"画面遷移を考える"},{"categories":null,"objectID":"201c9fd5549209f17972a23ec994e1d7","permalink":"https://umemak.github.io/blog/posts/2021/12/06_ac/","publish_date":"2021-12-06T00:00:00Z","summary":"チュートリアルで雰囲気をつかんだので、実際に使うリポジトリを作って、必要なパッケージなどセットアップする。 GitHub Codespacesでやっていく。 基本的には、デフォルトの選択肢で次々進めてOK。 npm install -g @aws-amplify/cli amplify configure npm install -g @vue/cli vue create . \u0026gt; vue3 を選択 npm install npm run serve --open ここまででvueの動作確認ができる。 amplify init npm install aws-amplify @aws-amplify/ui-components ここまででAm","tags":["AdventCalendar2021"],"title":"リポジトリを作って初期化する"},{"categories":null,"objectID":"5cff4697fdacb2b643d2aefb905ab8e3","permalink":"https://umemak.github.io/blog/posts/2021/12/05_ac/","publish_date":"2021-12-05T00:00:00Z","summary":"昨日のチュートリアルでかかった費用、0.03ドルくらい。","tags":["AdventCalendar2021"],"title":"Amplify続き"},{"categories":null,"objectID":"8ed610da07c7e4f842a6f284b1758c86","permalink":"https://umemak.github.io/blog/posts/2021/12/04_ac/","publish_date":"2021-12-04T00:00:00Z","summary":"Getting started - Vue - AWS Amplify Docsをやってみた。 GitHubにリポジトリ作って、Codespaceで開いて。 小一時間で認証付きのToDoアプリができた。 意外と待ち時間が長かったのは、最初だけなのかCodespaceの力不足なのか。 たぶんCloudFormationの実行待ち時間な気がするから、最初だけだと思って","tags":["AdventCalendar2021"],"title":"Amplify Tutorialやってみた"},{"categories":null,"objectID":"a9b87d8420ef3b3f2f1b14308fc349ef","permalink":"https://umemak.github.io/blog/posts/2021/12/03_ac/","publish_date":"2021-12-03T00:00:00Z","summary":"昨日は使うツールなどを考えた。 AWSのAmplifyを使う予定でいたら、なんかすごいのが発表されてた。 ［速報］AWS、ローコードでWebのフロントエンドを開発できる「AWS Amplify Studio」発表。バックエンド管理機能も統合。AWS re:Invent 2021 － Publickey 生成されるコードはReactらしい。今回はVue.jsを触ってみ","tags":["AdventCalendar2021"],"title":"Amplify使ってみる"},{"categories":null,"objectID":"a9442090c150fbc96ed90971d12bea98","permalink":"https://umemak.github.io/blog/posts/2021/12/02_ac/","publish_date":"2021-12-02T00:00:00Z","summary":"昨日は、作るものとその機能をざっくり決めた。 2日目の今日は、アーキテクチャなど考えたい。 WEBアプリなので、フロントエンドとバックエンドAPIとデータベースかな。 フロントはNext.jsとかNuxtとかその辺だろうか。 Next.jsは前に触ったことあるので、今回はNuxtにしてみようかな。 バックエン","tags":["AdventCalendar2021"],"title":"サービス開発日記"},{"categories":null,"objectID":"876422eabb1515f5106e4e371be76fbd","permalink":"https://umemak.github.io/blog/posts/2021/12/01_ac/","publish_date":"2021-12-01T00:00:00Z","summary":"期間内にアプリを作ってみたい。 その経過を毎日記事にしたらいい感じになるのではないだろうか。 1日目は、どんなものを作るか考えた。 イベント管理サイトを作ってみようと思う。 主催者用と参加者用。 イベントページを介してコミュニケーションをとる。 機能は、 イベントページの作成と編集 イベントの検索 参加エントリー、キ","tags":["AdventCalendar2021"],"title":"Advent Calendarやってみる"},{"categories":null,"objectID":"058dbd0767399c5bafd82fd47934a213","permalink":"https://umemak.github.io/blog/posts/2021/07/18_clouds/","publish_date":"2021-07-18T00:00:00Z","summary":"AWSで構築しているシステムをAzureと並行稼働させることはできるのか？GCPは？という疑問を解消するために調べてみる。 サービス比較 まずはAWS, Azure, GCPのサービス比較。 サービス名先頭の AWS, Amazon, Azure, Cloud(GCP) は省略。 サーバーレスコンピューティング AWS Azure GCP Lambda Functions Functions Java, Go, PowerShell, Node.js, C#, Python, Ruby C#, JavaScript(Node.js), F#, Java, PowerShell, Python, TypeScript Node.js, Python, Go, Java, .NET Core(C#, F#), Ruby, PHP Lambda@Edge Node.js, Python CloudFront","tags":["aws","azure","gcp"],"title":"クラウドサービス比較"},{"categories":null,"objectID":"24041cdd4fa8aa63d78984fdad4eb3fb","permalink":"https://umemak.github.io/blog/posts/2021/04/17_minikube_mysql/","publish_date":"2021-04-17T00:00:00Z","summary":"MacでやったらMySQLの起動時にエラーで落ちてしまったので、Windowsでどうなるか試す。 基本的には公式のドキュメントを参照。 https://kubernetes.io/ja/docs/tasks/run-application/run-single-instance-stateful-application/ munikubeインストール winget install minikube minikube起動 minikube start $ kubectl get nodes NAME STATUS ROLES AGE VERSION minikube Ready control-plane,master 73s v1.20.2 マニフェストファイル作成 mysql.yaml デプロイ $ kubectl apply -f mysql.yaml service/mysql created deployment.apps/mysql created persistentvolumeclaim/mysql-pv-claim created persistentvolume/mysql-pv-volume created $ kubectl get pods -l app=mysql NAME READY STATUS RESTARTS","tags":["windows","minikube","mysql"],"title":"WindowsのminikubeでMySQLを動かす"},{"categories":null,"objectID":"7ad7b4b6b7286620e11cf01797a0d07d","permalink":"https://umemak.github.io/blog/posts/2021/03/20_ghactions_mysql/","publish_date":"2021-03-20T00:00:00Z","summary":"以前書いた、GitHub Actionsでインストール済みMySQLを使う方法で起動したMySQLは、lower_case_table_namesが0になっている（Linuxではこれがデフォルト）。 lower_case_table_namesを1に変更したければ、/etc/mysql/mysql.co","tags":["github","actions","mysql"],"title":"GitHub Actions の MySQL で lower_case_table_names を変更する"},{"categories":null,"objectID":"ee4da81df4fbab4d637d51cab8f25e23","permalink":"https://umemak.github.io/blog/posts/2021/01/11_settings/","publish_date":"2021-01-11T00:00:00Z","summary":"コマンドラインアプリ起動時の設定をするときに、コマンドライン引数、環境変数、設定ファイルどれを優先するのが一般的なのか気になったのでググった結果のメモ。 https://ayasuda.github.io/pages/note_configuration_order_at_command_line.html まず設定ファイルを読み、環境変数が設定されていれば上書き、コマンドラインで指定されていればさらに上書き。ということでコマンドライン引数が最優先とい","tags":["programmning"],"title":"コマンドラインの設定優先度について調べた"},{"categories":null,"objectID":"f1317aade047096cae02d6314022176d","permalink":"https://umemak.github.io/blog/posts/2020/12/14_github_actions_mysql/","publish_date":"2020-12-14T00:00:00Z","summary":"GitHub ActionsでMySQLを使ったCIを回したかった。 ググると、servicesでmysqlコンテナを立ち上げる方法がヒットしたが、コンテナの起動に45秒くらいかかっていて、ちょっと長いなー、と。 そこでmysqlをインストールしたらどうなんだろうと思い、そういえばmysqlコマンドラインツールは最","tags":["github","actions","mysql"],"title":"GitHub Actions で MySQL を使う"},{"categories":null,"objectID":"c33ae29d366be1f548fc6c1504136b18","permalink":"https://umemak.github.io/blog/posts/2020/11/28_go_interface/","publish_date":"2020-11-28T00:00:00Z","summary":"golintのexported %s %s returns unexported type %s, which can be annoying to useを解消したい。 interfaceを定義して回避するのが一般的？らしい。 structが入れ子になっていて、内側のstructにメソッドが定義されていると、cannot call pointer methodとなり呼べない。 https://play.golang.org/p/yvWspYJnYSv pointerを返してあげれば良い。 https://play.golang.org/p/l_l4tMAD-Bd シング","tags":["go"],"title":"Goのinterfaceを学ぶ"},{"categories":null,"objectID":"23e96d7a86b15b916bda89151e02cba7","permalink":"https://umemak.github.io/blog/posts/2020/11/07_docker_swarm_mode/","publish_date":"2020-11-07T00:00:00Z","summary":"複数の仮想サーバーでdocker-composeで起動したコンテナの管理をする方法を調べていて、swarm modeにたどり着いたので調べたことを残す。 コマンドでモード切替 有効化：docker swarm init 無効化：docker swarm leave --force シングルノードでも試せる シングルノードの場合は、init時の--advertis","tags":["docker"],"title":"Docker swarm modeを知る"},{"categories":null,"objectID":"d06b2c6f7f934c86a3d2e2d34199a91d","permalink":"https://umemak.github.io/blog/posts/2020/09/02_hello_flutter/","publish_date":"2020-09-02T00:00:00Z","summary":"Surface Go 2 に Flutter Web 環境をインストールしたのでメモ。 基本的には公式手順に沿って進める。 gitからclone $ cd ~/workspace $ git clone https://github.com/flutter/flutter.git -b stable 環境変数PATHに追加 ユーザー環境変数の最後に追加した flutter doctor実行 [√] Flutter (Channel stable, 1.20.2, on Microsoft Windows [Version 10.0.19041.450], locale ja-JP) [X] Android toolchain - develop for Android devices X Unable to locate Android SDK. Install Android Studio from: https://developer.android.com/studio/index.html On first launch it will assist you in installing the Android SDK components. (or visit https://flutter.dev/docs/get-started/install/windows#android-setup for detailed instructions). If the Android SDK","tags":["flutter"],"title":"Flutterに入門"},{"categories":null,"objectID":"ba4588b3007f3c5b536c6490ca795f71","permalink":"https://umemak.github.io/blog/posts/2020/08/01_hello_rust/","publish_date":"2020-08-01T00:00:00Z","summary":"なぜDiscordはGoからRustへ移行するのか - MISONLN41\u0026rsquo;s Blog を読んで興味がわいたのでインストールしてみた。 Rust をインストール - Rustプログラミング言語 のWSLのコマンドで。インストール完了後、WSLログインしなおさないとrustcコマンド使えなかった。 $ rustc --version rustc 1.45.1 (c367798cf 2020-07-26) ファイル作って $ vim hello.rs fn main() { println!(\u0026#34;Hello, world!\u0026#34;); } コンパ","tags":["rust"],"title":"Rust入門"},{"categories":null,"objectID":"99b5d98e95e52929a25f85d6e490f525","permalink":"https://umemak.github.io/blog/posts/2020/07/22_raspi_expo/","publish_date":"2020-07-22T00:00:00Z","summary":"WSLでいろいろ試してみたものの、ポート関連のエラーで動かないので、Raspberry piで試してみた。 Rubyインストール Homebrewインストールしようとしたときに、Rubyがないエラーで先に進まなくなってしまったので先にインストールしておく。 rbenvを使ってみる。 途中でパッケージが足りない","tags":["expo","raspberry-pi"],"title":"Raspberry pi4 で expo を動かす"},{"categories":null,"objectID":"b15811f3b32b1194faf5dd24defbd1d7","permalink":"https://umemak.github.io/blog/posts/2020/07/20_wsl_brew/","publish_date":"2020-07-20T00:00:00Z","summary":"Node.jsのバージョン管理したくなったので。 Homebrewのインストール https://brew.sh/index_ja にしたがって。 $ /bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\u0026#34; $ sudo apt-get install build-essential $ echo \u0026#39;eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\u0026#39; \u0026gt;\u0026gt; /home/`whoami`/.profile $ eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv) $ brew --version Homebrew 2.4.8 Homebrew/linuxbrew-core (git revision 09353; last commit 2020-07-19) インストール済みnodejsパッケージの削除 aptで入れていたnodejsを削除。 $ sudo apt remove nodejs nodebrewのインストール $ brew install nodebrew node","tags":["wsl"],"title":"WSL2にbrewをつかってnodejsのインストールをする"},{"categories":null,"objectID":"c82a09437c2b9905ddaee6c80861afba","permalink":"https://umemak.github.io/blog/posts/2020/07/20_wsl_date/","publish_date":"2020-07-20T00:00:00Z","summary":"apt updateしたときにエラーになった場合の解決策のひとつ。 WSL側の時計が大幅にずれているパターン。 https://github.com/microsoft/WSL/issues/4245 を参考に。 # hwclock -s","tags":["wsl"],"title":"WSLの時計を合わせる"},{"categories":null,"objectID":"aff1345b7cbdff0efe04281bafcbd5fb","permalink":"https://umemak.github.io/blog/posts/2020/07/12_docker_win10/","publish_date":"2020-07-12T00:00:00Z","summary":"最初にSurface Go2をセットアップしたとき、WSL2のほうにDockerをインストールしていた。 使う時だけ起動すればいいと思っていたが、意外と面倒（sudoしてデーモン起動させるのとか）に感じていた。 VSCode blogの記事を見て、Windows側にDocker Desktopをインストールするのもあり","tags":["win10","docker"],"title":"Windows10にDocker Desktopをインストール"},{"categories":null,"objectID":"523892253b368ce656b1a3ba31ba2381","permalink":"https://umemak.github.io/blog/posts/2020/07/08_awscli_wsl2/","publish_date":"2020-07-08T00:00:00Z","summary":"S3って、マネジメントコンソールからフォルダ名の変更ってできないんですね。。 こちらを参考に。 SurfaceにしてからAWS CLIインストールしてなかったし、せっかくなのでWLS2のUbuntuでやってみます。 公式のDocker版でインストール（というほどのことでもないですが）。 $ docker run --rm -it amazon/aws-cli --version aws-cli/2.0.29 Python/3.7.3 Linux/4.19.104-microsoft-standard botocore/2.0.0dev33","tags":["wsl","aws","docker"],"title":"WSL2でAWS CLIを使ってS3のフォルダ名を変更する"},{"categories":null,"objectID":"44de9f77c5d50d045d6a1784dec562a9","permalink":"https://umemak.github.io/blog/posts/2020/06/22_update_hugo/","publish_date":"2020-06-22T00:00:00Z","summary":"しばらく追っていなかったら、Hugoのバージョンが結構上がっていたので、最新を使ってみることにした。 とはいえ、デプロイにGitHub Actionsを使っているので、設定ファイルの更新だけで完了した。 差分 Hugoのバージョン変更より、ついでに更新したactionsの変更で躓いてしまった。 今はDEPLO","tags":["hugo"],"title":"Hugoのバージョンアップ"},{"categories":null,"objectID":"8d83243f59e3cdfea447bd14eb629db5","permalink":"https://umemak.github.io/blog/posts/2020/06/11_deployserver/","publish_date":"2020-06-11T00:00:00Z","summary":"SourceRepositoriesで管理して、CloudBuildでFirebase HostingにデプロイしているGatsbyプロジェクトを、SourceRepositoryとCloudBuildを使わずに実現してみる。 GiteaがCentOS6で動くようになったので、SourceReposit","tags":["linux","firebase","gitea"],"title":"Firebase用デプロイサーバーを作る"},{"categories":null,"objectID":"5f0a1d965b3e0895e779eb5f0d715a15","permalink":"https://umemak.github.io/blog/posts/2020/06/08_gitea_pgsql/","publish_date":"2020-06-08T00:00:00Z","summary":"OSはCentOS6です。 https://qiita.com/hatayan1126/items/9b0d3be9c7ecdc207642 を参考に進めます。 この記事では9.6をインストールしていますが、せっかくなので最新の12を入れてみます。 PostgreSQLのインストール $ sudo su # yum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-6-x86_64/pgdg-redhat-repo-latest.noarch.rpm # yum update # yum install postgresql12-server # rpm -qa | grep postgres postgresql12-12.3-1PGDG.rhel6.x86_64 postgresql12-libs-12.3-1PGDG.rhel6.x86_64 postgresql12-server-12.3-1PGDG.rhel6.x86_64 # service postgresql-12 initdb # cp /var/lib/pgsql/12/data/pg_hba.conf{,.bk} # vim /var/lib/pgsql/12/data/pg_hba.conf # diff /var/lib/pgsql/12/data/pg_hba.conf{.bk,} 80c80 \u0026lt; local all all peer --- \u0026gt; local all all trust 82c82 \u0026lt; host all all 127.0.0.1/32 ident --- \u0026gt; host all all 127.0.0.1/32 trust # service postgresql-12 start #","tags":["gitea","pgsql","centos6"],"title":"GiteaのデータベースをPostgreSQLにする"},{"categories":null,"objectID":"a568d1a8eeb18abdfe6f1aa555871159","permalink":"https://umemak.github.io/blog/posts/2020/06/08_gitea2/","publish_date":"2020-06-08T00:00:00Z","summary":"先日の続き。 CentOS6だと、ビルド済みバイナリは依存物のバージョンが合わず、自前ビルドはメモリが足りず。 古いGiteaのビルド済みバイナリなら動くが、やっぱり最新版使いたいし、ちょっとした機能追加もしたい。 そこで、バイナリ1本にまとめる方法をやめた（TAGS=\u0026quot;bindata\u0026quot","tags":["centos","gitea"],"title":"続・CentOS6にgiteaをインストールする"},{"categories":null,"objectID":"498e9363385780a716fd1b9e3a91dc01","permalink":"https://umemak.github.io/blog/posts/2020/06/05_gitea/","publish_date":"2020-06-05T00:00:00Z","summary":"WikiはGitHubにも付いているのを思い出して、単独のWikiではなくGitHubクローンを試してみる。 GitLabとか重量系は最初からあきらめて、Goで書かれたシングルバイナリの軽量OSS、Giteaで挑戦。 VMはいつものGCP無料枠のやつ。 OSはCentOS6でディスクは30GB。 MySQL","tags":["centos","gitea"],"title":"CentOS6にgiteaをインストールする（未完）"},{"categories":null,"objectID":"35c1ed8c0414887ed0105975696a87d8","permalink":"https://umemak.github.io/blog/posts/2020/05/28_gas/","publish_date":"2020-05-28T00:00:00Z","summary":"今まで存在は知っていたし、Kindle Unlimitedで読める入門書を読んだりはしていた。 ここにきてようやく実際に手を動かしてみたので、その感想。 作ったものは、POSTリクエストを受けて、スプレッドシートのA列に入力と同じ文字列があれば、B列の内容を返すというもの。 学び スクリプトを修正したときは、","tags":["gas"],"title":"GAS入門"},{"categories":null,"objectID":"8f69a28a3a202c358e7bf4c2c21149cb","permalink":"https://umemak.github.io/blog/posts/2020/05/28_wsl/","publish_date":"2020-05-28T00:00:00Z","summary":"Windows 10大型アップデート「May 2020 Update」がダウンロード開始 という記事を見て、さっそく更新して、WSLとUbuntuをインストールしてみた。 とくに問題なく完了。 そしてdockerもインストール。 https://docs.docker.com/engine/install/ubuntu/ Add Docker’s official GPG key:のところでエラー。 WSLをインストールしただけでは、WSL2ではないら","tags":["surface"],"title":"Surface Go 2でWSL2+Dokcer"},{"categories":null,"objectID":"b4fd5d78400218a838f8e146c82ef493","permalink":"https://umemak.github.io/blog/posts/2020/05/25_duet_display/","publish_date":"2020-05-25T00:00:00Z","summary":"https://ja.duetdisplay.com/ Google Playの300円クーポンが有効期限間近だったので買ってみた。 spacedeskでも特に不便なくつかえていたのだけれど、有料アプリも試してみたかった。 環境はSurface Go2がホストでChromebook C101PA（Androidアプリ）がモニタでWiFi接続。 モバイルモニタの接続で使ってい","tags":["windows","chromebook"],"title":"Duetを使ってみる"},{"categories":null,"objectID":"336ed77343226f54588aa18c5e5c0869","permalink":"https://umemak.github.io/blog/posts/2020/05/25_nginx/","publish_date":"2020-05-25T00:00:00Z","summary":"Wiki.jsをservice化したときに、nobodyユーザーだと80番ポートでlistenできないので、Wiki（node.js）はデフォルトの3000番に戻して、nginxでプロキシすることにした。 https://docs.requarks.io/install/linux のRun as serviceをやりたかった。 ホームディレクトリに展開していたwikiを/var/に","tags":["nginx","wikijs"],"title":"nginxで80番ポートの向き先を変更する"},{"categories":null,"objectID":"6ba78af55c3bd35de18830878c4cb9a0","permalink":"https://umemak.github.io/blog/posts/2020/05/24_wikijs/","publish_date":"2020-05-24T00:00:00Z","summary":"GCP無料枠でWikiを動かしてみるシリーズ。 今回はWiki.js。 docker-composeを使う方法も用意されているが、軽量優先で通常インストールのほうで。 https://docs.requarks.io/install/linux config.ymlの編集では、ポートを80に、DBをsqliteに変更した。 $ sudo apt install wget nodejs npm $ wget https://github.com/Requarks/wiki/releases/download/2.3.81/wiki-js.tar.gz $ mkdir wiki $ tar xzf wiki-js.tar.gz -C ./wiki $ cd ./wiki $ mv config.sample.yml config.yml $ nano config.yml","tags":["wikijs"],"title":"Wiki.jsを試す"},{"categories":null,"objectID":"3f487ae6b3424ce3591b3e439c512f5e","permalink":"https://umemak.github.io/blog/posts/2020/05/23_past/","publish_date":"2020-05-23T00:00:00Z","summary":"https://past.atcoder.jp/ リアルタイム受験と通常受験があって、リアルタイム受験の方をやってみた。 まだ通常受験の期間内なので、内容について口外できない。 6月6日を過ぎたら書きたいことを書こうと思う。","tags":null,"title":"第三回アルゴリズム実技検定受けてみた"},{"categories":null,"objectID":"aec06b3c62cb2efd639f61af488efe05","permalink":"https://umemak.github.io/blog/posts/2020/05/20_surfacego2/","publish_date":"2020-05-20T00:00:00Z","summary":"昨日注文して今日届いた。 最近、Chromebookだけだと作業効率が悪いことがあって、Intel系CPUでWindowsOSで軽量で解像度がそれなりにあるものを探していたので。 C101PAを買う前に、最後まで比較したのが初代Goだったのもあり、やはり自分で使ってみないと評価できないよね、と。","tags":["Surface"],"title":"Surface Go 2を入手"},{"categories":null,"objectID":"247d3170a9599a4898a35d50d2dbb3d5","permalink":"https://umemak.github.io/blog/posts/2020/05/15_deno/","publish_date":"2020-05-15T00:00:00Z","summary":"Denoのバージョン1が出たというニュース記事を見て、試してみた。 https://deno.land/v1 Node.jsを作者自ら作り直したもの。 最初にRaspberry Pi 4で試したところ、公式のインストーラーがx86_64しか対応していなかったので断念。 ソースからビルドする手順も試してみたけれど、途中でエラーになってしまう。 armで動","tags":["deno"],"title":"DenoをChromebookで使ってみる"},{"categories":null,"objectID":"f8c6a3720123b1cccdb12088b1a741fb","permalink":"https://umemak.github.io/blog/posts/2020/05/01_vscodeonline/","publish_date":"2020-05-01T00:00:00Z","summary":"改名というよりは、ベータ版から正式名称になったという方が正しいか。 https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-codespaces/ ということで、先日作成したのを見に行ったら、 Chrome OS未対応・・・！ どういう理由だろう。。","tags":["vscode"],"title":"VSCode onlineがVSCodespaceに改名"},{"categories":null,"objectID":"ec27633c50ea43de4543e1efd0e54777","permalink":"https://umemak.github.io/blog/posts/2020/05/01_droidcam/","publish_date":"2020-05-01T00:00:00Z","summary":"ラズパイにWebカメラ付けてみたくても売っていないので、Android端末をカメラ化する。 Android端末側にはアプリをインストールしておく。 ラズパイ側。公式ページにはLinux用のインストール方法が用意されているが、 http://www.dev47apps.com/droidcam/linuxx/ Note: 32-bit binaries are no longer provided, you’ll need to compile the client from source. この条件に該当するのでソースからインス","tags":["raspberry-pi"],"title":"ラズパイでdroidcam"},{"categories":null,"objectID":"24d76034b521a919d927144bba47ce45","permalink":"https://umemak.github.io/blog/posts/2020/04/27_rpi_update/","publish_date":"2020-04-27T00:00:00Z","summary":"snapを導入してみたところ、実行時にエラーが出る。 $ hello-world ERROR: ld.so: object \u0026#39;/usr/lib/arm-linux-gnueabihf/libarmmem-${PLATFORM}.so\u0026#39; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored. Hello World! 実行自体はできているっぽいんだけど、気になるのでググったらrpi-updateを実行すると解消するかもしれないということで、やってみた。 ############################################################# WARNING: \u0026#39;rpi-update\u0026#39; updates to pre-releases of the linux kernel tree and Videocore firmware. \u0026#39;rpi-update\u0026#39; should only be used if there is a specific reason to do so - for example, a request by a Raspberry Pi","tags":["raspberry-pi"],"title":"はじめてのrpi-update"},{"categories":null,"objectID":"19b9de95f86973f01d00dd81acd9b0df","permalink":"https://umemak.github.io/blog/posts/2020/04/24_raspi_ubuntu/","publish_date":"2020-04-24T00:00:00Z","summary":"Ubuntuの新しいLTS版が出たので、ラズパイで動かしてみた。 実は先日、18.04＋kubuntuを入れてみたところ、動作が重くてちょっと実用にはならないなと思っていたところ。 20.04になってもしかしたら軽くなっているかもと期待して試した。 結果、kubuntuのGUIが起動しなくて公平な比較がで","tags":["raspberry-pi"],"title":"ラズパイ4にUbuntu20.04を入れる"},{"categories":null,"objectID":"a01a8d727b154afcf82c751f4442b99c","permalink":"https://umemak.github.io/blog/posts/2020/04/23_box86/","publish_date":"2020-04-23T00:00:00Z","summary":"ラズパイはARM系のCPUなので、INTEL系のCPU用にビルドされたバイナリはそのままでは動きません。 そこでエミュレーターを使ってみます。 今回使ってみたのは、 https://github.com/ptitSeb/box86 です。 ラズパイ4用のビルド方法が書いてあるので、その通りにして https://github.com/ptitSeb/box86/blob/master/COMPILE.md 途中、cmake がインストールされてないエラーが出たので、aptでインスト","tags":["raspberry-pi"],"title":"ラズパイでbox86を試す"},{"categories":null,"objectID":"2579bd7de0f896e3cdc3746b7c95bca5","permalink":"https://umemak.github.io/blog/posts/2020/04/17_raspi/","publish_date":"2020-04-17T00:00:00Z","summary":"以前から興味があったラズパイについに手を出しました。 4Bの4GB版。 さっそくSDカードにOSを入れて、と思ったらChromebookでできない。 https://www.raspberrypi.org/downloads/ のRaspberry Pi Imager for Ubuntuを入れて、起動はするもののSDカードを認識してくれないので書き込み先が指定できず。 開発者モードにすればいけるのかもし","tags":["raspberry-pi"],"title":"ラズパイ4導入"},{"categories":null,"objectID":"ee4fba19429c53fd4042ff1fa6e7f823","permalink":"https://umemak.github.io/blog/posts/2020/04/08_gitpod_firebase_login/","publish_date":"2020-04-08T00:00:00Z","summary":"何度もググるので。。 $ npm i -g firebase-tools $ firebase login --no-localhost 表示されるURLを別タブで開くと認証画面が表示されるので許可する。 許可するとコードが表示されるのでコピーしてコマンドラインに貼り付ける。","tags":["firebase","gitpod"],"title":"Gitpodでfirebaseログインする方法"},{"categories":null,"objectID":"7a1e6e2816595fc0ca904f0020f8c251","permalink":"https://umemak.github.io/blog/posts/2020/04/08_gitpod_node_version/","publish_date":"2020-04-08T00:00:00Z","summary":"https://github.com/zeit/next.js/tree/master/examples/with-firebase-hosting-and-typescript これを動かしたくて、 $ yarn create next-app --example with-firebase-hosting-and-typescript with-firebase-hosting-and-typescript-app したところ、The engine \u0026quot;node\u0026quot; is incompatible with this module. Expected version \u0026quot;10\u0026quot;. Got \u0026quot;12.16.1\u0026quot;というエラーで正常終了しない。バージョン10系を要求されているのに、インストールされているのは12系。 $ nvm install 10 を実行することで、10系になる。","tags":["node","gitpod"],"title":"Gitpodのnodeバージョンを変更する"},{"categories":null,"objectID":"08f61ecae6e66521043426e122ee31fb","permalink":"https://umemak.github.io/blog/posts/2020/04/06_nextjs_with_dotenv/","publish_date":"2020-04-06T00:00:00Z","summary":"reactでdotenv使うとき、起動モードごとに定義ファイルを変えられるように、.env.developmentにしていたので、同じようにやったら読み込まれない。 NextJSで使うときは、.envしか認識してくれないらしい。 環境ごとにファイル分けたい場合のやり方は、未調査。","tags":["nextjs"],"title":"NextJSとdotenvでハマった"},{"categories":null,"objectID":"dc3c558e6d003fc3c27803f1b3ad2e9b","permalink":"https://umemak.github.io/blog/posts/2020/03/30_win10setup/","publish_date":"2020-03-30T00:00:00Z","summary":"Chromebookでの作業に限界が見えたので、WindowsPCを調達しました。 自分で買うのは初めてのDell。 OSはWindows10 Homeで、これも初めて使う。 以下やったこと Chromeインストール McAfeeプラグイン削除 React Developer Toolsインストール トラックパッドの設定変更 スクロール方向を逆","tags":["windows"],"title":"Windows10の設定"},{"categories":null,"objectID":"3919801f31ab123eabf4f1dfdfc39619","permalink":"https://umemak.github.io/blog/posts/2020/03/27_gatsbyjs_blog/","publish_date":"2020-03-27T00:00:00Z","summary":"GatsbyJSでblogを構築します。 環境はGitHubに空のリポジトリ（blog-gatsby）を作成して、Gitpodで開いたところから。 starterとしてgatsby-starter-blog-mdxを採用。 すでに.gitディレクトリが存在するとエラーになるので、一旦リネームしてセットアッ","tags":["gatsbyjs"],"title":"GatsbyJSでBlogを構築する"},{"categories":null,"objectID":"df237973c9004648ae19a9ab2e7a1755","permalink":"https://umemak.github.io/blog/posts/2020/03/27_gitpod_debug/","publish_date":"2020-03-27T00:00:00Z","summary":"Next.jsの動作がよくわからないので、デバックモードで追いかけようとしたところ、設定に躓いたのでメモ。 https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome ここのDownload Extensionでvsixファイルをダウンロードする。 GitpodのExtensions(Beta)サイドメニューを開いて、Drag \u0026amp; drop VS Code extensions (*.vsix) to installのところ","tags":["gitpod"],"title":"GitpodでReactアプリのデバッグをする（未完）"},{"categories":null,"objectID":"eb20b9493dd4be57bb5ba61692936f4c","permalink":"https://umemak.github.io/blog/posts/2020/03/25_vscodeonline/","publish_date":"2020-03-25T00:00:00Z","summary":"Gitpodのバックアップ的な感じでVSCode online（パブリックベータ）を作成。 前回試したときはアカウント作成のところで面倒になってやめていたけれど、先へ進んでみた。 そしたらなぜか再度試用扱いになってる様子。 アカウントさえ有効化すれば後は特に引っかかるところもなく、Github連携も問題なし","tags":["vscode"],"title":"VSCode onlineその2"},{"categories":null,"objectID":"8c2f99563db2d05bc8dcc630e30e36d4","permalink":"https://umemak.github.io/blog/posts/2020/03/06_flets/","publish_date":"2020-03-06T00:00:00Z","summary":"そこそこのポイントが年度末で失効するということで、交換手続きをしようとしたところ、契約回線認証が通らず。 Chromebookだとダメなのかと思い、iPhone8やPixel4で試してもダメ。 昔はMacBookでできてた記憶があるけど、もうMacBook手元にないし、詰んだかと思ったが、ググって解決。","tags":[],"title":"フレッツ光メンバーズクラブの契約回線認証でハマった"},{"categories":null,"objectID":"e7ffad946315839713e0c9fdbc05c708","permalink":"https://umemak.github.io/blog/posts/2020/03/02_aws_workspaces/","publish_date":"2020-03-02T00:00:00Z","summary":"ChromebookででかいExcelを扱うのに重いので、Windowsなら大丈夫なのか確かめるためにWorkSpacesで試してみる。 Chromebook買ってすぐに一度試した気がするんだけど、なんか前と手順が変わっているような気がするので、 Developers.IOの記事を参考にすすめる。 ワーク","tags":["aws"],"title":"AWS WorkSpacesを使う"},{"categories":null,"objectID":"e71e1f6bd3f614f8381a12eaf0b5c9e6","permalink":"https://umemak.github.io/blog/posts/2020/02/29_rss/","publish_date":"2020-02-29T00:00:00Z","summary":"RSSリーダーをNewsifyからInoreaderに移行するにあたって、無料プランだと150件までしか登録できないので、更新されていないものなど削除して棚下ろす。 Inoreaderに移行する理由は、NewsifyのAndroidアプリが存在しないため。 日本のニュース ITmedia 総合記事一覧 ビジネス+IT 最新","tags":["rss"],"title":"RSS棚卸し"},{"categories":null,"objectID":"879b77110a7b2518d64301da28be939f","permalink":"https://umemak.github.io/blog/posts/2020/02/29_book/","publish_date":"2020-02-29T00:00:00Z","summary":"Kindleの積ん読解消のため、見える化したい。 Kindleの管理ページからCSV化するJSを試してみたけれど、200冊以上あると２ページ目以降が変換できないっぽい。 ということで、コピペしてテキストエディタでがんばった。","tags":["book"],"title":"買った本の棚卸し"},{"categories":null,"objectID":"b9cc627d150fbe1336cff72e000b9f92","permalink":"https://umemak.github.io/blog/posts/2020/02/24_tamiat/","publish_date":"2020-02-24T00:00:00Z","summary":"https://github.com/tamiat/tamiat Firebaseを使ったCMSを探していて、見つけたもの。 セットアップはリポジトリのREADMEに書いてあるとおりでほぼ行けた。 1箇所だけ、パッケージの依存が解決できなくて手動でyarn addしたものがあったくらい。 GCPでプロジェクト作って、Cloud Shellで作業。便利。 で、構築は簡単にでき","tags":["cms"],"title":"tamiatを試す"},{"categories":null,"objectID":"31e1dfce494c63a892874d52ee83d4ed","permalink":"https://umemak.github.io/blog/posts/2020/02/23_qwiklabs/","publish_date":"2020-02-23T00:00:00Z","summary":"先日のデブサミのハンズオンで使ったアカウントに１ヶ月のサブスクリプションが付与されていたのを思い出して、途中になっていたKubernatesのクエストの続きを終わらせた。 Jenkinsを使ったCI/CDのやつ。 Jenkinsは昔使ったことあったけれど、最近はCI/CDのサービスが充実してきているので","tags":["gcp","kubernetes"],"title":"Qwiklabsの続きをやる"},{"categories":null,"objectID":"f8659406e4dc6e00dfbf39870e4bdeeb","permalink":"https://umemak.github.io/blog/posts/2020/02/14_devsumi/","publish_date":"2020-02-14T00:00:00Z","summary":"https://event.shoeisha.jp/devsumi/20200213 14-B-1 「ともにつくる」を実践するドメイン駆動設計 成瀬 允宣[GMOインターネット] ドメイン駆動設計 当たり前のことを当たり前にやるためのプラクティス 構成要素 モデリング ドメインの物事を、知識として抽出する 何が重要かはソフトウェアによって異なる 「トラック」は「アクセルを踏めば進む」のか「荷物を運ぶことができる","tags":["event"],"title":"Developers Summit 2020 day2"},{"categories":null,"objectID":"952e128ee1a5034e97d6d82f5667ab58","permalink":"https://umemak.github.io/blog/posts/2020/02/13_devsumi/","publish_date":"2020-02-13T00:00:00Z","summary":"https://event.shoeisha.jp/devsumi/20200213 13-D-3 サーバーレスなPCI DSS対応クレジットカード決済基盤システムを運用しながら、みんなでわいわいDIYの精神で、新しいモバイル決済サービス6gramを作っている話 田岡 文利[ミクシィ] PCI DSS クレジットカード業界のセキュリティ基準 イシュア、決済代行業者は対応必須 カード情報を保存しないといけないので エンド","tags":["event"],"title":"Developers Summit 2020 day1"},{"categories":null,"objectID":"8e9e0c1544f52371b42b41a6319de52e","permalink":"https://umemak.github.io/blog/posts/2020/01/31_ntt_tech_conf_4/","publish_date":"2020-01-31T00:00:00Z","summary":"https://ntt-techconf.connpass.com/event/161866/ NTTグループのエンジニア有志が主催するカンファレンスイベントの4回目とのこと。 初参加です。 Opening Keynote 参加者の半数がNTTグループ NTTグループは919社もある 30万人いるのでグループと言ってもでかすぎる エンジニアの有志が主催しています 前回から1年半 退職エントリとか押しかけラグビーとか色々炎上していたの","tags":["event","ntt"],"title":"NTT Tech Conference #4"},{"categories":null,"objectID":"ab6acd3293c87e3705a6919eb9af1f41","permalink":"https://umemak.github.io/blog/posts/2020/01/24_docomo_openhouse/","publish_date":"2020-01-24T00:00:00Z","summary":"http://docomo-rd-openhouse.jp/2020/ 昨日に引き続き、来ました。 昨日より人が多い印象。 [特別講演] 5G時代の幕開けとサスティナブルな社会の実現 (株)NTTドコモ 取締役常務執行役員 R\u0026amp;Dイノベーション本部長 中村 寛 18の未来 5G, AI, デバイスの進化 この先の10年の展望 5Gプレサービス まだ端末が販売されていないので、プレという位置づけ イベ","tags":["event","5g","docomo"],"title":"DOCOMO Open House 2020 day2"},{"categories":null,"objectID":"10f54217903d096f59b41e5370c519cc","permalink":"https://umemak.github.io/blog/posts/2020/01/23_docomo_openhouse/","publish_date":"2020-01-23T00:00:00Z","summary":"http://docomo-rd-openhouse.jp/2020/ まさかビッグサイトが2箇所あるとは知らず、東京ビッグサイト駅で降りてどこで開催されているかわからず、そしてここじゃないということに気づいた。 シャトルバスが来る気配もなく、雨の中1キロ以上歩いて移動。 そんなに離れているなら別の名前にしてほしかった。 （後で調べたところ、青海展示棟はオリンピック対策で作","tags":["event","5g","docomo"],"title":"DOCOMO Open House 2020 day1"},{"categories":null,"objectID":"51c3cee36ac6a1524dbb4c212e40eb7d","permalink":"https://umemak.github.io/blog/posts/2020/01/21_freee_tech_night_5/","publish_date":"2020-01-21T00:00:00Z","summary":"https://freee-tech-night.connpass.com/event/157012/ 会計freeeのデプロイを10倍早くした話 北川修平 (shuheiktgw) 会計freee Phusion Passenger https://www.phusionpassenger.com/ Capistrano を使ったデプロイ 問題点 直列デプロイ LBから１つづつ外してデプロイしている 50分ちかくかかっている 解決案 EKSへの移行 AutoScalingGroupを使ったBlue/Greenデプロイ サーバー自体のプロビジョニングに４分ぐら","tags":["freee","event"],"title":"freee Tech Night 「freeeにおけるモノリシック」"},{"categories":null,"objectID":"950270fb4a29ff1973e3a3b0276d3f74","permalink":"https://umemak.github.io/blog/posts/2019/12/19_shuumai/","publish_date":"2019-12-19T00:00:00Z","summary":"https://shuuu-mai.connpass.com/event/155130/ 初参加。 エンジニアのキャリア、組織論についてお話いただく回とのことです。 きました pic.twitter.com/uRtdj6xWH2 \u0026mdash; umemak (@umemak8) December 19, 2019 柱が邪魔でトークセッション見れない疑惑。 18:30 開場・受付開始 19:00~19:15 主催者からのご挨拶・当日のプログラムご案内 19:15~20:00 CTOトークセッション ※リアルタイム質疑応答あり！ 株式会社SmartHR CTO 芹澤雅人氏 株式会社FiNC Technologies","tags":["event"],"title":"【シューマイカンファレンス】Rubyの父 まつもとゆきひろ氏 ＆ 有名ベンチャーCTO登壇!!"},{"categories":null,"objectID":"7e57ff3fb35db2c3f45a05cae110608a","permalink":"https://umemak.github.io/blog/posts/2019/12/18_pwa_night_11/","publish_date":"2019-12-18T00:00:00Z","summary":"今回はCMS回です。Webサイトの基本ともいえるCMS（コンテンツ・マネジメント・システム）におけるPWA活用法を学びましょう！ https://pwanight.connpass.com/event/156622/ きました pic.twitter.com/Fb0SO391qZ \u0026mdash; umemak (@umemak8) December 18, 2019 19:00 開場 19:20 挨拶\u0026amp;PWA Nightについて 2/1 PWA Night Confernce タイムテーブル公開しました LT応募これから まだチケット買えるよ 19:30 自己紹介（全員） 本当に全員やっ","tags":["event","pwa"],"title":"PWA Night vol.11 ～PWA × CMS～"},{"categories":null,"objectID":"08ee76cc1ef337f5092b557402b5d323","permalink":"https://umemak.github.io/blog/posts/2019/12/13_yjtc/","publish_date":"2019-12-13T00:00:00Z","summary":"https://techconference.yahoo.co.jp/2019_shibuya/?cpt_n=2019_shibuya_promo\u0026amp;amp;cpt_m=web\u0026amp;amp;cpt_s=passmarket きました pic.twitter.com/mN83GXKkkn \u0026mdash; umemak (@umemak8) December 13, 2019 3年連続３回目の参加。 毎年会場が変わって、今年は渋谷です。表参道駅から歩きましたが。。 基調講演 13:00 - 13:45 藤門 千明 取締役 常務執行役員、CTO（チーフテクノロジーオフィサー） https://www.slideshare.net/techblogyahoo/yjtc19-in-shibuya-yjtc 「未来を、共に創ろう」 ユーザーアクションの最大化 オフラインにも進出（PayPay） MUU5049万、MUB9","tags":["event","yahoo"],"title":"Yahoo! JAPAN Tech Conference 2019 in Shibuya"},{"categories":null,"objectID":"bc3fbf6254c3f96edf0a25c8d5dafdea","permalink":"https://umemak.github.io/blog/posts/2019/12/10_bpstudy_148/","publish_date":"2019-12-10T00:00:00Z","summary":"https://bpstudy.connpass.com/event/152350/ 野球系IT勉強会です。 LT18本＋始球式という、先日のgolang.tokyo LT大会を上回る本数。。 の予定でしたが、緊急登板回避が3名発生したため、始球式合わせて16本になりました。 きました pic.twitter.com/mzQj64wp4K \u0026mdash; umemak (@umemak8) December 10, 2019 感想：次回も参加したい。 始球式(18:44〜18:49) 2020年に向けて 中日ドラゴンズ与田","tags":["event","baseball"],"title":"Baseball Play Study2019冬 シーズン振返りスペシャル(BPStudy#148)"},{"categories":null,"objectID":"da8423a525066167052af95a3fd8c976","permalink":"https://umemak.github.io/blog/posts/2019/12/04_golang_tokyo_28/","publish_date":"2019-12-04T00:00:00Z","summary":"https://golangtokyo.connpass.com/event/156678/ LT大会（１６本！）です。 19:00 ~ 開場・受付 きました pic.twitter.com/T9mR1MzOss \u0026mdash; umemak (@umemak8) December 4, 2019 19:30 ~ 19:40 オープニング・乾杯 yappli 19:40 ~ 19:45 LT1: [仮]wire.goをプロダクトで使ってみた bieshanさん DIツール 依存関係のコードを生成してくれる wire使い方イマイチ理解していないので助かる 型を見て生成しているので、同じ定義だとどちらを使って","tags":["event","golang"],"title":"golang.tokyo #28"},{"categories":null,"objectID":"c510437c951f758d65938b2dd3870cd4","permalink":"https://umemak.github.io/blog/posts/2019/12/03_kubernetes_meetup_tokyo_26/","publish_date":"2019-12-03T00:00:00Z","summary":"今回は 2019/11/18-21 で開催された KubeCon + CloudNativeCon North America 2019 の Recap 会だそうです。 どちらも参加していないのでどんな話が聞けるのか楽しみです。 https://k8sjp.connpass.com/event/155240/ きました pic.twitter.com/NkIGEmFehn \u0026mdash; umemak (@umemak8) December 3, 2019 18:15-19:15 受付開始 19:00-19:05 Opening (5min) 19:05-19:20 KubeCon + CloudNativeCon North America 2019 Overview Ian Lewis (@IanMLewis), Google ２つのイベントが同時開催だった 次回登壇したいヒトは明日までCFP受付中 12000人くらい。去年は8000人くらいだった。 女性11","tags":["event","k8s","kubernetes"],"title":"Kubernetes Meetup Tokyo #26"},{"categories":null,"objectID":"5c5289dbbb248d8a7c2ec4ebae5b76a7","permalink":"https://umemak.github.io/blog/posts/2019/11/29_ochacafe_premium_1/","publish_date":"2019-11-29T00:00:00Z","summary":"https://ochacafe.connpass.com/event/152768/ 番外編の第１回。高可用性の話です。 きました pic.twitter.com/plY4jy7rsN \u0026mdash; umemak (@umemak8) November 29, 2019 18：30 受付開始 19：00 オープニング 19：10 セッション開始 https://speakerdeck.com/mmarukaw/oracleclouddekao-erugao-ke-yong-xing-akitekutiya データセンター電源障害の話から OCIはまだ日本に来てから日が浅いこともあり、大規模障害はまだない。 海外ではあった Design For Failure サーバーは落ちる前提で考える クラウドベンダーの保証はSLA","tags":["event","oracle","oci"],"title":"OCHaCafe Premium#1：Oracle Cloudで考える高可用性アーキテクチャ"},{"categories":null,"objectID":"0345488df21a8cbc2a01f924458c7915","permalink":"https://umemak.github.io/blog/posts/2019/11/26_bonfire_backend_4/","publish_date":"2019-11-26T00:00:00Z","summary":"https://yj-meetup.connpass.com/event/153658/ 初参加です。 19:00 開場・受付開始 19:30 イントロ・乾杯 19:35 ヤフーのナビゲーション系のバックエンドサービスの課題をk8sで解決した話 高木 克彰(@tkgtransit) ◆ ヤフー株式会社 ナビゲーション マップの徒歩ナビ 乗り換えナビ 従来のアーキテクチャ エンジンデータはそれぞれ１台の仮想サーバーが担当 C++, Apacke Module 課題 IFが異な","tags":["event","yahoo"],"title":"Bonfire Backend #4"},{"categories":null,"objectID":"3bef314a96b2b48c2581a34811b2c22c","permalink":"https://umemak.github.io/blog/posts/2019/11/21_iij_technical_day_2019/","publish_date":"2019-11-21T00:00:00Z","summary":"https://iij.connpass.com/event/151720/ https://eng-blog.iij.ad.jp/archives/4102 IIJmioでお世話になってます 2003年から毎年開催しているそうですが、初参加です。 インフラ周りはあまり直接触れることがないので、どこまで話についていけるか。 13:30 ~ 13:40 開会のご挨拶 IIJ 取締役 CTO 島上 純一 技術を通じてIIJを知ってもらいたい 13:40 ~ 14:20 講演1「安全なデジタル通貨流通を支えるアーキテクチャとエン","tags":["event","iij"],"title":"IIJ Technical DAY 2019"},{"categories":null,"objectID":"8e08a83f7d191c83b7e143d16d7e27ad","permalink":"https://umemak.github.io/blog/posts/2019/11/20_jag1911_5g/","publish_date":"2019-11-20T00:00:00Z","summary":"https://japan-android-group.connpass.com/event/152293/ 5Gのことを知りたい。 日本アンドロイドの会 ５G最新情報及びローカル５G ５GMFアプリケーション委員会利用シーンWG主査 高野 雅晴 様 5GMF: 第５世代モバイル推進フォーラム 会社紹介 https://www.bitmedia.co.jp/ 5Gになると良いことがありそうなサービスが多い InterBEE2019の登壇資料をもとに 移動通信しっステム、10年ごとに進化して","tags":["event","5g"],"title":"2019年11月定例会「５G最前線とローカル５G」"},{"categories":null,"objectID":"e4afcd888dabddcf851b74487adb38b4","permalink":"https://umemak.github.io/blog/posts/2019/11/20_line_devday/","publish_date":"2019-11-20T00:00:00Z","summary":"https://linedevday.linecorp.com/jp/2019/ 5回目の開催とのことですが、初参加です。 10:40- Keynote Euivin Park / LINE CTO LIFE with LINE 今年だけで20以上のサービスをリリース 金融系のサービスも多い LINE MINI App 飲食店での例 Natural Experience with AI 2 Principles for Handling Data To keep \u0026ldquo;Privacy Fitst\u0026rdquo; To Avoid Data Silos Unified Self-Service Data PlatformO AI 二千万次元 受付の顔認証はiPadの機能を使っていた 自分専用フォント ５００文字？くらいで作れる 鳥海さんの話ででていた基","tags":["event","line"],"title":"LINE DEVELOPER DAY 2019"},{"categories":null,"objectID":"26a25709093d27533768b9afff6bd70a","permalink":"https://umemak.github.io/blog/posts/2019/11/14_reinstall_ol/","publish_date":"2019-11-14T00:00:00Z","summary":"mattermostが動かないのは、素のyumでインストールしたdockerのバージョンが古いことが原因の可能性があるので、最新版に入れ直す。 素で入れた方のバージョン $ docker --version Docker version 18.09.8-ol, build 76804b7 既存の環境でやるのはまた何が起こるかわからないので、インスタンスを再作成してやり直す。 手順 https://docs.docker.com/install/linux/docker-ce/centos/ $ sudo yum update -y $ docker --version -bash: docker: command not found","tags":["oracle"],"title":"Oracle Linux再セットアップ"},{"categories":null,"objectID":"7bdbff88581729443c23b913052d9263","permalink":"https://umemak.github.io/blog/posts/2019/11/13_k8s_meetup_tokyo_25/","publish_date":"2019-11-13T00:00:00Z","summary":"https://k8sjp.connpass.com/event/150873/ 何度か応募するも抽選に落ちて、初参加です。 ストレージ系の話が中心です。 18:30~19:00 受付開始 (19:30まで)、ソーシャル 19:00~19:05 Opening (5min) 19:05~19:35 入門、Kubernetes Persistent Volume (30min) 坂下 幸徳（Twitter: @ysakashita3, GitHub: ysakashita), ゼットラボ株式会社 ストレージの苦手意識を払拭する データプレーンとコントロールプレーン データ：格納と転送担当 コントロー","tags":["kubernetes","event"],"title":"Kubernetes Meetup Tokyo #25"},{"categories":null,"objectID":"81351ff19c011844d3e03f890322cb5e","permalink":"https://umemak.github.io/blog/posts/2019/11/13_install_mattermost/","publish_date":"2019-11-13T00:00:00Z","summary":"OracleCloudで動かしてみる。 dockerとdocker-composeとgitをインストール。 https://github.com/mattermost/mattermost-docker をgit cloneして、docker-compose.ymlのパスワードをランダムな文字列に変更したあと、docker-compose up -d Running setup.py install for gevent: started Running setup.py install for gevent: still running... が結構時間かかる。 いきなりdo","tags":["mattermost"],"title":"Mattermostを使ってみる"},{"categories":null,"objectID":"7005127b4b3df62a163fae112bfb2dc8","permalink":"https://umemak.github.io/blog/posts/2019/11/12_github_actions/","publish_date":"2019-11-12T00:00:00Z","summary":"AWS Amplifyとか、Netlify試したりしていたら、Azure Pipelineでのこのページのビルドが通らなくなってしまったので、設定し直しのついでにGitHub Actionsに移行してみた。 手順はQiitaの記事を見ながらそのままで。 思ったより簡単にできてしまって、最初からこれでよかった感が。","tags":["hugo","github"],"title":"パイプラインをGitHub Actionsに移行"},{"categories":null,"objectID":"9c52fa19f4704a57a1469bbf316d7a84","permalink":"https://umemak.github.io/blog/posts/2019/11/11_go_release_10/","publish_date":"2019-11-11T00:00:00Z","summary":"https://gocon.connpass.com/event/153665/ VMwareからのハシゴです。 出る前にDatadogのデモ見てたら出るのが遅くなってしまった。 19:00 - 19:30 Open ケーキ！ 19:30 - 20:00 History of Go by ymotongpoo 30 October, 2009 社内公開 11 November, 2009 一般公開 https://opensource.googleblog.com/2009/11/hey-ho-lets-go.html 1960-2007 - Foundations HWごとに言語があった時代(-1950) Jan 1960 ALGOL 1964-2007 Concurrency 1964 Unix Pipe 1978 CSP(Communication Sequential Process) 2007-2009 - Creation C++11のTechTalk行ったら新機能の話ばかりだった C++で","tags":["golang","event"],"title":"Go Release 10 Year Anniversary Party in Tokyo"},{"categories":null,"objectID":"740bc6ec82d012e1d329c2769edf28bf","permalink":"https://umemak.github.io/blog/posts/2019/11/11_vmware_cloud_native_day/","publish_date":"2019-11-11T00:00:00Z","summary":"https://vm-event.jp/cnday/ 初参加です。 明日明後日位のイベントのday0的な位置づけ K8sなど中心に。 Tanzu https://cloud.vmware.com/tanzu https://www.publickey1.jp/blog/19/vmware_tanzukubernetesvmworld_2019_us.html 13:00- General Session パットゲルシンガー、レイ・オファレル、クレイグ・マクラッキー Technolosists who master multi-cloud will own the next decade. The Five S\u0026rsquo;s Soeed, Security, Scalability, Stability, (Cost)Savings 14:30- 『クラウドネイティブ人間』になるための自動化入門 草間一人(Pivotal Labs) 自動化：アプリにもインフラにも共通する項目","tags":["vmware","event"],"title":"VMware Cloud Native Day"},{"categories":null,"objectID":"92eac1cf9e1098caea69ac6fdba70c7d","permalink":"https://umemak.github.io/blog/posts/2019/11/10_oracle_cloud/","publish_date":"2019-11-10T00:00:00Z","summary":"Oracle Cloudに登録してから、なかなか無料インスタンス作成できずにいたけれど、今日試したら作れた。 sshログインしようとして、Console Connections作ってそこに出たコマンドコピペして、ログインアカウントとパスワードがわからずに詰む。 インスタンス作成時に特に指定してなかったけど、opcが割","tags":["oci"],"title":"Oracle Cloudにインスタンス作成"},{"categories":null,"objectID":"0707509456b9f91c8754f278622e29e0","permalink":"https://umemak.github.io/blog/posts/2019/11/09_update_gems/","publish_date":"2019-11-09T00:00:00Z","summary":"GitHubからgem更新を促すメールがきた。 今回からdependabotがやってくれるようになったらしく、すでにPullReqが作成されていた（すごい）。 Gemfile.lockの差分確認して問題なければマージして終わり。これは便利だ。","tags":["gitpod","ruby"],"title":"Bump loofah from 2.2.3 to 2.3.1"},{"categories":null,"objectID":"0561505956dd88feee29685210e9ba29","permalink":"https://umemak.github.io/blog/posts/2019/11/06_chromebook_imageedit/","publish_date":"2019-11-06T00:00:00Z","summary":"イベントの写真をブログに載せるのに、スマホのそのままだとサイズでかすぎるし、トリミングやリサイズもしたいときにどうすれば良いのか定まっていなかった。 とりあえずこれで行けそうな方法が見つかったのでメモ。 やりたいこと 画像のリサイズ、トリミング Googleフォトにアップした画像を選択したい 編集した画像はG","tags":["chromebook"],"title":"Chromebookで画像編集"},{"categories":null,"objectID":"ee79d3607fb1c5920e0fd7cdb41c733c","permalink":"https://umemak.github.io/blog/posts/2019/11/06_setup_disqus/","publish_date":"2019-11-06T00:00:00Z","summary":"Disqusのコメント欄を設置してみる。 最初、表示されなくてなんでだろうと思ったら、テーマの表示条件が違っていた https://github.com/umemak/inkblotty/commit/274fed7d529bfe90c4d0c4dfeb6c9e55c7ea7ed6","tags":["blog"],"title":"Disqusの設置"},{"categories":null,"objectID":"7460363c1fab6f8d249a12a9624c2ee3","permalink":"https://umemak.github.io/blog/posts/2019/11/05_golang_tokyo_27/","publish_date":"2019-11-05T00:00:00Z","summary":"https://techplay.jp/event/753881 先日のGo Conferenceには参加できなかったので、当選できてよかった。 19:00 ~ 開場・受付 乾杯！ 19:30 ~ 19:35 オープニング DevQuizの解説。思ってた動作と違かった。。 当日発表になった登壇者とスケジュール。予定より本数が少なくなっていました。 19:35 ~ 19:55 Session 1 Creating shell magager with golang / @yusuke_k0matsu https://speakerdeck.com/usk81/create-shell-manager-with-golang shway https://github.com/getshway/shway dotfileの管理方法のベスト","tags":["golang","event"],"title":"golang.tokyo #27"},{"categories":null,"objectID":"cae4937b71f5232be80d1d297a9b7a82","permalink":"https://umemak.github.io/blog/posts/2019/11/05_visualstudioonline/","publish_date":"2019-11-05T00:00:00Z","summary":"https://visualstudio.microsoft.com/services/visual-studio-online/ パブリックプレビューになったということで、見に行ってみました。 Azureのアカウントはすでにあるので、普通にSign inして「Create enviromnent」を押すと、ロケーションの選択が。 現在選択できるのは、East US, Southeast Asia, West Europe, West US 2の4つ。 Japanがないので、料金ページを見て安くて近そうな","tags":["azure"],"title":"Visual Studio Online"},{"categories":null,"objectID":"eeb1d2745a5ab80f357d24032e9a3735","permalink":"https://umemak.github.io/blog/posts/2019/11/04_iddd/","publish_date":"2019-11-04T00:00:00Z","summary":"やっと読み終わった。長かった。。 これも1周しただけでは把握できないというか、途中の挿絵とかカウボーイ必要？うまく日本語訳できていないと、そこで何言ってるのか考えてしまって集中が途切れくことが多かった。 次は「実践ドメイン駆動設計」から学ぶDDDの実装入門に手を出そうと思っていたけど、それぞれもう1周し","tags":["ddd","book"],"title":"実践ドメイン駆動設計"},{"categories":null,"objectID":"23382c20c40be064b2c81e56087d859c","permalink":"https://umemak.github.io/blog/posts/2019/11/01_denago_3/","publish_date":"2019-11-01T00:00:00Z","summary":"https://dena.connpass.com/event/150676/ 19:25 - 19:30 会場説明 @imoty DeNA TechCon 2020やります 19:30 - 19:50 20分枠 @suhirotaka / [Go活用事例]安全運転支援サービスを支える運用サイト / オートモーティブ事業本部スマートドライビング部システム開発グループ https://speakerdeck.com/suhirotaka/gohuo-yong-shi-li-an-quan-yun-zhuan-zhi-yuan-sabisuwozhi-eru-yun-yong-guan-li-sisutemu goで何を作っているか DRIVE CHART AIはPython Railsも使っている 運用管理のWEBシステム 管理画面をGoで作った理由 2年","tags":["event","go","DeNA"],"title":"DeNA.go #3"},{"categories":null,"objectID":"d200f8c1dd6ec2a471bd3e068c6db168","permalink":"https://umemak.github.io/blog/posts/2019/11/01_cmdevio2019/","publish_date":"2019-11-01T00:00:00Z","summary":"https://eventregist.com/e/191004-developers-io-2019 １年ぶり２回目の参加です。 去年は秋葉原でしたが、今年は日本橋での開催。 会場が広くなってトラック数も増えてどれを観るか悩みますが、AIとかIaCを中心に見ていきたいと思います。 10:30 11:15 認証の標準的な方法は分かった。では認可はどう管理するんだい？ 都元ダイスケ 認証のでファクトはOIDCなど Key（鍵）とLo","tags":["event","aws"],"title":"Developers.IO 2019 Tokyo"},{"categories":null,"objectID":"7c9a9525553e5ee209ede4e958962c09","permalink":"https://umemak.github.io/blog/posts/2019/10/31_c101p_cli/","publish_date":"2019-10-31T00:00:00Z","summary":"OCHaCafe参加前に触っておこうと思い、その準備。 OCIインストール 手順は公式からコピペで。 $ bash -c \u0026#34;$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)\u0026#34; fatal error: Python.h: No such file or directoryエラーで落ちたので、python3-devパッケージをインストール。 $ sudo apt-get install python3-dev OCI再挑戦。先程作成したディレクトリを削除するか聞かれるので、削除(y)して継続","tags":["serverless","chromebook","c101pa"],"title":"C101PAでOracle Functionsを試す"},{"categories":null,"objectID":"705b316b7d3b92310f4a285e5d78f1cc","permalink":"https://umemak.github.io/blog/posts/2019/10/31_ochacafe2_3/","publish_date":"2019-10-31T00:00:00Z","summary":"https://ochacafe.connpass.com/event/147285/ ServerlessDaysで紹介されていたイベントです。 ちょうどサーバーレスの回だったので参加しました。 18：30 受付開始 お菓子もらいました 19：00 オープニング OCHA Cafe Premiumやるよ Oracle Cloud で考える高可用性アーキテクチャ ビッグデータのイベントもやるよ 19：10 セッション開始 https://speakerdeck.com/sugimount/lets-dive-serverless-world Oracleのブラン","tags":["event","serverless","oracle"],"title":"OCHaCafe2 #3 Serverlessな世界をのぞいてみよう！"},{"categories":null,"objectID":"51e8e9af82d1c1b71d68c7ebc01c98db","permalink":"https://umemak.github.io/blog/posts/2019/10/28_signup_oracle_cloud/","publish_date":"2019-10-28T00:00:00Z","summary":"Serverless Days のスポンサーブースで説明聞いて、無料枠あるなら試してみようかな、と。 登録ページずっと英語で進んでたのがハードル高め。 いつも住所どうやって書くか迷うんだよね。。 GCPやAzureみたいなコンソールは見つからなかった。 インスタンス作るにもSSH鍵ペア作らないといけないのがちょっと（AWSはその場で作","tags":["oracle"],"title":"Oracle Cloud登録してみた"},{"categories":null,"objectID":"52823aee0a7555fada02f62b5a70fc23","permalink":"https://umemak.github.io/blog/posts/2019/10/23_pixel4/","publish_date":"2019-10-23T00:00:00Z","summary":"今日は Sansan Builders Box 2019 参戦のため休暇をとって、午前中は昨日のまとめをしようと家にいたら、突然届いた。 週末受け取りにするつもりだったのに、嬉しい誤算。 そして受け取り後に届いた発送完了メール。 Android端末はNexus6以来久しぶり。 早速カメラを試してみたところ、さすがセールスポイントだけあってきれいに撮れ","tags":["device","pixel4"],"title":"Pixel4が届いた"},{"categories":null,"objectID":"7d0e6c6c3c259ebbf95678e295d43645","permalink":"https://umemak.github.io/blog/posts/2019/10/23_sansan_builders_box_2019/","publish_date":"2019-10-23T00:00:00Z","summary":"Sansanの技術カンファレンスです。 2トラックのサイレントセッションで、受付時にレシーバーが配られました。 自分はサーバーレスが気になったので、トラック１の方に陣取りました。 https://sansan.connpass.com/event/138134/ 14:30-15:00 【オープニング】 CTO 藤倉 成太、VP of Engineering 宍倉 功一 社員数550人中、ものづくに理に関わっているのが220名 Sansanは何を目指","tags":["event"],"title":"Sansan Builders Box 2019"},{"categories":null,"objectID":"dec47578fc66b04092c0e2956b003739","permalink":"https://umemak.github.io/blog/posts/2019/10/22_serverlessdays/","publish_date":"2019-10-22T00:00:00Z","summary":"サーバーレスに特化したカンファレンスです。 ４回目の開催ですが、初参戦です。 https://tokyo.serverlessdays.io/ 09:00 はじめに / 諸説明 meetup 4年目 大企業での採用が進んできている 09:10 10x Serverless Product Development for a Startup with Microsoft Azure Yutaka Tachibana(EBILAB) 飲食店の生産性向上 来客人数の予測（過去実績、天気などから） 入店率も計算している 店頭のディスプレイでA/Bテストも可能 データソースが増えても追加","tags":["serverless","event"],"title":"Serverless Days Tokyo 2019"},{"categories":null,"objectID":"51b94cbce4ffc4a09aabcebbc77d674f","permalink":"https://umemak.github.io/blog/posts/2019/10/10_font_talk/","publish_date":"2019-10-10T00:00:00Z","summary":"https://www.library.chiyoda.tokyo.jp/information/20191010-post_211/ ヒラギノ作者が語るフォントの話。 「本をつくる」は良い本だそうだ。 ライターの人がとても良い仕事をした、と。 立て続けに講演依頼があったが、毎回内容を変えてほしいという依頼。 最終的に同じ話になってしまっている。 読書と文字 洛陽からの金印で初めて日本に漢字が伝わった 中国文字博物館 でかい、広い 洞察力の優れてい","tags":["event"],"title":"鳥海修さんの書体のつくりかた"},{"categories":null,"objectID":"bce748f39115056bcedea6bd68b357c7","permalink":"https://umemak.github.io/blog/posts/2019/10/05_ct101pa/","publish_date":"2019-10-04T00:00:00Z","summary":"ビックカメラのポイント20%セールで。ポチったあとにアマゾンで19%オフやってておいおいって思った。 これでクラムシェルとコンバーチブルとタブレットのChromebookが揃って、充電器が足りなくなってきたので（本体付属のはごつすぎる・・）、 もらったポイントで買い足そうかなと。","tags":["chromebook"],"title":"ASUS CT101PA到着"},{"categories":null,"objectID":"09d154ca0f16d46bc0d7b1c6caac873d","permalink":"https://umemak.github.io/blog/posts/2019/10/04_aws_devday_2/","publish_date":"2019-10-04T00:00:00Z","summary":"二日目（最終日）です。 今日もサーバーレス系中心に見ていきたいと思います。 10:00〜10:45 オープンソースコミュニティで加速するサーバーレスの未来 クラウドの世界の中にいながら、オープンソースコミュニティに参加することの意味と楽しさ Lambdaの問題（当時） マネコンにソースを直接アップロードするので","tags":["aws","event"],"title":"AWS DevDay Tokyo 2019 DAY2"},{"categories":null,"objectID":"7e813bf40812e1b4e2023c6b883ab5c9","permalink":"https://umemak.github.io/blog/posts/2019/10/03_aws_devday_1/","publish_date":"2019-10-03T00:00:00Z","summary":"今年も来ました。 去年は目黒のAWSオフィスで3日間でしたが、今年は神田明神ホールで2日間になっています。 https://aws.amazon.com/jp/about-aws/events/2019/devday/ AWSグローバルで開催する開発者のためのトレーニングイベント 最新のテクノロジー、開発手法などを集中的に学ぶことができる場 セッション公募を行い、11件採択された 10:00～11:40 ゼネラルセッシ","tags":["aws","event"],"title":"AWS DevDay Tokyo 2019 DAY1"},{"categories":null,"objectID":"1640648266e63c0c2267557230498560","permalink":"https://umemak.github.io/blog/posts/2019/10/03_gitpod/","publish_date":"2019-10-03T00:00:00Z","summary":"https://www.gitpod.io/ GitHubのブラウザ版で、ブランチ切ったら編集できなくなったので、他にブラウザで使えるエディタないかなと検索して出てきたのがこれです。 GitHub連携するだけで使えるかと思ったらそうではなく、Gitpodにもアカウント作る必要があります。とはいえチェックボックス2つだけなのですぐ終わります。 コン","tags":["git"],"title":"Gitpod使ってみた"},{"categories":null,"objectID":"3167a8c5368b6fd2f27b7c61266d8e5e","permalink":"https://umemak.github.io/blog/posts/2019/10/01_google_cloud_build_day/","publish_date":"2019-10-01T00:00:00Z","summary":"https://gcpug-tokyo.connpass.com/event/143453/ GCPのCloud Buildサービスに関する話。 AWSだと、CodePipelineとCodeBuildとCodeDeployに相当するもの。 19:30 ~ 20:00 マルチアーキテクチャイメージの作成（仮） @ymotongpoo イベントベースでビルドのトリガー（GitHubのpushとか） テストの実行とアーティファクトのビルド 雑に言う","tags":["GCP","CI/CD","event"],"title":"Google Cloud Build Day"},{"categories":null,"objectID":"831cfcac29c1236ca9f76cbc2ff1ff57","permalink":"https://umemak.github.io/blog/posts/2019/10/01_start_writing/","publish_date":"2019-10-01T00:00:00Z","summary":"他人にものを伝える技術を筆者の経験から書かれている。 書いて伝える、話して伝える、に加えて伝えられる側の心構えも。 どれも興味深い内容だったが、とくに印象的だったのはプレゼンの準備にかける時間のところ。 そのうち社内で勉強会とかもしたいと思っているので、参考になった。","tags":["book"],"title":"技術を伝えるテクニック 〜分かりやすい書き方・話し方〜"},{"categories":null,"objectID":"e2413de09d25273bc6e9b4f9b34667ac","permalink":"https://umemak.github.io/blog/posts/2019/10/01_readablebooks/","publish_date":"2019-10-01T00:00:00Z","summary":"文書書くときにもCI回そうぜ、って内容。 たしかにしょうもないtypoとかあると記事自体の信頼性に関わるし。 3種類のチェックツールが使用例とともに紹介されている。 Re:VIEWとの併用が前提で書かれているので、このblogに応用するにはMarkdown用に設定変更が必要になりそう。 CircleCI使っ","tags":["book"],"title":"読みやすい技術書を書く技術"},{"categories":null,"objectID":"a6f9989f50d653b4e46cecba71634b38","permalink":"https://umemak.github.io/blog/posts/2019/09/25_golang_tokyo_26/","publish_date":"2019-09-25T00:00:00Z","summary":"https://golangtokyo.connpass.com/event/147175/ 今回はスマートホームとGoの話です 19:30 ~ 20:00 Go in Nature（仮） by songmu Nature Remoの裏側 gocredits オススメ 依存ライブラリのLICENSEを同梱してくれる ecsched気になる Websocketでクラウドに接続しっぱなしにしている 外部のデバイスからはクラウドに司令を出す 常時接続の管理が大変 ECS上でうごかしている","tags":["golang","event"],"title":"golang.tokyo #26"},{"categories":null,"objectID":"a3cf70dfba48cfe09e58e497e4acc0fa","permalink":"https://umemak.github.io/blog/posts/2019/09/19_serverless_meetup_tokyo_14/","publish_date":"2019-09-19T00:00:00Z","summary":"Serverless Meetup Tokyo #14 https://serverless.connpass.com/event/143446/ 19:10-19:15 Opening Talk 堀家 隆宏 (Serverless Operations LLC. CEO) Serverless Daysやるよ 19:15-19:20 会場案内、告知 株式会社Speee Good Coffee -\u0026gt; Good COde 19:20-19:40 機械学習MVPにServerless Frameworkがオススメな理由 池田 雄太郎（株式会社 KaizenPlatform） 短期的・長期的ダイナミクス 短期的：一時的に大量なリソースが必要 長期的：やってみないとわ","tags":["event","serverless"],"title":"Serverless Meetup Tokyo #14"},{"categories":null,"objectID":"f02a312c521f368bfe5d73798f08ede0","permalink":"https://umemak.github.io/blog/posts/2019/09/13_evans_ddd/","publish_date":"2019-09-13T00:00:00Z","summary":"やっっっっっと読み終わった。 買ったのが2月9日で、Kindleのセールで他にも色々買ったので読み始めたのは夏ぐらいだったかな。。 評判通り？難解だった。 「ユビキタス言語」くらいしかキーワード知らなかった状態で読み始めて、なんとなくドメイン駆動設計の雰囲気はわかるようになったと思う。 チームの共通理解とか","tags":["book"],"title":"エリック・エヴァンスのドメイン駆動設計"},{"categories":null,"objectID":"0b7e2086da58764dbd7f4340629e06a7","permalink":"https://umemak.github.io/blog/posts/2019/09/10_python_book/","publish_date":"2019-09-10T00:00:00Z","summary":"Prime Readingに入っていたので、読みつつ例文を写経して動かしてみた。 PythonはLambdaで通知をSlackに飛ばすためにちょっと触ってみた程度。 Pythonの文法を覚えた人がもっと理解を深めるための本 Kindle版 しばらくRubyをやっていたせいか、割とすんなり理解することができたように思う","tags":["python"],"title":"Pythonの文法を覚えた人がもっと理解を深めるための本"},{"categories":null,"objectID":"62c44f08873c398e2205ddafcce599e6","permalink":"https://umemak.github.io/blog/posts/2019/09/01_change_hugo_theme/","publish_date":"2019-09-01T00:00:00Z","summary":"HermitからInkblottyへ。 ちょっと使い勝手が合わないところがあったのでforkして改造。 変更したところ カテゴリとアーカイブ使ってないのにサイドバーに表示されているのを非表示に ハマったところ 最近の投稿が表示されないのはpostSectionsパラメータが違っていた config.toml で設定したら表示された","tags":["hugo"],"title":"hugoのテーマを変えてみる"},{"categories":null,"objectID":"0752bef4fcce3f1f46621433a542fba6","permalink":"https://umemak.github.io/blog/posts/2019/08/29_jawsug_ct_15/","publish_date":"2019-08-29T00:00:00Z","summary":"https://jawsug-container.connpass.com/event/143245/ AWS コンテナサービスアップデート トリ / Amazon Web Services Japan コンテナロードマップは what’s new に載ってない トランキングENIと通常のENIの違いは「ほとんど」ない EKS 名称変更が一番シェアされたツイート mazon ECSの開発環境を動的に管理するツールを作ってみました プログラミングヤクザ / サイバーエージェント devxx環境の","tags":["aws","container","event"],"title":"JAWS-UG コンテナ支部 #15"},{"categories":null,"objectID":"1fdb65bacddc3063015e54d318ff2f28","permalink":"https://umemak.github.io/blog/posts/2019/08/21_azure_devops/","publish_date":"2019-08-21T00:00:00Z","summary":"Hugoの実行とPUSHをやってもらう https://blog.kaikeru.com/post/20181228-freestaticsite/ を参考に設定。 CIのスキップを念の為追加 variableの設定がわかりにくかった。 ちゃんと読めば書いてある。 Pipeline編集画面の右上から。 AWS Secrets Manager的なサービスがあるのかと探し回ってしまった。。","tags":["Azure","DevOps","hugo"],"title":"Azure DevOpsでCI"},{"categories":null,"objectID":"c0e70e1e6b769805f99d15e9b1f8aa98","permalink":"https://umemak.github.io/blog/posts/2019/08/21_hugo/","publish_date":"2019-08-21T00:00:00Z","summary":"やってみよう インストール https://gohugo.io/getting-started/installing/#linux を見たら apt でいけるらしいので $ apt install hugo $ hugo version Hugo Static Site Generator v0.18.1 BuildDate: 2016-12-31T01:01:10+09:00 v0.18.1 ってだいぶ古い。。 $ sudo apt remove hugo $ wget https://github.com/gohugoio/hugo/releases/download/v0.57.2/hugo_extended_0.57.2_Linux-64bit.tar.gz $ sha256sum hugo_extended_0.57.2_Linux-64bit.tar.gz f4ce91d6909d489fe5461633f6b6bd689ed14c9e06b1b7af110024420aa8fd91 hugo_extended_0.57.2_Linux-64bit.tar.gz $ tar zxvf hugo_extended_0.57.2_Linux-64bit.tar.gz LICENSE README.md hugo $ sudo cp hugo /usr/local/bin/ $ hugo version Hugo Static Site Generator v0.57.2-A849CB2D/extended linux/amd64 BuildDate: 2019-08-17T17:57:54Z OK。 サイト作成 $ hugo new site blog テーマ追加 $ cd blog $ git clone https://github.com/Track3/hermit.git themes/hermit $ echo \u0026#39;theme = \u0026#34;hermit\u0026#34;\u0026#39; \u0026gt;\u0026gt; config.toml コンテンツ追加 $ hugo new posts/my-first-post.md 表示確認 $ hugo server -D Building sites … ERROR 2019/08/21 11:29:11 render of \u0026#34;section\u0026#34; failed: execute","tags":["hugo"],"title":"Hugoの導入"},{"categories":null,"objectID":"75b9c6ee391e92968dd22e4920cc87cb","permalink":"https://umemak.github.io/blog/posts/2019/08/21_update_gems/","publish_date":"2019-08-21T00:00:00Z","summary":"Githubから脆弱性の通知が来たので、nokogiriを1.10.4以上に、actionviewを5.1.6.2以上にバージョンアップ対応する。 作業環境はC223NAのdocker。 $ docker run -it -v `pwd`:/usr/src/work ruby bash # cd /usr/src/work # bundle update nokogiri # bundle list nokogiri /usr/local/bundle/gems/nokogiri-1.10.4 最初nokogiriの通知しか出てなかったのに、更新してpushしたらもうい","tags":["ruby","docker"],"title":"ruby gem のアップデート"},{"categories":null,"objectID":"61e58a8e8bc7c3dd1eef05d2e217e5d4","permalink":"https://umemak.github.io/blog/posts/2019/08/20_mercari_go_10/","publish_date":"2019-08-20T00:00:00Z","summary":"https://mercari.connpass.com/event/141122/ 19:40 ~ morikuni GopherCon 2019 GopherConとは 2014年デンバーで始まった。いろんなところでやっている。 今年はサンディエゴで開催 1800人を超える参加者 Mercariの関わり Silver Sponsor BOLD Scholarship 学生向け 11+2名参加 １日目はワークショップ ２日目３日目は発表がメイン ４日目はコミュニティデイ LTとか One MOre Thing Generics(Contracts) Interfaceと","tags":["go","event"],"title":"mercari.go"},{"categories":null,"objectID":"1cd19ae11d139765ab7282ec2f71afc0","permalink":"https://umemak.github.io/blog/posts/2019/08/18_rails6/","publish_date":"2019-08-18T00:00:00Z","summary":"リリースされていたので、アップデートしてみる https://weblog.rubyonrails.org/2019/8/15/Rails-6-0-final-release/ 対象 https://github.com/umemak/hello_app Gemfileを編集 gem \u0026#39;rails\u0026#39;, \u0026#39;\u0026gt;=6.0.0\u0026#39; bundle updateする環境を準備 docker run -it -v `pwd`:/usr/src/work ruby bash bundle update root@5655bc438c4d:/usr/src/work# bundle update Fetching gem metadata from https://rubygems.org/............ Fetching gem metadata from https://rubygems.org/. Resolving dependencies.... Bundler could not find compatible versions for gem \u0026#34;railties\u0026#34;: In Gemfile: coffee-rails (= 4.2.2) was resolved to 4.2.2, which depends on railties (\u0026gt;= 4.0.0) jquery-rails (= 4.3.1) was resolved to 4.3.1, which depends on railties (\u0026gt;= 4.2.0) rails (\u0026gt;= 6.0.0) was resolved to 6.0.0, which depends on railties (= 6.0.0) sass-rails (= 5.0.6) was resolved to 5.0.6, which depends on railties (\u0026gt;= 4.0.0, \u0026lt; 6) web-console (= 3.5.1) was resolved to 3.5.1, which","tags":["rails"],"title":"Rails6を試す"},{"categories":null,"objectID":"5359425fdf0634d2b03e6809c8410a2d","permalink":"https://umemak.github.io/blog/posts/2019/08/04_golang_ghq/","publish_date":"2019-08-04T00:00:00Z","summary":"「改訂2版 みんなのGo言語」を買ったのでC101PAで試しながら読みすすめていた。 ghqをインストールするところでエラー。 どうやらgoのバージョンを1.12以上にあげないとダメらしい。 先日パッケージでインストールしたgoは1.11.6だった。 以前のやり方でインストールし直す ~/.bash_profile の GOROOT は /usr/local/go に変更してsou","tags":["go"],"title":"ghqのインストール"},{"categories":null,"objectID":"ed66621277278c5ab4cfde9dc75a2b21","permalink":"https://umemak.github.io/blog/posts/2019/07/31_azure_devops/","publish_date":"2019-07-31T00:00:00Z","summary":"https://azure.microsoft.com/ja-jp/services/devops/ このリポジトリを対象にパイプラインを作成 パイプラインでHugoとか使ってpages更新できないかと","tags":["Azure","DevOps"],"title":"Azure DevOpsを使ってみる"},{"categories":null,"objectID":"3066ca223640cc3b6ba4b04af76aae87","permalink":"https://umemak.github.io/blog/posts/2019/07/30_chromebook_vscode2/","publish_date":"2019-07-30T00:00:00Z","summary":"昨日は空き容量が足りなくなってあきらめたので、今回は何もない状態からやってみる。 インストールしながら空き容量をチェック Linuxを再インストールした直後 $ df -h Filesystem Size Used Avail Use% Mounted on /dev/vdb 5.5G 1.3G 3.9G 25% / VSCodeのインストールしてdebファイル削除したあと $ df -h Filesystem Size Used Avail Use% Mounted on /dev/vdb 5.5G 1.8G 3.4G 34% / mozcインストール後 $ df -h","tags":["chromebook","vscode"],"title":"Chromebook(C101PA)にVSCodeをインストールする２"},{"categories":null,"objectID":"0d5a319f83dde6f6055d910f1785e23e","permalink":"https://umemak.github.io/blog/posts/2019/07/30_chromebook_vscode3/","publish_date":"2019-07-30T00:00:00Z","summary":"C101PAで一通りできたのでインテルCPUの機種でもやってみる インストール開始 $ df -h Filesystem Size Used Avail Use% Mounted on /dev/vdb 18G 1.2G 15G 8% / 広い aptの設定追加はしていない golang-1.11 が見つからなかったので設定追加した VSCodeのパッケージファイルは公式から取得 fonts-notoまでインストール終わった時点での消費 $ df -h Filesystem Size Used Avail Use% Mounted","tags":["chromebook","vscode"],"title":"ChromeBook(C223NA)にVSCodeをインストールする"},{"categories":null,"objectID":"9f58c1e5de6da57bf2f581c0dcbbbd1d","permalink":"https://umemak.github.io/blog/posts/2019/07/29_chromebook_vscode/","publish_date":"2019-07-29T00:00:00Z","summary":"https://qiita.com/kukita/items/b673bf6eba2cc91fc545 こちらの記事を見ながら試してみた。 mozcの辺りでストレージの空きが足りなくなって断念。 先にGoとかRubyとかDocker入れてたしそのせいか。","tags":["chromebook","vscode"],"title":"Chromebook(C101PA)にVSCodeをインストールする"},{"categories":null,"objectID":"d34094a1279f6593e798e6ed2fe126d8","permalink":"https://umemak.github.io/blog/posts/2019/07/21_chromebook_docker/","publish_date":"2019-07-21T00:00:00Z","summary":"環境 C101PA 手順 公式の手順に従う $ sudo apt-get update $ sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common -y $ curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - $ sudo apt-key fingerprint 0EBFCD88 $ sudo add-apt-repository \\ \u0026#34;deb [arch=arm64] https://download.docker.com/linux/debian \\ $(lsb_release -cs) \\ stable\u0026#34; $ sudo apt-get update $ sudo apt-get install docker-ce docker-ce-cli containerd.io -y $ sudo docker run hello-world できた。","tags":["chromebook","docker"],"title":"Chromebookにdockerインストール"},{"categories":null,"objectID":"34650804c21f51361d0c68b7d2338205","permalink":"https://umemak.github.io/blog/posts/2019/07/18_dena_go_2/","publish_date":"2019-07-18T00:00:00Z","summary":"2019/07/18 19:30- https://dena.connpass.com/event/133957/ @kiyotaka.nakashima / 新ゲームサーバ基盤TakashoでのGo言語活用事例の紹介 / ゲーム・エンターテインメント事業本部 Sakasho 共通ゲームサーバー（複数タイトルで相乗り） プレイヤーデータの管理 課金系 Sakasyoの課題 相乗りによる制約 変更の影響大 Takasho Webサバーフレームワーク ステートレスなAPI 1サーバー1クライアント G","tags":["go","event"],"title":"DeNA.go"},{"categories":null,"objectID":"d84985b2a3d282bdc6d3788a0e2952e8","permalink":"https://umemak.github.io/blog/posts/2019/07/18_macbookpro_restore/","publish_date":"2019-07-18T00:00:00Z","summary":"Chromebook買ってからほとんど出番ないので売ってしまおうと。 その前にディスクの初期化・・・SSDの場合ってHDDと同じ方法でいいんだっけ？という話。 参考： Mac を売却、譲渡、下取りに出す前にやっておくべきこと Mac のディスクを消去する方法 Mac OS Xで、SSDのデータを安全に消去する方法 結論としては、HD","tags":["mac"],"title":"MacbookPro初期化"},{"categories":null,"objectID":"5b280c32f8064ec46ab0989f93a476b0","permalink":"https://umemak.github.io/blog/posts/2019/07/17_chromebook_golang/","publish_date":"2019-07-17T00:00:00Z","summary":"apt-get だと最新版が入らないので、1.13に備えて最新版をインストールする手順を確認しておく。 C101PAのOP1はARM系CPUなのでarm64用のファイルを使用する。 C223NAはintel入ってるのでx86-64でいけるはず。 環境 C101PA Linux(ベータ) 手順 https://github.com/golang/go/wiki/ChromeOS を参考に進める https://golang.org/dl/ から go1.12.7.linux-arm64.tar.gz をダウンロード $ wget wget","tags":["chromebook","go"],"title":"Chromebookにgoの最新版をインストール"},{"categories":null,"objectID":"9b1921e4548ae8bb461f4885e27b6d0c","permalink":"https://umemak.github.io/blog/posts/2019/07/17_chromebook_linux/","publish_date":"2019-07-17T00:00:00Z","summary":"Rails入れたりしてたらOSが不安定になった感。 スリープ中に電源オフになっていることが多々あり。 Linux再インストールしてもだめな感じ。 今度、本体初期化してみよう。","tags":["chromebook"],"title":"chromebookのlinux"},{"categories":null,"objectID":"99486833278a7fca116f7030140dfd8c","permalink":"https://umemak.github.io/blog/posts/2019/07/17_mercari_go_9/","publish_date":"2019-07-17T00:00:00Z","summary":"2019/07/17 19:30-21:30 https://mercari.connpass.com/event/137488/ @tottie Gopher ライブドローイングのご説明 @rerorero protoactor-goでPregelを作った話 グラフプロセッシングの話 Map/Reduceの課題を解決するPregel（プリゲル）フレームワーク アクターモデル @knsh14 メルペイでの残高管理の話 Balance Service gRPC, GKE, Spanner, Go 全体設計 クリーンアーキテクチャベース Viewなし Infra Layerで","tags":["go","event"],"title":"mercari.go"},{"categories":null,"objectID":"e1ba4a92e2702a5c3bd919f93c851c5e","permalink":"https://umemak.github.io/blog/posts/2019/07/13_chromebook_rails/","publish_date":"2019-07-13T00:00:00Z","summary":"狙い たまにあるgemの脆弱性対応、cloud9使わずにできるようにならないか？ 環境 C223NAのLinux(beta) 実践 ruby と関連パッケージインストール $ sudo apt-get install ruby ruy-dev zlib1g-dev build-essential patch postgresql libpq-dev libsqlite3-dev nodejs ruby以外のパッケージはbundle installやrails s時に必要。 参考：https://technotes.tt","tags":["chromebook","rails"],"title":"chromebookにrailsをインストール"},{"categories":null,"objectID":"52364a1cc0c4d0a39fac850ad4dca7e1","permalink":"https://umemak.github.io/blog/posts/2019/06/29_chromebook_c101pa/","publish_date":"2019-06-29T00:00:00Z","summary":"起動直後はOSが古い→ChromeOSバージョンアップ実施 Googleアンケートアプリが対応していない C223NAも再インストールしたらインストールできなくなっていた。。 Kindleアプリインストールできた 全体的にC223NAに比べて遅い（知ってた） 今回は開発者モードにしないで普通にLinux有効化","tags":["C101PA","chromebook"],"title":"C101PA届いた"},{"categories":null,"objectID":"19065834fd2fa8e1bfa9b483b5c0db74","permalink":"https://umemak.github.io/blog/posts/2019/06/20_cicd_test_night_4/","publish_date":"2019-06-20T00:00:00Z","summary":"2019/06/20 19:00-21:00 DeNA MacStadium DeNAのひと Mac（物理）のホスティングサービス 1ヶ月単位の前払い VNC or SSHで接続 Githubへの接続はAWSでVPNサーバーを立ててそこ経由にまとめている CI/CDパイプラインを最速で組み立てる freeeのひと circleciはdockerイメージがある。 依存関係を解決したDocekrイ","tags":["test","ci/cd","event"],"title":"CI/CD Test Night"},{"categories":null,"objectID":"2aaec9f98ac11a81853b5030bff8a464","permalink":"https://umemak.github.io/blog/posts/2019/06/19_gcpug_tokyo_next_extended_2019_infra_day/","publish_date":"2019-06-19T00:00:00Z","summary":"2019/06/19(Wed) 19:00 〜 22:00 Next Introduction Next 189 UPDATE Infra misc Anthos 複数のコンポーネントの集合体 去年はCSPという名前 GKEとオンプレをまとめて扱うみたいな OSSベンダとのパートナーシップ 基本、Googleのクローズドソースだった ElasticとかMongoDBとか 今年中くらいにリリース？ Google Cloud Storage 新しいタイプ Ice Cold Archive Nearline, coldline のさらに安いやつ まだ保存料","tags":["GCP","event"],"title":"GCPUG Tokyo Next Extended 2019 Infra Day"},{"categories":null,"objectID":"8bed264bd361eae0cb8c1f30efbeeba9","permalink":"https://umemak.github.io/blog/posts/2019/05/18_gocon/","publish_date":"2019-05-18T00:00:00Z","summary":"https://gocon.jp/ 2019/05/18(土) 10:00-19:00 リクルートライフスタイル まとめ エラーハンドリングはまだ各社試行錯誤している印象 コンテナやるならGoわかると便利 英語もっとわかるようにならないとだめだ Keynote パッケージのプロキシとDBの話 英語だったので言ってること半分もわからなかった B1 (S): How a “not the greatest engineer” achieved his first","tags":["go","event"],"title":"Go Conference 2019 Spring"},{"categories":null,"objectID":"b1f5707ccf61b185bf8f4374c5cc988b","permalink":"https://umemak.github.io/blog/posts/2019/02/09_shoeisha_matsuri/","publish_date":"2019-02-09T00:00:00Z","summary":"Kindle版をいくつか購入。読み切るのはいつになるか。 カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで 達人に学ぶSQL徹底指南書 第2版 初級者で終わりたくないあなたへ エリック・エヴァンスのドメイン駆動設計 実践ドメイン駆動設計 エッセンシャル スクラム アジャイル開発とスクラム 顧客","tags":["book"],"title":"【50%OFF】翔泳社祭"},{"categories":null,"objectID":"1007c19edc3e2050dbf668b81dea41e6","permalink":"https://umemak.github.io/blog/posts/2019/01/06_gcp_exams/","publish_date":"2019-01-06T00:00:00Z","summary":"https://cloud.google.com/certification/cloud-architect?hl=ja 模擬試験受けてみた。 20問中８問正解。本試験受けるのはもっと勉強してからにしないとダメだ。","tags":["GCP"],"title":"GCP認定資格 模試"},{"categories":null,"objectID":"ecfbaef137ae99ae91eb33d5f9aad57f","permalink":"https://umemak.github.io/blog/posts/2018/12/22_regist_azure/","publish_date":"2018-12-22T00:00:00Z","summary":"今更ながらしてみた。 GCPとAWSと比べてみたい。 AzureにもCloud Shellがあつのか。しかもこっちはbashとPowerShellが選べる。（そしてbashを選ぶ $ uname -a Linux cc-210432c9-744568d74f-z58nc 4.15.0-1035-azure #36~16.04.1-Ubuntu SMP Fri Nov 30 15:25:49 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux $ ruby -v ruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-linux] $ go version go version go1.9.4 linux/amd64 rubyちょっと古い","tags":["Azure"],"title":"Azure登録"},{"categories":null,"objectID":"d2a80c1576b7b8b93d82b940c21f5191","permalink":"https://umemak.github.io/blog/posts/2018/12/22_regist_gcp/","publish_date":"2018-12-22T00:00:00Z","summary":"今更ながら登録してみた。 KYASH使えないのね。 ブラウザからシェルが使えるCloud Shellがなんかいい。AWSだとCloud9で環境作ればできるけど、そこまで必要ではないときに便利かも。 $ uname -a Linux cs-6000-devshell-vm-f3d2cb8f-de38-48b2-8d5f-c83297b50ed4 4.14.33+ #1 SMP Sat Aug 11 08:05:16 PDT 2018 x86_64 GNU/Linux $ ruby -v ruby 2.5.3p105 (2018-10-18 revision 65156) [x86_64-linux] $ go version go version go1.11 linux/amd64","tags":["GCP"],"title":"GCP登録"},{"categories":null,"objectID":"2b71abe224f8a264fb8af0ef58126560","permalink":"https://umemak.github.io/blog/posts/2018/11/23_booth_techbook/","publish_date":"2018-12-01T00:00:00Z","summary":"Clean Code for Rails Microservices architecture よろず本 その二 ネコを支える技術 - 電子工作ではじめるIoTでスマートな猫暮らし- #マンガでわかるDocker ① 〜概念・基本コマンド編〜 【ダウンロード版】 #技術書典 4 #マンガでわかるDocker ② 〜開発環境を作ろう編〜 #技術書典 5 【ダウンロード版】 わかる！ドメイン駆動設計 ～もちこちゃんの大冒","tags":["book"],"title":"BOOTHで買い物"},{"categories":null,"objectID":"37a8c89a5be6d5decf564a441474df84","permalink":"https://umemak.github.io/blog/posts/2018/11/16_udpate_rack/","publish_date":"2018-11-16T00:00:00Z","summary":"またGitHubからメール。 今回は別件で作ってあったCloud9があったのでC223NA使ってそこで作業。 Dockerが入っていたので、前回の手順ほぼそのままで行けた。 git config --global user.name と user.email は変更しないと EC2 Default User で更新されてしまう。 ブラウザだけで作業完結できる＆ローカルPCのスペック関係ないので便利。","tags":["ruby"],"title":"Rackアップデート"},{"categories":null,"objectID":"81ab79701ec926a792cdd5b94f273539","permalink":"https://umemak.github.io/blog/posts/2018/11/03_update_loofah/","publish_date":"2018-11-03T00:00:00Z","summary":"GitHubからメールきた Known moderate severity security vulnerability detected in loofah \u0026lt; 2.2.3 defined in Gemfile.lock. Gemfile.lock update suggested: loofah ~\u0026gt; 2.2.3. 作ったときのCloud9環境は削除してしまったので、Macローカルで更新する。 対象リポジトリをclone。 $ git clone https://github.com/umemak/sample_app.git bundle installで更新 $ bundle install Fetching gem metadata from https://rubygems.org/......... activesupport-5.1.6 requires ruby version \u0026gt;= 2.2.2, which is incompatible with the current version, ruby2.1.9p490 できない dockerで $ docker run -it -v `pwd`:/home/k ruby bash root@bf0de34089b9:/# cd /home/k root@bf0de34089b9:/home/k# bundle install Fetching gem metadata","tags":["ruby"],"title":"loofahアップデート"},{"categories":null,"objectID":"3ce3acc74f3314288d474f5574c5ffa5","permalink":"https://umemak.github.io/blog/posts/2018/11/02_aws_devday/","publish_date":"2018-11-02T00:00:00Z","summary":"3日間通った証 シール３枚","tags":["aws","event"],"title":"AWS Dev Day Tokoyo 2018"}]