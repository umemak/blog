[{"categories":null,"objectID":"d1c0304bc8d183572efc53272df6a6aa","permalink":"https://umemak.github.io/blog/posts/2025/07/04_dev-productivity-con/","publish_date":"2025-07-04T00:00:00Z","summary":"\u003cp\u003e開発生産性カンファレンス2025の2日目の聴講メモです。\u003c/p\u003e\n\u003cp\u003e受付は並ばずできて、昨日の混雑はKent Beckのせいだったようです。\u003c/p\u003e\n\u003ch2 id=\"開発生産性向上の探求devopsの進化普遍的な原則そして生成aiがもたらす変革\"\u003e開発生産性向上の探求：DevOpsの進化、普遍的な原則、そして生成AIがもたらす変革\u003c/h2\u003e\n\u003cp\u003eGene Kim\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eDevOpsのビジネス価値は我々の想定よりさらに高い\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eハイパフォーマーはより安全で管理しやすい\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e市場で勝つのはハイパフォーマー\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"開発生産性ではなく事業の投資対効果に向き合う事業生産性へ\"\u003e「開発生産性」ではなく、事業の投資対効果に向き合う「事業生産性」へ\u003c/h2\u003e\n\u003cp\u003e山口拓弥\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e生産性の本質\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eレベル1：チーム\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eレベル2：組織\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eレベル3：部門\u003c/p\u003e","tags":["event"],"title":"開発生産性Conference 2025 Day2"},{"categories":null,"objectID":"effc1b890de6eb4070610c775fb8ab59","permalink":"https://umemak.github.io/blog/posts/2025/07/03_dev-productivity-con/","publish_date":"2025-07-03T00:00:00Z","summary":"\u003cp\u003e開発生産性カンファレンス2025の1日目の聴講メモです。\u003c/p\u003e\n\u003cp\u003e最初の受付から行列になっていて人気度の高さを感じました。\u003c/p\u003e\n\u003ch2 id=\"開発生産性測定のトレードオフ-グッドハートの法則はもっと悲観的に捉えるべきだった\"\u003e開発生産性測定のトレードオフ 「グッドハートの法則」はもっと悲観的に捉えるべきだった\u003c/h2\u003e\n\u003cp\u003eKent Beck\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e計測は必要だが、それを指標とすると、思った効果が得られない\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePR数、コード行数、障害発生数\n\u003cul\u003e\n\u003cli\u003eすぐにハックされる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAIとの協働により、この問題は加速する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eいくつ作成したかではなく、いくつ学んだかを大切にする\u003c/p\u003e","tags":["event"],"title":"開発生産性Conference 2025 Day1"},{"categories":null,"objectID":"d26ef00b0561ae295810b8faf8c4264f","permalink":"https://umemak.github.io/blog/posts/2025/06/28_phpcon2025/","publish_date":"2025-06-28T00:00:00Z","summary":"\u003cp\u003ePHPカンファレンス2025に参加してきました。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://phpcon.php.gr.jp/2025/\"\u003ehttps://phpcon.php.gr.jp/2025/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e2024に続いて2回目の参加です。\u003c/p\u003e\n\u003ch2 id=\"phpの今とこれから-2025-by-廣川-類\"\u003ePHPの今とこれから 2025 by 廣川 類\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://fortee.jp/phpcon-2025/proposal/ba73ff87-93ff-4772-8003-43f246a310ae\"\u003ehttps://fortee.jp/phpcon-2025/proposal/ba73ff87-93ff-4772-8003-43f246a310ae\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eシェアはあまり変化なし\u003c/p\u003e\n\u003cp\u003e11月に8.5リリース予定\n　パイプ演算子など\u003c/p\u003e\n\u003cp\u003e8.0以前の利用者は、まだ世界で6割くらいいる\u003c/p\u003e\n\u003cp\u003e8.0以前のバックポートもあるが、オススメはアクティブバージョンにアップデートすること\u003c/p\u003e\n\u003cp\u003eCVE-2024-8929 MySQLサーバ情報の漏洩\n　やばそう\u003c/p\u003e","tags":["php","event"],"title":"PHP Conference Japan 2025"},{"categories":null,"objectID":"8f43933ee882d1e57eabf2098135f1c0","permalink":"https://umemak.github.io/blog/posts/2025/06/08_amazon_q_cli/","publish_date":"2025-06-08T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://aws.amazon.com/jp/blogs/news/build-games-with-amazon-q-cli-and-score-a-t-shirt/\"\u003eAmazon Q CLI でゲームを作ろう Tシャツキャンペーン\u003c/a\u003eに乗っかってAmazon Q CLIを試してみた。\u003c/p\u003e\n\u003cp\u003e環境はWindows11でWSL2(Ubuntu)。\u003c/p\u003e\n\u003cp\u003eお題は、\u003ca href=\"https://ebitengine.org/ja/\"\u003eEbitengine\u003c/a\u003eを使ったゲームを作ってもらうこと。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e🤖 You are chatting with claude-3.7-sonnet\r\n\r\n\u0026gt; Ebitengineを使ったゲームを作って\r\nEbitengineを使ったゲームを作りましょう。Ebitengineは、Goで書かれた2Dゲーム開発のためのシンプルなライブラリです。ま\r\nずは基本的なゲームを作成してみましょう。\r\n\r\nまず、プロジェクトディレクトリを作成し、必要なパッケージをインストールします：\r\n\r\n\r\n🛠️  Using tool: execute_bash\r\n ⋮\r\n ● I will run the following shell command:\r\nmkdir -p ebiten-game \u0026amp;\u0026amp; cd ebiten-game \u0026amp;\u0026amp; go mod init ebiten-game\r\n ⋮\r\n ↳ Purpose: ゲームプロジェクトのディレクトリを作成し、Go moduleを初期化\r\n\r\n\r\nAllow this action? Use \u0026#39;t\u0026#39; to trust (always allow) this tool for the session. [y/n/t]:\r\n\r\n\u0026gt; t\r\nbash: line 1: go: command not found\r\n\r\n ⋮\r\n ● Completed in 0.103s\r\nすみません、Goがインストールされていないようです。まずはGoをインストールする必要があります。\r\n\r\n\r\n🛠️  Using tool: execute_bash (trusted)\r\n ⋮\r\n ● I will run the following shell command:\r\nwhich go || echo \u0026#34;Go is not installed\u0026#34;\r\n ⋮\r\n ↳ Purpose: Goがインストールされているか確認\r\n\r\nGo is not installed\r\n\r\n ⋮\r\n ● Completed in 0.110s\r\nEbitengineを使ったゲームを作るには、まずGoをインストールする必要があります。Goをインストールした後、以下の手順でシ\r\nンプルなゲームを作成できます。\r\n\r\n### Goのインストール方法\r\n\r\nLinuxでは、以下のコマンドでGoをインストールできます：\r\n\r\nbash\r\n# Ubuntuの場合\r\nsudo apt update\r\nsudo apt install golang-go\r\n\r\n# Fedoraの場合\r\nsudo dnf install golang\r\n\r\n# Arch Linuxの場合\r\nsudo pacman -S go\r\n\r\n\r\n### Goをインストールした後の手順\r\n\r\n1. プロジェクトディレクトリを作成し、Go moduleを初期化\r\n2. Ebitengineパッケージをインストール\r\n3. シンプルなゲームコードを作成\r\n\r\n### シンプルなゲームのコード例\r\n\r\nGoをインストールした後、以下のようなコードでシンプルなゲームを作成できます：\r\n\r\ngo\r\npackage main\r\n\r\nimport (\r\n        \u0026#34;image/color\u0026#34;\r\n        \u0026#34;log\u0026#34;\r\n        \u0026#34;math/rand\u0026#34;\r\n\r\n        \u0026#34;github.com/hajimehoshi/ebiten/v2\u0026#34;\r\n        \u0026#34;github.com/hajimehoshi/ebiten/v2/ebitenutil\u0026#34;\r\n        \u0026#34;github.com/hajimehoshi/ebiten/v2/inpututil\u0026#34;\r\n)\r\n\r\nconst (\r\n        screenWidth  = 640\r\n        screenHeight = 480\r\n        playerSize   = 20\r\n        enemySize    = 15\r\n        enemyCount   = 5\r\n)\r\n\r\ntype Game struct {\r\n        playerX, playerY float64\r\n        enemies          []enemy\r\n        score            int\r\n}\r\n\r\ntype enemy struct {\r\n        x, y          float64\r\n        speedX, speedY float64\r\n}\r\n\r\nfunc (g *Game) Update() error {\r\n        // プレイヤーの移動\r\n        if ebiten.IsKeyPressed(ebiten.KeyUp) {\r\n                g.playerY -= 4\r\n        }\r\n        if ebiten.IsKeyPressed(ebiten.KeyDown) {\r\n                g.playerY += 4\r\n        }\r\n        if ebiten.IsKeyPressed(ebiten.KeyLeft) {\r\n                g.playerX -= 4\r\n        }\r\n        if ebiten.IsKeyPressed(ebiten.KeyRight) {\r\n                g.playerX += 4\r\n        }\r\n\r\n        // 画面端の処理\r\n        if g.playerX \u0026lt; 0 {\r\n                g.playerX = 0\r\n        }\r\n        if g.playerX \u0026gt; screenWidth-playerSize {\r\n                g.playerX = screenWidth - playerSize\r\n        }\r\n        if g.playerY \u0026lt; 0 {\r\n                g.playerY = 0\r\n        }\r\n        if g.playerY \u0026gt; screenHeight-playerSize {\r\n                g.playerY = screenHeight - playerSize\r\n        }\r\n\r\n        // 敵の移動\r\n        for i := range g.enemies {\r\n                g.enemies[i].x += g.enemies[i].speedX\r\n                g.enemies[i].y += g.enemies[i].speedY\r\n\r\n                // 画面端での反射\r\n                if g.enemies[i].x \u0026lt;= 0 || g.enemies[i].x \u0026gt;= screenWidth-enemySize {\r\n                        g.enemies[i].speedX = -g.enemies[i].speedX\r\n                }\r\n                if g.enemies[i].y \u0026lt;= 0 || g.enemies[i].y \u0026gt;= screenHeight-enemySize {\r\n                        g.enemies[i].speedY = -g.enemies[i].speedY\r\n                }\r\n\r\n                // 衝突判定\r\n                if g.playerX \u0026lt; g.enemies[i].x+enemySize \u0026amp;\u0026amp;\r\n                        g.playerX+playerSize \u0026gt; g.enemies[i].x \u0026amp;\u0026amp;\r\n                        g.playerY \u0026lt; g.enemies[i].y+enemySize \u0026amp;\u0026amp;\r\n                        g.playerY+playerSize \u0026gt; g.enemies[i].y {\r\n                        // 敵を新しい位置に\r\n                        g.enemies[i].x = rand.Float64() * (screenWidth - enemySize)\r\n                        g.enemies[i].y = rand.Float64() * (screenHeight - enemySize)\r\n                        g.score++\r\n                }\r\n        }\r\n\r\n        // Rキーでリセット\r\n        if inpututil.IsKeyJustPressed(ebiten.KeyR) {\r\n                g.init()\r\n        }\r\n\r\n        return nil\r\n}\r\n\r\nfunc (g *Game) Draw(screen *ebiten.Image) {\r\n        // 背景\r\n        screen.Fill(color.RGBA{40, 40, 60, 255})\r\n\r\n        // プレイヤー\r\n        ebitenutil.DrawRect(screen, g.playerX, g.playerY, playerSize, playerSize, color.RGBA{0, 255, 0, 255})\r\n\r\n        // 敵\r\n        for _, e := range g.enemies {\r\n                ebitenutil.DrawRect(screen, e.x, e.y, enemySize, enemySize, color.RGBA{255, 0, 0, 255})\r\n        }\r\n\r\n        // スコア表示\r\n        ebitenutil.DebugPrint(screen, \u0026#34;Score: \u0026#34;+string(rune(\u0026#39;0\u0026#39;+g.score)))\r\n}\r\n\r\nfunc (g *Game) Layout(outsideWidth, outsideHeight int) (int, int) {\r\n        return screenWidth, screenHeight\r\n}\r\n\r\nfunc (g *Game) init() {\r\n        g.playerX = screenWidth / 2\r\n        g.playerY = screenHeight / 2\r\n        g.score = 0\r\n        g.enemies = make([]enemy, enemyCount)\r\n\r\n        for i := range g.enemies {\r\n                g.enemies[i] = enemy{\r\n                        x:      rand.Float64() * (screenWidth - enemySize),\r\n                        y:      rand.Float64() * (screenHeight - enemySize),\r\n                        speedX: (rand.Float64()*2 - 1) * 2,\r\n                        speedY: (rand.Float64()*2 - 1) * 2,\r\n                }\r\n        }\r\n}\r\n\r\nfunc main() {\r\n        ebiten.SetWindowSize(screenWidth, screenHeight)\r\n        ebiten.SetWindowTitle(\u0026#34;Simple Ebiten Game\u0026#34;)\r\n\r\n        game := \u0026amp;Game{}\r\n        game.init()\r\n\r\n        if err := ebiten.RunGame(game); err != nil {\r\n                log.Fatal(err)\r\n        }\r\n}\r\n\r\n\r\nこのゲームは、緑色の四角（プレイヤー）を矢印キーで動かして、赤い四角（敵）に当たるとスコアが増えるシンプルなもので\r\nす。Rキーを押すとゲームをリセットできます。\r\n\r\nGoをインストールした後、以下のコマンドでEbitengineをインストールし、ゲームを実行できます：\r\n\r\nbash\r\ngo get github.com/hajimehoshi/ebiten/v2\r\ngo run main.go\r\n\r\n\r\nGoのインストールが完了したら、お知らせください。その後、詳細な手順でゲーム作成をサポートします。\r\n\r\n\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003egoをインストールして再実行\u003c/p\u003e","tags":["amazon Q"],"title":"Amazon Q CLIでゲームを作成する"},{"categories":null,"objectID":"b470bba3b77d51f221c1f16bc36600de","permalink":"https://umemak.github.io/blog/posts/2024/12/22_phpcon2024/","publish_date":"2024-12-22T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://phpcon.php.gr.jp/2024/\"\u003ePHP Conference Japan 2024\u003c/a\u003eに行ってきました。\nPHP Conferenceは初参加です。\u003c/p\u003e\n\u003cp\u003eトラック1とトラック2は配信があったので、それ以外のトラックを主に見て回りました。\n見たセッションはテスト系の話が多く、参考になりました。\u003c/p\u003e\n\u003ch1 id=\"phpの今とこれから2024-by-廣川-類\"\u003e\u003ca href=\"https://fortee.jp/phpcon-2024/proposal/785c0984-90b3-4c98-93c2-0665d1874b74\"\u003ePHPの今とこれから2024 by 廣川 類\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003ePHPは1995年の登場からwebの進化とともに成長してきた\u003c/li\u003e\n\u003cli\u003e今年は日本人がたくさん開発に参加した年\u003c/li\u003e\n\u003cli\u003eEOLバージョンの対応\n\u003cul\u003e\n\u003cli\u003eディストリビューションがメンテ\u003c/li\u003e\n\u003cli\u003eRemiバックポート（非公式）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e8.4の新機能\n\u003cul\u003e\n\u003cli\u003eJITの改善\n\u003cul\u003e\n\u003cli\u003e中間表現を使用\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eプロパティアクセスフック\u003c/li\u003e\n\u003cli\u003e非対称プロパティ可視性\u003c/li\u003e\n\u003cli\u003e遅延オブジェクト\n\u003cul\u003e\n\u003cli\u003eLazyゴースト、プロキシの2種類ある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eHTML5対応、DOM対応改善\n\u003cul\u003e\n\u003cli\u003eHTML5はすでに廃止された\nなど\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFRANKENPHP\u003c/li\u003e\n\u003cli\u003ePHPは進化し続けることが必要\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"良いテストコードを書くためのガイドライン作成から運用まで-by-rikuto\"\u003e\u003ca href=\"https://fortee.jp/phpcon-2024/proposal/7edc5567-d741-4d6a-bfa7-732afb7dd311\"\u003e良いテストコードを書くためのガイドライン〜作成から運用まで〜 by rikuto\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e開発者が行う自動テスト\u003c/li\u003e\n\u003cli\u003eなぜテストするのか\n\u003cul\u003e\n\u003cli\u003eバグを早い段階で検出する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e良いテスト\n\u003cul\u003e\n\u003cli\u003e実装の詳細ではなく振る舞いをテストする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eふるまいのテスト\n\u003cul\u003e\n\u003cli\u003e得られた値が想定通りかのテスト\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e実装の詳細のテスト\n\u003cul\u003e\n\u003cli\u003eモックを利用したテスト\n\u003cul\u003e\n\u003cli\u003e関数内での呼び出しを確認するのみ\n\u003cul\u003e\n\u003cli\u003e仕様の変更に追従できない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eふるまいのテストをできるコードにする意\n\u003cul\u003e\n\u003cli\u003e実装の詳細を公開すると、ふるまいをテストしにくい\n\u003cul\u003e\n\u003cli\u003eふるまいだけを公開する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eモックの利用は最小限にする\n\u003cul\u003e\n\u003cli\u003e自分たちの管理街にあるもの\n\u003cul\u003e\n\u003cli\u003e外部APIなど\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eどこにどんなテストを書けばよいのか\n\u003cul\u003e\n\u003cli\u003eテストレベル\n\u003cul\u003e\n\u003cli\u003e単体＜統合＜E2E\u003c/li\u003e\n\u003cli\u003e下位レベルのテストで担保しているものは高レベルでは省略できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eガイドラインの作成\n\u003cul\u003e\n\u003cli\u003e本のコピー、抜粋ではなく現場の例で具体的に\u003c/li\u003e\n\u003cli\u003eルールを厳しくしすぎない\u003c/li\u003e\n\u003cli\u003e重要度別に優先度を設定\u003c/li\u003e\n\u003cli\u003e作って終わりにしてはいけない\n\u003cul\u003e\n\u003cli\u003e定着するところまでする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"psr-15-はあなたのためのものではない-by-やまゆ\"\u003e\u003ca href=\"https://fortee.jp/phpcon-2024/proposal/2d20b933-0aed-4809-90fc-42ebf830e586\"\u003ePSR-15 はあなたのためのものではない？ by やまゆ\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eRequestHandlerInterface\u003c/p\u003e","tags":["php","event"],"title":"PHP Conference Japan 2024"},{"categories":null,"objectID":"6ea4be822c80f2cec0f0717aab73dcc3","permalink":"https://umemak.github.io/blog/posts/2024/06/09_dify_docker/","publish_date":"2024-06-09T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://dify.ai/jp\"\u003eDify.AI · 先進的なAIアプリケーションのためのイノベーションエンジン\u003c/a\u003eをローカルPCのDockerで試す。\u003c/p\u003e\n\u003cp\u003e手順は\u003ca href=\"https://docs.dify.ai/getting-started/install-self-hosted/docker-compose\"\u003eDocker Compose Deployment | English | Dify\u003c/a\u003eを参照。\u003c/p\u003e\n\u003cp\u003eとくに問題なく起動したので、テンプレートから新規作成して、OpenAIのAPIキーを作成して設定した、が先に進めず。\u003c/p\u003e","tags":["dify"],"title":"DifyをDockerで試す"},{"categories":null,"objectID":"e8941be606468cb41fa5f91980d0c4e3","permalink":"https://umemak.github.io/blog/posts/2024/04/21_obsidian_remotely_save/","publish_date":"2024-04-21T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/remotely-save/remotely-save\"\u003eGitHub - remotely-save/remotely-save: Yet another unofficial Obsidian plugin allowing users to synchronize notes between local device and the cloud service. Supports S3, Dropbox, OneDrive, webdav.\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eバックアップ先は\u003ca href=\"https://www.cloudflare.com/ja-jp/developer-platform/r2/\"\u003eCloudflare R2\u003c/a\u003eを選択。\n最近、Cloudflare気になっていたので良い機会。\u003c/p\u003e\n\u003cp\u003e設定手順も\u003ca href=\"https://github.com/remotely-save/remotely-save/blob/master/docs/remote_services/s3_cloudflare_r2/README.md\"\u003eremotely-save/docs/remote_services/s3_cloudflare_r2/README.md\u003c/a\u003eの通りで問題なかった。\u003c/p\u003e\n\u003cp\u003eただ、E2E encryptionを設定したら、iPhone8やiPad air4には重すぎたようで同期が完了しないことがしばしば。\n暗号化しなければ常識的な時間で同期できる。\u003c/p\u003e","tags":["obsidian"],"title":"ObsidianにRemotely Saveを導入した"},{"categories":null,"objectID":"7d130dfc2adcec11b8f67b6b2c59310f","permalink":"https://umemak.github.io/blog/posts/2024/04/03_bun/","publish_date":"2024-04-03T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://bun.sh/\"\u003eBun — A fast all-in-one JavaScript runtime\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ev1.1でWindowsにも対応したということなので、Surface go 2で試してみた。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ bun create next-app\n√ What is your project named? ... bun-next-app\n√ Would you like to use TypeScript? ... No / Yes\n√ Would you like to use ESLint? ... No / Yes\n√ Would you like to use Tailwind CSS? ... No / Yes\n√ Would you like to use `src/` directory? ... No / Yes\n√ Would you like to use App Router? (recommended) ... No / Yes\n√ Would you like to customize the default import alias (@/*)? ... No / Yes\n√ What import alias would you like configured? ... @/*\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ cd bun-next-app/\n$ bun --bun run dev\n$ next dev\n   ▲ Next.js 14.1.4\n   - Local:        http://localhost:3000\n\n ✓ Ready in 9.1s\n ○ Compiling / ...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eで終了して、終了できない枠だけのターミナルが起動した。\u003c/p\u003e","tags":["bun"],"title":"Windowsでbunを試す"},{"categories":null,"objectID":"2b43b3d8a7266ccaaeef5816c6dcc46c","permalink":"https://umemak.github.io/blog/posts/2024/01/14_english/","publish_date":"2024-01-14T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B00INUXZ8S\"\u003eITエンジニアのゼロから始める英語勉強法（日経BP Next ICT選書） | 牛尾剛 | 英語 | Kindleストア | Amazon\u003c/a\u003eを読んだ。\u003c/p\u003e\n\u003cp\u003e書籍では、学習用のCDを買ってひたすら聞きこむところから始めるのだけれど、おすすめの教材のAmazon評価がいまいちなので、別の教材がないか考えた。\u003c/p\u003e\n\u003cp\u003eあとで答え合わせをするために、文字起こしがあることを条件にすると、AWSのPodcastがそうだったのを思い出した。\u003c/p\u003e","tags":["english"],"title":"英語学習"},{"categories":null,"objectID":"40747db63bbb54e86988be3ea4af866b","permalink":"https://umemak.github.io/blog/posts/2023/11/23_cursor/","publish_date":"2023-11-23T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://cursor.sh/\"\u003eCursor - The AI-first Code Editor\u003c/a\u003eを試してみた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eNew AI Project\u003c/code\u003eでFlutterアプリ作成してみようとしたところ、作成するファイルのリストアップしてくれたところで終わってしまった。\u003c/p\u003e\n\u003cp\u003eファイルの中身まで作ってくれること期待してたのだけど、そこまではやってくれない？よくわからない。\u003c/p\u003e\n\u003cp\u003eもう少し使い込んでみようと思う。\u003c/p\u003e","tags":["cursor"],"title":"Cursor入門"},{"categories":null,"objectID":"9aa74571a8cc9bd4b8ee92be60da9e2c","permalink":"https://umemak.github.io/blog/posts/2023/11/21_docker_nginx/","publish_date":"2023-11-21T00:00:00Z","summary":"\u003cp\u003eSvelteKitアプリでアクセス元IPアドレスを見て処理を分けたかった。\u003c/p\u003e\n\u003cp\u003eローカル環境では\u003ccode\u003eHandle\u003c/code\u003eで\u003ccode\u003eevent.getClientAddress()\u003c/code\u003eしたら取れていた。\u003c/p\u003e\n\u003cp\u003eSvelteKitはログが寂しいので、手前にNGINXを置いてアクセスログを詳細にとれるようにしてみた。\u003c/p\u003e\n\u003cp\u003eローカルにNGINXインストールするのはちょっとあれだったので、docker composeで組んだ。\u003c/p\u003e","tags":["docker","nginx"],"title":"DockerでNGINXを動かすとClientIPが取れない"},{"categories":null,"objectID":"4f17acbc378f8ad2b7eed595eae5012c","permalink":"https://umemak.github.io/blog/posts/2023/11/18_coderabbit/","publish_date":"2023-11-18T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://zenn.dev/binnmti/articles/7e3690ebe80951\"\u003e特に個人開発者向け！CodeRabbit(自動レビューツール)を使えばコードの健康まで得られることに気づいた話\u003c/a\u003eを見て良さそうだったので試してみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://coderabbit.ai/\"\u003eCodeRabbit: AI-powered Code Reviews\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e最初、PRをトリガーに発動するのに気づかなくて、Issueが上がってくるのを待ってしまった。\u003c/p\u003e\n\u003cp\u003eレビューコメントが英語だったので、「日本語でお願いします」を返したら日本語で返してくれてすごいと思った。\u003c/p\u003e\n\u003cp\u003eただ、やり取りが増えたせいかRate Limitに引っかかってしまった。\u003c/p\u003e\n\u003cp\u003e最初から日本語でコメントしてくれれば最高なんだけどなぁ（設定で日本語は選択している）。\u003c/p\u003e","tags":["GitHub","AI"],"title":"CodeRabbit"},{"categories":null,"objectID":"e51b85cc103db219f54a40b5084e9497","permalink":"https://umemak.github.io/blog/posts/2023/11/02_lambda_prisma/","publish_date":"2023-11-02T00:00:00Z","summary":"\u003cp\u003e昨日、SSTでデプロイしてエラーになったので、\u003ca href=\"https://github.com/yarbsemaj/sveltekit-adapter-lambda\"\u003eyarbsemaj/sveltekit-adapter-lambda: An adapter to build a SvelteKit app into a lambda ready for deployment with lambda proxy via the Serverless Framework.\u003c/a\u003eを試してみた。\u003c/p\u003e\n\u003cp\u003e結果としては、やはりPrismaのエラーで落ちていた。\u003c/p\u003e\n\u003cp\u003eひとまずLambda諦めて動くものを作るのを優先しよう。\u003c/p\u003e","tags":["Lambda","Prisma"],"title":"LambdaとPrisma"},{"categories":null,"objectID":"1885f1b6284c7d521bbc1438d5a1b9c1","permalink":"https://umemak.github.io/blog/posts/2023/11/01_sst/","publish_date":"2023-11-01T00:00:00Z","summary":"\u003cp\u003eSvelteKitをAWSのLambdaで動かす方法を探していて、\u003ca href=\"https://kit.svelte.jp/docs/adapter-auto\"\u003eゼロコンフィグデプロイ • Docs • SvelteKit\u003c/a\u003eで\u003ca href=\"https://docs.sst.dev/start/svelte\"\u003eUse SvelteKit with SST | SST\u003c/a\u003eが紹介されていた。\u003c/p\u003e\n\u003cp\u003eSSTってSega Sound Teamしか知らないけど、Serverless Stackの略らしい（Tはどこから？）。\u003c/p\u003e\n\u003cp\u003eで、ドキュメントに沿って動かしてみたら、いい感じにデプロイできた。\u003c/p\u003e\n\u003cp\u003eが、\u003ca href=\"https://www.prisma.io/\"\u003ePrisma\u003c/a\u003eを使ったツールをデプロイしたら\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;PrismaClientInitializationError: Prisma Client could not find its \u003ccode\u003eschema.prisma\u003c/code\u003e. This is likely caused by a bundling step, which leads to \u003ccode\u003eschema.prisma\u003c/code\u003e not being copied near the resulting bundle. We would appreciate if you could take the time to share some information with us.\u0026rdquo;,\u003c/p\u003e","tags":["Serverless","SST"],"title":"SST入門"},{"categories":null,"objectID":"1c2c89ed402cc599dfbbf491831cdc8c","permalink":"https://umemak.github.io/blog/posts/2023/10/29_pnpm/","publish_date":"2023-10-29T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.okupter.com/blog/handling-auth-with-jwt-in-sveltekit\"\u003eSvelteKit の JWT を使用した認証と認可の処理 - Okupter\u003c/a\u003eを試してみようと思ったところ、\u003ccode\u003epnpm\u003c/code\u003eが何か気になったので調べた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://pnpm.io/\"\u003eFast, disk space efficient package manager | pnpm\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://zenn.dev/azukiazusa/articles/pnpm-feature\"\u003epnpm の特徴\u003c/a\u003eによると、npmの速いやつという理解。\u003c/p\u003e\n\u003cp\u003eインストールもnpmが入っていれば\u003ccode\u003enpm install -g pnpm\u003c/code\u003eで使えるようになる。\u003c/p\u003e","tags":["pnpm"],"title":"pnpm入門"},{"categories":null,"objectID":"5759ea3eac81d6c658d7abf6dcf802f1","permalink":"https://umemak.github.io/blog/posts/2023/10/10_fastapi/","publish_date":"2023-10-10T00:00:00Z","summary":"\u003cp\u003e昨日の続き。テストを流した時のエラーは、参考にしたサイトのものと一部バージョンが変わっているのが原因らしく。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.beex-inc.com/blog/rejoin-nasu\"\u003epytest-asyncio のモードのデフォルト値が変わったよ＆出戻りのご連絡｜基幹システムのクラウド移行・構築・導入支援のBeeX\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eを参考に\u003ccode\u003e@pytest.fixture\u003c/code\u003eを\u003ccode\u003e@pytest_asyncio.fixture\u003c/code\u003eに変更したら解消した。\u003c/p\u003e","tags":["FastAPI"],"title":"FastAPI入門2"},{"categories":null,"objectID":"20ab888d5c4914ec11241b8924808ee7","permalink":"https://umemak.github.io/blog/posts/2023/10/09_fastapi/","publish_date":"2023-10-09T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://zenn.dev/sh0nk/books/537bb028709ab9\"\u003eFastAPI入門\u003c/a\u003eをやってみた。\u003c/p\u003e\n\u003cp\u003e特にひっかかることなく進めたが、最後のテストがPASSしない。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker-compose run --entrypoint \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;poetry run pytest\u0026#34;\u003c/span\u003e demo-app\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e+\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e Building 0.0s \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e0/0\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e                                                                                              docker:default \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e+\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e Building 0.0s \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e0/0\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e                                                                                              docker:default \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e=======================================================\u003c/span\u003e test session starts \u003cspan style=\"color:#f92672\"\u003e========================================================\u003c/span\u003eplatform linux -- Python 3.9.17, pytest-7.4.2, pluggy-1.3.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erootdir: /src\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eplugins: anyio-3.7.1, asyncio-0.21.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003easyncio: mode\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003estrict\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecollected \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e items                                                                                                                   \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etests/test_main.py FF                                                                                                        \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e100%\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e=============================================================\u003c/span\u003e FAILURES \u003cspan style=\"color:#f92672\"\u003e=============================================================\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e_______________________________________________________ test_create_and_read _______________________________________________________\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003easync_client \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u0026lt;async_generator object async_client at 0x7f8d3374dca0\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    @pytest.mark.asyncio\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    async def test_create_and_read\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003easync_client\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt;       response \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e await async_client.post\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/tasks\u0026#34;\u003c/span\u003e, json\u003cspan style=\"color:#f92672\"\u003e={\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;テストタスク\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eE       AttributeError: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;async_generator\u0026#39;\u003c/span\u003e object has no attribute \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;post\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etests/test_main.py:41: AttributeError\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e__________________________________________________________ test_done_flag __________________________________________________________\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003easync_client \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u0026lt;async_generator object async_client at 0x7f8d3374ddc0\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    @pytest.mark.asyncio\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    async def test_done_flag\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003easync_client\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt;       response \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e await async_client.post\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/tasks\u0026#34;\u003c/span\u003e, json\u003cspan style=\"color:#f92672\"\u003e={\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;テストタスク2\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eE       AttributeError: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;async_generator\u0026#39;\u003c/span\u003e object has no attribute \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;post\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etests/test_main.py:56: AttributeError\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e=========================================================\u003c/span\u003e warnings summary \u003cspan style=\"color:#f92672\"\u003e=========================================================\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e.venv/lib/python3.9/site-packages/pydantic/fields.py:798\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  /src/.venv/lib/python3.9/site-packages/pydantic/fields.py:798: PydanticDeprecatedSince20: Using extra keyword arguments on \u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003eField\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e is deprecated and will be removed. Use \u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003ejson_schema_extra\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e instead. \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eExtra keys: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;example\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.4/migration/\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    warn\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e.venv/lib/python3.9/site-packages/pydantic/_internal/_config.py:267\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e.venv/lib/python3.9/site-packages/pydantic/_internal/_config.py:267\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e.venv/lib/python3.9/site-packages/pydantic/_internal/_config.py:267\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  /src/.venv/lib/python3.9/site-packages/pydantic/_internal/_config.py:267: PydanticDeprecatedSince20: Support \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e class-based \u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003econfig\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.4/migration/\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    warnings.warn\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eDEPRECATION_MESSAGE, DeprecationWarning\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e.venv/lib/python3.9/site-packages/pydantic/_internal/_config.py:317\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  /src/.venv/lib/python3.9/site-packages/pydantic/_internal/_config.py:317: UserWarning: Valid config keys have changed in V2:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  * \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;orm_mode\u0026#39;\u003c/span\u003e has been renamed to \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;from_attributes\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    warnings.warn\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003emessage, UserWarning\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e=====================================================\u003c/span\u003e short test summary info \u003cspan style=\"color:#f92672\"\u003e======================================================\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFAILED tests/test_main.py::test_create_and_read - AttributeError: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;async_generator\u0026#39;\u003c/span\u003e object has no attribute \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;post\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFAILED tests/test_main.py::test_done_flag - AttributeError: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;async_generator\u0026#39;\u003c/span\u003e object has no attribute \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;post\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e==================================================\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e failed, \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e warnings in 29.49s \u003cspan style=\"color:#f92672\"\u003e==================================================\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["FastAPI"],"title":"FastAPI入門"},{"categories":null,"objectID":"71b9eb9cb848e98ac626f08f1e3752a0","permalink":"https://umemak.github.io/blog/posts/2023/10/08_cloud_function_error/","publish_date":"2023-10-08T00:00:00Z","summary":"\u003cp\u003e久しぶりにデプロイ実行したら、エラーで中断してしまった。\u003c/p\u003e\n\u003cp\u003eエラーメッセージを見ると、いっこ前のイメージが見つからないみたいなやつで（コピペ紛失）、そういえばコスト削減しようとして、Storageのライフサイクルを1日とか最短にしたのを思い出した。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://cloud.google.com/functions/docs/troubleshooting?hl=ja#missing-gcr\"\u003eCloud Functions のトラブルシューティング  |  Google Cloud Functions に関するドキュメント\u003c/a\u003eはちょっと違うけど、関数を削除してやり直せば良さそうなので、そうした。\u003c/p\u003e","tags":["GCP"],"title":"Cloud Functionsのデプロイでエラー"},{"categories":null,"objectID":"837e1871d79445b9ce8a246a7cd1b95b","permalink":"https://umemak.github.io/blog/posts/2023/09/29_openapi_bundle/","publish_date":"2023-09-29T00:00:00Z","summary":"\u003cp\u003e一つのopenapi.yamlに定義を書いていると、ファイルが肥大化して管理というか編集が大変になる。\u003c/p\u003e\n\u003cp\u003eで、分割するには\u003ccode\u003e$ref\u003c/code\u003eを使って相対ファイル指定することで、外部ファイルを参照できる。\u003c/p\u003e\n\u003cp\u003eただ、Swagger UIでダウンロードしようとすると、ルートのファイルしか取れない（相対ファイルを辿ればとれるだろうけど面倒）。\u003c/p\u003e","tags":["OpenAPI"],"title":"OpenAPIのyamlを結合する"},{"categories":null,"objectID":"de4dca3acdc58bc504fc8e920e5e9281","permalink":"https://umemak.github.io/blog/posts/2023/08/02_az_windows/","publish_date":"2023-08-02T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://learn.microsoft.com/ja-jp/cli/azure/install-azure-cli\"\u003eAzure CLI をインストールする方法 | Microsoft Learn\u003c/a\u003eからインストーラーをダウンロードしてインストールしたら、32bit版で実行するたびにメッセージが出て気になったので、アンインストールして別の方法を探った。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/Azure/azure-cli/issues/18766\"\u003eSupport Azure CLI 64-bit on Windows · Issue #18766 · Azure/azure-cli\u003c/a\u003eでpip使ってインストールしたら回避できると書かれていたのでやってみたら、インストールに失敗する。\nエラーメッセージを見ると\u003c/p\u003e","tags":["Azure"],"title":"Windowsにazコマンドのインストール"},{"categories":null,"objectID":"04bf526e7ac1005d05ff044a3e100de1","permalink":"https://umemak.github.io/blog/posts/2023/08/01_prisma/","publish_date":"2023-08-01T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.softbank.jp/biz/blog/cloud-technology/articles/202210/gha-azure-ip/\"\u003eGitHub ActionsからAzure上のIPアドレス制限済みリソースにアクセスする｜クラウドテクノロジーブログ｜ソフトバンク\u003c/a\u003eを見ながらやってみた。\u003c/p\u003e\n\u003cp\u003e例だとSleepが10秒だけど、試した環境だとエラーになったので、15秒にしたら通った。\u003c/p\u003e\n\u003cp\u003eあと、\u003ccode\u003e--account-name\u003c/code\u003e指定ではアップロードできず、\u003ccode\u003e--connection-string\u003c/code\u003eで試したらできた。\u003c/p\u003e","tags":["Azure","GitHub"],"title":"GitHub ActionsでAzure Storage Blobにファイルをアップロードする"},{"categories":null,"objectID":"d2b69998eee174a70de20d21b8fd19a8","permalink":"https://umemak.github.io/blog/posts/2023/07/28_gh/","publish_date":"2023-07-28T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://zenn.dev/fusic/articles/336c5192d2f162\"\u003e開発を爆速化！GitHub CLIで覚えるべきコマンド5選\u003c/a\u003e を見て、便利そうだと思ったので導入してみた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egh pr create\u003c/code\u003eとか良さそうだと思ったのだけど、mainブランチでPRも作らずpushしているブランチ戦略だと意味がなかった。\u003c/p\u003e","tags":["GitHub"],"title":"ghコマンド入門"},{"categories":null,"objectID":"83d64b906d382924d7dbea45ed0381d6","permalink":"https://umemak.github.io/blog/posts/2023/07/24_ttrss_fly/","publish_date":"2023-07-25T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/serl/ttrss-fly\"\u003eserl/ttrss-fly\u003c/a\u003eを試してみた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eflyctl deploy\u003c/code\u003eのところでエラーになってしまう。\u003c/p\u003e\n\u003cp\u003eログを見ると、DBへの接続でエラーになっているように見える。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003epsql: error: invalid connection option \u0026ldquo;アプリ名?sslmode\u0026rdquo;\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eDB接続文字列は、\u003ccode\u003eflyctl postgres attach --app $PREFIX-ttrss $PREFIX-db\u003c/code\u003eで設定されているので問題ないと思うのだけど。\u003c/p\u003e\n\u003cp\u003eコマンドラインから変更してみようと思ったけど、変更するにはアプリのコンテナが起動する必要があるらしく、コンテナ起動時にエラーが出ているので変更できない。ように見える。\u003c/p\u003e","tags":[],"title":"Tiny Tiny RSSをfly.ioにデプロイ（失敗）"},{"categories":null,"objectID":"2e52e070faaafd35af8c419e1fb61fe8","permalink":"https://umemak.github.io/blog/posts/2023/07/24_ttrss/","publish_date":"2023-07-24T00:00:00Z","summary":"\u003cp\u003eRSSはInoreaderで読んでいるのだけれど、無料プランなので重複削除などが使えず、似たような記事が時間差で流れてきて目障りに思うことがある。\u003c/p\u003e\n\u003cp\u003eNGワードフィルタなんかは自前でかませているので、さらにDBを使って類似記事を無かったことにすれば良いのだけれど、慣れてない環境だと面倒。\u003c/p\u003e\n\u003cp\u003eそこでOSSでセルフホスト可能なRSSリーダーをググったら、\u003ca href=\"https://tt-rss.org/\"\u003eTiny Tiny RSS\u003c/a\u003eが見つかった。\u003c/p\u003e","tags":[],"title":"Tiny Tiny RSS"},{"categories":null,"objectID":"d5598b540b8108e27a88cc957c9ac8ea","permalink":"https://umemak.github.io/blog/posts/2023/07/03_compose/","publish_date":"2023-07-03T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/dp/ebook/2023/978-4-297-13572-0\"\u003eWEB+DB PRESS Vol.135 | Gihyo Digital Publishing\u003c/a\u003eを読んでいて、docker composeの設定例がcompose.yamlになっているのが気になってググったら、compose V2から推奨が変わったらしい。\u003c/p\u003e\n\u003cp\u003e時代に乗り遅れていた。\u003c/p\u003e\n\u003cp\u003e参考：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.docker.com/compose/compose-file/03-compose-file/\"\u003eThe Compose file | Docker Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/miroha/articles/whats-docker-compose-v2\"\u003eDocker Compose V2で変わったdocker-compose.ymlの書き方\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/minamijoyo/items/33c8a256d2916f554016\"\u003edockerfile_inlineでcompose.yamlにDockerfileをインラインで書く - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["docker"],"title":"docker composeのファイル名"},{"categories":null,"objectID":"5e7ede423d7980f0d1b94d4749cc4fab","permalink":"https://umemak.github.io/blog/posts/2023/07/01_prisma/","publish_date":"2023-07-01T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.memory-lovers.blog/entry/2021/10/13/113000\"\u003eTypeScript ORM「Prisma」のはじめかた - くらげになりたい。\u003c/a\u003eを見て、DBマイグレーション管理としてのPrismaを試してみた。\u003c/p\u003e\n\u003cp\u003e既存のDBスキーマを\u003ccode\u003eprisma pull\u003c/code\u003eで持って来られるというのを試したら、boolがtinyintになってしまうなどあったが、そこそこいい感じにできた。\u003c/p\u003e","tags":["Prisma"],"title":"Prisma"},{"categories":null,"objectID":"2639b278b860e453eb94fb8883df1c64","permalink":"https://umemak.github.io/blog/posts/2023/06/24_book_pdf/","publish_date":"2023-06-24T00:00:00Z","summary":"\u003cp\u003e定期購読しているSoftware DesignとかWeb+DB Pressはダウンロード形式としてPDFとEPUBを選べるのだけど、PDFで読むことが多い。\u003c/p\u003e\n\u003cp\u003e理由はEPUBをKindleで開いたときのレイアウト崩れがひどいのとハイライトができないから。\u003c/p\u003e\n\u003cp\u003eで、PDFを\u003ca href=\"https://github.com/elias-sundqvist/obsidian-annotator\"\u003eelias-sundqvist/obsidian-annotator: A plugin for reading and annotating PDFs and EPUBs in obsidian.\u003c/a\u003eで読むとき、見開きにしない縦スクロール設定にしていて、おそらく紙で見開きを想定しているであろう構成の場合とても読みにくい。\u003c/p\u003e","tags":[],"title":"技術書の読みにくさ"},{"categories":null,"objectID":"5dc777f98eb1fa343f0d94fc3fcedabd","permalink":"https://umemak.github.io/blog/posts/2023/05/24_github_actions_ko/","publish_date":"2023-05-24T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/ko-build/setup-ko\"\u003eko-build/setup-ko\u003c/a\u003e を使ったら簡単にできた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/kindle_xml_to_tsv/blob/main/.github/workflows/ko.yml\"\u003ehttps://github.com/umemak/kindle_xml_to_tsv/blob/main/.github/workflows/ko.yml\u003c/a\u003eで\u003ca href=\"https://github.com/umemak/kindle_xml_to_tsv/pkgs/container/kindle_xml_to_tsv%2Fkindle_xml_to_tsv-f222ca7f0849cd5cfa2ae78a69f0ff9a\"\u003ehttps://github.com/umemak/kindle_xml_to_tsv/pkgs/container/kindle_xml_to_tsv%2Fkindle_xml_to_tsv-f222ca7f0849cd5cfa2ae78a69f0ff9a\u003c/a\u003eこう。\u003c/p\u003e\n\u003cp\u003e最初実行したときに権限のエラーが出て、\u003ca href=\"https://blog.yukirii.dev/github-action-ghcr-push-error/\"\u003eGitHub Action で GHCR へのコンテナー イメージの Push が成功しない (permission_denied: write_package) - yukirii blog\u003c/a\u003eを参考に\u003ccode\u003eWrite\u003c/code\u003eにして再実行したらエラー解消した。\u003c/p\u003e\n\u003cp\u003eただ、最初の権限が\u003ccode\u003eAdmin\u003c/code\u003eだったし、エラー出つつも物はアップロードされていたので謎。\u003c/p\u003e","tags":["GitHub","ko","go"],"title":"GitHub Actionsでコンテナイメージを登録する"},{"categories":null,"objectID":"db0dc650b20aa6b4df382fb75eabcb8a","permalink":"https://umemak.github.io/blog/posts/2023/05/13_code_whisperer/","publish_date":"2023-05-13T00:00:00Z","summary":"\u003cp\u003eRust本の写経するときに、途中からCodeWhispererを有効にしてみた。\u003c/p\u003e\n\u003cp\u003eサンプルがGitHubに置いてあるからか、わりと的確な提案をしてくれてると思う。\u003c/p\u003e\n\u003cp\u003eただ、VS Codeのサジェストと混ざったりでよくわからない確定の仕方をしたりすることがあった。\u003c/p\u003e","tags":["rust","aws"],"title":"CodeWhisperer"},{"categories":null,"objectID":"2535ebcfc086b051ae27bcce7baabadf","permalink":"https://umemak.github.io/blog/posts/2023/05/13_rust_book/","publish_date":"2023-05-13T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B0BKK824ZW/\"\u003eAmazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本\u003c/a\u003eを6章まで進めた。\u003c/p\u003e\n\u003cp\u003eアマゾンのレビューでも書かれていたけど、急に説明が雑になるし、コードが長くなるにつれてどこを対象とした差分なのかがわかりにくくなる。\u003c/p\u003e\n\u003cp\u003e270ページまで進めて写経はあきらめた。\u003c/p\u003e\n\u003cp\u003e最後まで丁寧に作るか、6章がなければ良本になっていたかもしれない。\u003c/p\u003e","tags":["rust"],"title":"Rust本"},{"categories":null,"objectID":"d26bffd08c81d866c21a4f5362aa5c9c","permalink":"https://umemak.github.io/blog/posts/2023/05/09_rust_error/","publish_date":"2023-05-09T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B0BKK824ZW/\"\u003eAmazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本\u003c/a\u003eを進めていて、解消できないエラーで詰まる。\u003c/p\u003e\n\u003cp\u003e149ページから導入される\u003ccode\u003eValidate\u003c/code\u003eでエラー。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eerror: \u003cspan style=\"color:#a6e22e\"\u003ecannot\u003c/span\u003e find derive \u003cspan style=\"color:#66d9ef\"\u003emacro\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e`\u003c/span\u003eValidate\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e`\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e this scope\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e-\u0026gt; \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\\\u003c/span\u003erepositories.rs:\u003cspan style=\"color:#ae81ff\"\u003e31\u003c/span\u003e:\u003cspan style=\"color:#ae81ff\"\u003e63\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e31\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e#[derive(Debug, Serialize, Deserialize, Clone, PartialEq, Eq, Validate)]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e                                                               \u003cspan style=\"color:#f92672\"\u003e^^^^^^^^\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enote: \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e`\u003c/span\u003eValidate\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e`\u003c/span\u003e is imported here, but it is only a \u003cspan style=\"color:#66d9ef\"\u003etrait\u003c/span\u003e, without a derive \u003cspan style=\"color:#66d9ef\"\u003emacro\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e-\u0026gt; \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\\\u003c/span\u003erepositories.rs:\u003cspan style=\"color:#ae81ff\"\u003e8\u003c/span\u003e:\u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e8\u003c/span\u003e  \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003euse\u003c/span\u003e validator::Validate;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e     \u003cspan style=\"color:#f92672\"\u003e^^^^^^^^^^^^^^^^^^^\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e全然原因がわからず悩んでいたら、\u003ccode\u003eCargo.toml\u003c/code\u003eで\u003ccode\u003efeatures\u003c/code\u003eのスペルが間違っていた。。\u003c/p\u003e","tags":["rust"],"title":"Rustのエラー"},{"categories":null,"objectID":"9553485c77c7f5c4ee9105ff54143045","permalink":"https://umemak.github.io/blog/posts/2023/05/07_rust_error/","publish_date":"2023-05-07T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B0BKK824ZW/\"\u003eAmazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本\u003c/a\u003eを進めていて、解消できないエラーで詰まる。\u003c/p\u003e\n\u003cp\u003e136ページで暫定として入れている、\u003ccode\u003eOk(StatusCode::OK)\u003c/code\u003eが型の不一致エラー。\u003c/p\u003e\n\u003cp\u003eコメント通りならあとで取り除くから、いずれは解消するのだろうけど、それまではテストも通らない状態になるのでよくない。\u003c/p\u003e","tags":["rust"],"title":"Rustのエラー"},{"categories":null,"objectID":"586a8504a537d88c01f63f2e2ad30c48","permalink":"https://umemak.github.io/blog/posts/2023/05/06_rust/","publish_date":"2023-05-06T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B0BKK824ZW/\"\u003eAmazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本\u003c/a\u003eを見ながら。\u003c/p\u003e\n\u003cp\u003e上記の書籍はMacOSが前提で書かれているけど、Windowsでやっていく。\u003c/p\u003e\n\u003cp\u003e選択肢はとりあえず一番上のを選んで進んでいく。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003eQuick install via the Visual Studio Community installer\n(free for individuals, academic uses, and open source).\u003c/li\u003e\n\u003c/ol\u003e\u003c/blockquote\u003e\n\u003cp\u003eVisual Studioのインストールもデフォルト選択肢から変更なしで。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003eProceed with installation (default)\u003c/li\u003e\n\u003c/ol\u003e\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ rustc --version\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erustc 1.69.0 \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e84c898d65 2023-04-16\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["rust"],"title":"Rust再々々入門"},{"categories":null,"objectID":"ca9ad12bffd77d4879e5f98a92206cef","permalink":"https://umemak.github.io/blog/posts/2023/05/02_amazon_html/","publish_date":"2023-05-02T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://rpa-technologies.com/insights/web-scraping/\"\u003eスクレイピング禁止、一体なぜ？ できる方法は？ 法律面・技術面から解説 | RPA テクノロジーズ株式会社「BizRobo!（ビズロボ）」\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://teshi-learn.com/2020-08/amazon-scraping-regulation/\"\u003e【規約】Amazonのスクレイピングは本当に禁止？規約を確認してみた - しらすのStudy blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kykddaddyblog.com/2022/07/02/amazon_scraping/\"\u003eAmazonサイトのスクレイピングについて | DaddyBlog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e個人利用なら問題なさそうな気もするけど、面倒ごとに巻き込まれるのも嫌なので、ブラウザから手動でコピペ生活しよう。\u003c/p\u003e","tags":[],"title":"Amazonはスクレイピング禁止？"},{"categories":null,"objectID":"8217c965c148cff9f44e060f97c6c56b","permalink":"https://umemak.github.io/blog/posts/2023/05/01_amazon_html/","publish_date":"2023-05-01T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/umemak/asin2md\"\u003eumemak/asin2md\u003c/a\u003eで書籍情報取得しようとしたらできなくなってて、レスポンスの中身見たらなんか思ってたのと違うのになってた。\u003c/p\u003e\n\u003cp\u003e10日くらい前に使ったときは問題なかったので、キャンペーンのせいとかだったら良いのだけど。\u003c/p\u003e\n\u003cp\u003e恒久的に変わるといろいろやり直しになるので面倒。。\u003c/p\u003e","tags":["go"],"title":"Amazonの書籍ページパースできなくなった"},{"categories":null,"objectID":"c450fbd353109879cc249406e92c94c6","permalink":"https://umemak.github.io/blog/posts/2023/04/29_codecatalyst/","publish_date":"2023-04-29T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.publickey1.jp/blog/23/awsidecicdamazon_codecatalyst.html\"\u003eAWS上で開発環境一式、コードリポジトリからテンプレートコード、IDE、CI/CDパイプラインまでを丸ごと提供する「Amazon CodeCatalyst」が正式サービスに － Publickey\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eやってみた。\u003c/p\u003e\n\u003cp\u003eBuilder IDでログインを要求されたので、先日CodeWhisperer試すときに作ったのを使った。無駄にならなくてよかった。\u003c/p\u003e\n\u003cp\u003ealiasとspace nameを入力するところ、先にaliasを決めてからspace name作るうえに同じものを指定できないので、後から逆にしたいと思ってもできなかった。\u003c/p\u003e","tags":["aws"],"title":"Amazon CodeCatalyst使ってみる"},{"categories":null,"objectID":"bd7d8789a5a3f21091e6ba6d11401b01","permalink":"https://umemak.github.io/blog/posts/2023/04/27_podcast_vtt/","publish_date":"2023-04-27T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.itmedia.co.jp/news/articles/2304/26/news156.html\"\u003eポッドキャストをAIで書き起こし「LISTEN」　近藤淳也氏が立ち上げ - ITmedia NEWS\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e技術的には\u003ca href=\"https://rebuild.fm/search\"\u003eRebuild - Podcast by Tatsuhiko Miyagawa\u003c/a\u003eで見たことある感じだったけど、これ登録されてるPodcastの横断検索出来たらすごく便利なサービスかもしれない。\u003c/p\u003e\n\u003cp\u003emp3ダウンロードして、\u003ca href=\"https://alphacephei.com/vosk/\"\u003eVOSK Offline Speech Recognition API\u003c/a\u003eとかでテキスト化して、の前にタイムスタンプ情報が欲しいからVTT化ができるといいな、だれか作ってないかな。\u003c/p\u003e","tags":[],"title":"Podcastのテキスト化"},{"categories":null,"objectID":"12cc2f8358b3f2bfb011d7f0170f658f","permalink":"https://umemak.github.io/blog/posts/2023/04/24_davinch_resolve/","publish_date":"2023-04-24T00:00:00Z","summary":"\u003cp\u003eせっかく登録してダウンロードしたので、使ってみようと思い使ってみた。\u003c/p\u003e\n\u003cp\u003e編集中にクラッシュした。。\u003c/p\u003e\n\u003cp\u003ePublic Betaだから仕方ない部分もあるとは思うけど、安定版ダウンロードするにもまた個人情報の入力から始めないといけないのはなかなかハードルが高い。\u003c/p\u003e","tags":[],"title":"DaVinci Resolve 18.5 Public Beta"},{"categories":null,"objectID":"56a27a537b3c4c923b77ffdc26a4d18d","permalink":"https://umemak.github.io/blog/posts/2023/04/20_math/","publish_date":"2023-04-20T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/dp/ebook/2023/978-4-297-13450-1\"\u003eSoftware Design 2023年5月号 | Gihyo Digital Publishing\u003c/a\u003e\nの第1特集「AI・機械学習の理解が進む　Python×数学 ブートキャンプ」を読んだ。\u003c/p\u003e\n\u003cp\u003eちょっと使いどころがイメージできなくて、流し読みしただけになってしまった。\u003c/p\u003e\n\u003cp\u003e昔ならともかく、今は必要な機能を実装したツールやライブラリが充実しているから、まずはそういう既製品を使って、それでダメなら学ぶ感じかなぁ。\u003c/p\u003e","tags":[],"title":"数学"},{"categories":null,"objectID":"aca8081111c200f3ee72f43b7ac0331b","permalink":"https://umemak.github.io/blog/posts/2023/04/19_davinch_resolve/","publish_date":"2023-04-19T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://av.watch.impress.co.jp/docs/news/1493966.html\"\u003eDaVinci Resolve 18.5。音声を自動でテキスト化、字幕トラックに配置 - AV Watch\u003c/a\u003eなんかすごそう。\u003c/p\u003e\n\u003cp\u003eYogaに変えてからShotcutまだインストールしてなかったし、せっかくだから試してみることにした。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.blackmagicdesign.com/jp/products/davinciresolve\"\u003eDaVinci Resolve 18 | Blackmagic Design\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eダウンロードまでが結構苦労して、フォームの国が選択できなかったりした。\u003c/p\u003e\n\u003cp\u003eNordVPNのせいっぽく、ChatGPTも最近エラーになるのもこれのせいではないかという気がしている。\u003c/p\u003e","tags":[],"title":"DaVinci Resolve 18.5 Public Beta"},{"categories":null,"objectID":"a9acf8b60ae5a49ed30caa965c2c78b5","permalink":"https://umemak.github.io/blog/posts/2023/04/18_background_image/","publish_date":"2023-04-18T00:00:00Z","summary":"\u003cp\u003e2年位前に使ったことのある、背景画像を生成するサービスが見つからない。\u003c/p\u003e\n\u003cp\u003e水玉とかランダムなサイズで配置してくれるやつ。\u003c/p\u003e\n\u003cp\u003e似たようなので色違いを再生成したいんだけど、どうやってたどり着いたんだっけな。。\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e\u003ca href=\"https://bggenerator.com/\"\u003eBackground Generator - Create Unique and Random Background Images Online\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこれだ。ダウンロードしたファイルの名前から推測できた。\u003c/p\u003e","tags":[],"title":"背景画像の生成"},{"categories":null,"objectID":"f969aea54ed7566f915ee5fc15691a6e","permalink":"https://umemak.github.io/blog/posts/2023/04/16_code_whisperer/","publish_date":"2023-04-16T00:00:00Z","summary":"\u003cp\u003eVS Codeで試してみた。\u003c/p\u003e\n\u003cp\u003e拡張インストールして、接続は既存のSSOで、と思って進めたらうまく認証できず、AWS Builder IDを新しく作って連携したらいけた。\u003c/p\u003e\n\u003cp\u003eで、Goのファイルでコメント書いたらコードのひな型を出してくれるっぽいところまでは見れたのだけど、コメントの書き方がいまいちよくわからない。\u003c/p\u003e\n\u003cp\u003eむしろ雑に描いたコードのリファクタリングとかやって欲しいのだけど、そういうのは見つからなかった。\u003c/p\u003e","tags":["aws"],"title":"Amazon CodeWhisperer"},{"categories":null,"objectID":"2378ed7fa8f5f8413c0c58fc530c7c00","permalink":"https://umemak.github.io/blog/posts/2023/04/15_nordvpn/","publish_date":"2023-04-15T00:00:00Z","summary":"\u003cp\u003epCloudが遅いのが途中の経路にあるのだとすれば、バイパスできれば早くなるのではないかという予想で、VPNを経由してみることにした。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://nordvpn.com/ja/\"\u003eNordVPN\u003c/a\u003eと\u003ca href=\"https://surfshark.com/ja/\"\u003eSurfshark\u003c/a\u003eで迷ったけど、NordVPNにしてみた。\u003c/p\u003e\n\u003cp\u003e結果、pCloudのアップロードでメガ超えた。\u003c/p\u003e\n\u003cp\u003eただ、普段のブラウザ作業なんかは確実に遅くなっているので、pCloudだけVPN経由とかできればよいのだけど、うまくいかない（スプリットトンネリングでできそうだけど、よくわからない）。\u003c/p\u003e","tags":[],"title":"NordVPN"},{"categories":null,"objectID":"8d47c18678ae5b1f38c8af8e13931c86","permalink":"https://umemak.github.io/blog/posts/2023/04/13_cloudbeats/","publish_date":"2023-04-13T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.cloudbeatsapp.com/\"\u003eCloudBeats – Cloud Music Player\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003epCloudに対応しているということで、試してみた。\u003c/p\u003e\n\u003cp\u003eAndroid版は、フォルダ開いても何も表示されず。。\u003c/p\u003e\n\u003cp\u003eiOS版は開けたけれど、複数枚構成のアルバムに未対応（DISC1と2が混在）。\u003c/p\u003e\n\u003cp\u003eということでどちらもアンインストール。\u003c/p\u003e","tags":[],"title":"CloudBeats"},{"categories":null,"objectID":"dfccde7afc9dce2632444992836cac11","permalink":"https://umemak.github.io/blog/posts/2023/04/12_drupal/","publish_date":"2023-04-12T00:00:00Z","summary":"\u003cp\u003e記事で久しぶりに名前を見て、dockerイメージが用意されていたので動かしてみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://hub.docker.com/_/drupal\"\u003edrupal - Official Image | Docker Hub\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e上記ページのdocker-compose.ymlをコピペで試したら、バージョンが古かったので最新の10系で起動。\u003c/p\u003e\n\u003cp\u003e起動したけどセットアップ時にPostgreSQLへの接続がうまくいかず、MySQLに変更したらいけた。\u003c/p\u003e","tags":[],"title":"Drupal"},{"categories":null,"objectID":"a2c33cc265a8c28cd583bf570e79eefc","permalink":"https://umemak.github.io/blog/posts/2023/04/11_chatgpt/","publish_date":"2023-04-11T00:00:00Z","summary":"\u003cp\u003eChatGPTで、特定のワードに反応して回答してほしいと思うのだけど、その指示の仕方がわからない。\u003c/p\u003e\n\u003cp\u003eやろうとしているのは、細切れで送った文章がある程度たまった状態で、「ここまでで質問ある？」みたいな感じで。聞かれるまでは特に応答なしで貯めこんでほしい。\u003c/p\u003e\n\u003cp\u003e使いこなすのは難しい。\u003c/p\u003e","tags":[],"title":"ChatGPT"},{"categories":null,"objectID":"de4b27263586f10739db5702bd786f29","permalink":"https://umemak.github.io/blog/posts/2023/04/10_speech_to_text/","publish_date":"2023-04-10T00:00:00Z","summary":"\u003cp\u003eクラウドでVOICEVOXみたいなことができるサービスを探す。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cloud.google.com/text-to-speech?hl=ja\"\u003eText-to-Speech: 自然な音声合成  |  Google Cloud\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://azure.microsoft.com/en-us/products/cognitive-services/text-to-speech\"\u003eText to Speech – Realistic AI Voice Generator | Microsoft Azure\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/jp/polly/?nc=sn\u0026amp;loc=0\"\u003eAmazon Polly（深層学習を使用したテキスト読み上げサービス）| AWS\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e無料枠があるのはGCPだけかな？AWSのは最初の12カ月限定なので。\u003c/p\u003e\n\u003cp\u003e説明ページで試せるのもGCPだけで、応答速度もそんなに悪くない。\nちょっと試してみたい。\u003c/p\u003e","tags":[],"title":"VOICEVOX代替"},{"categories":null,"objectID":"f6f8afed1791ec5364ccce8e68ca7a8b","permalink":"https://umemak.github.io/blog/posts/2023/04/09_openai_api/","publish_date":"2023-04-09T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://zenn.dev/umyomyomyon/articles/5f07abe67a289b\"\u003eWhisper API, ChatGPT API, VOICEVOXを使ってAIと会話する\u003c/a\u003eを見てやってみた。\u003c/p\u003e\n\u003cp\u003e最初実行したときに\u003ccode\u003eopenai.error.RateLimitError\u003c/code\u003eのエラーで終了してしまい、まだ枠に余裕があるはずなのになぜ？と思ったけど、\u003ca href=\"https://qiita.com/kotattsu3/items/d6533adc785ee8509e2c\"\u003eOpenAI APIのエラー(openai.error.RateLimitError)について - Qiita\u003c/a\u003eによるとAPIを使うときはクレカの登録が必要らしい。\u003c/p\u003e","tags":[],"title":"OpenAIのAPIを使ってみる"},{"categories":null,"objectID":"0ab8e805b8a95099b2d5600d52d486fd","permalink":"https://umemak.github.io/blog/posts/2023/04/08_podman_desktop/","publish_date":"2023-04-08T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://podman-desktop.io/\"\u003ePodman Desktop - Containers and Kubernetes | Podman Desktop\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eYoga770i、まだコンテナ環境入れてなかったので、今回はpodmanを使ってみることにした。\u003c/p\u003e\n\u003cp\u003epodman desktopをインストールしただけではコンテナは使えず、podmanをインストールする必要がある。\u003c/p\u003e\n\u003cp\u003epodmanをインストールするには、Virtual Machine Platformを有効化する必要がある。\u003c/p\u003e","tags":[],"title":"podman desktop"},{"categories":null,"objectID":"5a782c913f49cc6a1a89ed145d1173b7","permalink":"https://umemak.github.io/blog/posts/2023/04/06_go_pdf/","publish_date":"2023-04-06T00:00:00Z","summary":"\u003cp\u003eObsidianにPDF放り込んで検索出来たらいいのにと思ったけど、そんな機能はなかったので、PDFからテキストを抽出してMDファイル作って、PDFへのリンク張るとかで代用できないかな、と。\u003c/p\u003e\n\u003cp\u003e試しにChatGPTに聞いてみたら、pdfcpuを使ったサンプルを生成してくれた。\u003c/p\u003e\n\u003cp\u003eでも存在しないメソッドを使っていて、指摘したら最新バージョンではこうでした、とまた存在しないメソッドを使った例を出してきた。\u003c/p\u003e","tags":[],"title":"PDFのテキスト抽出"},{"categories":null,"objectID":"d03079671d07a1ac1429eb5c8832ffff","permalink":"https://umemak.github.io/blog/posts/2023/04/05_kql/","publish_date":"2023-04-05T00:00:00Z","summary":"\u003cp\u003eAzure Container Appsのログ、ログストリームで何とかやってきたのだけれど、そろそろ検索もできるようになっておかないと駄目な感じになってきたので、KQLのチュートリアルを眺めてみた。\u003c/p\u003e\n\u003cp\u003eところで、どの記事も当たり前に使っている\u003ccode\u003eKusto\u003c/code\u003eって何？\nググってもよくわからなかったので、ChatGPTに聞いてみた。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eKustoは、Microsoft Researchによって開発され、2015年にAzure Data Explorerとして公開されました。\u003c/p\u003e","tags":[],"title":"KQL入門"},{"categories":null,"objectID":"d10d9e71bb9ee8a35bd76f9aab6169f1","permalink":"https://umemak.github.io/blog/posts/2023/04/04_pcloud/","publish_date":"2023-04-04T00:00:00Z","summary":"\u003cp\u003epCloudのアップロード速度、PCのアプリで表示されているのだけど、調子よくて500KB/s程度しか出ない。平均して200KB/s程度な感じ。\u003c/p\u003e\n\u003cp\u003eバッテリー駆動だとなぜか96KB/sまで。\u003c/p\u003e\n\u003cp\u003eレビュー記事見ても5MB/sとか出てるっぽいんだけどなぁ。リージョンをEUにしてるのとか関係あるのかなぁ。でもリージョン変更19.99USDかかるんだよなぁ。\u003c/p\u003e","tags":[],"title":"pCloud遅い"},{"categories":null,"objectID":"d5d887350c9d2c67c5f7d54c850dbeb8","permalink":"https://umemak.github.io/blog/posts/2023/04/03_anker/","publish_date":"2023-04-03T00:00:00Z","summary":"\u003cp\u003eYoga770iの電源が充電されたりされなかったりで、PDケーブルさしなおすと直ったりするので、別のケーブルに変えたら安定した。\u003c/p\u003e\n\u003cp\u003eもともと使っていたケーブルは\u003ca href=\"https://www.amazon.co.jp/gp/product/B093L5CMMT/\"\u003eAmazon.co.jp: Anker PowerLine III Flow USB-C \u0026amp; USB-C ケーブル Anker絡まないケーブル USB PD対応 シリコン素材採用100W Galaxy iPad Pro MacBook Pro/Air 各種対応 (1.8m ミッドナイトブラック) : パソコン・周辺機器\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e交換したのはたぶんPixel4に付属していたやつ。\nこれだとちょっと長さが足りないのが難点。\u003c/p\u003e","tags":[],"title":"Anker不信"},{"categories":null,"objectID":"b91ccb80ad3c15b15b444e6cb66270e8","permalink":"https://umemak.github.io/blog/posts/2023/04/02_yoga770i_reset/","publish_date":"2023-04-02T00:00:00Z","summary":"\u003cp\u003eInspiron13の初期化して、DELLのアプリとかマカフィーとか入ってなかったので、Yoga770iも初期化してみたら、付属アプリも再インストールされてしまった。\u003c/p\u003e\n\u003cp\u003eとりあえず通知がうるさいマカフィーとレノボバンデージはアンインストールしたけど、他にもいろいろあってどこまで消して大丈夫なのかわからない。\u003c/p\u003e","tags":[],"title":"Yoga770i初期化"},{"categories":null,"objectID":"9c85e6020a99bd10c59c07b1202bf99d","permalink":"https://umemak.github.io/blog/posts/2023/03/31_inspiron_reset/","publish_date":"2023-03-31T00:00:00Z","summary":"\u003cp\u003eYoga 770iでしばらく過ごして不便ない（ちょっとある）ので、Inspiron13は初期化することにした。\u003c/p\u003e\n\u003cp\u003e以前再インストールしたときに使ったUSBメモリが残っていたので、それのsetup.exe動かしてみたけどうまく動かない？いつの間にかアプリが終了していて再起動しても何も起こらず。\u003c/p\u003e\n\u003cp\u003e別の方法として、\u003ca href=\"https://pc.watch.impress.co.jp/docs/column/win11tec/1383967.html\"\u003e【Windows 11便利テク】PC不調の最終手段！Windows 11を初期化する2つの方法 - PC Watch\u003c/a\u003eを参考に初期化を実行してみた。\u003c/p\u003e","tags":[],"title":"Inspiron13初期化"},{"categories":null,"objectID":"d7b3230f249c5651419fff38be518884","permalink":"https://umemak.github.io/blog/posts/2023/03/30_magical/","publish_date":"2023-03-30T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/dp/ebook/2023/978-4-297-13449-5\"\u003eSoftware Design 2023年4月号 | Gihyo Digital Publishing\u003c/a\u003eの第2特集、「開発・設計」のパートで紹介されていた\u003ca href=\"https://shonenjumpplus.com/episode/3269754496555043141\"\u003e株式会社マジルミエ - 岩田雪花/青木裕 | 少年ジャンプ＋\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e最初の数話試し読みしてみたけど、アジャイル関係なく続きが気になったｗ\u003c/p\u003e","tags":[],"title":"株式会社マジルミエ"},{"categories":null,"objectID":"ce77b428605897202e5bc9ee2d59021b","permalink":"https://umemak.github.io/blog/posts/2023/03/29_cpu/","publish_date":"2023-03-29T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/dp/ebook/2023/978-4-297-13449-5\"\u003eSoftware Design 2023年4月号 | Gihyo Digital Publishing\u003c/a\u003eのCPU特集を読んだ。\u003c/p\u003e\n\u003cp\u003eNANDですべての論理演算ができる話懐かしい。\u003c/p\u003e\n\u003cp\u003e別の人が各章を書いているせいか、同じような話が繰り返し出てきてちょっとあれ。CISCとRISCのくだりとか。\u003c/p\u003e\n\u003cp\u003eGoでプログラム書くことが多いので、今となってはCPUの動作を意識したプログラミングはすることはないかな、と。\u003c/p\u003e","tags":[],"title":"CPU"},{"categories":null,"objectID":"d477b4a8fae577446a741d0a6e8a75c9","permalink":"https://umemak.github.io/blog/posts/2023/03/28_tailwind/","publish_date":"2023-03-28T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://tailwindcss.com/docs/installation/play-cdn\"\u003eTry Tailwind CSS using the Play CDN - Tailwind CSS\u003c/a\u003e\nを見ると、Node.jsとかフレームワークとか使わずにHTMLでも試せるみたいなので、ちょっと試してみた。\u003c/p\u003e\n\u003cp\u003eレイアウトとかよくわからないところはChatGPTに聞いたら、いい感じのサンプルも出してくれた。\u003c/p\u003e\n\u003cp\u003eたまに言ってることが前半と後半で違ってたりするけど、ChatGPTはこういうやってみる系の作業と相性が良い。\u003c/p\u003e","tags":["Tailwind"],"title":"Tailwind CSS"},{"categories":null,"objectID":"9150aace6ed9d754ad92df95981620f6","permalink":"https://umemak.github.io/blog/posts/2023/03/27_tailwind/","publish_date":"2023-03-27T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/dp/ebook/2023/978-4-297-13371-9\"\u003eWEB+DB PRESS Vol.133 | Gihyo Digital Publishing\u003c/a\u003eの特集を読んで興味を持った。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTailwind を使うと、HTML 上だけでスタイリングの作業が完結します。これは思いのほか大きな違いです。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eとはいえ、導入時の設定が大変そうだったり、レールから外れたことをしようとするとやっぱり面倒なことになりそうなのは仕方がないのだろうか。\u003c/p\u003e","tags":["Tailwind"],"title":"Tailwind CSS実践入門"},{"categories":null,"objectID":"41eaf3303ee2fbfc8031a4ebcafca9ea","permalink":"https://umemak.github.io/blog/posts/2023/03/26_cli/","publish_date":"2023-03-26T00:00:00Z","summary":"\u003cp\u003ev2がエラーになる件、Codespacesでも問題なかった。いよいよWindowsの問題な気がしてきた。\u003c/p\u003e\n\u003cp\u003e→上位ディレクトリの\u003ccode\u003ego.work\u003c/code\u003eに追加したら、\u003ccode\u003ego run\u003c/code\u003e時のエラーは解消した。\u003c/p\u003e\n\u003cp\u003eVS Code再起動したら、ソースのエラー表示も消えた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ego.work\u003c/code\u003eに原因あるとかわかりにくすぎる。。\u003c/p\u003e","tags":["go"],"title":"urfave/cliその2"},{"categories":null,"objectID":"fad90cc0999f9b0541622937f2d4728c","permalink":"https://umemak.github.io/blog/posts/2023/03/25_cli/","publish_date":"2023-03-25T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/dp/ebook/2023/978-4-297-13420-4\"\u003eGo言語プログラミングエッセンス | Gihyo Digital Publishing\u003c/a\u003eで紹介されていた、\u003ca href=\"https://github.com/urfave/cli\"\u003eurfave/cli: A simple, fast, and fun package for building command line apps in Go\u003c/a\u003eを使ってみたのだけど、エラーで動かない。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eno required module provides package github.com/urfave/cli/v2\u003c/code\u003eというエラー。v1だとエラーは出ない。v2とv3がダメ。\u003c/p\u003e\n\u003cp\u003e試しにGitpodで動かしてみたら、エラー出なかった。\u003c/p\u003e\n\u003cp\u003eWindowsの問題？\u003c/p\u003e","tags":["go"],"title":"urfave/cli"},{"categories":null,"objectID":"c1310af48768e30c3c4ccfdf82abfa5a","permalink":"https://umemak.github.io/blog/posts/2023/03/24_obsidian_annotator/","publish_date":"2023-03-24T00:00:00Z","summary":"\u003cp\u003e慣れてきたら、技術書は単ページ縦スクロールでも違和感なくなってきた。\u003c/p\u003e\n\u003cp\u003eむしろページをまたぐソースコードはこのほうが読みやすい。\u003c/p\u003e\n\u003cp\u003eページ内で2列になってるの（SoftwareDesignとか）はスクロールの戻りが必要になるのでイマイチ。\u003c/p\u003e","tags":[],"title":"obsidian-annotatorで読むPDF"},{"categories":null,"objectID":"e58c739bb608384b1b26a6ef81b9cfd9","permalink":"https://umemak.github.io/blog/posts/2023/03/23_obsidian_annotator/","publish_date":"2023-03-23T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/elias-sundqvist/obsidian-annotator\"\u003eelias-sundqvist/obsidian-annotator: A plugin for reading and annotating PDFs and EPUBs in obsidian.\u003c/a\u003e使ってみた。\u003c/p\u003e\n\u003cp\u003ePDFにハイライトつけられるようになるのは良い体験。開きなおしても続きから読める。\u003c/p\u003e\n\u003cp\u003e見開きで読もうとすると14インチでもちょっと小さいかな。\nフルスクリーン表示ができれば良いのだけど、惜しい。\u003c/p\u003e\n\u003cp\u003eもうしばらく使ってみようと思った。\u003c/p\u003e","tags":[],"title":"obsidian-annotator"},{"categories":null,"objectID":"fa1dba37e9f64240ec2c93264c451fa2","permalink":"https://umemak.github.io/blog/posts/2023/03/22_readablecode/","publish_date":"2023-03-22T00:00:00Z","summary":"\u003cp\u003e読み終わった。\u003c/p\u003e\n\u003cp\u003e新しい発見はいくつかあった気がするけど、ハイライト使えないと後から振り返れず忘れてしまう。\u003c/p\u003e\n\u003cp\u003ePDFメインで読書する人はこういうのどうしているんだろう。\u003c/p\u003e\n\u003cp\u003eスクショとって書き込みとか手数が多すぎてやりたくない。\u003c/p\u003e\n\u003cp\u003eEPUBはレイアウトがおかしくなることがあるのがストレスなので、PDF版があればPDFのほうを使いたい。\u003c/p\u003e","tags":[],"title":"リーダブルコード"},{"categories":null,"objectID":"458852b20b2e9171caa2bcee20029635","permalink":"https://umemak.github.io/blog/posts/2023/03/21_go_book/","publish_date":"2023-03-21T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/dp/ebook/2023/978-4-297-13420-4\"\u003eGo言語プログラミングエッセンス | Gihyo Digital Publishing\u003c/a\u003e読了。\u003c/p\u003e\n\u003cp\u003e紹介されていたツールで使ってみようと思ったものたち\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/mgechev/revive\"\u003emgechev/revive: 🔥 ~6x faster, stricter, configurable, extensible, and beautiful drop-in replacement for golint\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/urfave/cli\"\u003eurfave/cli: A simple, fast, and fun package for building command line apps in Go\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/uptrace/bun\"\u003euptrace/bun: SQL-first Golang ORM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ent/ent\"\u003eent/ent: An entity framework for Go\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eところでORMのベンチマークで、一覧にはsqlboilerが入っていたけど、ベンチマーク結果に入っていなかったのはなぜだろう。\u003c/p\u003e","tags":[],"title":"Go言語プログラミングエッセンス"},{"categories":null,"objectID":"b882a23973d26e736506d5e2b7963aca","permalink":"https://umemak.github.io/blog/posts/2023/03/20_github_release/","publish_date":"2023-03-20T00:00:00Z","summary":"\u003cp\u003eGoReleaserがモノリポだと課金が必要な件。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/release_test\"\u003eumemak/release_test\u003c/a\u003eでいろいろ試してみた。\u003c/p\u003e\n\u003cp\u003eクロスコンパイルや圧縮が不要なら\u003ca href=\"https://github.com/softprops/action-gh-release\"\u003esoftprops/action-gh-release: 📦 GitHub Action for creating GitHub Releases\u003c/a\u003eを使うのが簡単で良さそう。\u003c/p\u003e\n\u003cp\u003e今回の調査で、\u003ca href=\"https://github.com/x-motemen/gobump\"\u003ex-motemen/gobump: Bumps up Go program version\u003c/a\u003eが便利だと思った。\u003c/p\u003e","tags":[],"title":"GitHubのReleaseをActionsで"},{"categories":null,"objectID":"419191bb385adf105cf6b66cea813d6c","permalink":"https://umemak.github.io/blog/posts/2023/03/19_readablecode/","publish_date":"2023-03-19T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.oreilly.co.jp/books/9784873115658/\"\u003eO\u0026rsquo;Reilly Japan - リーダブルコード\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eKindle版がないので読んだことなかったのだけど、オライリーでPDFを買った。\u003c/p\u003e\n\u003cp\u003eまだ途中だけど、思ったより読みやすい。\nもっと早く買っておけばよかった。\u003c/p\u003e","tags":[],"title":"リーダブルコード"},{"categories":null,"objectID":"d5a6dd039cbc94ad0a96551af039b42a","permalink":"https://umemak.github.io/blog/posts/2023/03/18_astronvim/","publish_date":"2023-03-18T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://codezine.jp/article/detail/17529\"\u003e新世代Vim「Neovim」を多機能IDEに変身させる「AstroNvim 3.0.3」が登場|CodeZine（コードジン）\u003c/a\u003eで存在を知った。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://astronvim.com/\"\u003eGetting Started | AstroNvim\u003c/a\u003eに沿ってインストール。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/neovim/neovim/releases/tag/stable\"\u003eRelease Nvim release build · neovim/neovim\u003c/a\u003eからnvimもインストールしておく。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/tree-sitter/tree-sitter/releases/tag/v0.20.7\"\u003eRelease v0.20.7 · tree-sitter/tree-sitter\u003c/a\u003eも必要らしい。\u003c/p\u003e\n\u003cp\u003eアイコン文字を表示するために\u003ca href=\"https://www.nerdfonts.com/font-downloads\"\u003eNerd Fonts - Iconic font aggregator, glyphs/icons collection, \u0026amp; fonts patcher\u003c/a\u003eも必要。\u003c/p\u003e","tags":[],"title":"AstroNvim導入"},{"categories":null,"objectID":"51308091e62e96b44975d6e811567d91","permalink":"https://umemak.github.io/blog/posts/2023/03/17_goreleaser/","publish_date":"2023-03-17T00:00:00Z","summary":"\u003cp\u003eChatGPTに聞いてみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://golang.github.io/dep/\"\u003edep · Dependency management for Go\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e今はgo modに置き換わっている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://magefile.org/\"\u003eMage :: Mage\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/go-task/task\"\u003ego-task/task: A task runner / simpler Make alternative written in Go\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/constabulary/gb\"\u003econstabulary/gb: gb, the project based build tool for Go\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eメンテナンスされてない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eいまいちこれというのがないというか、GoReleaserがそれだけ便利なんだろうな。\u003c/p\u003e\n\u003cp\u003eそんな中で\u003ca href=\"https://songmu.jp/riji/entry/2017-10-18-go-tool-release-artifacts.html\"\u003eGoツールのビルドをおこない、GitHub Releasesにアップロードする | おそらくはそれさえも平凡な日々\u003c/a\u003eという記事を見つけて、やってみようと思う気持ち。\u003c/p\u003e","tags":[],"title":"GoReleaserの代替探し"},{"categories":null,"objectID":"c424b1bdd909447d0e0de45acaeac2e7","permalink":"https://umemak.github.io/blog/posts/2023/03/16_goreleaser/","publish_date":"2023-03-16T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://goreleaser.com/customization/monorepo/\"\u003eMonorepo - GoReleaser\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eモノレポで使うにはPro版じゃないとダメなんだね。\u003c/p\u003e\n\u003cp\u003eそんなに頻繁に使うわけじゃないから、課金体系が月額なのがちょっと。実行回数で課金なら手を出しやすいと思う。\u003c/p\u003e","tags":[],"title":"GoReleaserとモノレポ"},{"categories":null,"objectID":"7d4e86a0faf00687a3d7ad0e59d2a337","permalink":"https://umemak.github.io/blog/posts/2023/03/15_pcloud_api/","publish_date":"2023-03-15T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://docs.pcloud.com/\"\u003epCloud - Developers\u003c/a\u003eにAPIの説明があった。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/pCloud/pcloud-sdk-js\"\u003epCloud/pcloud-sdk-js: pCloud\u0026rsquo;s Javascript SDK\u003c/a\u003eもあるようだ。\u003c/p\u003e\n\u003cp\u003eこれ使って、いい感じのメディアプレーヤー作れないかと思ったけど、音楽ファイルのタグ情報をとるみたいな都合のいいAPIは用意されていないっぽい。\n残念。\u003c/p\u003e","tags":[],"title":"pCloudのAPI"},{"categories":null,"objectID":"1510e8ea219df58e1fd2e335e447dae5","permalink":"https://umemak.github.io/blog/posts/2023/03/14_pcloud/","publish_date":"2023-03-14T00:00:00Z","summary":"\u003cp\u003e最初はいい感じだと思ってたんだけど、モバイルアプリでアルバムタブの表示が、アーティストとアルバムごとになってしまうのがよくない。\u003c/p\u003e\n\u003cp\u003eDDRみたいに複数名義で構成されているアルバムは、名義の分だけリストができるという。。\u003c/p\u003e\n\u003cp\u003ePCのブラウザだと、一見アーティストとアルバムなんだけどリンク先がアルバムになっているからまだ許容範囲。\u003c/p\u003e","tags":[],"title":"pCloudのメディアプレーヤー"},{"categories":null,"objectID":"c40782a2bf4c6eaf41e8081f25370838","permalink":"https://umemak.github.io/blog/posts/2023/03/13_icedrive/","publish_date":"2023-03-13T00:00:00Z","summary":"\u003cp\u003eついでなのでIcedriveも試してみた。\u003c/p\u003e\n\u003cp\u003eアプリでフォルダ単位での再生はできたけど、別のフォルダ表示したりすると再生が止まってしまう。\u003c/p\u003e\n\u003cp\u003eメディアプレーヤーとして使うなら、やっぱりpCloudのほうが良さそう。\u003c/p\u003e","tags":[],"title":"Icedrive試用"},{"categories":null,"objectID":"b8122d04f950a5ac14ec3cdf864dcd57","permalink":"https://umemak.github.io/blog/posts/2023/03/12_pcloud/","publish_date":"2023-03-12T00:00:00Z","summary":"\u003cp\u003eリッピングしたCDのデータをS3に置いていたのだけど、S3ってダウンロードにも課金されるので気軽に再生しようという気になれなかった。\u003c/p\u003e\n\u003cp\u003eなので、ファイル転送に課金されないクラウドストレージへの移行を検討した。\u003c/p\u003e\n\u003cp\u003epCloudとIcedriveで迷ったけど、とりあえずpCloudを試してみることにした。\u003c/p\u003e\n\u003cp\u003eブラウザやアプリで再生ができるのが良さそう。\u003c/p\u003e","tags":[],"title":"pCloud試用"},{"categories":null,"objectID":"96e7ccae3cd23db59d5273ad4065d654","permalink":"https://umemak.github.io/blog/posts/2023/03/11_vim/","publish_date":"2023-03-11T00:00:00Z","summary":"\u003cp\u003eふと思い立って、VS Codeでやっているこのblogの更新をVimでできないかと試してみた。\u003c/p\u003e\n\u003cp\u003eまず最初にファイルを開くところで躓いた。\u003c/p\u003e\n\u003cp\u003eいつも前日のファイルをコピーしてリネームしてから始めているのだけど、その作業をVimでやろうとするとわからない。\u003c/p\u003e\n\u003cp\u003e開く前にコマンドでcpとmvすればできるけど、Vim上で完結したい。\u003c/p\u003e","tags":[],"title":"Vim再入門"},{"categories":null,"objectID":"4bc031c6ff2622ab00a8d30c45697d68","permalink":"https://umemak.github.io/blog/posts/2023/03/10_keyrepeat/","publish_date":"2023-03-10T00:00:00Z","summary":"\u003cp\u003eいつもキーボードのリピート速度は最速の設定にしているのだけど、Yoga 770iは設定をしてもいつの間にか遅くなっていて、体感的に明らかに遅いのに設定画面では最速になっているというおかしな状態。\u003c/p\u003e\n\u003cp\u003e調べると、\u003ca href=\"https://www.teradas.net/archives/12717/\"\u003eWindowsでキーリピート設定を強制的に上書きする方法（スリープ解除で初期値に戻る場合の対策） | TeraDas\u003c/a\u003eという記事が見つかって試してみた。\u003c/p\u003e\n\u003cp\u003e同じように設定を変更して、今のところ快適に過ごせている。\u003c/p\u003e","tags":[],"title":"キーボードリピート速度"},{"categories":null,"objectID":"1c01bc3d63e80447cdf34e4b5aff19e1","permalink":"https://umemak.github.io/blog/posts/2023/03/09_book/","publish_date":"2023-03-09T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/dp/ebook/2023/978-4-297-13420-4\"\u003eGo言語プログラミングエッセンス | Gihyo Digital Publishing\u003c/a\u003eを買った。\u003c/p\u003e\n\u003cp\u003e少し前に\u003ca href=\"https://gihyo.jp/dp/ebook/2023/978-4-297-13327-6\"\u003eAWSで実現するモダンアプリケーション入門 〜サーバーレス、コンテナ、マイクロサービスで何ができるのか | Gihyo Digital Publishing\u003c/a\u003eと\u003ca href=\"https://gihyo.jp/dp/ebook/2023/978-4-297-12957-6\"\u003e実践Node.js入門 ―基礎・開発・運用 | Gihyo Digital Publishing\u003c/a\u003eも買ったけど、まだ積んである状態。。\u003c/p\u003e\n\u003cp\u003e手元の資料によると、50冊ほど未読があるので、何とかしたい。けど技術書ってあまり飛ばし読みに向いてないよね。\u003c/p\u003e","tags":[],"title":"積読が増える"},{"categories":null,"objectID":"61232f7c3098e34521d629eda3fcc23b","permalink":"https://umemak.github.io/blog/posts/2023/03/08_github_app/","publish_date":"2023-03-08T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://news.yahoo.co.jp/articles/28008c1c2305af0e709b69362497967ac9bd4d0a\"\u003eモバイル版「GitHub」アプリがファイルの編集に対応、プルリクエストの作成もスマホで（Impress Watch） - Yahoo!ニュース\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eAndroid版を使ってみた。\u003c/p\u003e\n\u003cp\u003eいいと思う。あとは検索機能があればGitJournalから乗り換えられるかな。\u003c/p\u003e","tags":[],"title":"GitHubモバイルアプリに編集機能が追加された"},{"categories":null,"objectID":"3ebec808584776d761f328645e1429b4","permalink":"https://umemak.github.io/blog/posts/2023/03/07_abc/","publish_date":"2023-03-07T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B0BV11FTX9/\"\u003eSoftware Design (ソフトウェアデザイン) 2023年3月号 [雑誌] | Software Design 編集部 | コンピュータ・テクノロジー | Kindleストア | Amazon\u003c/a\u003eの第2特集を読んでいて出てきた「論理療法（ABC理論）」が気になったので調べてみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ja.wikipedia.org/wiki/%E8%AB%96%E7%90%86%E7%99%82%E6%B3%95\"\u003e論理療法 - Wikipedia\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eアルバート・エリス（Albert Ellis）が1955年に提唱した心理療法\u003c/li\u003e\n\u003cli\u003e出来事（A）、ビリーフ（Belief、信念）、結果（C）のビリーフ（B）のうち、非合理的なイラショナル・ビリーフを論駁する\u003c/li\u003e\n\u003cli\u003e出来事（A）があって結果（C）があるのではなく、間に信念体系（B）による解釈をはさんで、結果（C）が生じる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.counselorweb.jp/article/440972675.html\"\u003eABC理論とは｜論理療法(ABCDE理論) | カウンセラーWEB：心理学・カウンセリングの基礎知識\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://swingroot.com/abc-theory/\"\u003eABC理論とは｜認知行動療法でわかる人生が天国地獄になる秘密 - Web活用術。\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDとEを追加したABCDE理論というのもあるらしい。\u003c/p\u003e","tags":[],"title":"ABC理論"},{"categories":null,"objectID":"5e17e4464b44f651dedbb8df5074dfa7","permalink":"https://umemak.github.io/blog/posts/2023/03/06_yoga770i/","publish_date":"2023-03-06T00:00:00Z","summary":"\u003cp\u003eリフレッシュレートを90HzにしてJUDGE EYESやってみた。\u003c/p\u003e\n\u003cp\u003e30FPS程度だった。\u003c/p\u003e\n\u003cp\u003eこれはCPUだけじゃ厳しいということか。残念。\u003c/p\u003e","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"ca8bb6a11565ac679a4e28c78c2c8421","permalink":"https://umemak.github.io/blog/posts/2023/03/05_yoga770i/","publish_date":"2023-03-05T00:00:00Z","summary":"\u003cp\u003e少し使ってみての感想。\u003c/p\u003e\n\u003cp\u003eディスプレイ、なんかスマホの保護シート貼ったときみたいな見え方。\u003c/p\u003e\n\u003cp\u003eキーボードは左右の端から少し離れているので、端からの距離感で押すと間違う。\nホームポジションからの距離で押すなら大丈夫だと思う。\u003c/p\u003e\n\u003cp\u003eSSDの温度は上がっても45度くらい。平気で80度超えるInspironがやっぱりおかしいと思う。\u003c/p\u003e","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"4c3d1513df609357e5ca5d5106b8088e","permalink":"https://umemak.github.io/blog/posts/2023/03/04_yoga770i/","publish_date":"2023-03-04T00:00:00Z","summary":"\u003cp\u003e実際にモノを見るまで不安だったけれど、ちゃんとAmazonに書かれていた通りの仕様だった。Officeも入っているようだ（まだ起動してないけど）。\u003c/p\u003e\n\u003cp\u003e意外とタッチパッドのクリック音が大きい。\u003c/p\u003e\n\u003cp\u003eキーボードは特に違和感ないかな。\u003c/p\u003e\n\u003cp\u003eマカフィーがプリインストールされてる。\u003c/p\u003e\n\u003cp\u003eDellは初期化用のUSBドライブ作成ツールが提供されてたけど、Lenovoはどうなんだろう。あとで調べる。\u003c/p\u003e","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"4a06b7bf8dd9931fb4111001d8e9924c","permalink":"https://umemak.github.io/blog/posts/2023/03/03_lenovo_note/","publish_date":"2023-03-03T00:00:00Z","summary":"\u003cp\u003e朝見たらクーポンが復活していたので、注文した。\u003c/p\u003e\n\u003cp\u003eなおOfficeなしのほうはなぜか高騰している模様。\u003c/p\u003e\n\u003cp\u003e裏側どういうロジックになってるんだろう。。\u003c/p\u003e","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"7c17daa964ab1234e94ce4127ca19002","permalink":"https://umemak.github.io/blog/posts/2023/03/02_lenovo_note/","publish_date":"2023-03-02T00:00:00Z","summary":"\u003cp\u003eセールが始まって値段は元に戻っていた。が、クーポンがなくなっていた。\u003c/p\u003e\n\u003cp\u003eOfficeなしのほうも微妙に価格上下しているし、セール期間はまだあるから少し様子見してみよう。\u003c/p\u003e\n\u003cp\u003eそれはそれとして、型番が直販モデルと違うものが表示されているのだけど、スペック的には同じように見える。\nそして直販モデルと同じ型番でも出ていて、高い。先日上がった時と同じくらいの高さ。\u003c/p\u003e","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"af69dc24112bd604e3b8c39b550a2c10","permalink":"https://umemak.github.io/blog/posts/2023/03/01_lenovo_note/","publish_date":"2023-03-01T00:00:00Z","summary":"\u003cp\u003e今日見たら値段が上がっていた。25万て。直販より高いのはさすがに何かの間違いだと思いたい。\u003c/p\u003e\n\u003cp\u003eOfficeなしのほうはやや下がっていた。\u003c/p\u003e\n\u003cp\u003e明日のセール開始まで価格は維持されるのかどうか。\u003c/p\u003e","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"248c4e469aecf863e291776ad8e9dbcc","permalink":"https://umemak.github.io/blog/posts/2023/02/28_lenovo_note/","publish_date":"2023-02-28T00:00:00Z","summary":"\u003cp\u003e値段戻って下がらないなーって思ってたら、クーポンついてて、適用すると目標金額クリアしてるのに気づいてしまった。\u003c/p\u003e\n\u003cp\u003eこれは新生活セールのポイントアップキャンペーン始まったらポチってしまうか。\u003c/p\u003e","tags":[],"title":"Lenovo Yoga 770i"},{"categories":null,"objectID":"0a3eabee780a32a65af26847b4dc49b7","permalink":"https://umemak.github.io/blog/posts/2023/02/27_lenovo_note/","publish_date":"2023-02-27T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://news.yahoo.co.jp/articles/44ffc7b809cf824fce9b20e9cde224c7b7bbc282\"\u003eThinkPadの主要モデルに2023年モデル　第13世代CoreプロセッサやRyzen 7000シリーズを搭載して性能アップ（ITmedia PC USER） - Yahoo!ニュース\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eやっぱり先週安くなっていたのはこれの布石だったか、と思ったがThinkPadじゃない方のYogaは発表されていなかった。\u003c/p\u003e\n\u003cp\u003eじゃあ何で安かったのか、そして今週末のAmazonセールで安くなることはあるのか、楽しみ。\u003c/p\u003e","tags":[],"title":"Lenovoの新型ノートPC"},{"categories":null,"objectID":"93828d4f287ec1010c2d6406c0490c9b","permalink":"https://umemak.github.io/blog/posts/2023/02/26_unity/","publish_date":"2023-02-26T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B09V4Y8WJG\"\u003eメタバース進化論――仮想現実の荒野に芽吹く「解放」と「創造」の新世界 | バーチャル美少女ねむ | コンピュータ・IT | Kindleストア | Amazon\u003c/a\u003eを読んで、とりあえずVR機器がなくてもいけそうな\u003ca href=\"https://cluster.mu/\"\u003eメタバースプラットフォーム cluster（クラスター）\u003c/a\u003eに触ってみようと思い、\u003ca href=\"https://creator.cluster.mu/cck-worldcreatetutroial-home/\"\u003eUnity初心者におすすめ「自分だけの家をつくってみよう！ 」- Cluster Creators Guide\u003c/a\u003eをやってみた。\u003c/p\u003e\n\u003cp\u003eUnityの存在はもちろん知っていたけど、使うのはおそらく初めて。\u003c/p\u003e\n\u003cp\u003eインストールするのにVisualStudioとかAndroidStudioとか合わせてインストールしていって、最初の敷居が高いなと感じた。\u003c/p\u003e","tags":["unity"],"title":"Unity入門"},{"categories":null,"objectID":"20cfa7d02c45585a7d5b3e17bc978b35","permalink":"https://umemak.github.io/blog/posts/2023/02/25_github_security/","publish_date":"2023-02-25T00:00:00Z","summary":"\u003cp\u003ego.sum消したのにまたGitHubからメールが来た。\u003c/p\u003e\n\u003cp\u003e古い情報をもとにセキュリティチェックしているのかなぁ。\u003c/p\u003e\n\u003cp\u003eどうするのが正解なんだろう。\u003c/p\u003e","tags":["go"],"title":"go.sumを消してみた"},{"categories":null,"objectID":"f89e13c93d121ef1f39e4317a23ae2ee","permalink":"https://umemak.github.io/blog/posts/2023/02/24_github_security/","publish_date":"2023-02-24T00:00:00Z","summary":"\u003cp\u003eGitHubのセキュリティメールが最近頻繁に来て、古いテスト用のリポジトリだったので、アラート対象になっている\u003ccode\u003ego.sum\u003c/code\u003eファイルを消してみた。\u003c/p\u003e\n\u003cp\u003eこれが正しい対応なのかわからないけど、\u003ccode\u003ego.mod\u003c/code\u003eで指定しているバージョンより古いもののsumが書かれていて、\u003ccode\u003ego mod tidy\u003c/code\u003eしても消えず、ファイルを消して\u003ccode\u003ego mod tidy\u003c/code\u003eしたら復活するうえに、それがアラート対象になるのだから納得いかない。\u003c/p\u003e","tags":["go"],"title":"go.sumを消してみる"},{"categories":null,"objectID":"938c8f5e702dead0d03f74e2e5697a58","permalink":"https://umemak.github.io/blog/posts/2023/02/23_chromebook/","publish_date":"2023-02-23T00:00:00Z","summary":"\u003cp\u003eしばらく使っていなかったChromebookを初期化した。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eCtrl\u003c/code\u003e+\u003ccode\u003eAlt\u003c/code\u003e+\u003ccode\u003eShift\u003c/code\u003e+\u003ccode\u003er\u003c/code\u003eを長押し。キーボードがついてないCT100Pの場合は、設定画面にメニューがあった。\u003c/p\u003e\n\u003cp\u003eSofmapで買取査定検索したら、数百円にしかならないし、そう考えるとApple製品のリセールバリューはすごいなぁ、と。\u003c/p\u003e","tags":[],"title":"ChromebookをPowerwash"},{"categories":null,"objectID":"044f9162b611681435cd4a87b7a57449","permalink":"https://umemak.github.io/blog/posts/2023/02/22_github_ubuntu/","publish_date":"2023-02-22T00:00:00Z","summary":"\u003cp\u003e昨日の更新がエラーになっていて、\u003ca href=\"https://github.com/umemak/blog/actions/runs/4231721048\"\u003eadd post · umemak/blog@a834cf9\u003c/a\u003e見たら\u003ccode\u003eubuntu-18.04 environment is deprecated\u003c/code\u003eとのこと。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://zenn.dev/azu/articles/5ef880c04560cb\"\u003eGitHub Actionsのubuntu-18.04がDeprecatedとなったので、ubuntu-latestへマイグレーションする\u003c/a\u003e\nだいぶ前からアナウンスされていたらしい。\u003c/p\u003e","tags":[],"title":"GitHub Actionsのubuntuがdeprecatedでエラー"},{"categories":null,"objectID":"88632ce73ab7b8b74572b0683bf79060","permalink":"https://umemak.github.io/blog/posts/2023/02/21_metaverse/","publish_date":"2023-02-21T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.shoeisha.co.jp/campaign/award/result\"\u003eITエンジニア本大賞2023\u003c/a\u003eのビジネス書部門大賞だった\u003ca href=\"https://gihyo.jp/book/2022/978-4-297-12755-8\"\u003eメタバース進化論 ――仮想現実の荒野に芽吹く「解放」と「創造」の新世界：書籍案内｜技術評論社\u003c/a\u003eを読み始めた。\u003c/p\u003e\n\u003cp\u003eまだ半分くらい残ってるけど、どんなサービスがあってどんな技術が使われていて、どんな課題があってというところはわかりやすく説明されていると思う。\u003c/p\u003e\n\u003cp\u003eそしてInspiron13で龍が如く0をやって3D酔いしたのは、リフレッシュレートのせいかもしれない、Yoga 770iはOLEDモデルなら90Hzも選択できるのか、ということでもし買ったらそのあたりも試してみたい。\u003c/p\u003e","tags":[],"title":"メタバース進化論"},{"categories":null,"objectID":"cb2625fa053aeeaf1f3db9e38f159e31","permalink":"https://umemak.github.io/blog/posts/2023/02/20_notepc/","publish_date":"2023-02-20T00:00:00Z","summary":"\u003cp\u003eAmazonの欲しいものリストに入れてから値段が8%下がって、もう一段下がったらポチってしまいそう。。\u003c/p\u003e\n\u003cp\u003eこう安くなると何か裏があるのではないか（新製品が出るとか実はスペック違うものが送られてくるとか）と気になりもする。\u003c/p\u003e","tags":[],"title":"Yoga 770i"},{"categories":null,"objectID":"42bc39a638442fbf91ca77a9a537a361","permalink":"https://umemak.github.io/blog/posts/2023/02/19_ddd/","publish_date":"2023-02-19T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B0BRYWJTKW\"\u003eSoftware Design (ソフトウェアデザイン) 2023年2月号 [雑誌] | Software Design 編集部 | コンピュータ・テクノロジー | Kindleストア | Amazon\u003c/a\u003eのドメイン駆動設計入門と\u003ca href=\"https://www.amazon.co.jp/dp/B073GSDBGT\"\u003e現場で役立つシステム設計の原則 〜変更を楽で安全にするオブジェクト指向の実践技法 | 増田 亨 | コンピュータサイエンス | Kindleストア | Amazon\u003c/a\u003eをザッピングして読んでたらだいたい大事なことは似通っているなと思った。\u003c/p\u003e","tags":[],"title":"ドメイン駆動設計"},{"categories":null,"objectID":"eb89dd8d847708c6801d43d114c0fb87","permalink":"https://umemak.github.io/blog/posts/2023/02/18_surfacego2_win11/","publish_date":"2023-02-18T00:00:00Z","summary":"\u003cp\u003eやってみた。\u003c/p\u003e\n\u003cp\u003e最初、ダウンロードしてインストール中に空き容量不足で失敗した。\u003c/p\u003e\n\u003cp\u003eどれくらい空きがなければインストールできないかって最初に分かりそうなものだけど。\u003c/p\u003e\n\u003cp\u003eいくつかアプリ削除したりして容量空けて、再挑戦したら無事完了した。\u003c/p\u003e\n\u003cp\u003eなんかWindows10より全体的に動作が重いような。。\u003c/p\u003e\n\u003cp\u003eということでWindows10に戻してしまった。\u003c/p\u003e","tags":[],"title":"Surface Go2にWindows 11インストール"},{"categories":null,"objectID":"f163f0fa81c90b085d2d5fd63ffaa798","permalink":"https://umemak.github.io/blog/posts/2023/02/17_reflesh_token/","publish_date":"2023-02-17T00:00:00Z","summary":"\u003cp\u003e存在意義がわからなかったので、調べてみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.ibm.com/docs/ja/api-connect/2018.x?topic=tokens-refresh\"\u003eリフレッシュ・トークン - IBM Documentation\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこれが一番わかりやすいと思った。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eアクセストークンは頻繁にネットワーク上を流れるから、有効期限を短くする。\u003c/li\u003e\n\u003cli\u003eリフレッシュトークンは、アクセストークンが切れた時しかネットワーク上を流れないので、有効期限が長くても良い。\u003c/li\u003e\n\u003cli\u003eワンタイムで破棄するとより安全。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e存在理由は腑に落ちたけど、作り方とか持たせる情報がイマイチわからない。\u003c/p\u003e","tags":[],"title":"リフレッシュトークンについて調べた"},{"categories":null,"objectID":"e9072e1e9ce0692028f7c00783d87dca","permalink":"https://umemak.github.io/blog/posts/2023/02/16_notepc/","publish_date":"2023-02-16T00:00:00Z","summary":"\u003cp\u003e次に買いたいPCの候補が絞れてきた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHP ENVY x360 13-bf\u003c/li\u003e\n\u003cli\u003eLenovo Yoga 770i\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこの辺り。\n共通した特徴は2in1で2880x1800 OLED。\u003c/p\u003e\n\u003cp\u003e性能的にはYogaの方が上で、値段も2万5千くらい高い。\nMS Office要らないけど、何故かOfficeなしのほうが高い。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.microsoft.com/ja-jp/microsoft-365/p/office-personal-2021/CFQ7TTC0HHJB?culture=ja-jp\u0026amp;country=JP\u0026amp;activetab=pivot:%E6%A6%82%E8%A6%81tab\"\u003eOffice Personal 2021 を購入 - Microsoft Store\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e¥32,784 (税込)もするんだ。。でもSurface Go 2に付属のもアクティベートしてなくて困っていないから、本当にOffice不要なんだよなぁ。\u003c/p\u003e","tags":[],"title":"ノートPC"},{"categories":null,"objectID":"19e230a35057fe920fa43c83656e27cb","permalink":"https://umemak.github.io/blog/posts/2023/02/15_wikijs/","publish_date":"2023-02-15T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://qiita.com/kshinoapp/items/b377412979f574147cd9\"\u003edocker-compose.yml 一本で、日本語検索できるWiki.jsをサクッと構築する - Qiita\u003c/a\u003eという記事を見て、ローカル環境でやってみた。\u003c/p\u003e\n\u003cp\u003eなぜかログインした後認証されないという現象が起きて、ブラウザのシークレットモードだと普通に動いたので、昔使った時の古いバージョンの何かブラウザに残っていて悪さしている気がする。\u003c/p\u003e\n\u003cp\u003e→Cookie削除したら直った\u003c/p\u003e","tags":[],"title":"Wiki.js"},{"categories":null,"objectID":"740cf4a544f15ceb825dfbf89e8c45ce","permalink":"https://umemak.github.io/blog/posts/2023/02/14_format/","publish_date":"2023-02-14T00:00:00Z","summary":"\u003cp\u003e昨日、フォーマット途中でエラーになる件、ふと思い立ってUSB HUB使わずに直差しでやってみたら、エラーにならず80%超えるところまで来た。\u003c/p\u003e\n\u003cp\u003eぜひこのまま完走してほしいし、次のノートPCもTYPE-A端子がついているものにしたほうが良さそうな気がした。\u003c/p\u003e\n\u003cp\u003e→完走した。HUBのせいだったか。。電源もつないでいたのに。\u003c/p\u003e","tags":[],"title":"USB HDDのフォーマット2"},{"categories":null,"objectID":"46e306e49409b68d599edb8eda348a2e","permalink":"https://umemak.github.io/blog/posts/2023/02/13_format/","publish_date":"2023-02-13T00:00:00Z","summary":"\u003cp\u003eMacフォーマットの外付けHDDをWindowsにつないでNTFSフォーマットにした。\u003c/p\u003e\n\u003cp\u003eここまでは良かったのだけど、一度全削除しておこうと\u003ccode\u003eformat X: /fs:NTFS /p:1 /y\u003c/code\u003eを実行したら、途中でデバイスが見えなくなったなどというエラーで終了してしまった。\u003c/p\u003e\n\u003cp\u003eCrystalDiskInfoからは見えてるのに、エクスプローラーには表示されない。\u003c/p\u003e","tags":[],"title":"USB HDDのフォーマット"},{"categories":null,"objectID":"1e55945d1b1cfa720ce1b6383981fc56","permalink":"https://umemak.github.io/blog/posts/2023/02/12_find_delete/","publish_date":"2023-02-12T00:00:00Z","summary":"\u003cp\u003e空ファイルや空ディレクトリをまとめて削除したいときは\u003ccode\u003efind\u003c/code\u003eでいける。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ find . -empty -delete\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eこれでカレントディレクトリ配下の空ファイルおよび空ディレクトリが削除できる。\u003c/p\u003e\n\u003cp\u003eファイルだけとかディレクトリだけに絞りたいときは、\u003ccode\u003e-type\u003c/code\u003eを指定する。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ find . -type d -empty -delete\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ find . -type f -empty -delete\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e削除しないで対象だけ見たいときは、\u003ccode\u003e-delete\u003c/code\u003eの代わりに\u003ccode\u003e-print\u003c/code\u003eを指定する。\u003c/p\u003e","tags":[],"title":"空ファイルを削除するコマンド"},{"categories":null,"objectID":"1eb71ac03896bbaa70d23a8b135943cd","permalink":"https://umemak.github.io/blog/posts/2023/02/11_winmerge/","publish_date":"2023-02-11T00:00:00Z","summary":"\u003cp\u003efdupesにかける前に、明らかに同じようなファイルを削除するために\u003ca href=\"https://github.com/WinMerge/winmerge\"\u003eWinMerge/winmerge: WinMerge is an Open Source differencing and merging tool for Windows. WinMerge can compare both folders and files, presenting differences in a visual text format that is easy to understand and handle.\u003c/a\u003eを使った。\u003c/p\u003e\n\u003cp\u003eいい感じに削減できている。\u003c/p\u003e\n\u003cp\u003eそれでももまだファイルが多い。主にiTunes関連だけど、なんかヘッダのあたりだけ違ってるmp3があったり、mp3とm4a形式がそれぞれあったりで先は長そう。\u003c/p\u003e","tags":[],"title":"winmerge"},{"categories":null,"objectID":"8f72434e582344b2e9304fc98369c242","permalink":"https://umemak.github.io/blog/posts/2023/02/10_fdupes/","publish_date":"2023-02-10T00:00:00Z","summary":"\u003cp\u003e外付けHDDから取り出したファイル、明らかに重複があるのできれいにしてから再待避したい。\nということで良いツールがないか探して、\u003ca href=\"https://github.com/adrianlopezroche/fdupes\"\u003eadrianlopezroche/fdupes: FDUPES is a program for identifying or deleting duplicate files residing within specified directories.\u003c/a\u003eというのがあるようで、WSLでもaptでインストールできた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/fygar256/items/8a5bd5e2daea04c2b9a3\"\u003e重複ファイルを削除（Ubuntu) - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e実行してみると、ファイルリスト作成に結構時間がかかり、量は65万ファイルほど。\u003c/p\u003e","tags":[],"title":"fdupes"},{"categories":null,"objectID":"6adbb1a21649b9fa62c896c122884194","permalink":"https://umemak.github.io/blog/posts/2023/02/09_macmini/","publish_date":"2023-02-09T00:00:00Z","summary":"\u003cp\u003eMac mini(2006)をリモート操作するためにしたこと。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B00B2HORD6\"\u003eAmazon | UGREEN HDMI DVI 変換アダプタ オス-メス DVI-D 24+1 双方向伝送 1080P 金メッキ (DVI-D 24+1) | UGREEN | DVI-HDMIアダプタ 通販\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B07BKQBKJS\"\u003eAmazon | DTECH 2 - Pack HDMIバーチャル・ディスプレイ HDMI virtual display HDMI グラフィックカード 表示 GPU 検出監視 ダミープラグアダプタ 4K@60HZ | DTech | 家電＆カメラ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e画像出力がDVI端子なので、HDMIへの変換コネクタと、外部モニタを接続したことにするためのアダプタ。\u003c/p\u003e","tags":[],"title":"Mac miniとVNC"},{"categories":null,"objectID":"83f8ecc9c0f7500bf1c6c544b26a8b97","permalink":"https://umemak.github.io/blog/posts/2023/02/08_notepc/","publish_date":"2023-02-08T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://news.yahoo.co.jp/articles/c57bccc0b3d743d61a5398188c1801f4a982316e\"\u003eGeForce RTX 4090搭載でも薄型で静か。進化した16型ゲーミングノート「ROG Zephyrus M16」（Impress Watch） - Yahoo!ニュース\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://news.yahoo.co.jp/articles/5f69db16a4800e163fac6f3378d56faaf90e9fd0\"\u003eASUS、Core i9とRTX 4090搭載の16型/18型ゲーミングノート（Impress Watch） - Yahoo!ニュース\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e上位と下位の2モデル展開で、価格はそれぞれ62万9,800円、46万9,800円。\u003c/p\u003e","tags":[],"title":"ROG Zephyrus M16(2023)"},{"categories":null,"objectID":"4b0744073a544dcef6b7df844f34e000","permalink":"https://umemak.github.io/blog/posts/2023/02/07_macmini/","publish_date":"2023-02-07T00:00:00Z","summary":"\u003cp\u003eMac miniのOSを10.4.11から10.6.8にしようとしたら、インストーラーを実行するためには10.5を経由しないといけないらしく。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://support.apple.com/kb/DL1399?viewlocale=ja_JP\u0026amp;locale=ja_JP\"\u003eMac OS X v10.6.8 統合アップデート v1.1 (日本)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://support.apple.com/kb/DL866?viewlocale=ja_JP\u0026amp;locale=ja_JP\"\u003eダウンロード - Mac OS X 10.5.8 統合アップデート (日本)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e10.5.8Comboのインストールにも10.5要求される。。\u003c/p\u003e\n\u003cp\u003e10.5のインストーラー見つからないし、手詰まり感。\u003c/p\u003e","tags":[],"title":"Mac mini"},{"categories":null,"objectID":"05a2af07ce0148d8a2531f344be34c85","permalink":"https://umemak.github.io/blog/posts/2023/02/06_macmini/","publish_date":"2023-02-06T00:00:00Z","summary":"\u003cp\u003e昔のものを掘り出してきた。シリアル番号で検索したら、Early 2006だった。17年物。。\u003c/p\u003e\n\u003cp\u003eOSは10.4.11（Tiger）で、一応10.6.8までは対応しているらしい。\u003c/p\u003e\n\u003cp\u003eWebブラウザ（Safari、Firefox）で何かしようとしても、TLS証明書が検証できなくて？いちいち警告が出る。Chromeインストールしたいけどたどり着けない。\u003c/p\u003e","tags":[],"title":"Mac mini"},{"categories":null,"objectID":"aacbbd6fd99f61e528fe51b7e6e11c29","permalink":"https://umemak.github.io/blog/posts/2023/02/05_books/","publish_date":"2023-02-05T00:00:00Z","summary":"\u003cp\u003eKindleで5冊買ったらポイント増量とかいうキャンペーンが割と頻繁に開催されているおかげで、未読の本がどんどん増えていっている。\u003c/p\u003e\n\u003cp\u003eいつかはキャンペーンがあっても欲しいものがなくなってこれ以上増えなくなる・・・のだろうか。\u003c/p\u003e\n\u003cp\u003eKindleは基本的にはiPad airで読むようにしていて、理由はデバイス間の同期がずれることが割と頻繁にあるから。\u003c/p\u003e","tags":[],"title":"積ん読"},{"categories":null,"objectID":"d357bde010491af92cc85d052e81d24a","permalink":"https://umemak.github.io/blog/posts/2023/02/04_notepc/","publish_date":"2023-02-04T00:00:00Z","summary":"\u003cp\u003eいろいろ迷っているけど、まだ決めかねている。\u003c/p\u003e\n\u003cp\u003eそもそも前回Inspiron13を買ったときは、Surface Go 2だと画面サイズと処理能力に課題があったからで、現状そういった問題はないので、無理に次を決める必要はないのではないか、と。\u003c/p\u003e\n\u003cp\u003eとはいえ、ブルースクリーンの前科もあるので、急に壊れることも考慮して、定期的に今買うなら何かを検討するのは間違っていないはず。\u003c/p\u003e","tags":[],"title":"ノートPC検討"},{"categories":null,"objectID":"0af533e635f9c1d9b1bdd91d4c8e1735","permalink":"https://umemak.github.io/blog/posts/2023/02/03_macbookair/","publish_date":"2023-02-03T00:00:00Z","summary":"\u003cp\u003eAmazonよりヨドバシとかビックの方がポイント率高い。\u003c/p\u003e\n\u003cp\u003eそしてヨドバシやビックはCTOも選べる。\u003c/p\u003e\n\u003cp\u003eAmazonはメモリ8GBしか選択肢ないけど、16GBが選べるのは大きい。\u003c/p\u003e\n\u003cp\u003eAmazonは8GBで176,300円1,763ポイント、ヨドバシは16GBで221,400円11,070ポイント。\n実質3万5千円でメモリ倍増なら悪くない選択だけど、20万オーバーかー。\u003c/p\u003e","tags":[],"title":"M2 MacBook Air"},{"categories":null,"objectID":"3586e68338a85d3e70c4bb449a2e9321","permalink":"https://umemak.github.io/blog/posts/2023/02/02_notepc/","publish_date":"2023-02-02T00:00:00Z","summary":"\u003cp\u003eAmazonタイムセール祭りとは関係なく、M2 MacBook Airが安くなっていて悩む。\u003c/p\u003e\n\u003cp\u003eInspiron13もブルースクリーン再発してないし、まだ大丈夫かなぁ。。\u003c/p\u003e","tags":[],"title":"ノートPC"},{"categories":null,"objectID":"74582070ce5e97978907ed964987fc17","permalink":"https://umemak.github.io/blog/posts/2023/02/01_serverpod/","publish_date":"2023-02-01T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.publickey1.jp/blog/23/flutterdartserverpod_10dart.html\"\u003eFlutterのためのDart製サーバフレームワーク「Serverpod 1.0」正式リリース。Dartでサーバからクライアントまで開発可能に － Publickey\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eそういえばDartってFlutterからしか使ったことなかったな、コマンドラインからも使えるんだっけ？\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://dart.dev/tutorials/server/get-started\"\u003eGet started: Command-line and server apps | Dart\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003edart\u003c/code\u003eコマンドで実行できたし、実行ファイルの生成までできるというのを初めて知った。\u003c/p\u003e","tags":["dart"],"title":"Serverpod"},{"categories":null,"objectID":"ba72fddc120abfee3421292659ef5a4e","permalink":"https://umemak.github.io/blog/posts/2023/01/31_notepc/","publish_date":"2023-01-31T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://pc.watch.impress.co.jp/docs/news/1474474.html\"\u003eデル、第13世代Coreで16:10液晶搭載の個人向けノート「Inspiron」 - PC Watch\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e買う予定はないけど、ディスプレイが2560x1600なのがいいね。\u003c/p\u003e\n\u003cp\u003e明後日からのタイムセール祭りで掘り出し物があればいいなあ。CPUは13世代じゃなくても第12世代で十分な気がしている。\u003c/p\u003e\n\u003cp\u003eZephyrus M16はAmazonとASUSで表記が1920×1200になったり2560x1600になったりでどっちが正しいんだろう。。\u003c/p\u003e","tags":[],"title":"ノートPC"},{"categories":null,"objectID":"fd725a46cfbaa4370f800f374e309df9","permalink":"https://umemak.github.io/blog/posts/2023/01/30_refine/","publish_date":"2023-01-30T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://refine.dev/\"\u003erefine | Build your React-based CRUD applications, without constraints! | refine\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e自前のAPIでもいい感じに接続できるの？ちょっと気になる。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://refine.dev/docs/api-reference/core/providers/data-provider/\"\u003eData Provider | refine\u003c/a\u003eを書けばどんな形式でもイケる感じかな。OpenAPIのyamlから作ってくれたりしないかな。\u003c/p\u003e","tags":["react"],"title":"refine"},{"categories":null,"objectID":"7d543000c383746bf687df6ae98d7da0","permalink":"https://umemak.github.io/blog/posts/2023/01/29_musiclm/","publish_date":"2023-01-29T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.itmedia.co.jp/news/articles/2301/28/news056.html\"\u003eGoogle、テキストから音楽を生成する「MusicLM」発表　リリースはせず - ITmedia NEWS\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://google-research.github.io/seanet/musiclm/examples/\"\u003eMusicLM\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e出力はオーディオファイルみたいだけど、それだと生成物を調整するのが面倒そう。\n最近のDAWならいい感じにできるのかな。\u003c/p\u003e\n\u003cp\u003eそもそもMIDIデータで生成されれば活用できそう。ってすでにあったような。。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://magenta.tensorflow.org/\"\u003eMagenta\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこれは指示方法が違うから単純には比較できないか。\u003c/p\u003e\n\u003cp\u003eChatGPTに聞いてみたら、OpenAIの\u003ca href=\"https://openai.com/blog/musenet/\"\u003eMuseNet\u003c/a\u003eや\u003ca href=\"https://openai.com/blog/jukebox/\"\u003eJukebox\u003c/a\u003eを教えてくれた。\u003c/p\u003e","tags":["AI"],"title":"MusicLM"},{"categories":null,"objectID":"bc4a441491d7c4cb3ad3b8384e19438d","permalink":"https://umemak.github.io/blog/posts/2023/01/28_wasm/","publish_date":"2023-01-28T00:00:00Z","summary":"\u003cp\u003eGoでクロスコンパイルしてwasmバイナリ作ってブラウザで動かすとか、Rustの本で紹介されているのとか知っているけど、実際動かしたことはなかったので試してみる。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ja.wikipedia.org/wiki/WebAssembly\"\u003eWebAssembly - Wikipedia\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://webassembly.org/\"\u003eWebAssembly\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e言語\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://webassembly.org/getting-started/developers-guide/\"\u003eI want to… - WebAssembly\u003c/a\u003e\n意外と選択肢が少ない印象。その中にGoが入っているのも意外。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eとりあえず、Goでやってみる。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.kabuku.co.jp/developers/annoying-go-wasm\"\u003eGoのWASMがライブラリではなくアプリケーションであること - 株式会社カブク | 株式会社カブク\u003c/a\u003e\nGoでやるのはRustと比べて面倒らしい。\nそしてTinyGoなら面倒は解消されるらしい。\u003c/p\u003e","tags":["wasm"],"title":"WebAssembly入門"},{"categories":null,"objectID":"13552177aeb4210bea3869971d079b6e","permalink":"https://umemak.github.io/blog/posts/2023/01/27_grpc_filter/","publish_date":"2023-01-27T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://pkg.go.dev/go.einride.tech/aip/filtering\"\u003efiltering package - go.einride.tech/aip/filtering - Go Packages\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eを使おうとしてみたけれど、よくわからない。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/einride/aip-go/blob/master/filtering/parser_test.go\"\u003eaip-go/parser_test.go at master · einride/aip-go\u003c/a\u003eを見て、まずInitに文字列渡して、ParseでExprが作られるのはわかった。\nそのExprをWarkで見て回るところができず。\u003c/p\u003e\n\u003cp\u003eとりあえず、入力パターンを制限してstrings.Splitとかでしのいでおく。\u003c/p\u003e","tags":["gRPC"],"title":"einride/aip-go使ってみる"},{"categories":null,"objectID":"c5a6ccf6c24da74157cc05941345e1cc","permalink":"https://umemak.github.io/blog/posts/2023/01/26_grpc_filter/","publish_date":"2023-01-26T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://google.aip.dev/160\"\u003eAIP-160: Filtering\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eよくわからん。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://pkg.go.dev/go.einride.tech/aip/filtering\"\u003efiltering package - go.einride.tech/aip/filtering - Go Packages\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003egoならこれでパースできるのかな。\u003c/p\u003e","tags":["gRPC"],"title":"gRPCのfilterの書き方"},{"categories":null,"objectID":"9982a364c63e02798b8cb2687b63a494","permalink":"https://umemak.github.io/blog/posts/2023/01/25_ibmcloud/","publish_date":"2023-01-25T00:00:00Z","summary":"\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eYour IBM Cloud account xxxxx with IBMid email is now canceled.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eカード認証エラーで進めなくて本登録できなかったのが取り消されたっぽい。\u003c/p\u003e\n\u003cp\u003eその後登録したFly.ioも活用できてないしもったいないので何か作ろう。\u003c/p\u003e","tags":["IBM"],"title":"IBM Cloudからのメール"},{"categories":null,"objectID":"68c653eb6ec814b14284cf52b1ed007c","permalink":"https://umemak.github.io/blog/posts/2023/01/24_goreleaser/","publish_date":"2023-01-24T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://goreleaser.com/\"\u003eGoReleaser - GoReleaser\u003c/a\u003e使ってみた。\u003c/p\u003e\n\u003cp\u003eうまく動かなかった。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ go install github.com/goreleaser/goreleaser@latest\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ goreleaser init\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ goreleaser release --snapshot --rm-dist\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • starting release...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • loading config file                              file\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e.goreleaser.yaml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • loading environment variables\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • getting and validating git state\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • ignoring errors because this is a snapshot     error\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003egit doesn\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u0026#39;\u003c/span\u003et contain any tags. Either add a tag or use --snapshot\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • building...                                    commit\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ec555bfd95c67f41425d8155510f376d0015665eb latest tag\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ev0.0.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • pipe skipped                                   reason\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edisabled during snapshot mode\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • parsing tag\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • setting defaults\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • running before hooks\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • running                                        hook\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ego mod tidy\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • running                                        hook\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ego generate ./...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • took: 6s\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • snapshotting\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • building snapshot...                           version\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e0.0.1-next\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • checking distribution directory\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • loading go mod information\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • build prerequisites\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • writing effective config file\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • writing                                        config\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edist\u003cspan style=\"color:#ae81ff\"\u003e\\c\u003c/span\u003eonfig.yaml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  • building binaries\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • building                                       binary\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edist\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md_linux_386\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • building                                       binary\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edist\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md_linux_amd64_v1\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • building                                       binary\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edist\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md_windows_amd64_v1\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md.exe\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • building                                       binary\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edist\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md_darwin_amd64_v1\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • building                                       binary\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edist\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md_linux_arm64\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • building                                       binary\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edist\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md_windows_arm64\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md.exe\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • building                                       binary\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edist\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md_darwin_arm64\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    • building                                       binary\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edist\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md_windows_386\u003cspan style=\"color:#ae81ff\"\u003e\\a\u003c/span\u003esin2md.exe\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  ⨯ release failed after 6s                  error\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ebuild \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e asin2md does not contain a main \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eLearn more at https://goreleaser.com/errors/no-main\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://goreleaser.com/errors/no-main/#if-your-maingo-is-not-in-the-root-folder\"\u003eドキュメント\u003c/a\u003eによると、mainパッケージがルート以外のときはパスを指定しないといけないらしい。\u003c/p\u003e","tags":["go"],"title":"GoReleaser"},{"categories":null,"objectID":"a22636b223faec31a9d8fd5506a43453","permalink":"https://umemak.github.io/blog/posts/2023/01/23_gitjournal/","publish_date":"2023-01-23T00:00:00Z","summary":"\u003cp\u003eGitJournal使ってみて、Android版は編集モードとプレビューモードの切り替えで固まるのが気になるけど、編集モードのままで使っている分には問題なさそう。\niOS版は、編集モードの切り替えでは固まらないけど、ファイルの切り替えで固まる。\u003c/p\u003e\n\u003cp\u003eまぁどちらの問題も、デイリーノートを追記する通常の使用では問題ないかな。\u003c/p\u003e","tags":["obsidian","github"],"title":"GitJournal"},{"categories":null,"objectID":"fd129de30742f62cba817e2fe9b8e506","permalink":"https://umemak.github.io/blog/posts/2023/01/22_gitjournal/","publish_date":"2023-01-22T00:00:00Z","summary":"\u003cp\u003eObsidianのモバイル同期問題で、モバイル用の小さなリポジトリを作って使う運用にしていたが、これだと蓄積したノートの検索ができないことが地味に不便。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://play.google.com/store/apps/details?id=com.github.android\u0026amp;hl=ja\u0026amp;gl=US\"\u003eGitHub - Google Play のアプリ\u003c/a\u003eを入れてみたところ、検索機能がないという残念な結果。\u003c/p\u003e\n\u003cp\u003e他にもGitHubクライアントアプリないか探していたところで見つけたのが\u003ca href=\"https://gitjournal.io/\"\u003eGitJournal\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003eAndroid版入れてみて、問題なく検索できた。\u003c/p\u003e","tags":["obsidian","github"],"title":"GitJournal"},{"categories":null,"objectID":"249e4ace146e9ce9234dfe491963ae08","permalink":"https://umemak.github.io/blog/posts/2023/01/21_chromebook/","publish_date":"2023-01-21T00:00:00Z","summary":"\u003cp\u003eInspiron13のあと何にするか。Windowsはスリープからの復帰が遅いので、そういえばChromebookは速かったな、と。\u003c/p\u003e\n\u003cp\u003eChromebookといえどどうせなら第12世代以降のCoreプロセッサ搭載機で画面比は16:10でと絞り込むと\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://jp.store.asus.com/store/asusjp/ja_JP/pd/productID.5653242200\"\u003eASUS Store（エイスース ストア） - ASUS Chromebook Flip CX5 (CX5601FBA-MC0042)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.lenovo.com/jp/ja/p/laptops/thinkpad/thinkpad-c-series/thinkpad-c14-chromebook-enterprise-(14-inch-intel)/len101t0022\"\u003eThinkPad C14 Chromebook Gen 1 (第12世代インテル) | パワフルな14型Chromebook | レノボ・ ジャパン\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.acer.com/jp-ja/chromebooks/acer-chromebook-spin-714-cp714-1wn\"\u003eAcer Chromebook Spin 714（CP714-1WN） | 2-in-1 高性能 Evo Chromebook | Acer 日本\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://jp.ext.hp.com/prod/notebooks/business/elite_dragonfly_chromebook_enterprise/\"\u003eHP Elite Dragonfly Chromebook Enterprise | 日本HP\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.itmedia.co.jp/pcuser/articles/2301/04/news053.html\"\u003eHPが個人向けDragonflyやChromebookの新モデルを複数発表！　ビジネス向けDragonflyは第13世代Coreを採用：CES 2023 - ITmedia PC USER\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこんなところで。\nイマイチパッとしない。\u003c/p\u003e","tags":["chromebook"],"title":"Chromebook調査"},{"categories":null,"objectID":"1ebc5446b7b8125b018c5c3a41705e6b","permalink":"https://umemak.github.io/blog/posts/2023/01/20_grpc_connect/","publish_date":"2023-01-20T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/bufbuild/connect-go\"\u003ebufbuild/connect-go: Simple, reliable, interoperable. A better gRPC.\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eテスト用にgRPCのサーバーが欲しかったので、使ってみた。\u003c/p\u003e\n\u003cp\u003eREADMEに書いてあるサンプルのように作ったら、grpcurlでリフレクションのエラーになったので、\u003ca href=\"https://zenn.dev/rai_wtnb/articles/e07ad831ea8e34\"\u003e次世代gRPC?『connect-go』やってみた\u003c/a\u003eを参考にリフレクションを入れたら動いた。\u003c/p\u003e\n\u003cp\u003eついでにクライアントもConnectで書いてみた。\u003c/p\u003e\n\u003cp\u003eサーバーの指定をプロトコル込み（http://～/）で指定しないといけないのと、RequestとResponceにMsgを挟まないといけないので少しハマったけど、おおむね問題なさそう。\u003c/p\u003e","tags":["go","gRPC"],"title":"gRPC Connect"},{"categories":null,"objectID":"18e1adf3739875be8b9d79ec75526663","permalink":"https://umemak.github.io/blog/posts/2023/01/19_spring/","publish_date":"2023-01-19T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://spring.pleiades.io/guides/gs/spring-boot-docker/\"\u003eDocker で Spring Boot - 公式サンプルコード\u003c/a\u003eを見ながらやってみた。\u003c/p\u003e\n\u003cp\u003eローカルにJDKが入っていなかったので、Dockerでビルドしてみたところ、うまく動かず。。\u003c/p\u003e\n\u003cp\u003eリンクされている\u003ca href=\"https://start.spring.io/#!type=gradle-project\u0026amp;language=java\u0026amp;platformVersion=2.5.5\u0026amp;packaging=jar\u0026amp;jvmVersion=11\u0026amp;groupId=com.example\u0026amp;artifactId=spring-boot-docker\u0026amp;name=spring-boot-docker\u0026amp;description=Demo%20project%20for%20Spring%20Boot\u0026amp;packageName=com.example.spring-boot-docker\u0026amp;dependencies=web\"\u003eSpring Initializr\u003c/a\u003eで、Javaが11を選択されていたので、Dockerイメージも11を使ったのだが、Spring Initializrとイメージを17にしたら、通った。\n\u003cdel\u003e\u003ca href=\"https://spring.io/guides/gs/spring-boot-docker/\"\u003e英語版\u003c/a\u003eのリンクは何もオプションパラメータがついていなくて最初から17が選択されていたので、日本語版の変更が追いついていないだけなのかもしれない。\u003c/del\u003e\u003c/p\u003e","tags":["docker","Spring Boot"],"title":"DockerでSpring Boot"},{"categories":null,"objectID":"2ea34c9b96a177fbc893aa91e25cf17a","permalink":"https://umemak.github.io/blog/posts/2023/01/18_mac/","publish_date":"2023-01-18T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.apple.com/jp/newsroom/2023/01/apple-introduces-new-mac-mini-with-m2-and-m2-pro-more-powerful-capable-and-versatile-than-ever/\"\u003eApple、M2とM2 Proを搭載した新しいMac miniを発表 — これまで以上にパワフル、高性能、万能に - Apple (日本)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.apple.com/jp/newsroom/2023/01/apple-unveils-macbook-pro-featuring-m2-pro-and-m2-max/\"\u003eApple、M2 ProおよびM2 Maxを搭載したMacBook Proを発表 - Apple (日本)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこれで型落ちのM1搭載機が安くなるか？と期待してたら、ラインナップから消えていた。\u003c/p\u003e\n\u003cp\u003eとりあえず、発売日はまだ先なので。レビュー見てから判断しても良いかなと。\u003c/p\u003e","tags":["mac"],"title":"新型mac発表"},{"categories":null,"objectID":"38cdabcef68b2e36a52e31a8c5fa6ddd","permalink":"https://umemak.github.io/blog/posts/2023/01/17_go_mod_sum/","publish_date":"2023-01-17T00:00:00Z","summary":"\u003cp\u003e昨日の\u003ccode\u003ego build\u003c/code\u003eでエラーになって\u003ccode\u003ego run\u003c/code\u003eだと動く件、正確にはbuildのほうはmake経由での実行で、runは直接という違いがあった。\u003c/p\u003e\n\u003cp\u003egoのバージョン管理について、新しいバージョンが出たら\u003ca href=\"https://go.dev/doc/manage-install\"\u003eManaging Go installations - The Go Programming Language\u003c/a\u003eのように\u003ccode\u003ego install\u003c/code\u003eを使ってインストールしていて、aliasでインストールした先を\u003ccode\u003ego\u003c/code\u003eとしていた。\u003c/p\u003e","tags":["go"],"title":"goでmissing go.sum entry cacheエラー"},{"categories":null,"objectID":"fe98c60b3d513bd202e1263774903d40","permalink":"https://umemak.github.io/blog/posts/2023/01/16_go_mod_sum/","publish_date":"2023-01-16T00:00:00Z","summary":"\u003cp\u003e\u003ccode\u003ego build\u003c/code\u003eしようとすると\u003ccode\u003emissing go.sum entry cache\u003c/code\u003eなエラーが出る。\u003c/p\u003e\n\u003cp\u003eググっても\u003ccode\u003ego mod tidy\u003c/code\u003eすれば直る的なものしかヒットせず。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ego clean --modcache\u003c/code\u003eしてみてもダメ。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ego run\u003c/code\u003eだと実行できてしまうので余計訳が分からない。\u003c/p\u003e","tags":["go"],"title":"goでmissing go.sum entry cacheエラー"},{"categories":null,"objectID":"7e113e14be1f4337c1bbe2ce182a5cf0","permalink":"https://umemak.github.io/blog/posts/2023/01/15_macmini/","publish_date":"2023-01-15T00:00:00Z","summary":"\u003cp\u003eMacBookで書き込んだHDDがあって、HFSExplorerでWindowsから見れたのだけども、ファイルを取り出すのに時間がかかるので、そういえば古いmac miniがあったはず、と見つけたのは良かったが、ディスプレイ出力がDIVでモニタも発掘しないといけないのは大変なので諦めた。\u003c/p\u003e\n\u003cp\u003eDIV-HDMI変換アダプタ買うか思案中。。\u003c/p\u003e","tags":["mac"],"title":"mac mini発掘"},{"categories":null,"objectID":"129fc18575c42ff585a61deeeefd96a5","permalink":"https://umemak.github.io/blog/posts/2023/01/14_lowcode/","publish_date":"2023-01-14T00:00:00Z","summary":"\u003cp\u003e昨日調べていた中に、興味深いまとめサイトがあった。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.wasp.co.jp/blog/173\"\u003eオープンソースなローコード、ノーコードまとめ | WASP株式会社\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eよくこんなに集めたと感心して読むと、GitHubの\u003ca href=\"https://github.com/topics/low-code?o=desc\u0026amp;s=stars\"\u003elow-code · GitHub Topics\u003c/a\u003eがソースらしい。\nとはいえこれを精査していくのも結構な労力だったと思う。\u003c/p\u003e","tags":[],"title":"ローコード"},{"categories":null,"objectID":"699632b3565e0f95e1eb06ddce2e5b2d","permalink":"https://umemak.github.io/blog/posts/2023/01/13_budibase/","publish_date":"2023-01-13T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://internet.watch.impress.co.jp/docs/column/shimizu/1463483.html\"\u003eCSVファイルをもとに3分でウェブアプリ完成！ NASでも動くローコード開発環境「Budibase」【イニシャルB】 - INTERNET Watch\u003c/a\u003eで紹介されているのを見て面白そうだったので、調べてみる。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://budibase.com/\"\u003eBudibase | Build internal tools in minutes, the easy way\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/budibase/budibase\"\u003eBudibase/budibase: Low code platform for creating internal tools, workflows, and admin panels in minutes. Supports PostgreSQL, MySQL, MSSQL, MongoDB, Rest API, Docker, K8s, and more 🚀. Budibase, the low code platform you\u0026rsquo;ll enjoy using ⚡\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.wasp.co.jp/blog/194.html\"\u003e内部アプリを簡単に構築できるローコードプラットフォーム「budibase」 | WASP株式会社\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/yaasita/articles/81d66e588a5e04\"\u003eOSSなローコードツールBudibase\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://hashdork.com/ja/budibase-guide/\"\u003eBudibase-ステップバイステップガイド-HashDork\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e雰囲気はつかめたと思う。\u003c/p\u003e","tags":["Budibase"],"title":"Budibase入門"},{"categories":null,"objectID":"818660a89eecb2353c38e627df4d18bb","permalink":"https://umemak.github.io/blog/posts/2023/01/12_sveltekit/","publish_date":"2023-01-12T00:00:00Z","summary":"\u003cp\u003eチュートリアルのPart2まで終わった。\u003c/p\u003e\n\u003cp\u003eここまでの印象としては、「よくわからないけどルールに沿って書いていけばいい感じに動く」という、昔Ruby on Railsを触っていた時のような感じ。\u003c/p\u003e\n\u003cp\u003e用意されたレールに乗っている分には快適だけど、そこから外れようとすると苦労するというか。\u003c/p\u003e\n\u003cp\u003eまぁそれは既存のフレームワークとかもっといえば言語レベルでも起こりえることなので、何か起こるまでは敷かれたレールの上を効率よく行くのが良いと思う。\u003c/p\u003e","tags":["SvelteKit"],"title":"SvelteKit入門"},{"categories":null,"objectID":"4bf11bdd0193cda44409a5143ef824b2","permalink":"https://umemak.github.io/blog/posts/2023/01/11_sveltekit/","publish_date":"2023-01-11T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://kit.svelte.jp/\"\u003eSvelteKit • 効率的で無駄のない、研ぎ澄まされた Web 開発\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eVersion1.0に到達ということで、オンラインチュートリアルをやってみた（途中）。\u003c/p\u003e\n\u003cp\u003eファイル名の頭に\u003ccode\u003e+\u003c/code\u003e付けるのはなかなか見慣れない。\u003c/p\u003e\n\u003cp\u003eMUIも使えるっぽいので、チュートリアル終わたら何か作ってみたい。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.npmjs.com/package/svelte-mui\"\u003esvelte-mui - npm\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["SvelteKit"],"title":"SvelteKit入門"},{"categories":null,"objectID":"376d61baba2bcfc9725609d66e123f9e","permalink":"https://umemak.github.io/blog/posts/2023/01/10_asin2md/","publish_date":"2023-01-10T00:00:00Z","summary":"\u003cp\u003e著者がうまく取れない問題に対応できた。\u003c/p\u003e\n\u003cp\u003egoqueryの使い方がわかっていないだけだった。\u003c/p\u003e\n\u003cp\u003eとはいえ、そもそも同じ項目なのに違う表現をしていたamazonのページがどうしてそういう作りになったのかが疑問。\u003c/p\u003e\n\u003cp\u003e途中でデータ構造が変わったりしたのだろうか。\u003c/p\u003e","tags":["asin2md"],"title":"asin2md修正"},{"categories":null,"objectID":"2c7d7a4b943d787db6e584c3476403fc","permalink":"https://umemak.github.io/blog/posts/2023/01/09_asin2md/","publish_date":"2023-01-09T00:00:00Z","summary":"\u003cp\u003e売り上げがなくてPA-APIが使えなかったので、HTMLから抜き出すようにしてみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/umemak/asin2md\"\u003eumemak/asin2md\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eとりあえずKindleのASINから取り出してフロントマターに書き出した。\u003c/p\u003e\n\u003cp\u003e抽出には\u003ca href=\"https://github.com/PuerkitoBio/goquery\"\u003ePuerkitoBio/goquery: A little like that j-thing, only in Go.\u003c/a\u003eを使っている。\u003c/p\u003e\n\u003cp\u003eKindle以外はあまり試していないが、うまく取れない商品があることは認識している。\u003c/p\u003e\n\u003cp\u003eあと、著者のところが謎な構成になっていて、\u003ccode\u003espan.author.notFaded\u003c/code\u003eの直下にある場合と、もう一段\u003ccode\u003espan\u003c/code\u003eが入っている場合があった。\n直下にある方を先に処理しているので、ものによってはWebでの見た目の順番と入れ替わってしまう場合がある。\u003c/p\u003e","tags":["amazon"],"title":"ASINからMD生成する"},{"categories":null,"objectID":"1ac273d034a3ff4eb8f3c883fdb4a706","permalink":"https://umemak.github.io/blog/posts/2023/01/08_paapi/","publish_date":"2023-01-08T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://note.com/masuipeo/n/n69faf66a0f10\"\u003e「読んだ本」をObsidianで管理する｜masuipeo｜note\u003c/a\u003eで書かれている、PA-API（Product Advertising API）を使って情報取得をしてみようとした。\u003c/p\u003e\n\u003cp\u003eアソシエイトIDはだいぶ前に取得してあったので、それを使用して認証キーの発行はできた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://blog-and-destroy.com/14353\"\u003e【Amazon API】アクセスキーID・シークレットキー・アソシエイトタグの確認方法\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eで、Node.jsのSDKをダウンロードしてサンプルを実行してみたら、エラー。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eStatus Code: 429\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eError Object: \u0026#34;{\\\u0026#34;__type\\\u0026#34;:\\\u0026#34;com.amazon.paapi5#TooManyRequestsException\\\u0026#34;,\\\u0026#34;Errors\\\u0026#34;:[{\\\u0026#34;Code\\\u0026#34;:\\\u0026#34;TooManyRequests\\\u0026#34;,\\\u0026#34;Message\\\u0026#34;:\\\u0026#34;The request was denied due to \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erequest throttling. Please verify the number of requests made per second to the Amazon Product Advertising API.\\\u0026#34;}]}\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e売り上げがないと使えないらしい。。\u003c/p\u003e","tags":["amazon"],"title":"PA-API使ってみる"},{"categories":null,"objectID":"428faf9d713e46ba28147f886baabbbb","permalink":"https://umemak.github.io/blog/posts/2023/01/07_obsidian_sync/","publish_date":"2023-01-07T00:00:00Z","summary":"\u003cp\u003eデバイス間同期のためのリポジトリを新しく作成して、デイリーノートの直近の分を共有するようにしてみた。\u003c/p\u003e\n\u003cp\u003e定期的にPCでもとのリポジトリにコピペする運用にしようかと。\n振り返りにもなってちょうどいいと思う。\u003c/p\u003e\n\u003cp\u003eまだ1日目なので、同期の待ち時間や電池の減りは気にならない。\u003c/p\u003e\n\u003cp\u003eファイルが増えてきて同期に時間がかかるようになってきたら、またリポジトリを作り直せば良いかと。\u003c/p\u003e","tags":["obsidian"],"title":"Obsidian同期問題 Gitふたたび"},{"categories":null,"objectID":"b8aa39f35811ee13cf3254a611f8bb8a","permalink":"https://umemak.github.io/blog/posts/2023/01/06_obsidian_sync/","publish_date":"2023-01-06T00:00:00Z","summary":"\u003cp\u003eKeepとObsidian併用すると、Keepからコピーしたときに行末に余計な空白が入るのが気になる。\u003c/p\u003e\n\u003cp\u003eかといってVS Codeで空白を削除してコピペしなおすと何故かObsidian上では余計な改行が入るという・・\u003c/p\u003e\n\u003cp\u003eどうせKeep経由するなら、デバイス同期用の小さなVault作ってGitプラグインでやったほうが良いのではないかと。\u003c/p\u003e","tags":["obsidian"],"title":"Obsidian同期問題 Keepとコピペ"},{"categories":null,"objectID":"d1c3c5455643b10ee79a3ab11232aaf2","permalink":"https://umemak.github.io/blog/posts/2023/01/05_obsidian_sync/","publish_date":"2023-01-05T00:00:00Z","summary":"\u003cp\u003eなかなかこれといった方法が決まらない。\u003c/p\u003e\n\u003cp\u003e昔やっていたように、各デバイスはKeepに書き込んで、一日の最後にObsidianにまとめなおす運用が無難な気がしてきた。\u003c/p\u003e","tags":["obsidian"],"title":"Obsidian同期問題"},{"categories":null,"objectID":"d4fae1d845580104ab1df5515c67edb9","permalink":"https://umemak.github.io/blog/posts/2023/01/04_notepc/","publish_date":"2023-01-04T00:00:00Z","summary":"\u003cp\u003eAmazonの初売りで\u003ca href=\"https://www.amazon.co.jp/dp/B0B7JD1HWP/\"\u003eAmazon | ASUS 【16インチ・インテル最新高性能CPU・165Hz・RTX3060】 ゲーミングノートPC ROG Zephyrus M16 GU603ZM ( Core i7-12700H 16GB 512GB RTX3060 16型 WQXGA 165Hz ) GU603ZM-I7R3060E 【日本正規代理店品】 | ASUS | パソコン・周辺機器 通販\u003c/a\u003eが15%引きになってるじゃん。って思って買いそうになってたのだけど、\u003ca href=\"https://news.yahoo.co.jp/articles/57971cee6fab85ce77173b596c54d551e24556f3?source=rss\"\u003eIntel、ノートPCでも24コア/32スレッドを実現する第13世代Core（Impress Watch） - Yahoo!ニュース\u003c/a\u003eという記事が出てたのでちょっと様子見ようかと思いとどまっていた。\u003c/p\u003e","tags":[],"title":"ノートPC選択2023"},{"categories":null,"objectID":"53d26e312adb29d0e565b6c4f8118abf","permalink":"https://umemak.github.io/blog/posts/2023/01/03_flyio/","publish_date":"2023-01-03T00:00:00Z","summary":"\u003cp\u003eIBM Cloudが使えないので、\u003ca href=\"https://fly.io/\"\u003eDeploy app servers close to your users · Fly\u003c/a\u003eを試してみた。\u003c/p\u003e\n\u003cp\u003eFly.ioあまり聞いたことなかったけど、Heroku的な立ち位置らしい。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/vrtmrz/obsidian-livesync/discussions/85#discussion-4186670\"\u003eFly.io for self hosting CouchDB · Discussion #85 · vrtmrz/obsidian-livesync\u003c/a\u003eの通りにやっていたたら、あっさり動いた。\u003c/p\u003e\n\u003cp\u003e一か所、\u003ccode\u003e6. Create data volume\u003c/code\u003eのところのコマンドが\u003ccode\u003efly\u003c/code\u003eだったのを\u003ccode\u003eflyctl\u003c/code\u003eにする必要があった。\u003c/p\u003e","tags":["Fly.io"],"title":"Fly.io"},{"categories":null,"objectID":"9d6a73b336840830eb2e46ce7c5f127c","permalink":"https://umemak.github.io/blog/posts/2023/01/02_ibm_cloud/","publish_date":"2023-01-02T00:00:00Z","summary":"\u003cp\u003e自前でCouchDB動かすのはいったんあきらめて、\u003ca href=\"https://github.com/vrtmrz/obsidian-livesync/blob/main/docs/setup_cloudant_ja.md\"\u003eobsidian-livesync/setup_cloudant_ja.md at main · vrtmrz/obsidian-livesync\u003c/a\u003eにあるようにIBM Cloudを使おうとした。\u003c/p\u003e\n\u003cp\u003eアカウント登録時のクレジットカード認証が通らない。。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eエラー\u003c/p\u003e\n\u003cp\u003e注文できませんでした。 クレジット・カードの認証に関する問題です。 要求を処理できません。トランザクションが拒否されました。 詳細については、Cloud Trust Enablement (\u003ca href=\"mailto:verify@us.ibm.com\"\u003everify@us.ibm.com\u003c/a\u003e) までお問い合わせください。\u003c/p\u003e","tags":["IBM"],"title":"IBM Cloud"},{"categories":null,"objectID":"a901a6212ad835e329013828187b15fa","permalink":"https://umemak.github.io/blog/posts/2023/01/01_obsidian_sync/","publish_date":"2023-01-01T00:00:00Z","summary":"\u003cp\u003eObsidian Self-hosted LiveSyncプラグイン を試してみた。\u003c/p\u003e\n\u003cp\u003e手始めに、ラズパイでサーバー起動しようとしたら、対応しているDockerイメージが無かった。\u003c/p\u003e\n\u003cp\u003eせっかくなので、OSを64bit版に入れなおして、動くようにした。\u003c/p\u003e\n\u003cp\u003eWindowsPCでクライアント側のプラグインを入れても設定が表示されず、無効にしてみたり他のプラグイン向こうにしたりしてみたけど、OS再起動したら直った。\u003c/p\u003e","tags":["obsidian"],"title":"Obsidian同期問題"},{"categories":null,"objectID":"45e5cc5fb85cef2a869a81ff3a0ccc27","permalink":"https://umemak.github.io/blog/posts/2022/12/31_github2022/","publish_date":"2022-12-31T00:00:00Z","summary":"\u003cp\u003e今年のGitHub毎日更新チャレンジは、2日足りず。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"../31_github2022_1.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003e来年は完走したい。\u003c/p\u003e","tags":["GitHub"],"title":"GitHub草2022"},{"categories":null,"objectID":"80d2803079553ac3c7674ff26fca3d6a","permalink":"https://umemak.github.io/blog/posts/2022/12/31_obsidian_sync/","publish_date":"2022-12-31T00:00:00Z","summary":"\u003cp\u003eiPhoneの電池消費が結構やばい。\u003c/p\u003e\n\u003cp\u003e別の方法考えたほうがいいかも。。\u003c/p\u003e\n\u003cp\u003eWindowsPCとiPhoneとiPadとAndroidで同期とるのはどうするのが良いのだろう。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://pouhon.net/obsidian-sync/6796/\"\u003eObsidianの複数端末同期方法まとめ (Mac/Windows/iOS/Android)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eを見ると、Obsidian Self-hosted LiveSyncプラグインも良さそう。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://blog.vrtmrz.net/2021/10/obsidian-livesync-1/\"\u003eObsidianのプラグインを作りました\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/vrtmrz/obsidian-livesync/blob/main/README_ja.md\"\u003eobsidian-livesync/README_ja.md at main · vrtmrz/obsidian-livesync\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eを読んだ感じ、Gitと同じ問題は起こりそうな気もする。とりあえず試してみるにはCouchDBを用意しないといけないのが面倒。。\nFirebaseで同じようなことできそうだけど、どうだろう。\u003c/p\u003e","tags":["obsidian"],"title":"Obsidian同期問題"},{"categories":null,"objectID":"f6ed536233365e301b3c5316d855a145","permalink":"https://umemak.github.io/blog/posts/2022/12/30_obsidian_mobile/","publish_date":"2022-12-30T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/denolehov/obsidian-git\"\u003edenolehov/obsidian-git: Backup your Obsidian.md vault with git\u003c/a\u003eを使ってデバイス間の同期をとっているのだけど、iPhone8もPixel4も結構時間がかかる。iPad air4も遅いけどまあ許容範囲。\u003c/p\u003e\n\u003cp\u003eまだディレクトリ構成とか試行錯誤しているので毎回差分が多いというのもあるけど、思いついたときに書き込める手軽さが損なわれるのはつらい。\u003c/p\u003e\n\u003cp\u003eとりあえず書き込んでおいて、あとでコンフリクトを何とかするというのも手だけど、スマホの小さい画面でコンフリクト解消するの大変そう。\u003c/p\u003e","tags":["obsidian"],"title":"スマホObsidian"},{"categories":null,"objectID":"4b61849fb5a0b1105b4273670d85e6ba","permalink":"https://umemak.github.io/blog/posts/2022/12/29_keep2md/","publish_date":"2022-12-29T00:00:00Z","summary":"\u003cp\u003eGoogle KeepのエクスポートしたJSONをマークダウンファイルに変換する部分は一応できた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/keep2md\"\u003eumemak/keep2md\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e一応というのは、本文が\u003ccode\u003etextContent\u003c/code\u003eに出力されているものしか対応していないし、プラグインにもしていないから。\u003c/p\u003e\n\u003cp\u003eチェックボックスとか使うと別の項目名になるので、取れていない。\u003c/p\u003e\n\u003cp\u003e自分の用途だとこれでほぼ変換できたので、この先の実装を進めるかどうかはいったん保留。\u003c/p\u003e","tags":["obsidian"],"title":"keep2md"},{"categories":null,"objectID":"d63da5473f4db35fa2446201516f3776","permalink":"https://umemak.github.io/blog/posts/2022/12/28_keep2md/","publish_date":"2022-12-28T00:00:00Z","summary":"\u003cp\u003eGoogle KeepのエクスポートしたJSONをマークダウンファイルに変換するプラグインが見つからないので、作ってみることにした。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/estra/articles/obsidian-plugin-dev_1\"\u003eゼロから始めるObsidianプラグイン開発-01\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこの記事が参考になりそう。\u003c/p\u003e\n\u003cp\u003e言語はTypeScriptで作るようだ。\u003c/p\u003e\n\u003cp\u003eまずは変換処理をライブラリとして実装するところからやったほうが良いかな。\u003c/p\u003e","tags":["obsidian"],"title":"Obsidianのプラグインに入門"},{"categories":null,"objectID":"20e4a97f3fcae49745e6f536ab70c0f4","permalink":"https://umemak.github.io/blog/posts/2022/12/27_keep2obsidian/","publish_date":"2022-12-27T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://support.google.com/keep/answer/10017039?hl=ja\"\u003eGoogle Keep からデータをエクスポートする - Google Keep ヘルプ\u003c/a\u003e\nでエクスポートしたデータ、htmlとjson形式で、そのままObsidianに貼り付けて移行終わりということにはならず。\u003c/p\u003e\n\u003cp\u003ehtml表示してもインデントが表現されてなくて結局Keepでひとつづつ開いてコピペな感じ。\u003c/p\u003e\n\u003cp\u003e900ファイルくらいあるので、もうちょっと何とかしたい。\u003c/p\u003e","tags":["obsidian"],"title":"Google KeepからObsidianに移行"},{"categories":null,"objectID":"a2bcd600665886b85a568a5b66d4319f","permalink":"https://umemak.github.io/blog/posts/2022/12/26_obsidian/","publish_date":"2022-12-26T00:00:00Z","summary":"\u003cp\u003eObsidian一時期使っていたけど、Google Keepで良いのでは？となってKeepをメモアプリとして運用していた。\u003c/p\u003e\n\u003cp\u003eKeepの検索で検索しきれない気がしていて、別のアプリを模索していたところ、Obsidian git プラグインが面白そうだったので、またObsidianを使ってみることにした。\u003c/p\u003e\n\u003cp\u003e参考にした記事はこの辺り。\u003c/p\u003e","tags":["obsidian"],"title":"Obsidian再入門"},{"categories":null,"objectID":"da3497a0be727a349d2f01e9b5abd949","permalink":"https://umemak.github.io/blog/posts/2022/12/25_oci_ssh/","publish_date":"2022-12-25T00:00:00Z","summary":"\u003cp\u003eOracleCloudの無料インスタンスにSSHしようとしてできない。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eCompute \u0026gt; Instances \u0026gt; Instance details\u003c/code\u003eでPublic IP addressとUsernameは確認できる。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eConsole connection\u003c/code\u003eを開くと、\u003ccode\u003eLaunch Cloud Shell connection\u003c/code\u003eと\u003ccode\u003eCreate local connection\u003c/code\u003eが選択できて、Cloud Shellのほうを選ぶとブラウザ上でログインシェルが表示される、ユーザー\u003ccode\u003eopc\u003c/code\u003eで、パスワードがわからない。\u003c/p\u003e","tags":["oci"],"title":"OracleCloudにSSH"},{"categories":null,"objectID":"8f4d52a2cdba4defc1c34ff9c9f4795b","permalink":"https://umemak.github.io/blog/posts/2022/12/24_notepc/","publish_date":"2022-12-24T00:00:00Z","summary":"\u003cp\u003e昨日再起動してからはブルースクリーンは出ていないが、念のためファイルをバックアップしつつノートPCの情報収集。\u003c/p\u003e\n\u003cp\u003e条件としては、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e13.5インチ以上\u003c/li\u003e\n\u003cli\u003e1920 x 1200 以上（3:2か16:10）\u003c/li\u003e\n\u003cli\u003e第12世代Core以降CPU\u003c/li\u003e\n\u003cli\u003eメモリ16GB以上\u003c/li\u003e\n\u003cli\u003eSSD512GB程度\u003c/li\u003e\n\u003cli\u003eJIS配列キーボード\nこの辺りが必須で。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eChatGPTに聞いてみたら、Dell XPS 13、HP Spectre x360、Lenovo ThinkPad X1 Carbon、Acer Swift 3、Asus ROG Zephyrus G14、Microsoft Surface Book 3をすすめてくれた。\u003c/p\u003e","tags":[],"title":"ノートPC選び2022"},{"categories":null,"objectID":"00fbc2257028e60c48527910b0cdaf3c","permalink":"https://umemak.github.io/blog/posts/2022/12/23_inspiron13/","publish_date":"2022-12-23T00:00:00Z","summary":"\u003cp\u003e作業中に操作が効かなくなって数秒後にブルースクリーンが表示された。停止コードは\u003ccode\u003eCLOCK_WATCHDOG_TIMEOUT\u003c/code\u003e。「エラー情報を収集しています。自動的に再起動します。」と表示されていたが、0%完了のまま進展ないので、電源長押しして強制終了させた。\u003c/p\u003e\n\u003cp\u003e再起動後、ログインして諸々スタートアップのアプリが起動している最中に、画面暗転。\u003c/p\u003e","tags":[],"title":"Inspiron13のブルースクリーン"},{"categories":null,"objectID":"2af5652060599ab9cacc0fc153fb195b","permalink":"https://umemak.github.io/blog/posts/2022/12/22_devbox/","publish_date":"2022-12-22T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.publickey1.jp/blog/22/dockerdevbox_020.html\"\u003eローカル環境を汚さずDockerコンテナのオーバーヘッドもなく、開発環境を自在に構築できる「Devbox 0.2.0」登場 － Publickey\u003c/a\u003eの記事で初めて知った。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.jetpack.io/devbox/\"\u003eDevbox by Jetpack.io | Devbox\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eWindowsだとWSL上でやらないとダメなのかな。Git bashだと権限が足りないといわれた。\u003c/p\u003e\n\u003cp\u003e感覚的には、言語ごとの○○envが一本化されるイメージ？\u003c/p\u003e","tags":["devbox"],"title":"Devbox"},{"categories":null,"objectID":"2fe01e5375478adc0c1b2b0e9be59704","permalink":"https://umemak.github.io/blog/posts/2022/12/21_rss_filter/","publish_date":"2022-12-21T00:00:00Z","summary":"\u003cp\u003eInoreaderの有料プランが切れて、広告が表示されるようになり、重複フィルターが無効化され、ルールによる自動既読が効かなくなった。\u003c/p\u003e\n\u003cp\u003e広告はまあそんなに目障りではないので問題なし。\u003c/p\u003e\n\u003cp\u003eルールの代わりに、Cloud Functions経由するときに除外するようにしたので、これも問題なし。\u003c/p\u003e\n\u003cp\u003e重複フィルターが代替できていないのを何とかするためには、Cloud Functions側で一旦キャッシュする仕組みがないとダメか。\u003c/p\u003e","tags":["RSS"],"title":"rss_filter"},{"categories":null,"objectID":"928d157b71c3764c6972b6a0d57f8bbe","permalink":"https://umemak.github.io/blog/posts/2022/12/20_scrapbox/","publish_date":"2022-12-20T00:00:00Z","summary":"\u003cp\u003eKindle Unlimitedで\u003ca href=\"https://www.amazon.co.jp/dp/B09YLFQZ29\"\u003eScrapboxing(スクラップボクシング) | 吉良野すた | 工学 | Kindleストア | Amazon\u003c/a\u003eを読んで、使ってみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://scrapbox.io/\"\u003ehttps://scrapbox.io/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e今はKindleで読んだ本のハイライトしたところをGoogle Keepにコピペしているのだけど、Keepだとメモごとのリンクが張れないので、似た内容とか頻繁に出てくる引用が見やすくなればという思い。\u003c/p\u003e\n\u003cp\u003eKeepの前はObsidianも使ってみたのだけど、イマイチ合わなかった。\u003c/p\u003e","tags":["Scrapbox"],"title":"Scrapbox"},{"categories":null,"objectID":"ce97d6253321c728bdd026c55b496314","permalink":"https://umemak.github.io/blog/posts/2022/12/19_mysql_generated_column/","publish_date":"2022-12-19T00:00:00Z","summary":"\u003cp\u003eMySQLのGenerated Columnというものを知った。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dev.mysql.com/doc/refman/8.0/ja/create-table-generated-columns.html\"\u003eMySQL :: MySQL 8.0 リファレンスマニュアル :: 13.1.20.8 CREATE TABLE および生成されるカラム\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gihyo.jp/dev/serial/01/mysql-road-construction-news/0150\"\u003e第150回　Generated Columnを利用してみる | gihyo.jp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/naka_kyon/items/f3e19ab7a6275ab394bf\"\u003eMySQLのGenerated Columnsまとめ with Rails - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://please-sleep.cou929.nu/mysql-generated-columns.html\"\u003eMySQL の Generated Columns のキャッチアップ - Please Sleep\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://system.blog.uuum.jp/entry/mysql-generated-columns\"\u003eJSON型にindexも！MySQL 5.7のGenerated Columnsの可能性について探る - UUUMエンジニアブログ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMySQL5.7.6から追加された機能とのことで、リリースされたのは2015年。だいぶ前だ。。\u003c/p\u003e","tags":["MySQL"],"title":"MySQLのGenerated Column"},{"categories":null,"objectID":"04eeee67bf7fbe2f8214640f91ba92ec","permalink":"https://umemak.github.io/blog/posts/2022/12/18_http3/","publish_date":"2022-12-18T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/magazine/wdpress/archive/2022/vol131\"\u003eWEB+DB PRESS Vol.131｜技術評論社\u003c/a\u003eの特集を読んだ。\u003c/p\u003e\n\u003cp\u003e概要から実践まで解説されていて、「完全に理解」できた。\u003c/p\u003e\n\u003cp\u003eサンプルはPythonで書かれていたので、他の言語でどうなのか調べてみたいと思った。\u003c/p\u003e","tags":["http3"],"title":"HTTP/3入門"},{"categories":null,"objectID":"8e20afd664dce780202384b01ef31456","permalink":"https://umemak.github.io/blog/posts/2022/12/17_elixir/","publish_date":"2022-12-17T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/magazine/wdpress/archive/2022/vol131\"\u003eWEB+DB PRESS Vol.131｜技術評論社\u003c/a\u003eの特集を読んだ。\u003c/p\u003e\n\u003cp\u003eElixirとかErlangとか、初心者向けならまず読み方を書いてくれればよいのにと思った。\u003c/p\u003e\n\u003cp\u003eWikiPediaによれば、エリクサー、アーラン。\u003c/p\u003e\n\u003cp\u003e文法の解説にページ使いすぎな気がしなくもないけど、それだけほかの言語と違うところがあるということなのだろう。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://elixir-lang.jp/\"\u003eElixir\u003c/a\u003eを見てもイマイチピンと来ない部分がわかるようになる・・かもしれない。\u003c/p\u003e","tags":["elixir"],"title":"Elixir入門"},{"categories":null,"objectID":"1e0f97be43772455afeb2d486f0e081e","permalink":"https://umemak.github.io/blog/posts/2022/12/16_rust/","publish_date":"2022-12-16T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/magazine/wdpress/archive/2022/vol131\"\u003eWEB+DB PRESS Vol.131｜技術評論社\u003c/a\u003eの特集を読んでいる途中。\u003c/p\u003e\n\u003cp\u003eやっぱりマクロが出てきたあたりで難易度が上がるような気がする。\u003c/p\u003e\n\u003cp\u003eそういえば、\u003ca href=\"https://www.amazon.co.jp/gp/product/B0BKK824ZW/\"\u003eAmazon.co.jp: Webアプリ開発で学ぶ Rust言語入門 eBook : 佐藤昭文: 本\u003c/a\u003eも買っていたのを思い出した。\nこれも読まなきゃ。\u003c/p\u003e","tags":["rust"],"title":"Rust再入門"},{"categories":null,"objectID":"0a6bb1c3f77366ff34e35718c7656874","permalink":"https://umemak.github.io/blog/posts/2022/12/15_go_error/","publish_date":"2022-12-15T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://kaminashi-developer.hatenablog.jp/entry/2022/12/15/093000\"\u003eGoでスタイリッシュにエラーをラップする方法を学んだ - カミナシ エンジニアブログ\u003c/a\u003eを見て、なるほどと思った。\u003c/p\u003e\n\u003cp\u003eただ、自分の場合はエラーメッセージに、エラーを返した関数なりメソッド名を入れたい派なので、一律同じになるこの方法は見送りかな、と。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehoge\u003c/span\u003e() \u003cspan style=\"color:#66d9ef\"\u003eerror\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eHuga\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eErrorf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Huga: %w\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eこんな感じ。\u003c/p\u003e","tags":["golang"],"title":"Goのエラーのラップ"},{"categories":null,"objectID":"5d0302b51a50e7b4a18f5538bf7b98c1","permalink":"https://umemak.github.io/blog/posts/2022/12/14_docker/","publish_date":"2022-12-14T00:00:00Z","summary":"\u003cp\u003eDockerの学習方法について、ChatGPTに聞いてみた。\u003c/p\u003e\n\u003cp\u003eおおむね自分の認識と合った回答だった。\u003c/p\u003e\n\u003cp\u003eもう一度やったら違う回答が出てきそうだったけど、エラーになってしまった。\u003c/p\u003e\n\u003cp\u003e大人気で混雑してるっぽい。\u003c/p\u003e","tags":["docker"],"title":"Docker x ChatGPT"},{"categories":null,"objectID":"f4ad146607cbb1f5d741da3128352bbd","permalink":"https://umemak.github.io/blog/posts/2022/12/13_jamstack/","publish_date":"2022-12-13T00:00:00Z","summary":"\u003cp\u003e昨日の続きで、\u003ca href=\"https://gihyo.jp/magazine/SD/archive/2022/202211\"\u003eSoftware Design 2022年11月号｜技術評論社\u003c/a\u003eの特集を読んだ。\u003c/p\u003e\n\u003cp\u003eこのページもHugoで生成しているので、jamstackと言えるはず。\u003c/p\u003e\n\u003cp\u003e今はGitHub Pages使っていて、特に不都合ないので引っ越すつもりもないけど、特集読んでnetlifyとか使ってみたいと思った。\u003c/p\u003e","tags":[],"title":"jamstack再入門"},{"categories":null,"objectID":"42f16ff6ac6ca8498a0a5b757155486d","permalink":"https://umemak.github.io/blog/posts/2022/12/12_docker/","publish_date":"2022-12-12T00:00:00Z","summary":"\u003cp\u003eDockerのおさらいをするために、\u003ca href=\"https://gihyo.jp/magazine/SD/archive/2022/202211\"\u003eSoftware Design 2022年11月号｜技術評論社\u003c/a\u003eの特集を読んだ。\u003c/p\u003e\n\u003cp\u003e基本的なコンテナの仕組みへの理解が深まった気がする。\u003c/p\u003e\n\u003cp\u003e個人的には、以前ほど何でもコンテナ化したらいいじゃんって感じではなくなって、選択肢の一つとして存在している感じ。\u003c/p\u003e\n\u003cp\u003eまぁDocker使ってもMacとWindowsで挙動が違ったり、ラズパイ用のイメージがなかったりすることに疲れたというのもある。\u003c/p\u003e","tags":["docker"],"title":"Docker再入門"},{"categories":null,"objectID":"36eb14fcff4bec6c72b077a65789b2df","permalink":"https://umemak.github.io/blog/posts/2022/12/11_go_present/","publish_date":"2022-12-11T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://qiita.com/qt-luigi/items/5dbae7f0eb6c196c9cf8\"\u003eGo製プレゼンツール「present」のインストール手順 - Qiita\u003c/a\u003eを見て、そんなものがあるのかと初めて知った。\u003c/p\u003e\n\u003cp\u003eどんなものかと検索したら、\u003ca href=\"https://christina04.hatenablog.com/entry/2016/10/04/193000\"\u003eGoのpresentで発表用スライドを作成する - Carpe Diem\u003c/a\u003eの記事で実際の例がリンクされてて、それ見たらこういうスライド見たことがあった。\u003c/p\u003e\n\u003cp\u003e最近はスライド作るのは\u003ca href=\"https://marp.app/\"\u003eMarp: Markdown Presentation Ecosystem\u003c/a\u003eを使ってばかりだけど、今度はpresentも試してみたい。\u003c/p\u003e","tags":["golang"],"title":"Goのpresentパッケージ"},{"categories":null,"objectID":"18ca65b33847a3e669c3323f1aea9812","permalink":"https://umemak.github.io/blog/posts/2022/12/10_raspberry_pi_vscode/","publish_date":"2022-12-10T00:00:00Z","summary":"\u003cp\u003eGitHub Codespacesが使えるようになるのを待つ間、ラズパイで何とかならないか試してみた。\u003c/p\u003e\n\u003cp\u003eVS Codeからリモート接続して、Dockerインストールするところまでは順調だったけれど、docker compose upしたところでエラー。\u003c/p\u003e\n\u003cp\u003eMySQLのコンテナイメージが提供されていないようだ。\n意外だった。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://registry.hub.docker.com/_/mysql/tags\"\u003emysql Tags | Docker Hub\u003c/a\u003eには\u003ccode\u003elinux/arm64/v8\u003c/code\u003eがあるけれど、ラズパイは\u003ccode\u003ev7\u003c/code\u003eらしい。\u003c/p\u003e","tags":["raspberry-pi","docker"],"title":"ラズパイでDockerでMySQL"},{"categories":null,"objectID":"27df20dc57529505ee3444241db9844e","permalink":"https://umemak.github.io/blog/posts/2022/12/09_codespaces/","publish_date":"2022-12-09T00:00:00Z","summary":"\u003cp\u003eGitpodからVS Codeに作業環境を引っ越して、docker-composeでコンテナ立てて動かせるようにしてみた。\u003c/p\u003e\n\u003cp\u003eが、airとかnextjsのホットリロードが効かない。\nWindowsだとダメらしい。WSLで起動しても変わらず。\u003c/p\u003e\n\u003cp\u003eじゃあGitpodがPWAならある程度使い勝手が良いのでは？と思ったがGitpodはPWAに対応していなかった。\u003c/p\u003e","tags":["GitHub"],"title":"Codespacesの制限"},{"categories":null,"objectID":"231b6046fa19e59767a39d051cdd0f69","permalink":"https://umemak.github.io/blog/posts/2022/12/08_prism/","publish_date":"2022-12-08T00:00:00Z","summary":"\u003cp\u003eAPIサーバーのモックを手っ取り早くほしかったので\u003ca href=\"https://github.com/stoplightio/prism\"\u003estoplightio/prism: Turn any OpenAPI2/3 and Postman Collection file into an API server with mocking, transformations and validations.\u003c/a\u003eを試してみた。\u003c/p\u003e\n\u003cp\u003ePOSTのレスポンスがexample指定してるはずなのに、空で返ってきてよくわからない。\u003c/p\u003e\n\u003cp\u003eモック対象がそんなに多くなかったから、とりあえずgoで組んだ。\u003c/p\u003e\n\u003cp\u003eこれだとサーバー側の仕様変更に追従できないから、時間あるときに解決したい。\u003c/p\u003e","tags":["OpenAPI"],"title":"Prism使ってみた"},{"categories":null,"objectID":"a59b90de705a7452947b361ac249fe76","permalink":"https://umemak.github.io/blog/posts/2022/12/07_chatgpt/","publish_date":"2022-12-07T00:00:00Z","summary":"\u003cp\u003e流行に乗ってみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.itmedia.co.jp/news/articles/2212/06/news110.html\"\u003eChatGPT、公開6日目で100万ユーザー突破 - ITmedia NEWS\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eマイグレーションツールのおすすめを聞いてみたら、回答まで思ったより時間がかかってエラーを返してきた。\u003c/p\u003e\n\u003cp\u003eもうちょっと条件を付けて、Go言語のDBマイグレーションツールのおすすめを聞いたら、\u003ca href=\"https://github.com/golang-migrate/migrate\"\u003egolang-migrate/migrate: Database migrations. CLI and Golang library.\u003c/a\u003eを勧めてくれた。\u003c/p\u003e\n\u003cp\u003eほかにもいくつか挙げているのだが、回答が途中で途切れていて、続きが気になる。\u003c/p\u003e","tags":["ChatGPT"],"title":"ChatGPT使ってみた"},{"categories":null,"objectID":"6058d26dcb17c151f21791f46bf6f479","permalink":"https://umemak.github.io/blog/posts/2022/12/06_bitbucket/","publish_date":"2022-12-06T00:00:00Z","summary":"\u003cp\u003eBitbucket+Gitpodでどこまでできるかやっていたのだけれど、ブラウザであるが故の細かいストレスが蓄積してきて、VS Codeでやることにしてみた。\u003c/p\u003e\n\u003cp\u003eリポジトリをVS Codeで開くと拡張機能のインストールが案内されて、それに従ってインストールしてBitbucket認証通して、認証通して、認証通して・・って何回やらせるのか。\u003c/p\u003e","tags":["Bitbucket","vscode"],"title":"BitbucketとVS Code"},{"categories":null,"objectID":"a114639509fd7b5915c7b955324ccc68","permalink":"https://umemak.github.io/blog/posts/2022/12/05_cython/","publish_date":"2022-12-05T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://zenn.dev/timoneko/articles/805919ea14427c\"\u003eCythonによるPythonの高速化!!\u003c/a\u003eをやってみた。\u003c/p\u003e\n\u003cp\u003e書かれているようにエラーが出たので、\u003ca href=\"https://visualstudio.microsoft.com/ja/visual-cpp-build-tools/\"\u003eMicrosoft C++ Build Tools - Visual Studio\u003c/a\u003eでBuild Toolsのダウンロードをしてインストール。\u003c/p\u003e\n\u003cp\u003eC++によるデスクトップ開発を選択してインストール。1.7GBもダウンロードするのか。。\u003c/p\u003e\n\u003cp\u003eで、インストールが終わってコンパイルして実行\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ time python test.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e100000000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereal    0m5.251s\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003euser    0m0.000s\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esys     0m0.000s\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ecdefを加える\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ time python test.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e100000000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereal    0m0.214s\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003euser    0m0.000s\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esys     0m0.015s\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eすごい。\u003c/p\u003e","tags":["python","cython"],"title":"Cython入門"},{"categories":null,"objectID":"77a1dd4979c9a4acced731dedd920bc7","permalink":"https://umemak.github.io/blog/posts/2022/12/04_wifi/","publish_date":"2022-12-04T00:00:00Z","summary":"\u003cp\u003e結局NECのにした。\u003c/p\u003e\n\u003cp\u003e今度のは、ちゃんとブリッジモードに設定できた。\u003c/p\u003e\n\u003cp\u003eスピードテストしたら交換前とそんなに変わらず。あとはしばらく使ってみてDNS引けない現象が起きるかどうか。\u003c/p\u003e","tags":[],"title":"無線LANルーター"},{"categories":null,"objectID":"722ed80983bb819c28aafe8f810e5015","permalink":"https://umemak.github.io/blog/posts/2022/12/03_mouse/","publish_date":"2022-12-03T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B072N792LK\"\u003eロジクール M590GT\u003c/a\u003eを使っていて、時々カーソルが引っかかることがあるので寿命かと思い、\u003ca href=\"https://www.amazon.co.jp/dp/B096X8MY89\"\u003eロジクール MX ANYWHERE 2S\u003c/a\u003eを買い足したのだが、結局カーソル引っ掛かり現象は2Sでも発生して、これは有線にしないと解決しないのかと。\u003c/p\u003e\n\u003cp\u003eAmazonを探検してみたところ、いくつか候補が出てきたが、これといった決定的なものは見つからず。\u003c/p\u003e\n\u003cp\u003e条件としては、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e静音\u003c/li\u003e\n\u003cli\u003eサイドに戻る・進むボタン\nを満たしたい。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eM590の有線版があれば即決なのだけど。。\u003c/p\u003e","tags":[],"title":"有線マウス"},{"categories":null,"objectID":"8cadc24aa93b9c069703b9f1b9aa4ecf","permalink":"https://umemak.github.io/blog/posts/2022/12/02_cython/","publish_date":"2022-12-02T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gihyo.jp/magazine/SD/archive/2022/202212\"\u003eSoftware Design 2022年12月号｜技術評論社\u003c/a\u003eで、\n\u003ca href=\"https://cython.org/\"\u003eCython: C-Extensions for Python\u003c/a\u003eというものを知った。\u003c/p\u003e\n\u003cp\u003eちょっとした変更でかなり高速化できるようなので、いつか試してみたい。\u003c/p\u003e","tags":["python","cython"],"title":"Cython"},{"categories":null,"objectID":"f952d207cbb2c0ed92186b1b54232bb9","permalink":"https://umemak.github.io/blog/posts/2022/12/01_xml2tsv/","publish_date":"2022-12-01T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/umemak/kindle_xml_to_tsv\"\u003eumemak/kindle_xml_to_tsv\u003c/a\u003e作った。\u003c/p\u003e\n\u003cp\u003eExcelだとXMLファイル読めるらしい（試してない）けど、Googleスプレッドシートだと読み込めなかったので、TSVに変換して読み込めた。\u003c/p\u003e\n\u003cp\u003egoの\u003ccode\u003eencoding/xml\u003c/code\u003e使って、割と簡単に書けたけど、AuthorsとPublishersが配列になっているところ、structを作って配列にしても最後のものしか読み込まれず、タグを\u003ccode\u003exml:\u0026quot;authors\u0026gt;author\u0026quot;\u003c/code\u003eみたいにしたら解決できた。\u003c/p\u003e","tags":["go"],"title":"KindleのXMLをTSVに変換する"},{"categories":null,"objectID":"a689faa44f2896e2c228ed710fb60607","permalink":"https://umemak.github.io/blog/posts/2022/11/30_cloudfunctions_log/","publish_date":"2022-11-30T00:00:00Z","summary":"\u003cp\u003eデプロイのエラーは、\u003ccode\u003ego clean -modcache\u003c/code\u003eして\u003ccode\u003ego.sum\u003c/code\u003e削除して\u003ccode\u003ego.mod\u003c/code\u003eのrequire全削除して\u003ccode\u003ego mod tidy\u003c/code\u003eしたら直った。\n何が効いたのかはわからない。\u003c/p\u003e\n\u003cp\u003eログは、JSON形式で出力しないといけないのかと思ってそのように書いてみたら、そのまま記録されて構造化されなかった。\u003c/p\u003e\n\u003cp\u003e集計するものでもなければ、とりあえずfmt.Printfで書いておけばそのまま確認できるのでOK。\u003c/p\u003e","tags":["gcp","go"],"title":"CloudFunctionsのログ"},{"categories":null,"objectID":"106a8c6f85f35d0468b1bab40e2a4824","permalink":"https://umemak.github.io/blog/posts/2022/11/29_techbookread/","publish_date":"2022-11-29T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B0BF469YLK\"\u003e「技術書」の読書術 達人が教える選び方・読み方・情報発信\u0026amp;共有のコツとテクニック | IPUSIRON, 増井 敏克 | コンピュータ・IT | Kindleストア | Amazon\u003c/a\u003eを読んだ。\u003c/p\u003e\n\u003cp\u003e自分もセールのたびに積読が増えていくので何とかしたいが、雑誌の定期購読が良いと書いてあったのを見て、Software DesignとWEB+DB PRESSの最新号をとりあえず買って、また未読が増えてしまった。\u003c/p\u003e","tags":["book"],"title":"「技術書」の読書術"},{"categories":null,"objectID":"189e9497db81dd937e2f9183678099b2","permalink":"https://umemak.github.io/blog/posts/2022/11/28_cloudfunctions_log/","publish_date":"2022-11-28T00:00:00Z","summary":"\u003cp\u003e何もしないと、リクエストパラメータすらログに出力されないので、何かと不便。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://cloud.google.com/functions/docs/monitoring/logging?hl=ja#functions-log-structured-go\"\u003eログの作成、表示、処理  |  Google Cloud Functions に関するドキュメント\u003c/a\u003eによると、標準出力や標準エラーに書き込めば良いが、Entry構造体を定義して、Stringメソッドを作り、logにPrintlnで渡せばもっと良い感じにできるらしい。\u003c/p\u003e\n\u003cp\u003eとりあえず、fmt.PrintlnでJSONを出力するようにしてみる。\u003c/p\u003e","tags":["gcp","go"],"title":"CloudFunctionsのログ"},{"categories":null,"objectID":"6ba94783eeb9e3cb910a1663f50fda0a","permalink":"https://umemak.github.io/blog/posts/2022/11/27_wifi_nec/","publish_date":"2022-11-27T00:00:00Z","summary":"\u003cp\u003e結局、最近調子悪くなったとはいえ今まで数年間安定して動いていた実績があるNECでも良いのではないか？と思うようになってきた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B09NZP7F25/\"\u003eAmazon.co.jp: 【Amazon.co.jp 限定】NEC Aterm 無線LAN WiFi ルーター Wi-Fi6 4×4 AX5400HP Atermシリーズ 6ストリーム (5GHz / 2.4GHz) AM-AX5400HP【 iPhone 13 / 12 / iPhone SE(第二世代) / Nintendo Switch メーカー動作確認済み】 : 家電＆カメラ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B0972HKM4Y/\"\u003eAmazon.co.jp: 【Amazon.co.jp限定】NEC 無線LAN WiFi ルーター Wi-Fi6 (11ax) / AX3600 Atermシリーズ カバーアンテナ搭載 4ストリーム (5GHz帯 / 2.4GHz帯) AM-AX3600HP【 iPhone 13 / 12 / iPhone SE(第二世代) / Nintendo Switch メーカー動作確認済み】 : 家電＆カメラ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B09NZ7HCXK/\"\u003eAmazon.co.jp: 【Amazon.co.jp 限定】NEC Aterm 無線LAN WiFi ルーター Wi-Fi6 2×2 AX3000HP2 Atermシリーズ 4ストリーム (5GHz / 2.4GHz) AM-AX3000HP2【 iPhone 13 / 12 / iPhone SE(第二世代) / Nintendo Switch メーカー動作確認済み】 : 家電＆カメラ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e候補としてはこの辺り。3600だけ去年の製品で、他2つは今年の製品。\u003c/p\u003e","tags":[],"title":"無線LANルーター3"},{"categories":null,"objectID":"e507bc52602dc02ca8d1e50d01eb2efa","permalink":"https://umemak.github.io/blog/posts/2022/11/26_wifi_iodata/","publish_date":"2022-11-26T00:00:00Z","summary":"\u003cp\u003e売れ筋ランキングとは別に、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/gp/new-releases/computers/2151996051\"\u003eAmazon.co.jp 新着ランキング: 無線・有線LANルーター の新着ランキングです。\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/gp/most-wished-for/computers/2151996051\"\u003eAmazon.co.jp ほしい物ランキング: 無線・有線LANルーター で、ほしい物リストとレジストリに最も多く追加された商品\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/gp/most-gifted/computers/2151996051\"\u003eAmazon.co.jp 人気ギフトランキング: 無線・有線LANルーター で、ギフトの設定を使用して最もご注文いただいている商品\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eがあって、ほしい物と人気ギフトは売れ筋と大差ない内容だけど、新着ランキングにはIODATAの製品が上位に入っていて、見てみた。\u003c/p\u003e","tags":[],"title":"無線LANルーター2"},{"categories":null,"objectID":"36f2287024a7c272def937cf3bb8623d","permalink":"https://umemak.github.io/blog/posts/2022/11/25_wifi/","publish_date":"2022-11-25T00:00:00Z","summary":"\u003cp\u003eAmazonのセールが始まったので、この機会に買い換えを検討。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/bestsellers/computers/2151996051\"\u003eAmazon.co.jp 売れ筋ランキング: 無線・有線LANルーター の中で最も人気のある商品です\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eバッファロー、TP-Link、NECが多い。\u003c/p\u003e\n\u003cp\u003e今使ってて調子悪いのがNECだから、ちょっと避けたい。バッファローは大昔良くない思い出があるのでパス。TP-Linkは見た目がアンテナたくさん生えてていかにも感じでちょっと。\u003c/p\u003e","tags":[],"title":"無線LANルーター"},{"categories":null,"objectID":"ce4d102a226c096cb50a726f33a2260d","permalink":"https://umemak.github.io/blog/posts/2022/11/24_gcp_charge/","publish_date":"2022-11-24T00:00:00Z","summary":"\u003cp\u003eCloud FunctionsでAPIデプロイしてから、課金が発生しているのに気が付いた。\u003c/p\u003e\n\u003cp\u003e200万回までは無料では？と思い詳細を見てみると、Cloud Storageの料金だった。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://cloud.google.com/functions/pricing?hl=ja\"\u003e料金  |  Cloud Functions  |  Google Cloud\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e関数が Container Registry に保存される場合、Container Registry には無料枠がないため、デプロイ後にわずかな料金が発生します。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eこれか。。\u003c/p\u003e\n\u003cp\u003eおそらく、設定ファイル変えて何度もデプロイしているのが悪いのだけど、ある程度設定が固まればそこまで増えることもないでしょう。きっと。\u003c/p\u003e","tags":["gcp"],"title":"GCPの課金"},{"categories":null,"objectID":"e124454888e93930e76d7d28915abc2c","permalink":"https://umemak.github.io/blog/posts/2022/11/23_rss_filter/","publish_date":"2022-11-23T00:00:00Z","summary":"\u003cp\u003e\u003ccode\u003eencoding/xml\u003c/code\u003eを使って複数RSS読み込んでマージして出力するのはできたけど、読み込むRSSの形式によって\u003ccode\u003eencoding/xml\u003c/code\u003eでは読めないものが出てきた。\u003c/p\u003e\n\u003cp\u003eやっぱり\u003ca href=\"https://github.com/mmcdole/gofeed\"\u003emmcdole/gofeed: Parse RSS, Atom and JSON feeds in Go\u003c/a\u003eとか形式の違いを吸収してくれるライブラリを利用したほうが良さそう。\u003c/p\u003e\n\u003cp\u003e作ってみてわかることもある。\u003c/p\u003e","tags":["RSS"],"title":"encoding/xml"},{"categories":null,"objectID":"4d66dab908e2696d70649ebe67c3d5ca","permalink":"https://umemak.github.io/blog/posts/2022/11/22_runn/","publish_date":"2022-11-22T00:00:00Z","summary":"\u003cp\u003erunnでDBの操作もできるのだけど、BINARY型のカラムがあるテーブルだとうまく動かない（気がする）。\u003c/p\u003e\n\u003cp\u003e深く考えずにCHAR型に変更したら通ったので、おそらくBINARY型が原因だったと思う。\u003c/p\u003e\n\u003cp\u003e時間ができたら検証してみたい。\u003c/p\u003e","tags":["go","mysql"],"title":"runnでgRPCのテスト3"},{"categories":null,"objectID":"63007557ea4c194dd7252c51e1a3ed69","permalink":"https://umemak.github.io/blog/posts/2022/11/21_gitea_to_github/","publish_date":"2022-11-21T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gitea.io/en-us/\"\u003eGitea\u003c/a\u003eのリポジトリをGitHubに移行してみる。\u003c/p\u003e\n\u003cp\u003eGiteaのほうは、バックアップのzipがある状態。\u003c/p\u003e\n\u003cp\u003ezipを展開して、リポジトリ（.git拡張子のディレクトリ）を\u003ccode\u003egit clone\u003c/code\u003eでローカルリポジトリとして取り込む。\u003c/p\u003e\n\u003cp\u003e移行先のGitHubリポジトリを作成して、\u003ccode\u003egit remote set-url origin\u003c/code\u003eでリモートリポジトリとして設定する。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit push origin HEAD\u003c/code\u003eでGitHubにアップ。\u003c/p\u003e\n\u003cp\u003eファイルやコミット履歴はこれで移行できたが、IssueなどはGiteaのDBで管理しているので、この手順では移行できなかった。\u003c/p\u003e","tags":["gitea","github"],"title":"GiteaからGitHubへの移行"},{"categories":null,"objectID":"98b0e54655b56c91a05dd6b87c75d7b8","permalink":"https://umemak.github.io/blog/posts/2022/11/20_rss_filter/","publish_date":"2022-11-20T00:00:00Z","summary":"\u003cp\u003eLambdaで動かそうと思っていたけど、Cloud Functionsにデプロイしてみた。\u003c/p\u003e\n\u003cp\u003e設定周りをDB管理したいと思ったら、それFirebaseで良いのでは？という気持ちになってきた。\u003c/p\u003e\n\u003cp\u003eFirebaseとGoの組み合わせは今までやったことない気がするので、この機会に試してみようと思ったけど、FirebaseのFunctionsってNodeしか対応してない・・？\u003c/p\u003e","tags":["RSS"],"title":"RSSフィルタ2"},{"categories":null,"objectID":"0b9bda3fda99998a86d450ba4addc7d7","permalink":"https://umemak.github.io/blog/posts/2022/11/19_rss_filter/","publish_date":"2022-11-19T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/mmcdole/gofeed\"\u003emmcdole/gofeed: Parse RSS, Atom and JSON feeds in Go\u003c/a\u003eを使ったら、RSSの読み込みが超簡単にできた。\u003c/p\u003e\n\u003cp\u003eが、不要なエントリを削除してまたRSSとして出力しようとしたときに、手段が用意されていなさそう。\u003c/p\u003e\n\u003cp\u003eなので、\u003ccode\u003eencoding/xml\u003c/code\u003eを使って作るのが良さそう。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/nnabeyang/scraps/a1429f7f1214e9\"\u003eGoのencoding/xmlの使い方について雑に紹介\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.y-yuki.net/entry/2017/07/02/120000\"\u003eGo言語 - XMLを読んで特定の要素を削って出力 - 覚えたら書く\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこの辺りが参考になりそう。\u003c/p\u003e","tags":["RSS"],"title":"RSSフィルタ"},{"categories":null,"objectID":"c67c61784b0e770b392d614fe0125b4b","permalink":"https://umemak.github.io/blog/posts/2022/11/18_runn/","publish_date":"2022-11-18T00:00:00Z","summary":"\u003cp\u003erunnのコマンドライン実行でうまく動かない件、オプション\u003ccode\u003e--grpc-no-tls\u003c/code\u003eを指定したら解消した。\u003c/p\u003e\n\u003cp\u003eデバッグ用に詳細オプションないかなーってコマンドラインヘルプ見ていて見つけた。\u003c/p\u003e\n\u003cp\u003eマニュアルはちゃんと読みましょう（今年何度目かの反省\u003c/p\u003e","tags":["go","gRPC"],"title":"runnでgRPCのテスト2"},{"categories":null,"objectID":"1eb4ae945f09487de1fce5d77a9d97d9","permalink":"https://umemak.github.io/blog/posts/2022/11/17_runn/","publish_date":"2022-11-17T00:00:00Z","summary":"\u003cp\u003egRPCサーバーをテストするのに、\u003ca href=\"https://github.com/fullstorydev/grpcurl\"\u003efullstorydev/grpcurl: Like cURL, but for gRPC: Command-line tool for interacting with gRPC servers\u003c/a\u003eを使っていたのだけど、自動化するのに良いものはないかと探して、\u003ca href=\"https://github.com/k1LoW/runn\"\u003ek1LoW/runn: runn is a package/tool for running operations following a scenario.\u003c/a\u003eを試してみた。\u003c/p\u003e\n\u003cp\u003ego testから使うのは何となくできたような気がするけど、runnコマンドで実行するのがうまくいかない。\u003c/p\u003e\n\u003cp\u003ego testから使うのもだいぶハマって、\u003ccode\u003etls: false\u003c/code\u003eを入れないとポート番号80以外で起動したときに常にTLS接続になって、応答がなくなってしまう。\u003c/p\u003e","tags":["go","gRPC"],"title":"runnでgRPCのテスト"},{"categories":null,"objectID":"0d5249cd74335adeca005bb30ae57110","permalink":"https://umemak.github.io/blog/posts/2022/11/16_rss_crawler/","publish_date":"2022-11-16T00:00:00Z","summary":"\u003cp\u003eRSSリーダーは\u003ca href=\"https://www.inoreader.com/\"\u003eInoreader\u003c/a\u003eをProプランで使っているのだけれど、そろそろ年払いの更新時期で、最近ちょっと下がったとはいえまだドルが高いので思案中。\u003c/p\u003e\n\u003cp\u003eそもそもProプランにしてるのは、ルールとフィルターが使いたいからで、それさえ自前で実現できれば、広告付きFreeプランでも問題ない（はず）。\u003c/p\u003e\n\u003cp\u003eということでRSSクローラーを作ってみようかと。\u003c/p\u003e\n\u003cp\u003eその前にちょっと検索してみた結果をメモ\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/minhhungit/github-action-rss-crawler\"\u003eminhhungit/github-action-rss-crawler: Rss 100% auto crawling using Github Action\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/cacaoMath/items/2dfd6edc51e14cf9054b\"\u003e今更ながらGithub Actionsを用いてRSSフィードを自動取得・メール送信を実現する - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/yamadashy/items/0130e3e569b0832bc51f\"\u003e企業のテックブログの更新をまとめたRSSフィードを作りました！（GitHub Actions） - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://paiza.hatenablog.com/entry/2021/07/07/150000\"\u003e簡単すぎる！GitHubを自分だけのRSSリーダーに変える「osmos:feed」を使ってみた！ - paiza開発日誌\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/kinkinbeer135ml/articles/968c7f8a5f0767\"\u003e【Node.js】Qiita/Zennの投稿をGitHubのProfileに自動反映する。（半分ポエム）\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.to-r.net/media/note-rss/\"\u003enote の RSS でクライアントから記事一覧を取得する方法【Cloud Functions for Firebase】 - to-R Media\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["RSS"],"title":"RSSクローラー"},{"categories":null,"objectID":"1eb46f81ff2ce4742d5483d6752d19e3","permalink":"https://umemak.github.io/blog/posts/2022/11/15_github_pro/","publish_date":"2022-11-15T00:00:00Z","summary":"\u003cp\u003e料金プランの話。\u003c/p\u003e\n\u003cp\u003eいままでFreeでやってきたけど、Codespacesの使用量アラートがくるようになったし、そろそろ課金しても良いかなと。\u003c/p\u003e\n\u003cp\u003eドル円が不安定なのと年払いにしても割引とかないので、とりあえず1か月で。\u003c/p\u003e","tags":["GitHub"],"title":"GitHubのProになった"},{"categories":null,"objectID":"9c0647b6dc8d9012f33a71fb11851108","permalink":"https://umemak.github.io/blog/posts/2022/11/14_sqlboiler_undelete/","publish_date":"2022-11-14T00:00:00Z","summary":"\u003cp\u003eSQLBoilerはDeleteするときに論理削除が使える。\u003c/p\u003e\n\u003cp\u003e詳細は\u003ca href=\"https://i-ssue.com/topics/b28d30d1-7bb4-4a6d-b669-f818ba9e7de3\"\u003e【Go】sqlboilerで論理削除を実装する | ISSUE\u003c/a\u003eが詳しい。\u003c/p\u003e\n\u003cp\u003e論理削除のときは\u003ccode\u003edeleted_at\u003c/code\u003eカラムがセットされる。\u003c/p\u003e\n\u003cp\u003eで、そのとき\u003ccode\u003eupdated_at\u003c/code\u003eは更新されない。\u003c/p\u003e\n\u003cp\u003e論理削除した行を元に戻したいとき、\u003ccode\u003edeleted_at\u003c/code\u003eに\u003ccode\u003enull.Time{}\u003c/code\u003eをセットしてupdateすれば元通りになるかというと、\u003ccode\u003eupdated_at\u003c/code\u003eが更新されてしまって完全に元通りとは言えない状態。\u003c/p\u003e","tags":["go"],"title":"SQLBoilerで論理削除の復旧"},{"categories":null,"objectID":"cd4ccfbbb44e0ac9baea12ce990e67c8","permalink":"https://umemak.github.io/blog/posts/2022/11/13_d.ts/","publish_date":"2022-11-13T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/Saul-Mirone/milkdown\"\u003eSaul-Mirone/milkdown: 🍼 Plugin driven WYSIWYG markdown editor framework.\u003c/a\u003eと\u003ca href=\"https://github.com/jazz-soft/react-midi-player\"\u003ejazz-soft/react-midi-player: React MIDI Player\u003c/a\u003eを組み合わせて使おうとしたら、React MIDI PlayerがTypeScript未対応らしく、\u003ccode\u003eモジュール 'react-midi-player' の宣言ファイルが見つかりませんでした。\u003c/code\u003eとのこと。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ereact-midi-player.d.ts\u003c/code\u003eを作ったらそこのエラーは消えたけど、今度は\u003ccode\u003e@milkdown\u003c/code\u003e関連のimportが軒並みエラーになってしまった。\u003c/p\u003e","tags":["TypeScript"],"title":".d.tsファイル"},{"categories":null,"objectID":"7be633528bdcd3cd261cbb70d66c1a58","permalink":"https://umemak.github.io/blog/posts/2022/11/12_mdeditor/","publish_date":"2022-11-12T00:00:00Z","summary":"\u003cp\u003e久しぶりに検索してみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/tinymce/tinymce\"\u003etinymce/tinymce: The world\u0026rsquo;s #1 JavaScript library for rich text editing. Available for React, Vue and Angular\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e保存形式が良くわからない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/summernote/summernote\"\u003esummernote/summernote: Super simple WYSIWYG editor\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eマークダウンではなくてHTMLで取り出す？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Saul-Mirone/milkdown\"\u003eSaul-Mirone/milkdown: 🍼 Plugin driven WYSIWYG markdown editor framework.\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e良さそう。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/mycolorway/simditor\"\u003emycolorway/simditor: An Easy and Fast WYSIWYG Editor\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e行やカラムの追加削除ができない？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e以前調べていた時もMilkdownは候補に挙がっていて、Reactとか面倒だと思って不採用にしていた。\u003c/p\u003e","tags":["JavaScript","editor"],"title":"マークダウンエディター"},{"categories":null,"objectID":"c5328e10e504de3a3b520b36d582cecb","permalink":"https://umemak.github.io/blog/posts/2022/11/11_sqlboiler/","publish_date":"2022-11-11T00:00:00Z","summary":"\u003cp\u003eSQLBoilerを使うロジックを\u003ca href=\"https://github.com/DATA-DOG/go-sqlmock\"\u003eDATA-DOG/go-sqlmock: Sql mock driver for golang to test database interactions\u003c/a\u003eでテストしようとしてハマった。\u003c/p\u003e\n\u003cp\u003e使わない便利機能は複雑さが増すだけで良いことないな。。\u003c/p\u003e\n\u003cp\u003e使いこなせば、それなしとか考えられないんだろうけど、つらい。\u003c/p\u003e","tags":["go"],"title":"SQLBoiler"},{"categories":null,"objectID":"e90e19b844436da5dcedc50120f61ad8","permalink":"https://umemak.github.io/blog/posts/2022/11/10_raspi_router/","publish_date":"2022-11-10T00:00:00Z","summary":"\u003cp\u003eSSIDが見つからない件。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://superuser.com/questions/1503862/raspberry-pi-4-hostapd-hotspot-not-visible\"\u003elinux - Raspberry Pi 4 hostapd hotspot not visible - Super User\u003c/a\u003eの回答を参考に、\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo systemctl stop dhcpcd.service\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo systemctl restart hostapd.service\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo systemctl start dhcpcd.service\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eしたらいけた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e/etc/dhcpcd.conf\u003c/code\u003eに\u003ccode\u003edenyinterfaces wlan0\u003c/code\u003eを追記するのは効き目なかった。\u003c/p\u003e\n\u003cp\u003eスピードテストの結果\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e経由\u003c/th\u003e\n          \u003cth style=\"text-align: right\"\u003eダウンロード\u003c/th\u003e\n          \u003cth style=\"text-align: right\"\u003eアップロード\u003c/th\u003e\n          \u003cth style=\"text-align: right\"\u003eレイテンシ\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e無線LANルーター\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e88.2Mbps\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e78.4Mbps\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e79ms\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eラズパイ2.4G\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e32.0Mbps\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e27.7Mbps\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e5ms\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eラズパイ5G\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e54.1Mbps\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e59.5Mbps\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e5ms\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e有線\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e91.6Mbps\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e60.4Mbps\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e4ms\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e専用機にはかなわないか。。\u003c/p\u003e","tags":["raspberry-pi"],"title":"ラズパイをルーターにする2"},{"categories":null,"objectID":"0bc14c2afed84ab82bf2cde9fbb5d623","permalink":"https://umemak.github.io/blog/posts/2022/11/09_raspi_router/","publish_date":"2022-11-09T00:00:00Z","summary":"\u003cp\u003ePCは昨日買ってきたLANケーブルでインターネット接続は解決した。\u003c/p\u003e\n\u003cp\u003ePixel4も同じ現象だった。\u003c/p\u003e\n\u003cp\u003eLANケーブルつないだらいけるのか、LANポート付きUSB-HUBを試してみたけれど、ダメだった。\u003c/p\u003e\n\u003cp\u003eなので、ラズパイを無線LANルーターにしてみることにした。\u003c/p\u003e\n\u003cp\u003eやり方はググったらいくつか出てきた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.itmedia.co.jp/news/articles/2008/14/news042.html\"\u003eラズパイを無線LANルーター化する ～アクセスポイント編～：名刺サイズの超小型PC「ラズパイ」で遊ぶ（第24回）（1/2 ページ） - ITmedia NEWS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://it-syoya-engineer.com/raspberry-pi-router/\"\u003eRaspberry Piで無線LANルーター（AP）を作る\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kassyjp.ninja-web.net/ras/jessie/bridge.htm\"\u003eex2.RaspberryPiを無線LANアクセスポイント化する - RaspberryPiで各種サーバー作り！ - ある阪大生の物置小屋\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.mikan-tech.net/entry/raspi-ap-sta-router\"\u003eRaspberry Pi WiFiアクセスポイント\u0026amp;ルーター化 - みかんのゆるふわ技術ブログ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.raspberrypi.com/documentation/computers/configuration.html#setting-up-a-routed-wireless-access-point\"\u003eRaspberry Pi Documentation - Configuration\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eルーター用にするOSもあるみたいだけど、イメージ作るの面倒なのでいったんパス。\u003c/p\u003e","tags":["raspberry-pi"],"title":"ラズパイをルーターにする"},{"categories":null,"objectID":"a5591887e929fc252e920340b9f9c466","permalink":"https://umemak.github.io/blog/posts/2022/11/08_dns/","publish_date":"2022-11-08T00:00:00Z","summary":"\u003cp\u003e以前書いた、DNS解決できない現象が久しぶりに頻発して、仕方がないのでホムセンでLANケーブル買ってきてRT-S300SEに直接（無線LANルーター経由せずに）接続することにした。\u003c/p\u003e\n\u003cp\u003eRT-S300SEと無線LANルーターの間に問題があるっぽいので、これで問題起きようがないはず。\u003c/p\u003e","tags":[],"title":"DNS不調3"},{"categories":null,"objectID":"92c689c9ec37c47661f309b74425fde5","permalink":"https://umemak.github.io/blog/posts/2022/11/07_sqlboiler/","publish_date":"2022-11-07T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/volatiletech/sqlboiler\"\u003evolatiletech/sqlboiler: Generate a Go ORM tailored to your database schema.\u003c/a\u003eを少し触ってみた。\u003c/p\u003e\n\u003cp\u003e普段は\u003ca href=\"https://github.com/kyleconroy/sqlc\"\u003ekyleconroy/sqlc: Generate type-safe code from SQL\u003c/a\u003eをよく使っているのだけれど、あらかじめSQLを書かなくて良いのは楽。\u003c/p\u003e\n\u003cp\u003eだけど結局DB操作するときには対象のレコードを指定するのに組み立てないといけないので、一長一短。\u003c/p\u003e\n\u003cp\u003e手段を一つしかもっていないと、それがダメになったときに詰んでしまうが、複数選択肢があれば柔軟に対応できるので、色々知っておくのは大事だと思う。\u003c/p\u003e","tags":["go"],"title":"SQLBoiler"},{"categories":null,"objectID":"8e5fbb91525e82cfc1b017c15873f89d","permalink":"https://umemak.github.io/blog/posts/2022/11/06_qwik/","publish_date":"2022-11-06T00:00:00Z","summary":"\u003cp\u003e何かのPodcastでqwikについて言及されていて、ちょっと調べてみた。\u003c/p\u003e\n\u003cp\u003e知りたいことは\u003ca href=\"https://www.mizdra.net/entry/2022/10/28/010932\"\u003eqwik の発明、及びマイクロフロントエンドへの活用について - mizdra\u0026rsquo;s blog\u003c/a\u003eに全部書かれていた。\u003c/p\u003e\n\u003cp\u003eイベント処理を後からロードするから、初期表示が速くなる、と。\u003c/p\u003e\n\u003cp\u003eフロントエンドの初期表示が問題にあるほど巨大なもの作ってないし、今のところは必要ないかな。\u003c/p\u003e","tags":["qwik"],"title":"qwik"},{"categories":null,"objectID":"b3aa5f79e485f172df30d2e442e723a2","permalink":"https://umemak.github.io/blog/posts/2022/11/05_swr_update/","publish_date":"2022-11-05T00:00:00Z","summary":"\u003cp\u003eSWRで更新系もできると思ったけれど、mutateで更新するのは、ローカルのキャッシュのようだ。\u003c/p\u003e\n\u003cp\u003eつまりPOSTやDELETEは別途実行して、その結果をローカルキャッシュに反映するのがmutate。\u003c/p\u003e\n\u003cp\u003e更新系API呼びつつキャッシュも最新化するというものではなさそう。残念。\u003c/p\u003e","tags":["swr"],"title":"SWRの更新系"},{"categories":null,"objectID":"2b1a3f8e61767e6b991ed471e50d6ce8","permalink":"https://umemak.github.io/blog/posts/2022/11/04_swr/","publish_date":"2022-11-04T00:00:00Z","summary":"\u003cp\u003e前から気になっていたけど使う機会がなかった\u003ca href=\"https://swr.vercel.app/ja\"\u003eデータ取得のための React Hooks ライブラリ – SWR\u003c/a\u003eを使ってみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://zenn.dev/mast1ff/articles/5b48a87242f9f0\"\u003eSWRを使おうぜという話2022\u003c/a\u003eを参考にやったら参照は簡単に実装できた。\u003c/p\u003e\n\u003cp\u003eGitpodでフロントとAPIが別ポートだとCORS問題とかそもそもポートを公開しないと到達できないとかあったけど、APIサーバーのCORS設定してAPI側のポート公開にしたらいけた。\u003c/p\u003e\n\u003cp\u003e更新系もできるようなので、それもやってみたい。\u003c/p\u003e","tags":["swr","next.js"],"title":"SWR使ってみた"},{"categories":null,"objectID":"46a9606b813ad3079b3c4a5bffb3cfd8","permalink":"https://umemak.github.io/blog/posts/2022/11/03_dependabot/","publish_date":"2022-11-03T00:00:00Z","summary":"\u003cp\u003e試しにexpoとかnextとか使ってみるのに作ったリポジトリでパッケージのセキュリティアラートが割とよく来るけど、放置気味だった。\u003c/p\u003e\n\u003cp\u003eきれいにしたいと思い立って、やってみた。\u003c/p\u003e\n\u003cp\u003eまず、\u003ccode\u003enpm update\u003c/code\u003eだとあまり解消しない。\nコンフリクトとか言われて、個別パッケージ指定してもやっぱりダメな感じ。正直よくわからない。\u003c/p\u003e","tags":["GitHub","npm"],"title":"GitHubのセキュリティアラートを片付ける"},{"categories":null,"objectID":"47fd279e9b75a31e5a53979eede7c045","permalink":"https://umemak.github.io/blog/posts/2022/11/02_ko/","publish_date":"2022-11-02T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/ko-build/ko\"\u003eko-build/ko: Build and deploy Go applications on Kubernetes\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGoのアプリケーションを、Dockerなしでコンテナ化できるツール。\u003c/p\u003e\n\u003cp\u003eでも作ったコンテナをローカルで実行するにはDockerが必要？\u003c/p\u003e\n\u003cp\u003eコンテナ実行環境とコンテナビルド環境を分けたいとき（どんな時？）に便利そう。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://ymotongpoo.hatenablog.com/entry/2021/12/22/090000\"\u003eGo製アプリケーションのコンテナ化にはkoを推したい - YAMAGUCHI::weblog\u003c/a\u003eが詳しい。\u003c/p\u003e","tags":["ko"],"title":"ko"},{"categories":null,"objectID":"290c866973e77e1878262dd198d34221","permalink":"https://umemak.github.io/blog/posts/2022/11/01_sam_ip/","publish_date":"2022-11-01T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://aws.amazon.com/jp/iam/identity-center/\"\u003eAWS IAM アイデンティティセンター (AWS SSO の後継)\u003c/a\u003eで新規ユーザーをワンタイムパスワード連携で作って、ログインしようとしたらできなかった。\u003c/p\u003e\n\u003cp\u003e設定したメールアドレスにメール認証を送って認証処理をしたら、ログインできるようになった。\u003c/p\u003e\n\u003cp\u003eそのあとも認証コードが設定メールアドレスに送られてきたりするので、メール使わずにユーザーを追加するのは無理っぽい。\u003c/p\u003e","tags":["aws"],"title":"AWS SSOの認証"},{"categories":null,"objectID":"94e87c5c7c682da28a91fde0e88505d7","permalink":"https://umemak.github.io/blog/posts/2022/10/31_sam_ip/","publish_date":"2022-10-31T00:00:00Z","summary":"\u003cp\u003eSAMを使ってデプロイしたLambdaの、リクエスト元のIPアドレスを制限したいとき。\u003c/p\u003e\n\u003cp\u003eLambdaに制限を入れるのではなく、API Gatewayの設定でいける。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://qiita.com/cony0413/items/18551d314b445a864e87\"\u003eapi gateway + samでapiの環境を作る(ip制限) - Qiita\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eここにたどり着くまでに、Lambdaをセキュリティグループに入れてみたりしたけど効かなかったりで割と苦労した。\u003c/p\u003e","tags":["aws","sam"],"title":"SAMでIP制限"},{"categories":null,"objectID":"7510d4bc6d723987a48ebaa8b83a6ac8","permalink":"https://umemak.github.io/blog/posts/2022/10/30_ffmpeg_sub/","publish_date":"2022-10-30T00:00:00Z","summary":"\u003cp\u003e\u003ccode\u003emovie.mp4\u003c/code\u003eに日本語字幕\u003ccode\u003ejpn.vtt\u003c/code\u003eと英語字幕\u003ccode\u003eeng.vtt\u003c/code\u003eを埋め込んだ\u003ccode\u003eout.mp4\u003c/code\u003eを作成するコマンド。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003effmpeg -i \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;movie.mp4\u0026#39;\u003c/span\u003e -i \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;jpn.vtt\u0026#39;\u003c/span\u003e -i \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;eng.vtt\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-map 0:v -map 0:a -map \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e -map \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-c:v copy -c:a copy -c:s mov_text \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-metadata:s:s:0 language\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ejpn \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-metadata:s:s:1 language\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eeng \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eout.mp4\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["ffmpeg"],"title":"ffmpegで複数言語の字幕を埋め込む"},{"categories":null,"objectID":"361a577afaae705a02189f17803ea0f7","permalink":"https://umemak.github.io/blog/posts/2022/10/29_sam/","publish_date":"2022-10-29T00:00:00Z","summary":"\u003cp\u003eSAM使ったらいい感じにLambdaできそうなので、やってみる。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html\"\u003eInstalling the AWS SAM CLI - AWS Serverless Application Model\u003c/a\u003e\nからインストーラーをダウンロードして、インストール。\u003c/p\u003e\n\u003cp\u003eVS Codeのターミナルからsamが実行できない（コマンドプロンプトからだとできる）。\u003c/p\u003e\n\u003cp\u003eいきなり躓いてやる気が。。\u003c/p\u003e\n\u003cp\u003eとりあえず、Windows版をアンインストールして、WSL2でLinux版をインストール。\u003c/p\u003e","tags":["aws","sam"],"title":"SAM入門"},{"categories":null,"objectID":"b7fa5d4ff9d7c34dd826c9cc8618db03","permalink":"https://umemak.github.io/blog/posts/2022/10/28_lambda_deploy/","publish_date":"2022-10-28T00:00:00Z","summary":"\u003cp\u003eAWSにLambdaをデプロイする方法、いくつかあると思うのだけれど、最近の主流は何だろう。\u003c/p\u003e\n\u003cp\u003eデプロイにも2段階あると思って、0→1のLambda自体作成するときと、それ以降の更新と。\u003c/p\u003e\n\u003cp\u003e初回はCloudFormationとかTerraformとか？\u003c/p\u003e\n\u003cp\u003eSAM使ったら最初もそれ以降もまとめていける？CDKは？？\u003c/p\u003e\n\u003cp\u003eうーん、面倒。。\u003c/p\u003e","tags":["aws"],"title":"Lambdaのデプロイ"},{"categories":null,"objectID":"967bd549a72a1dcf1bf5622f2a6ce386","permalink":"https://umemak.github.io/blog/posts/2022/10/27_localstack/","publish_date":"2022-10-27T00:00:00Z","summary":"\u003cp\u003eaws-lambda-go-api-proxy でAPI作るとして、ローカルでのテスト環境どうするか問題。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/localstack/localstack\"\u003elocalstack/localstack: 💻 A fully functional local AWS cloud stack. Develop and test your cloud \u0026amp; Serverless apps offline!\u003c/a\u003eを使うのが鉄板だと思うんだけど。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.localstack.cloud/aws/apigatewayv2/\"\u003eAPI Gateway V2\u003c/a\u003eはPro版じゃないと使えない。\u003c/p\u003e\n\u003cp\u003eAWS環境にデプロイして動かすのが簡単なのかなぁ。\u003c/p\u003e","tags":["aws"],"title":"GoとLambda"},{"categories":null,"objectID":"d00dd0cff7b786f5c4aa11d6b5416f8b","permalink":"https://umemak.github.io/blog/posts/2022/10/26_lambda_go/","publish_date":"2022-10-26T00:00:00Z","summary":"\u003cp\u003e昨日、API GW+Lambdaの可能性について調べたとき、aws-lambda-go-api-proxy というものを見つけた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/awslabs/aws-lambda-go-api-proxy\"\u003eawslabs/aws-lambda-go-api-proxy: lambda-go-api-proxy makes it easy to port APIs written with Go frameworks such as Gin (https://gin-gonic.github.io/gin/ ) to AWS Lambda and Amazon API Gateway.\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e良さそうだけど、PRが結構たまっているなーと思い、よく見てみると\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/awslabs/aws-lambda-go-api-proxy/issues/143\"\u003eDeprecation in favor of Lambda Web Adapter · Issue #143 · awslabs/aws-lambda-go-api-proxy\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eとのことで\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/awslabs/aws-lambda-web-adapter\"\u003eawslabs/aws-lambda-web-adapter: Run web applications on AWS Lambda\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eの使用を勧められていた。\u003c/p\u003e","tags":["aws"],"title":"GoとLambda"},{"categories":null,"objectID":"5ed55a145d9113b520fdd81278c46462","permalink":"https://umemak.github.io/blog/posts/2022/10/25_aws_container/","publish_date":"2022-10-25T00:00:00Z","summary":"\u003cp\u003eAPIコンテナ動かすのにどのインスタンスタイプが良いのか。\u003c/p\u003e\n\u003cp\u003eECS+Fargateも良さそうだけど、動かしっぱなしの用途だとEC2とそんなに料金も変わらないかな。\u003c/p\u003e\n\u003cp\u003eApp Runnerがゼロスケールできれば一番手間がなさそうだけど、最低1つは動いてるっぽい。\u003c/p\u003e\n\u003cp\u003eAPI GW+Lambdaだと、使わないときは料金抑えられそうだけど、構成が複雑になりそう（印象）。\u003c/p\u003e","tags":["aws"],"title":"コンテナ動かす場所"},{"categories":null,"objectID":"07f33abd171334cc8a0784297d3be884","permalink":"https://umemak.github.io/blog/posts/2022/10/24_github_profile_readme/","publish_date":"2022-10-24T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://docs.github.com/ja/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme#adding-a-profile-readme\"\u003eManaging your profile README - GitHub Docs\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e昔リポジトリ作って、反映されないじゃんって放置してた。\u003c/p\u003e\n\u003cp\u003e久しぶりに見てみたら\u003ccode\u003eShare to profile\u003c/code\u003eボタンがあって、押したら有効化された。\n見落としていたのかなぁ。。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://metrics.lecoq.io/\"\u003eMetrics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/anuraghazra/github-readme-stats\"\u003eanuraghazra/github-readme-stats: Dynamically generated stats for your github readmes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eの2つを導入してみた。\u003c/p\u003e\n\u003cp\u003eMost Used Languagesを見て、Goが意外と低かった。もっと使おう。\u003c/p\u003e","tags":["github"],"title":"profileリポジトリ"},{"categories":null,"objectID":"d57055f10c83f5b47e53fa69d27a5ac8","permalink":"https://umemak.github.io/blog/posts/2022/10/24_vosk_vtt/","publish_date":"2022-10-24T00:00:00Z","summary":"\u003cp\u003eVoskのサンプルで、WebVTT生成があったのでやってみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/alphacep/vosk-api/blob/master/python/example/test_webvtt.py\"\u003evosk-api/test_webvtt.py at master · alphacep/vosk-api\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eサンプルコードのmodel部分だけ変更でいけた。\u003c/p\u003e\n\u003cp\u003eあと\u003ccode\u003epip install webvtt-py\u003c/code\u003eの実行も必要だった。\u003c/p\u003e\n\u003cp\u003e便利なライブラリがあってPythonが流行るのがわかった気がする。\u003c/p\u003e","tags":["vosk"],"title":"VoskでWebVTT作成"},{"categories":null,"objectID":"86174af94e4843a3c51db5915a365062","permalink":"https://umemak.github.io/blog/posts/2022/10/23_dotfiles/","publish_date":"2022-10-23T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gitpod.io/preferences\"\u003ePreferences — Gitpod\u003c/a\u003eを見ていて、Dotfilesを指定できる項目があるのに気づいた。\u003c/p\u003e\n\u003cp\u003eそういえば昔作ったような気がするな、と思い見てみたら、\u003ccode\u003e.gitconfig\u003c/code\u003eしかなかった。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/dotfiles\"\u003eumemak/dotfiles\u003c/a\u003e\u003c/p\u003e","tags":[],"title":"dotfilesリポジトリ"},{"categories":null,"objectID":"8ea1cea1902aea03e405d45ccf18e428","permalink":"https://umemak.github.io/blog/posts/2022/10/22_python_async/","publish_date":"2022-10-22T00:00:00Z","summary":"\u003cp\u003e今の作りだと、翻訳や英語再生の間、待たされる気がするので、翻訳APIから先は非同期で実行できないか調べてみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpoint-lab.co.jp/article/202208/23186/\"\u003e【Python】同期処理をラッピングして非同期処理にする方法 – 株式会社シーポイントラボ ｜ 浜松のシステム・RTK-GNSS開発\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://ja.stackoverflow.com/questions/70119/asyncio%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E7%B0%A1%E5%8D%98%E3%81%AA%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%A7%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%82%8B\"\u003epython - asyncioを使った簡単なプログラムでエラーがでる。 - スタック・オーバーフロー\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/maueki/items/8f1e190681682ea11c98\"\u003epython3 の async/awaitを理解する - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dev.classmethod.jp/articles/python-asyncio/\"\u003easyncioでPythonの非同期処理を書いてみる | DevelopersIO\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003easyncio\u003c/code\u003eをimportして、関数定義に\u003ccode\u003easync\u003c/code\u003eつけて、メイン処理は\u003ccode\u003easyncio.run\u003c/code\u003eで呼び出し、非同期処理を\u003ccode\u003eawait\u003c/code\u003eで呼び出せばいけるっぽい。\u003c/p\u003e","tags":["python"],"title":"Pythonで非同期処理"},{"categories":null,"objectID":"ba518de0e692edab118163c50e0c5b53","permalink":"https://umemak.github.io/blog/posts/2022/10/21_pyttsx3/","publish_date":"2022-10-21T00:00:00Z","summary":"\u003cp\u003e日本語音声→日本語文字列→英語文字列 ができたので、英語文字列→英語音声 も追加してみたくなって、やってみた。\u003c/p\u003e\n\u003cp\u003ePythonでオフラインでできるものをググって見つかったのが、\u003ca href=\"https://github.com/nateshmbhat/pyttsx3\"\u003enateshmbhat/pyttsx3: Offline Text To Speech synthesis for python\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003eこれもREADMEに書いてあるように書くだけで実装できた。\u003c/p\u003e\n\u003cp\u003eあとは翻訳の部分をオフラインでできれば、完全オフライン化ができるのでは。と思い検索したら、先駆者がいた。\u003c/p\u003e","tags":["python"],"title":"pyttsx3"},{"categories":null,"objectID":"09d0b192ef9431b59a26a23d3a702ad6","permalink":"https://umemak.github.io/blog/posts/2022/10/20_vosk_python/","publish_date":"2022-10-20T00:00:00Z","summary":"\u003cp\u003enode.jsで使うのあきらめて、Pythonで試してみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/alphacep/vosk-api/blob/master/python/example/test_microphone.py\"\u003evosk-api/test_microphone.py at master · alphacep/vosk-api\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eあっさり使えた。\u003c/p\u003e\n\u003cp\u003eついでに、\u003ca href=\"https://qiita.com/tanabee/items/c79c5c28ba0537112922\"\u003e3 分で作る無料の翻訳 API with Google Apps Script - Qiita\u003c/a\u003eを参考に、日本語→英語翻訳APIを立てて連携してみた。\u003c/p\u003e\n\u003cp\u003ePythonの文字列操作するのにちょっと手間取ったけど、意外とすんなりリアルタイム音声認識＆翻訳が出来上がってびっくりした。\u003c/p\u003e","tags":["Vosk","python"],"title":"Vosk使ってみる2"},{"categories":null,"objectID":"3fb3bf6438df000c7ba7c85674bfde16","permalink":"https://umemak.github.io/blog/posts/2022/10/19_vosk/","publish_date":"2022-10-19T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://qiita.com/youtoy/items/649dcad9ecccf75a9d01\"\u003e日本語音声のマイク入力をオフラインでリアルタイム音声認識：「VOSK」を JavaScript（Node.js）で扱う - Qiita\u003c/a\u003e\nこちらを参考に。\u003c/p\u003e\n\u003cp\u003e早速\u003ccode\u003enpm install vosk\u003c/code\u003eしたところ、GitbashだとVisualStudioが見つからない的なエラー。WSL2環境で動かしたら通った。\u003c/p\u003e\n\u003cp\u003eそしてサンプルをコピーして実行すると、エラー。\nマイク入力デバイスが見つからないっぽい。WSL環境からは見えないのかも。\u003c/p\u003e","tags":["Vosk"],"title":"Vosk使ってみる"},{"categories":null,"objectID":"330977a3164637d3045e0e783cff263b","permalink":"https://umemak.github.io/blog/posts/2022/10/18_gitpod_mysql/","publish_date":"2022-10-18T00:00:00Z","summary":"\u003cp\u003eGitpod上で開発をするにあたって、DBが欲しかったのでMySQLが使えないか調べてみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.gitpod.io/docs/configure/workspaces/workspace-image#configure-a-public-docker-image\"\u003eWorkspace Image\u003c/a\u003eにあるように、\u003ccode\u003e.gitpod.yml\u003c/code\u003eファイルを作成してimageを指定すれば良いようだ。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimage\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003egitpod/workspace-mysql\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eファイル作成してリポジトリにプッシュしてワークスペースを停止→スタートしてみる。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ mysql -v\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebash: mysql: command not found\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e再起動では反映されないようだ。\u003c/p\u003e","tags":["Gitpod"],"title":"GitpodでMySQLを使う"},{"categories":null,"objectID":"14769c7e442fb9509144ff127aa8cbf3","permalink":"https://umemak.github.io/blog/posts/2022/10/16_gitlab_gitpod/","publish_date":"2022-10-16T00:00:00Z","summary":"\u003cp\u003eGitpodの機能見ていたら、GitHub以外にもGitLabとBitbucketとも連携できるのに気づいて、やってみた。\u003c/p\u003e\n\u003cp\u003e最初にGitLabでアカウント作ろうとしたら、途中から先に進めなくなって断念。\u003c/p\u003e\n\u003cp\u003eBitbucketは、以前AWSの何かを試したときに作ったアカウントが生きていたので、そのまま使った。\u003c/p\u003e\n\u003cp\u003e連携自体は、リポジトリ作成してURLの先頭に\u003ccode\u003egitpod.io/#\u003c/code\u003eをつけるというGitHubと同じやり方でOK。\u003c/p\u003e","tags":["Bitbucket","Gitpod"],"title":"BitbucketとGitpod"},{"categories":null,"objectID":"72626906df7fc63eb345f6ff151addaf","permalink":"https://umemak.github.io/blog/posts/2022/10/15_vosk/","publish_date":"2022-10-15T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://zenn.dev/wok/articles/0035_ffmpeg_wasm_on_github_pages\"\u003effmpeg.wasmをgithub pagesで動かすよ\u003c/a\u003eを読んでいて、Offline Transcribeを見に行ったら\u003ca href=\"https://github.com/ccoreilly/vosk-browser\"\u003eccoreilly/vosk-browser: A speech recognition library running in the browser thanks to a WebAssembly build of Vosk\u003c/a\u003e経由して\u003ca href=\"https://github.com/alphacep/vosk-api\"\u003ealphacep/vosk-api: Offline speech recognition API for Android, iOS, Raspberry Pi and servers with Python, Java, C# and Node\u003c/a\u003eというものの存在を知った。\u003c/p\u003e\n\u003cp\u003e日本語での使用例もいくつか見つかった\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/youtoy/items/649dcad9ecccf75a9d01\"\u003e日本語音声のマイク入力をオフラインでリアルタイム音声認識：「VOSK」を JavaScript（Node.js）で扱う - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/kama_meshi/articles/517acebcdd1d61\"\u003e話題の音声認識ツールキット Vosk を試してみた\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dev.classmethod.jp/articles/vosk/\"\u003e[M1] 音声認識ツール Voskを動かす [Node] | DevelopersIO\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e簡単にできそうなので、今度試してみたい。\u003c/p\u003e","tags":["Vosk"],"title":"Vosk"},{"categories":null,"objectID":"db2ec8cae1178d2fe01e940c8bc8a3e4","permalink":"https://umemak.github.io/blog/posts/2022/10/14_wsl_make/","publish_date":"2022-10-14T00:00:00Z","summary":"\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Makefile\" data-lang=\"Makefile\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e.PHONY\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e mkdir\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003emkdir\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tmkdir -p ./work/\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003ea,b,c\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ make mkdir \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkdir -p ./work/\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003ea,b,c\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ ls work\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003ea,b,c\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eなんでや。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ rm -r work\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ mkdir -p ./work/\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003ea,b,c\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ ls work\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ea  b  c\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eこうなってほしい。\u003c/p\u003e\n\u003cp\u003e→make内では、デフォルトのシェルが\u003ccode\u003e/bin/sh\u003c/code\u003eになっているので、Makefileで\u003ccode\u003eSHELL=/bin/bash\u003c/code\u003eを書く必要がある。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://masahir0y.blogspot.com/2012/07/make_26.html\"\u003eとあるエンジニアの備忘log: Make のポータビリティについて考える\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/nassy20/items/3183cc17f36a3f21e333\"\u003eMakefileには使用するshellを定義すると良さそう - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["WSL"],"title":"WSLのmakeでmkdir"},{"categories":null,"objectID":"13654483d744c7ef4d4cb743019ebd05","permalink":"https://umemak.github.io/blog/posts/2022/10/13_prisma_openapi/","publish_date":"2022-10-13T00:00:00Z","summary":"\u003cp\u003ePrismaのドキュメント眺めていて、\u003ca href=\"https://www.prisma.io/blog/nestjs-prisma-rest-api-7D056s1BmOL0#set-up-swagger\"\u003eBuild a REST API with NestJS, Prisma, PostgreSQL and Swagger\u003c/a\u003eを見つけた。\u003c/p\u003e\n\u003cp\u003ePrismaというかNestJSの機能かもしれないけれど、OpenAPIドキュメントも表示できるっぽい。\u003c/p\u003e\n\u003cp\u003eこれでいい感が出てきた。\u003c/p\u003e","tags":["Prisma","OpenAPI"],"title":"PrismaとOpenAPI"},{"categories":null,"objectID":"adc8299048a6090c3c83cdf1a7fb5638","permalink":"https://umemak.github.io/blog/posts/2022/10/12_prisma/","publish_date":"2022-10-12T00:00:00Z","summary":"\u003cp\u003e先日のスキーマ指向開発の一つの解になるかもしれない。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.prisma.io/\"\u003ePrisma | Next-generation ORM for Node.js \u0026amp; TypeScript\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e存在は知っていたのだけれど、言語がTypeScriptということでちゃんとチェックしていなかった。\u003c/p\u003e\n\u003cp\u003eフロントをNext.jsとかTypeScript系で作るなら、APIサーバー側もTypeScriptで書けたほうが効率が良いかもしれない。\u003c/p\u003e","tags":["Prisma"],"title":"Prisma"},{"categories":null,"objectID":"9e95239e788c79c6005d153598807021","permalink":"https://umemak.github.io/blog/posts/2022/10/11_openapi_template/","publish_date":"2022-10-11T00:00:00Z","summary":"\u003cp\u003e以前、OpenAPI generatorの出力をカスタマイズするにはJavaを読み解かねば・・みたいなことを書いていた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://umemak.github.io/blog/posts/2022/08/04_openapi_sqlc/\"\u003eOpenAPIとsqlcの連携 - umemak\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://umemak.github.io/blog/posts/2022/08/05_openapi_generator_src/\"\u003eOpenAPI generatorのソース - umemak\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e公式の\u003ca href=\"https://openapi-generator.tech/docs/templating/\"\u003eUsing Templates\u003c/a\u003eによると、\u003ccode\u003eauthor template\u003c/code\u003eを指定すれば組み込みテンプレートが出力されるとのこと。で、出力されたディレクトリを\u003ccode\u003e-t\u003c/code\u003eで指定すると、そこにあるテンプレートを使って生成される。\u003c/p\u003e","tags":["OpenAPI"],"title":"OpenAPI generatorのテンプレート"},{"categories":null,"objectID":"466db0acceac98b03c97f6c5d3b7b679","permalink":"https://umemak.github.io/blog/posts/2022/10/10_schema/","publish_date":"2022-10-10T00:00:00Z","summary":"\u003cp\u003e最近、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDBのCREATE TABLE\u003c/li\u003e\n\u003cli\u003eOpenAPIのYAML\u003c/li\u003e\n\u003cli\u003egRPCのproto\u003c/li\u003e\n\u003cli\u003eGraphQLのschema\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこの辺の定義って共通している部分が多いというか、どれか一つから相互変換ができれば管理も楽なんじゃないかなと思う。\u003c/p\u003e\n\u003cp\u003e項目の追加削除するたびに修正漏れがないか気にするのは生産的ではないなー、と。\u003c/p\u003e\n\u003cp\u003e何となく、DBの定義を基準にするのが良いような気がするのだけど、どうなんだろう。\u003c/p\u003e","tags":[],"title":"スキーマ指向開発"},{"categories":null,"objectID":"de9d202e3f295f6060e298e830f9c652","permalink":"https://umemak.github.io/blog/posts/2022/10/09_nocode_book/","publish_date":"2022-10-09T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B09B6Z85MF\"\u003eノーコードシフト プログラミングを使わない開発へ | 安藤昭太, 宮崎 翼, NoCode Ninja | 工学 | Kindleストア | Amazon\u003c/a\u003eを読んだ。\u003c/p\u003e\n\u003cp\u003e紹介されていたツールで気になったもの\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.adalo.com/\"\u003eAdalo - Build Your Own No Code App\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://bubble.io/\"\u003eThe best way to build web apps without code | Bubble\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["nocode"],"title":"ノーコード"},{"categories":null,"objectID":"5aed48078d6721fc4b0393f616d2beee","permalink":"https://umemak.github.io/blog/posts/2022/10/08_cors/","publish_date":"2022-10-08T00:00:00Z","summary":"\u003cp\u003eopenapi-generator-cliのtypescript-axiosで生成したクライアントでConfigureにaccessTokenをセットして取得APIを叩いたらうまく通信できなかった。\u003c/p\u003e\n\u003cp\u003eAPI側のログにはOPTIONSのリクエストが来ていて、200で返している。\u003c/p\u003e\n\u003cp\u003echiのcors.OptionsのAllowedMethodsにOPTIONSは入っているので、これは想定通り。なのにそのあとのGETリクエストが来ていない。\u003c/p\u003e","tags":["chi"],"title":"CORS対応"},{"categories":null,"objectID":"6e944cf934d5f87a2278347b8ed8660b","permalink":"https://umemak.github.io/blog/posts/2022/10/07_nextjs/","publish_date":"2022-10-07T00:00:00Z","summary":"\u003cp\u003eログイン状態によってヘッダーの表示を変えたくて、何も考えずにクッキーの有無でif書いてたらエラーになった。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://nishinatoshiharu.com/next-prerendering-cookie/\"\u003e【Next.js】Warningが発生する誤ったCookieの使用例と改善方法 | Enjoy IT Life\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこのページを参考に解決。\u003c/p\u003e\n\u003cp\u003eNextの言いたいこともわかるけど、いい感じにやってくれたらいいのに、とも思う。\u003c/p\u003e","tags":["nextjs"],"title":"Next.jsのエラー対応"},{"categories":null,"objectID":"2bc98c9bc1aa9249882ee0e4b9258605","permalink":"https://umemak.github.io/blog/posts/2022/10/06_wsl2/","publish_date":"2022-10-06T00:00:00Z","summary":"\u003cp\u003eスリープ後にWSLが応答しなくなる現象はまだ起きていないけれど、すぐ本体が熱くなってファンが回るのは変わらず。\u003c/p\u003e\n\u003cp\u003e頻繁にSSDの警告も出るし大丈夫なのかなこれ。。\u003c/p\u003e","tags":["wsl"],"title":"WSL2その後"},{"categories":null,"objectID":"be5f404a1db5793c17f33e146c6b43aa","permalink":"https://umemak.github.io/blog/posts/2022/10/05_wsl2_install/","publish_date":"2022-10-05T00:00:00Z","summary":"\u003cp\u003eWindows11 22H2が降ってきたので、インストールした。\u003c/p\u003e\n\u003cp\u003e特に問題なさそうなので、WSL2を再インストールしようとしたところ\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eWSL 2 を実行するには、カーネル コンポーネントの更新が必要です。詳細については https://aka.ms/wsl2kernel を参照してください\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eとのメッセージが。\u003c/p\u003e\n\u003cp\u003eリンク先で「x64 マシン用 WSL2 Linux カーネル更新プログラム パッケージ」をダウンロードして、実行。\u003c/p\u003e","tags":["wsl"],"title":"WSL2の再インストール"},{"categories":null,"objectID":"73d1509a7e0fbc33581e351c997758d3","permalink":"https://umemak.github.io/blog/posts/2022/10/04_dockerfile/","publish_date":"2022-10-04T00:00:00Z","summary":"\u003cp\u003egolangのベースイメージにnodejsを入れたくて、\n\u003ca href=\"https://dev.to/aashishpanthi/step-by-step-instructions-to-install-node-and-npm-using-linux-binaries-1e0h\"\u003eStep by step instructions to install node and npm using Linux binaries - DEV Community 👩‍💻👨‍💻\u003c/a\u003e\nこの手順見ながらやってみていたのだけれど、\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Dockerfile\" data-lang=\"Dockerfile\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eRUN\u003c/span\u003e cp -r ./\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003elib,share,include,bin\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e /usr\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eでファイル未存在のエラーになってしまった。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Dockerfile\" data-lang=\"Dockerfile\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eRUN\u003c/span\u003e cp -r ./lib /usr\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eRUN\u003c/span\u003e cp -r ./share /usr\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eRUN\u003c/span\u003e cp -r ./include /usr\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eRUN\u003c/span\u003e cp -r ./bin /usr\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eとすると通るので、ファイルが存在しないわけではなく、ブレース展開ができていないらしい。\u003c/p\u003e","tags":["docker"],"title":"Dockerfileでブレース展開"},{"categories":null,"objectID":"16c080c2ac0d0e3649928b0a7f3260e6","permalink":"https://umemak.github.io/blog/posts/2022/10/03_wsl_uninstall/","publish_date":"2022-10-03T00:00:00Z","summary":"\u003cp\u003eいいかげん改善しないので、WSLをアンインストールしてみた。\u003c/p\u003e\n\u003cp\u003eWSLがないと使えないDocker Desktopもついでに消した。\u003c/p\u003e\n\u003cp\u003eこれでしばらく運用してみて、スリープ後の負荷上昇（地味に内部の温度上昇もやばい気がしている）が落ち着けば、またインストールしなおしてみようかと。\u003c/p\u003e\n\u003cp\u003eDockerがないとちょっとしたツールとか（openapi-generator）動かせないのが不便だけど、仕方ない。\u003c/p\u003e","tags":["wsl"],"title":"WSL2アンインストール"},{"categories":null,"objectID":"e78b4586eaf194a849be3c904c229f88","permalink":"https://umemak.github.io/blog/posts/2022/10/02_api_gateway/","publish_date":"2022-10-02T00:00:00Z","summary":"\u003cp\u003eAPI GatewayにOpenAPIの定義を適用できる。\n\u003ca href=\"https://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/api-gateway-import-api.html\"\u003eOpenAPI を使用した REST API の設定 - Amazon API Gateway\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eAPI Gatewayの後ろにLambdaを使えば、EC2とかでGoのコンテナ動かすより安上がりになるのではないか？という思い付き。\u003c/p\u003e\n\u003cp\u003eこの場合、APIサーバーはどういう構成で作るのかイメージがわかない。\u003c/p\u003e\n\u003cp\u003e現状は、openapi-generatorで生成したmodelやらを使ってやり取りしているが、lambdaだとエントリーポイントごとにmainパッケージを用意する？\u003c/p\u003e","tags":["aws","OpenAPI"],"title":"OpenAPIとAPI Gateway"},{"categories":null,"objectID":"a434bf22923f6012a6108c00403f186b","permalink":"https://umemak.github.io/blog/posts/2022/10/01_docker_gitbash/","publish_date":"2022-10-01T00:00:00Z","summary":"\u003cp\u003eWSL2が不安定なので、開発環境をGitBash使うようにして、おおむね問題なかったのだが、Dockerでローカルをマウントして使うときに問題が。\u003c/p\u003e\n\u003cp\u003eOpenAPIのコード生成するときに\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edocker run --rm \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -v \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003ePWD\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e:/local openapitools/openapi-generator-cli generate \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -i /local/openapi.yml \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -g go-server \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --additional-properties\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003erouter\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003echi,featureCORS\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003etrue \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -o /local/out\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eだと\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eerror\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e The spec file is not found: C:/Program Files/Git/local/openapi.yml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eerror\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e Check the path of the OpenAPI spec and try again.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eこんなエラーになる。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/docker-archive/toolbox/issues/673\"\u003eMount volume doesn\u0026rsquo;t work on Windows 10 using git-bash · Issue #673 · docker-archive/toolbox\u003c/a\u003eを参考に、\u003ccode\u003eMSYS_NO_PATHCONV=1\u003c/code\u003eをつけたら動いた。\u003c/p\u003e","tags":["gitbash","docker"],"title":"GitBashでDockerでMount"},{"categories":null,"objectID":"3b9ccec0966dceda1baf8f5d417d48fd","permalink":"https://umemak.github.io/blog/posts/2022/09/30_wsl/","publish_date":"2022-09-30T00:00:00Z","summary":"\u003cp\u003eWSL2の不調の影響か、Docker Desktopも応答がなくなることが多い。\u003c/p\u003e\n\u003cp\u003eせっかくのノートPCなのに、毎回シャットダウンする運用はしたくないなぁ。\u003c/p\u003e\n\u003cp\u003eWindows11の新しいの入れたら改善したりするのかしら。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://pc.watch.impress.co.jp/docs/topic/feature/1441763.html\"\u003e【特集】ついに出た！Windows 11「22H2」の変更点まとめ。どこが変わって何が新しくなったのか？ - PC Watch\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["wsl","docker"],"title":"Docker不調"},{"categories":null,"objectID":"eb8934d74a94cca93eb2f571241c6688","permalink":"https://umemak.github.io/blog/posts/2022/09/29_lamp/","publish_date":"2022-09-29T00:00:00Z","summary":"\u003cp\u003e少し前、Webシステムの開発といえばLAMP（Linux、Apache、MySQL、PHP/Perl）だったものだけれど、最近だとどうなんだろう、と思った。\u003c/p\u003e\n\u003cp\u003eLinuxは変わらないとしても、実行環境という意味ではContainerとかCloudが今風かもしれない。\u003c/p\u003e\n\u003cp\u003eApacheはもうNginxにだいぶシェア取られたのだろうか。\u003c/p\u003e","tags":[],"title":"LAMPを今風に"},{"categories":null,"objectID":"f85c83d2f9f3581a9497e46f3166a67e","permalink":"https://umemak.github.io/blog/posts/2022/09/28_mui_datepicker/","publish_date":"2022-09-28T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://mui.com/x/api/date-pickers/desktop-date-picker/\"\u003eDesktopDatePicker API - MUI X\u003c/a\u003eを使いたいが、その他のフォーム項目は\u003ca href=\"https://react-hook-form.com/jp/\"\u003eホーム | React Hook Form - Simple React forms validation\u003c/a\u003eを使っていたので、合わせて使いたい。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://thinkami.hatenablog.com/entry/2021/12/19/231900\"\u003eReact + React Hook Form v7 なフォームに、MUI v5 の DateTime Picker を組み込んでみた - メモ的な思考的な\u003c/a\u003eを見ながらやってみて、いい感じにできたと思う。\n順を追って実装されていくのがわかりやすかった。\u003c/p\u003e\n\u003cp\u003eあとから\u003ca href=\"https://zenn.dev/longbridge/articles/640710005e11b1#datepicker-%E3%81%A8%E3%81%AE%E9%80%A3%E6%90%BA\"\u003eMUI v5 + React Hook Form v7 で、よく使うコンポーネント達を連携してみる\u003c/a\u003eも見つけて読んでみた。\n考慮しないといけないところがあるようだ。\u003c/p\u003e","tags":["mui"],"title":"MUI DesktopDatePicker + react-hook-form"},{"categories":null,"objectID":"0196b06371f009e1fa8be7db009cb633","permalink":"https://umemak.github.io/blog/posts/2022/09/27_mui/","publish_date":"2022-09-27T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://mui.com/\"\u003eMUI: The React component library you always wanted\u003c/a\u003eを使い始めてみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://tanstack.com/table/v8\"\u003eTanStack Table | React Table, Solid Table, Svelte Table, Vue Table\u003c/a\u003eを\u003ca href=\"https://mui.com/material-ui/react-table/#basic-table\"\u003eReact Table component - Material UI\u003c/a\u003eに置き換えてみたり。\u003c/p\u003e\n\u003cp\u003eimportする部品が多いけど、使い勝手は悪くない感触。importの多さがとっつきにくさ増してると思う。\u003c/p\u003e","tags":["mui"],"title":"MUI入門"},{"categories":null,"objectID":"98e00c8ec381314300da4226d5311147","permalink":"https://umemak.github.io/blog/posts/2022/09/26_react_admin/","publish_date":"2022-09-26T00:00:00Z","summary":"\u003cp\u003eReact Admin使ってみて、そのまま使うには便利なんだけど、ちょっと逸れたことしようとすると詰む印象。\u003c/p\u003e\n\u003cp\u003eAPIをReact Adminに寄せていかないといけないというか。\u003c/p\u003e\n\u003cp\u003eそれはそれでAPIを正しい形に矯正することができそうだけれど、楽をしようとしてるところにこれは悩ましい。\u003c/p\u003e","tags":["react"],"title":"React Adminその2"},{"categories":null,"objectID":"cc4a5254f4b8d2ffe6e257c4c1de38d2","permalink":"https://umemak.github.io/blog/posts/2022/09/25_react_admin/","publish_date":"2022-09-25T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://marmelab.com/react-admin/\"\u003eReact Admin - Open-Source Framework for B2B applications\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://zenn.dev/engstt/articles/bcdd5c4c3f5b29\"\u003ereact-adminを使って5分で作るハイカラDashboard\u003c/a\u003eを参考に、やってみた。\u003c/p\u003e\n\u003cp\u003e本当はNext.jsでやりたかったので、\u003ca href=\"https://marmelab.com/blog/2022/02/02/bootstrap-your-react-admin-project-with-nextjs.html\"\u003eHow to Run React-Admin On Next.Js\u003c/a\u003eも試してみたのだけど、うまくいかなかった。\u003c/p\u003e\n\u003cp\u003e→公式の\u003ca href=\"https://marmelab.com/react-admin/NextJs.html\"\u003eReact-admin - My First Project Tutorial\u003c/a\u003eを見ながらやったらできた。\u003c/p\u003e\n\u003cp\u003eOpenAPIで生成したサーバーだと、\u003ccode\u003eX-Total-Count\u003c/code\u003eヘッダーがないとエラーになったので、\u003ccode\u003erouters.go\u003c/code\u003eに追加した。\u003c/p\u003e","tags":["react"],"title":"React Admin"},{"categories":null,"objectID":"2e98fd917974c2acc4d1150a8e78f825","permalink":"https://umemak.github.io/blog/posts/2022/09/24_wsl_reboot/","publish_date":"2022-09-24T00:00:00Z","summary":"\u003cp\u003e最近、Inspiron13がスリープから復帰した後、高確率でWSL2が応答しなくなっている。\u003c/p\u003e\n\u003cp\u003ePC再起動すれば直るのだけど、面倒。\u003c/p\u003e\n\u003cp\u003eWSLだけ再起動でも直ることがわかった。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewsl --shutdown\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eヘルプでは\u003ccode\u003e直ちに、すべての実行中の配布および WSL 2 軽快なユーティリティの仮想マシンを終了します。\u003c/code\u003eと書かれているが（軽快なとは・・・？）、再起動してくる。\u003c/p\u003e","tags":["wsl"],"title":"WSL2の再起動"},{"categories":null,"objectID":"f49588a90502bc2a1caf0bfe8756e7a6","permalink":"https://umemak.github.io/blog/posts/2022/09/23_react_table/","publish_date":"2022-09-23T00:00:00Z","summary":"\u003cp\u003eTanstack Table続き。\u003c/p\u003e\n\u003cp\u003eとりあえず、公式のサンプルのように実装したら、動いた。\u003c/p\u003e\n\u003cp\u003eAPIから取得したデータを使おうとすると、エラーになる。\nuseEffectを外してみたら、APIがすごい勢いでたたかれ続けた。\nuseEffectを戻したら、エラー出ずに表示された。\u003c/p\u003e\n\u003cp\u003e？？？\u003c/p\u003e\n\u003cp\u003eAPIサーバーを停止してみると、またエラーになった。\u003c/p\u003e","tags":["react"],"title":"Reactでテーブルを使う3"},{"categories":null,"objectID":"fe97cac9ee8202ac4f81b368949240f2","permalink":"https://umemak.github.io/blog/posts/2022/09/22_react_table/","publish_date":"2022-09-22T00:00:00Z","summary":"\u003cp\u003e昨日、react-tableがGitHubで別の名前になってて気になっていた件。\u003c/p\u003e\n\u003cp\u003e最近react-tableから名前が変わったらしい。\n\u003ca href=\"https://zenn.dev/kage1020/articles/f849c13039f384\"\u003eTanStack/tableを使ってみた感想\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eということでreact-table改めTanStack/Tableを導入してみた。\u003c/p\u003e\n\u003cp\u003eエラーが出て思ったように動かない。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eTypeError: Cannot read properties of null (reading 'useState')\u003c/code\u003eとか\n\u003ccode\u003eError: Rendered more hooks than during the previous render.\u003c/code\u003eとか。\u003c/p\u003e","tags":["react"],"title":"Reactでテーブルを使う2"},{"categories":null,"objectID":"99970fd255fa12e76c5146a3f431b47e","permalink":"https://umemak.github.io/blog/posts/2022/09/21_react_table/","publish_date":"2022-09-21T00:00:00Z","summary":"\u003cp\u003eフォームの次は、テーブルを使って一覧表示したい。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.npmjs.com/package/react-table\"\u003ereact-table - npm\u003c/a\u003eが良いのかな？\u003c/p\u003e\n\u003cp\u003eGitHubだと名前が違ってたりするけど。。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/TanStack/table\"\u003eTanStack/table: 🤖 Headless UI for building powerful tables \u0026amp; datagrids for TS/JS - React-Table, Vue-Table, Solid-Table, Svelte-Table\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e要調査。\u003c/p\u003e","tags":["react"],"title":"Reactでテーブルを使う"},{"categories":null,"objectID":"d522d0c2b47902cdb87b55d91f1733b0","permalink":"https://umemak.github.io/blog/posts/2022/09/20_react_form/","publish_date":"2022-09-20T00:00:00Z","summary":"\u003cp\u003eNext.jsで管理画面的なものを作るのに、フォームをどうするか調べた。\u003c/p\u003e\n\u003cp\u003e先日読んだ本では、\u003ccode\u003ereact-hook-form\u003c/code\u003eを使っていたので、そのようにしてみる。\u003c/p\u003e\n\u003cp\u003e思った以上に簡単に実装できた。\u003c/p\u003e\n\u003cp\u003e積極的に使ていきたい。\u003c/p\u003e","tags":["react"],"title":"Reactでフォームを使う"},{"categories":null,"objectID":"6d0e86adc3fa596417082c17b487e86d","permalink":"https://umemak.github.io/blog/posts/2022/09/19_openapi_typescript/","publish_date":"2022-09-19T00:00:00Z","summary":"\u003cp\u003e結局、いくつか動かして試してみた。\u003ccode\u003eadditional-properties\u003c/code\u003eは無指定で。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://openapi-generator.tech/docs/generators/typescript-fetch\"\u003eDocumentation for the typescript-fetch Generator\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eReferenceError: _ is not defined\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://openapi-generator.tech/docs/generators/typescript-node\"\u003eDocumentation for the typescript-node Generator\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eModule not found: Can't resolve 'request'\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003erequestパッケージは\u003ca href=\"https://github.com/request/request#deprecated\"\u003eDeprecated!\u003c/a\u003eらしい。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://openapi-generator.tech/docs/generators/typescript-axios\"\u003eDocumentation for the typescript-axios Generator\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eとりあえず動いた。\u003c/li\u003e\n\u003cli\u003eaxiosパッケージの追加インストールが必要。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eということで、typescript-axios でやってみようと思う。\u003c/p\u003e","tags":["TypeScript","OpenAPI"],"title":"OpenAPIのTypeScriptクライアント"},{"categories":null,"objectID":"f3e592544c936a5004d17c71d0f8af21","permalink":"https://umemak.github.io/blog/posts/2022/09/18_openapi_test/","publish_date":"2022-09-18T00:00:00Z","summary":"\u003cp\u003eE2Eテスト書くなら、OpenAPIのクライアントコードジェネレータ使って出力したもの使えばよいのでは？\nと思いついたので、どのクライアントにしようかと\u003ca href=\"https://openapi-generator.tech/docs/generators#client-generators\"\u003eGenerators List\u003c/a\u003eを眺める。\u003c/p\u003e\n\u003cp\u003eせっかくだからTypeScriptが良いなと思うが、11種類もあってどれが適切なのか判断付かない。\n実際に生成して使って比較すればよいのだろうけど、そこまで詳しくない言語でそれをやろうとすると挫折する気しかしない。\u003c/p\u003e","tags":["TypeScript","OpenAPI"],"title":"OpenAPIで生成したサーバーのテスト2"},{"categories":null,"objectID":"f496a176556487ce79e4857316b2fe0d","permalink":"https://umemak.github.io/blog/posts/2022/09/17_figma_book/","publish_date":"2022-09-17T00:00:00Z","summary":"\u003cp\u003e先日、\u003ca href=\"https://blog.adobe.com/jp/publish/2022/09/16/cc-intent-to-acquire-figma\"\u003eアドビはFigmaを買収する意向を表明しました。共同クリエイティビティは新時代へ\u003c/a\u003eというニュースを見て、セールで買って積んであった\u003ca href=\"https://www.amazon.co.jp/gp/product/B0B215PRN2\"\u003eAmazon.co.jp: Figma for UIデザイン アプリ開発のためのデザイン、プロトタイプ、ハンドオフ eBook : 沢田 俊介: 本\u003c/a\u003eを急いで読んだ。\u003c/p\u003e\n\u003cp\u003e一通りのFigmaでできることを知ることができたと思う。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://flutterflow.io/\"\u003eFlutterFlow\u003c/a\u003eと同じような感じかな。\u003c/p\u003e\n\u003cp\u003eアプリをFlutterで作るならFlutterFLowで、Reactで作るならFigma（＋Amplify）と使い分けられそう。\u003c/p\u003e","tags":["Figma"],"title":"Figma for UIデザイン"},{"categories":null,"objectID":"ca577bf8b6ee11303305a448185cd774","permalink":"https://umemak.github.io/blog/posts/2022/09/16_openapi_test/","publish_date":"2022-09-16T00:00:00Z","summary":"\u003cp\u003eよくわからない。\u003c/p\u003e\n\u003cp\u003eググるとhttptest使う例が良く出てくるけど、型が合わなくて組み立てられない。\u003c/p\u003e\n\u003cp\u003e仕方ないので、APIサーバー起動してhttp.NewRequestWithContextで叩いて結果を見るという、E2Eっぽいテストに落ち着きそう。\u003c/p\u003e","tags":["go","OpenAPI"],"title":"OpenAPIで生成したサーバーのテスト"},{"categories":null,"objectID":"fc3b6e68a917aea2542dcc25e7f27a08","permalink":"https://umemak.github.io/blog/posts/2022/09/15_chi_proxy/","publish_date":"2022-09-15T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://future-architect.github.io/articles/20220624a/\"\u003egrpc-gatewayでgRPCとREST両対応のサーバを作る | フューチャー技術ブログ\u003c/a\u003eのサンプルで\u003ca href=\"https://github.com/sayshu-7s/grpc-gateway-example/blob/9c97ffcb33ebfbe89610c32aa4ed0147eef9f4c9/cmd/gateway/main.go#L36\"\u003emux.Handle(\u0026quot;/docs/\u0026quot;, docsProxy)\u003c/a\u003eとなっているところを、\u003ca href=\"https://github.com/go-chi/chi\"\u003ego-chi/chi: lightweight, idiomatic and composable router for building Go HTTP services\u003c/a\u003eを使っているので\u003ccode\u003erouter.Handle(\u0026quot;/docs/\u0026quot;, docsProxy)\u003c/code\u003eと書いたところ、docsは見れるのに、cssやjsが404で見れなくて何でだろうと思った。\u003c/p\u003e","tags":["go","chi"],"title":"chiでproxy"},{"categories":null,"objectID":"9297327738b3b0bc427db4bf9ccbd469","permalink":"https://umemak.github.io/blog/posts/2022/09/14_proto/","publish_date":"2022-09-14T00:00:00Z","summary":"\u003cp\u003e昨日のエラーは、\u003ca href=\"https://github.com/grpc-ecosystem/grpc-gateway\"\u003egrpc-ecosystem/grpc-gateway: gRPC to JSON proxy generator following the gRPC HTTP spec\u003c/a\u003eにあるように\u003ccode\u003ebuf.yaml\u003c/code\u003eに\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003edeps:\n  - buf.build/googleapis/googleapis\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eを追記して\u003ccode\u003ebuf mod update\u003c/code\u003eを実行したら直ったような気がする。\u003c/p\u003e\n\u003cp\u003e気がする、というのは他にもprotoファイルをダウンロードしてきたりとかいろいろやっていて何が決定打だったのかよくわかってない。\u003c/p\u003e\n\u003cp\u003e結果オーライ。\u003c/p\u003e","tags":["go","gRPC"],"title":"proto"},{"categories":null,"objectID":"46f322d7336747b4da80b9dbfa18fac8","permalink":"https://umemak.github.io/blog/posts/2022/09/13_proto/","publish_date":"2022-09-13T00:00:00Z","summary":"\u003cp\u003eproto定義何もわからない。。\u003c/p\u003e\n\u003cp\u003eREST用のパスを定義するために\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e    option (google.api.http) = {\n      get : \u0026#34;/example-messages/{id}\u0026#34;\n    };\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eといった定義が必要で、これを使うには\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eimport \u0026#34;google/api/annotations.proto\u0026#34;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eが必要らしいという理解なのだけど、これをビルドしようとすると\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eevent.proto:6:1: Import \u0026#34;google/api/annotations.proto\u0026#34; was not found or had errors.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eというエラーが出てしまう。\u003c/p\u003e\n\u003cp\u003eこういうところで躓くの嫌すぎる。\u003c/p\u003e","tags":["go","gRPC"],"title":"proto"},{"categories":null,"objectID":"9b6a8e36188bf78b3e43e3ba8360376d","permalink":"https://umemak.github.io/blog/posts/2022/09/12_proto2openapi/","publish_date":"2022-09-12T00:00:00Z","summary":"\u003cp\u003eprotoをAPIスキーマのマスターにしようとした場合、既存のOpenAPIで用意していたUIとかどうしよう、ということになるけれど、OpenAPI-\u0026gt;gRPCとは違って逆の変換はたくさんツールがあることは調査済み。\u003c/p\u003e\n\u003cp\u003e全体の作りとしては\u003ca href=\"https://future-architect.github.io/articles/20220624a/\"\u003egrpc-gatewayでgRPCとREST両対応のサーバを作る | フューチャー技術ブログ\u003c/a\u003eこんな感じにするのが良さそう。\u003c/p\u003e\n\u003cp\u003eということでまずはマネするところからやっていきたい。\u003c/p\u003e","tags":["go","gRPC"],"title":"protoをマスターにする"},{"categories":null,"objectID":"419945f4dd9a91d5fac60ca84970cb23","permalink":"https://umemak.github.io/blog/posts/2022/09/11_openapi2proto/","publish_date":"2022-09-11T00:00:00Z","summary":"\u003cp\u003e今あるOpenAPI用の定義yamlファイルからgRPC用のprotoファイルが生成できないかなと思い、検索したら良さそうなものが見つかった。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/nytimes/openapi2proto\"\u003enytimes/openapi2proto: A tool for generating Protobuf v3 schemas and gRPC service definitions from OpenAPI specifications\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/eventsite_go/blob/main/openapi.yml\"\u003ehttps://github.com/umemak/eventsite_go/blob/main/openapi.yml\u003c/a\u003e でやってみた。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ go install github.com/NYTimes/openapi2proto/cmd/openapi2proto\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ openapi2proto -spec openapi.yml -annotate\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esyntax \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;proto3\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epackage eventsite;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eimport \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;google/api/annotations.proto\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eimport \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;google/protobuf/empty.proto\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eservice EventsiteService \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    // Get all events.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    rpc GetEvents\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003egoogle.protobuf.Empty\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e returns \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003egoogle.protobuf.Empty\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        option \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003egoogle.api.http\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            get: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/events\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    // Create event.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    rpc PostEvents\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003egoogle.protobuf.Empty\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e returns \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003egoogle.protobuf.Empty\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        option \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003egoogle.api.http\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            post: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/events\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eserviceは作られているけど、messageは作ってくれてないっぽい。\u003c/p\u003e","tags":["go","gRPC"],"title":"OpenAPIからgRPCへの移行"},{"categories":null,"objectID":"9ed30ba35ed579e4be1cf89b1ff750db","permalink":"https://umemak.github.io/blog/posts/2022/09/10_connect/","publish_date":"2022-09-10T00:00:00Z","summary":"\u003cp\u003egRPCを触ってみたくなったので、\u003ca href=\"https://future-architect.github.io/articles/20220819a/\"\u003egRPCがフロントエンド通信の第一の選択肢になる時代がやってきたかも？ | フューチャー技術ブログ\u003c/a\u003eをやってみる。\u003c/p\u003e\n\u003cp\u003efrontendでnpm installするところでgitエラーになってしまう。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm install --save-dev bufbuild/protoc-gen-connect-web bufbuild/protoc-gen-es\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! code \u003cspan style=\"color:#ae81ff\"\u003e128\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! An unknown git error occurred\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! command git --no-replace-objects ls-remote ssh://git@github.com/bufbuild/protoc-gen-connect-web.git\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! git@github.com: Permission denied \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003epublickey\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! fatal: Could not read from remote repository.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! Please make sure you have the correct access rights\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! and the repository exists.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eとりあえず置いておいて先に進めるが、結局buf generateするところで出力先がないのでエラーになってしまった。\u003c/p\u003e","tags":["go","gRPC"],"title":"gRPCを触ってみる"},{"categories":null,"objectID":"125f38e9d091680f7de6943776549783","permalink":"https://umemak.github.io/blog/posts/2022/09/09_go_config/","publish_date":"2022-09-09T00:00:00Z","summary":"\u003cp\u003eコマンドラインで引数を処理する順番は\u003ca href=\"../../2021/01/11_settings/\"\u003e以前\u003c/a\u003e調べたことがあるのだけど、これをいい感じに処理してくれるGoのライブラリが欲しい気がする。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eまず設定ファイルを読み、環境変数が設定されていれば上書き、コマンドラインで指定されていればさらに上書き\u003c/p\u003e\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/joho/godotenv\"\u003ejoho/godotenv: A Go port of Ruby\u0026rsquo;s dotenv library (Loads environment variables from \u003ccode\u003e.env\u003c/code\u003e.)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Netflix/go-env\"\u003eNetflix/go-env: a golang library to manage environment variables\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/caarlos0/env\"\u003ecaarlos0/env: A simple and zero-dependencies library to parse environment variables into structs.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ilyakaznacheev/cleanenv\"\u003eilyakaznacheev/cleanenv: ✨Clean and minimalistic environment configuration reader for Golang\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/cristalhq/aconfig\"\u003ecristalhq/aconfig: Simple, useful and opinionated config loader.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/kkyr/fig\"\u003ekkyr/fig: A minimalist Go configuration library\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eざっと検索してこんな感じでいろいろありそうだけど、環境変数を扱うものが多い気がする。\u003c/p\u003e","tags":["go"],"title":"Goで設定を良い感じに処理する方法"},{"categories":null,"objectID":"449a963d0b8def411c1f1b0efae0113d","permalink":"https://umemak.github.io/blog/posts/2022/09/08_next_book/","publish_date":"2022-09-08T00:00:00Z","summary":"\u003cp\u003e途中から写経するのあきらめて流し読みした。\u003c/p\u003e\n\u003cp\u003e長くて（フォント的に）読みにくいコードを見るのがつらすぎたので。。\u003c/p\u003e\n\u003cp\u003eCSSの書き方は、こっちのスタイルではなくてファイル分けるほうが自分には合っていそう。\u003c/p\u003e\n\u003cp\u003eテストの書き方など、あとで見返すと参考になりそうなことはたくさんあった。\u003c/p\u003e\n\u003cp\u003eKindle版のフォントは何とかならなかったのかなぁ。\u003c/p\u003e","tags":["react","nextjs"],"title":"TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発、読了"},{"categories":null,"objectID":"67afe4b1d1846ff31691fc1ad2a2b5c6","permalink":"https://umemak.github.io/blog/posts/2022/09/07_next_book/","publish_date":"2022-09-07T00:00:00Z","summary":"\u003cp\u003e読むの再開した。\u003c/p\u003e\n\u003cp\u003e作って学ぶ～の方とはCSSの定義の仕方が違ってstyled-componentsを使っているし、モジュールのディレクトリ構成も違う。\u003c/p\u003e\n\u003cp\u003eStorybookも導入しているし、Linterも設定している。\u003c/p\u003e\n\u003cp\u003e読んだところまでで1か所だけソースが画像になっているところがあって、全部これでいいのに・・と思った。\u003c/p\u003e","tags":["react","nextjs"],"title":"TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発"},{"categories":null,"objectID":"966f163a712535f548e61f5975385186","permalink":"https://umemak.github.io/blog/posts/2022/09/06_gitea/","publish_date":"2022-09-06T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gitea.io/en-us/\"\u003eGitea\u003c/a\u003eをセルフホスティングで動かしていて、古いCentOSからUbuntuに移行してみた。\u003c/p\u003e\n\u003cp\u003e基本的には\u003ca href=\"https://docs.gitea.io/en-us/backup-and-restore/\"\u003eUsage: Backup and Restore - Docs\u003c/a\u003eにあるようにbackupしてrestoreなんだけど、もとのバージョンが低いせいか、Wikiが空なのとIssueが表示されない問題が。。\u003c/p\u003e\n\u003cp\u003eIssueは版行指定でURL直打ちすれば見れるので、データとしてはリストアできているっぽい。\u003c/p\u003e\n\u003cp\u003eWikiはちょっとよくわからない。\u003c/p\u003e\n\u003cp\u003e時間があればもうちょっと深堀してみたい。\u003c/p\u003e","tags":["gitea"],"title":"Gitea移行"},{"categories":null,"objectID":"4ead2c56de285e87ed5e0453b21376f8","permalink":"https://umemak.github.io/blog/posts/2022/09/05_next_book/","publish_date":"2022-09-05T00:00:00Z","summary":"\u003cp\u003e後半のCMS連携以降は読むだけで手は動かさずに読み終えた。\u003c/p\u003e\n\u003cp\u003eデータ用意するのも面倒だしね・・\u003c/p\u003e\n\u003cp\u003eとりあえず、Next.jsの基本は完全に理解した。\u003c/p\u003e\n\u003cp\u003eしかしCSSがまったく理解できていない。\u003c/p\u003e\n\u003cp\u003eまた別の本読むか・・\u003c/p\u003e","tags":["react","nextjs"],"title":"作って学ぶ　Next.js/React　Webサイト構築"},{"categories":null,"objectID":"890a3d247dbcfdefdaff0631c42abc38","permalink":"https://umemak.github.io/blog/posts/2022/09/04_next_book/","publish_date":"2022-09-04T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B0B5YSFYY9\"\u003eAmazon.co.jp: 作って学ぶ　Next.js/React　Webサイト構築 eBook : エビスコム: 本\u003c/a\u003eを半分くらいまで進んだ。\u003c/p\u003e\n\u003cp\u003e時折、初出の単語が説明なしに出てきて止まるが（後で説明があるならそうと書いておいてほしい）おおむね順調。\u003c/p\u003e\n\u003cp\u003eフロント寄りの内容で、Imageやmetaタグの説明が結構長く書かれていたりする。\nこの辺は雰囲気で理解していた部分なので、学びなおすいい機会だった。\u003c/p\u003e","tags":["react","nextjs"],"title":"別のNext.js本写経"},{"categories":null,"objectID":"97558375c72c21bb9eab9293dadfee3b","permalink":"https://umemak.github.io/blog/posts/2022/09/03_next_book/","publish_date":"2022-09-03T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B0B5YSFYY9\"\u003eAmazon.co.jp: 作って学ぶ　Next.js/React　Webサイト構築 eBook : エビスコム: 本\u003c/a\u003eを買ってみた。\u003c/p\u003e\n\u003cp\u003eTypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発と違って、固定レイアウトなので読みにくさは少ない。字は小さいけど。。\u003c/p\u003e\n\u003cp\u003eあとマーカーも使えないので、この辺りはTypeScriptと～のほうが使い勝手が良い。\u003c/p\u003e\n\u003cp\u003eまだ途中だけど、タイトル的にTypeScriptの話は出てこないかもしれない。\n作って学ぶ～でNext.jsの理解をしてから、TypeScriptと～を読むという順番が良いかも。\u003c/p\u003e","tags":["react","nextjs"],"title":"別のNext.js本"},{"categories":null,"objectID":"7966d06d99a70acf68f693b63e232bec","permalink":"https://umemak.github.io/blog/posts/2022/09/02_next_book/","publish_date":"2022-09-02T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B0B74C3TNQ/\"\u003eAmazon.co.jp: TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発 eBook : 手島 拓也, 吉田 健人, 高林 佳稀: 本\u003c/a\u003e読んでいるのだけど、なんか読みづらい。\u003c/p\u003e\n\u003cp\u003eKindleの文字サイズの問題かもしれないけど、コードの行が長くて途中で折り返されていることが多い。\u003c/p\u003e\n\u003cp\u003eそしてコメントもコードも同じ色なので、区別しにくい。\u003c/p\u003e","tags":["react","nextjs"],"title":"Next.js本"},{"categories":null,"objectID":"09b7ced21a223b85c5514c9a9dad66ea","permalink":"https://umemak.github.io/blog/posts/2022/09/01_docker_restart/","publish_date":"2022-09-01T00:00:00Z","summary":"\u003cp\u003e\u003ccode\u003edocker compose up -d\u003c/code\u003eで複数コンテナを動かしているときに、その中の特定のコンテナのイメージを更新して再起動したい。\nできればその他のコンテナは再起動したくない。\u003c/p\u003e\n\u003cp\u003eそんなの\u003ccode\u003edocker compose stop hogehoge\u003c/code\u003eして\u003ccode\u003edocker compose start hogehoge\u003c/code\u003eしたらいいと思ってた。\u003c/p\u003e\n\u003cp\u003eログ的には再起動されるけれども、コンテナイメージは古いままだった。\u003c/p\u003e","tags":["docker"],"title":"docker composeで特定コンテナの再起動"},{"categories":null,"objectID":"64181c1d3c31211fab62823d8847501f","permalink":"https://umemak.github.io/blog/posts/2022/08/31_movie/","publish_date":"2022-08-31T00:00:00Z","summary":"\u003cp\u003e何となく見えてきた。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eShotcutで動画を読み込んで、mp3で音声を書き出す\u003c/li\u003e\n\u003cli\u003e書き出したmp3をS3にアップロードする\u003c/li\u003e\n\u003cli\u003eAmazon TranscribeでVTTファイルを作成する\u003c/li\u003e\n\u003cli\u003eVTTファイルをマーカーとみなしたMLTを作成する\u003c/li\u003e\n\u003cli\u003eShotcutで編集して動画をmp4で書き出す\u003c/li\u003e\n\u003cli\u003eMLTのマーカーからVTTを出力する\u003c/li\u003e\n\u003cli\u003effmpegでmp4とVTTを合成する\u003c/li\u003e\n\u003c/ol\u003e","tags":[],"title":"動画編集のフロー"},{"categories":null,"objectID":"4176fbd683f2dee554feb0a7a09f09fe","permalink":"https://umemak.github.io/blog/posts/2022/08/30_mlt/","publish_date":"2022-08-30T00:00:00Z","summary":"\u003cp\u003eMLTをgoのstructに読み込もうとして、やっぱりよくわからない。\u003c/p\u003e\n\u003cp\u003eMLT自体の仕様は\u003ca href=\"https://github.com/mltframework/mlt\"\u003emltframework/mlt: MLT Multimedia Framework\u003c/a\u003eにある。\u003c/p\u003e\n\u003cp\u003exsdファイルがあれば\u003ca href=\"https://github.com/droyo/go-xml\"\u003edroyo/go-xml: utility and code-generation libraries for XML\u003c/a\u003eとか使ってgoで使えるようにできそうなんだけど、dtdしかない。\u003c/p\u003e\n\u003cp\u003eっていうかdtdをstructに書き換えれば良いのか？\u003c/p\u003e\n\u003cp\u003eと思ったけど良さそうなものが見つかった。\u003ca href=\"https://github.com/miku/zek\"\u003emiku/zek: Generate a Go struct from XML.\u003c/a\u003e。\u003c/p\u003e","tags":["go"],"title":"MLTファイルを読む"},{"categories":null,"objectID":"b186a9999793f52fcf2939f77257f6b0","permalink":"https://umemak.github.io/blog/posts/2022/08/29_mlt/","publish_date":"2022-08-29T00:00:00Z","summary":"\u003cp\u003e機能追加していたら、ダメなコードの見本みたいになり始めてきた。\u003c/p\u003e\n\u003cp\u003e機能ごとに分けるとかし始める必要がありそう。\u003c/p\u003e\n\u003cp\u003eあと、XMLの出力をベタに文字列結合でやっているので、ちゃんとライブラリ使って生成するようにしたい。\u003c/p\u003e\n\u003cp\u003eGoだと\u003ca href=\"https://pkg.go.dev/encoding/xml\"\u003exml package - encoding/xml - Go Packages\u003c/a\u003eのMarshalを使えば良さそうだけど、構造体の定義面倒だな。。\u003c/p\u003e","tags":["go"],"title":"MLTファイル生成"},{"categories":null,"objectID":"fa63f8399df3a535688ed40f81e7e939","permalink":"https://umemak.github.io/blog/posts/2022/08/28_mlt_vtt/","publish_date":"2022-08-28T00:00:00Z","summary":"\u003cp\u003eShotcutのマーカーとVTT(SRT)が相互変換出来たら便利ではないかと妄想。\u003c/p\u003e\n\u003cp\u003eどちらも開始と終了のタイムスタンプとテキストが書けるので、要素的には問題なし。\u003c/p\u003e","tags":[],"title":"MLTファイルとVTTと"},{"categories":null,"objectID":"28d17939fb9d859e56565136713dc8aa","permalink":"https://umemak.github.io/blog/posts/2022/08/27_grarec/","publish_date":"2022-08-27T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B09GKDT75R\"\u003eグラレコの基本　その場で「聞く・まとめる・描く」 | 本園大介 | ビジネス・経済 | Kindleストア | Amazon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e読み進めている。先に読んだ本と内容が被ることもあるけれど、こっちのほうが実践的な感じ。\u003c/p\u003e\n\u003cp\u003e読む順番としては、正解だった。\u003c/p\u003e\n\u003cp\u003eどちらの本でもおすすめのiPadアプリは\u003ca href=\"https://apps.apple.com/jp/app/procreate/id425073498\"\u003eProcreate\u003c/a\u003eだった。\n今インストールしてあるのは\u003ca href=\"https://apps.apple.com/app/concepts/id560586497\"\u003eConcepts\u003c/a\u003eで、無料の範囲でしか使っていない。\n買い切りで比較するとProcreateのほうが安いので、Procreate試してみるのもよさそう。\u003c/p\u003e","tags":[],"title":"グラフィックレコーディングの本2"},{"categories":null,"objectID":"e1ee820463cb25abdafa0bc53981bcd4","permalink":"https://umemak.github.io/blog/posts/2022/08/26_grarec/","publish_date":"2022-08-26T00:00:00Z","summary":"\u003cp\u003eKindleで安くなっていたので、買ってみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B09GKDT75R\"\u003eグラレコの基本　その場で「聞く・まとめる・描く」 | 本園大介 | ビジネス・経済 | Kindleストア | Amazon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこっちも評価が良くて、iPadでの例が見たかったので買ってみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B08CK437LG\"\u003eはじめてのグラフィックレコーディング 考えを図にする、会議を絵にする。 | 久保田 麻美 | ビジネス・経済 | Kindleストア | Amazon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e「はじめての～」から読み進めている。iPadの章まではまだたどり着いていないが、人物の書き方とかためになると思った。\u003c/p\u003e","tags":[],"title":"グラフィックレコーディングの本"},{"categories":null,"objectID":"705f0403ccbe1c9167a09037066a11cc","permalink":"https://umemak.github.io/blog/posts/2022/08/25_ginkgo/","publish_date":"2022-08-25T00:00:00Z","summary":"\u003cp\u003e普通にGoのテストとして書いたほうが融通が利くので、そのようにすることにした。\u003c/p\u003e\n\u003cp\u003eたぶん使いどころが間違っていたのだと思う。\u003c/p\u003e\n\u003cp\u003e適所であればGinkgoも有効なはず。\u003c/p\u003e","tags":["go"],"title":"Ginkgoやめた"},{"categories":null,"objectID":"92c0487a6bd0287c6230f47d4feb97b0","permalink":"https://umemak.github.io/blog/posts/2022/08/24_ginkgo/","publish_date":"2022-08-24T00:00:00Z","summary":"\u003cp\u003eGinkgo使えば使うほどわからなくなってくる。\u003c/p\u003e\n\u003cp\u003e上から順番に、途中経過もチェックしながら実行したいだけなんだけどなぁ。\u003c/p\u003e","tags":["go"],"title":"Ginkgo難解"},{"categories":null,"objectID":"a664a114e9fc818f4666150a680cdc81","permalink":"https://umemak.github.io/blog/posts/2022/08/23_next_book/","publish_date":"2022-08-23T00:00:00Z","summary":"\u003cp\u003eVTT編集するWebアプリ作ろうと思って、環境何にしようかというところで、Next.jsが簡単そう（イメージ）な気がしたので選んだ。\u003c/p\u003e\n\u003cp\u003eリポジトリ作って初期化したあと手が止まったので、\u003ca href=\"https://www.amazon.co.jp/gp/product/B0B74C3TNQ/\"\u003eAmazon.co.jp: TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発 eBook : 手島 拓也, 吉田 健人, 高林 佳稀: 本\u003c/a\u003eを買ってみた。出版が新しめだったのが理由。\u003c/p\u003e","tags":["react","nextjs"],"title":"Next.js再入門"},{"categories":null,"objectID":"fb03ce516d5f0dc13e94dfa1b9a34b78","permalink":"https://umemak.github.io/blog/posts/2022/08/22_mlt/","publish_date":"2022-08-22T00:00:00Z","summary":"\u003cp\u003eShotcutでマーカーをchainの開始に合わせて配置したいと思って、mltにマーカーの記述を追加してみた。\u003c/p\u003e\n\u003cp\u003eShotcutで開くと、なんかずれてる。\u003c/p\u003e\n\u003cp\u003eそもそも、mltファイルでは時間をミリ秒表記でやってるのに、アプリではフレーム単位？0～29で扱われているので、なんかその辺の誤差とかなのかなーとか、管理してる時間軸が違うのかなーとか。\u003c/p\u003e","tags":[],"title":"MLTファイルを作る3"},{"categories":null,"objectID":"a5a89cbaf18d9bfd6dbbbbcb90c1a909","permalink":"https://umemak.github.io/blog/posts/2022/08/21_go_book/","publish_date":"2022-08-21T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B0B62K55SL\"\u003e詳解Go言語Webアプリケーション開発 | 清水陽一郎 | 工学 | Kindleストア | Amazon\u003c/a\u003e読み終わった。\u003c/p\u003e\n\u003cp\u003e後半のハンズオン、途中から説明が足りない感じで、何度か\u003ca href=\"https://github.com/budougumi0617/go_todo_app\"\u003ebudougumi0617/go_todo_app: 書籍「詳解Go言語Webアプリケーション開発」のサンプルコードリポジトリです。\u003c/a\u003eを見る必要があった。\u003c/p\u003e\n\u003cp\u003eそして上記リポジトリにも正誤表があるが、そこそこ違っている。\u003c/p\u003e\n\u003cp\u003eKindle版なのだから即修正反映してくれればいいのに、と思うけどそうはいかないみたい。残念。\u003c/p\u003e","tags":["go"],"title":"詳解Go言語Webアプリケーション開発"},{"categories":null,"objectID":"7a1c46c18dd73f6ff0c8d22f5ff8a9cf","permalink":"https://umemak.github.io/blog/posts/2022/08/20_github_auth/","publish_date":"2022-08-20T00:00:00Z","summary":"\u003cp\u003eVS Code再起動したタイミングで、git pushでエラーが出るようになった。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSupport for password authentication was removed on August 13, 2021. Please use a personal access token instead.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eだいぶ前じゃないか、と思いつつ、PAT作ってやり直したら通った。\u003c/p\u003e\n\u003cp\u003eしばらくして次のpushしようとしたら、また同じエラー。\u003c/p\u003e\n\u003cp\u003e毎回PAT入れるのだるすぎるし、何でこのタイミングで出るようになったのか謎すぎる。\u003c/p\u003e","tags":["github"],"title":"GitHubでpushできなかった"},{"categories":null,"objectID":"d0fbb735663cf905a7557fff8b67275e","permalink":"https://umemak.github.io/blog/posts/2022/08/19_apprunner/","publish_date":"2022-08-19T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://aws.amazon.com/jp/apprunner/\"\u003eAWS App Runner – フルマネージド型のコンテナアプリケーション - Amazon Web Services\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eちょっと使ってみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://aws.amazon.com/jp/blogs/news/new-for-app-runner-vpc-support/\"\u003eApp Runner の新機能 — Amazon Virtual Private Cloud (VPC) をサポート | Amazon Web Services ブログ\u003c/a\u003eを見て、RDSに接続してみようと。\u003c/p\u003e\n\u003cp\u003eコードリポジトリはGitHubしか対応していないし、GitHub側にインストールしないといけないものもあるようなので、とりあえずECRを使ったパターンで。\u003c/p\u003e","tags":["aws"],"title":"AWS App Runner"},{"categories":null,"objectID":"1c3ef38e1c301a852a74c2ab6a53ad03","permalink":"https://umemak.github.io/blog/posts/2022/08/18_wavesurfer_js/","publish_date":"2022-08-18T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://wavesurfer-js.org/\"\u003ewavesurfer.js\u003c/a\u003e使ったら、\u003ca href=\"https://developer.mozilla.org/ja/docs/Web/API/WebVTT_API\"\u003eVTT\u003c/a\u003eの編集とか直感的にできないかなー、と構想。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://wavesurfer-js.org/plugins/regions.html\"\u003eRegions plugin\u003c/a\u003eと組み合わせれば、波形見ながら開始と終了が指定できて便利だと思うんだ。\u003c/p\u003e\n\u003cp\u003eVTTファイル読み込んで、パースして配列作ってRegionsと紐づけて、相互に変更が反映されて、VTTファイルとして保存できる機能。\u003c/p\u003e\n\u003cp\u003e音声ファイルの読み込みも必要か。\u003c/p\u003e\n\u003cp\u003e動画も同期してプレビュー出来たらもっと良いけど、必須機能ではないな。\u003c/p\u003e","tags":["js"],"title":"wavesurfer.js"},{"categories":null,"objectID":"363d39cdfd59b3213cc0f8f1c9b51cbe","permalink":"https://umemak.github.io/blog/posts/2022/08/17_host_docker_internal/","publish_date":"2022-08-17T00:00:00Z","summary":"\u003cp\u003eDocker Desktopでは、\u003ccode\u003ehost.docker.internal\u003c/code\u003eで母艦のIPアドレスが参照できるようになっているのだけど、Docker DesktopではないLinux環境だと使えない。\u003c/p\u003e\n\u003cp\u003eで、とりあえず\u003ccode\u003e172.17.0.1\u003c/code\u003eでやってたりするのだけど、これだとうまくいかないときがあるっぽい。\u003c/p\u003e\n\u003cp\u003e推測調なのは、まだ手元で再現できていないから。\u003c/p\u003e","tags":["docker"],"title":"host.docker.internalとlinux"},{"categories":null,"objectID":"08601daa7a815967291937c21a3f8f75","permalink":"https://umemak.github.io/blog/posts/2022/08/16_openapi_client/","publish_date":"2022-08-16T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://openapi-generator.tech/docs/generators/go/\"\u003eDocumentation for the go Generator\u003c/a\u003eで生成したは良いけれど、使い方がわからず試行錯誤してみていたら、生成したdocsの中にサンプルコードが書かれていた。。\u003c/p\u003e\n\u003cp\u003e構造体のドキュメントとかだと思ってスルーしてたのが敗因。\n生成物はちゃんと見ましょう。\u003c/p\u003e","tags":["go","OpenAPI"],"title":"OpenAPIクライアントの使い方"},{"categories":null,"objectID":"1dfc77fb8f0dda25e077d93687c02653","permalink":"https://umemak.github.io/blog/posts/2022/08/15_ginkgo/","publish_date":"2022-08-15T00:00:00Z","summary":"\u003cp\u003e久しぶりに\u003ca href=\"https://github.com/onsi/ginkgo\"\u003eonsi/ginkgo: A Modern Testing Framework for Go\u003c/a\u003e触って、やっぱりよくわからないなー、と。\u003c/p\u003e\n\u003cp\u003eBeforeEachとか使って、初期化処理を共通化しようとしたのだけれど、初期化されていない現象とか。\u003c/p\u003e\n\u003cp\u003eテスト用の構造体ってちゃんと作ろうとすると結構行数食ってしまうけど、あまりテストコードと離れたところに置きたくない気持ちもあり。\u003c/p\u003e\n\u003cp\u003eうーん。\u003c/p\u003e","tags":["go"],"title":"Ginkgo難解"},{"categories":null,"objectID":"a631fa651234ec91fb8cff2da71730cc","permalink":"https://umemak.github.io/blog/posts/2022/08/14_go_book/","publish_date":"2022-08-14T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B0B62K55SL\"\u003e詳解Go言語Webアプリケーション開発 | 清水陽一郎 | 工学 | Kindleストア | Amazon\u003c/a\u003eの後半のハンズオンを写経しながらやってみている。\u003c/p\u003e\n\u003cp\u003eあらためて手を動かして書くことで、新しい発見があったりして楽しい。\u003c/p\u003e","tags":["go"],"title":"詳解Go言語Webアプリケーション開発"},{"categories":null,"objectID":"f241c2d61db2bde0d5956d35299899ee","permalink":"https://umemak.github.io/blog/posts/2022/08/13_srt_vtt/","publish_date":"2022-08-13T00:00:00Z","summary":"\u003cp\u003eSRT形式で、途中改行するやり方がわからなかったので、VTT形式を使うことにした。\u003c/p\u003e\n\u003cp\u003eAmazon Transcribeはどちらの形式でも出力してくれるし、ffmpegもどちらの形式でも認識してくれた。\u003c/p\u003e\n\u003cp\u003eまあ改行が必要なくらい長いのは、分けた方が良いというのは正しい。\nこの辺りは試行錯誤しながら最適解を探っていきたい。\u003c/p\u003e","tags":[],"title":"字幕ファイルの形式"},{"categories":null,"objectID":"0bac42540cb15c28625c0dfbccb49387","permalink":"https://umemak.github.io/blog/posts/2022/08/12_mlt/","publish_date":"2022-08-12T00:00:00Z","summary":"\u003cp\u003esilencedetectがなんか思ったのと違う感じで、代わりに\u003ca href=\"https://qiita.com/igapon1/items/3faa83fc8af1543bc672\"\u003ePythonとffmpegで動画の無音部分をカットする - Qiita\u003c/a\u003eにあるPythonのプログラムの無音検出部分を使ってみた。\u003c/p\u003e\n\u003cp\u003eGoでも\u003ca href=\"https://github.com/mkb218/gosndfile\"\u003emkb218/gosndfile: Go bindings for libsndfile\u003c/a\u003eを使ったらできそうだけど、importしただけでは動かなかったので今後の課題にしたい。\u003c/p\u003e","tags":["go","python"],"title":"MLTファイルを作る2"},{"categories":null,"objectID":"03a13ad83b1df8c2deeed0c87acdc6ec","permalink":"https://umemak.github.io/blog/posts/2022/08/11_mlt/","publish_date":"2022-08-11T00:00:00Z","summary":"\u003cp\u003eShotcutのプロジェクトの保存形式がMLTで、中身はXMLのテキスト。\u003c/p\u003e\n\u003cp\u003e作業動画を編集していて、無音部分はスキップして尺を短くしたい。\u003c/p\u003e\n\u003cp\u003e無音部分はffmpegの\u003ca href=\"https://ffmpeg.org/ffmpeg-filters.html#silencedetect\"\u003esilencedetect\u003c/a\u003eで検出できるので、そのタイムスタンプで切ったShotcutプロジェクトを開けば、効率的に不要な部分を切り詰めつつ必要な部分を残せるのではないかという目論見。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/ffmpeg_test/blob/main/main.go\"\u003ehttps://github.com/umemak/ffmpeg_test/blob/main/main.go\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eとりあえずこんな感じで。\u003c/p\u003e","tags":["go"],"title":"MLTファイルを作る"},{"categories":null,"objectID":"6140c7b50bdb4798b4ebc325f2f7b11b","permalink":"https://umemak.github.io/blog/posts/2022/08/10_dns/","publish_date":"2022-08-10T00:00:00Z","summary":"\u003cp\u003e今日もDNS解決できない感じのインターネトに接続できない現象が発生した。\u003c/p\u003e\n\u003cp\u003eIPアドレス指定だと接続できてたので、たぶんDNS。\u003c/p\u003e\n\u003cp\u003eRT-S300SEと無線LANルーターの間の有線を抜き差ししたら直った。\u003c/p\u003e\n\u003cp\u003e何かが詰まっているのだろうか。。\u003c/p\u003e","tags":[],"title":"DNS不調2"},{"categories":null,"objectID":"95199f0088ff2110a2abfa18ec6598d9","permalink":"https://umemak.github.io/blog/posts/2022/08/09_dns/","publish_date":"2022-08-09T00:00:00Z","summary":"\u003cp\u003e昨日からインターネット接続が突然できなくなる現象が発生していて、RT-S300SEの電源抜き差しでとりあえず復帰するものの、連日の不具合でちょっと困った。\u003c/p\u003e\n\u003cp\u003eSlackの通話とかすでに接続しているものは使い続けられていたので、完全にネットワークがダメなわけではなさそう、新規の接続するときにDNSが引けないエラーになっているっぽい。\u003c/p\u003e","tags":[],"title":"DNS不調"},{"categories":null,"objectID":"e46ab6d4749ffb3651dfd7f0b8facfcd","permalink":"https://umemak.github.io/blog/posts/2022/08/08_ffmpeg_srt/","publish_date":"2022-08-08T00:00:00Z","summary":"\u003cp\u003e動画の音声を\u003ca href=\"https://aws.amazon.com/jp/transcribe/\"\u003eAmazon Transcribe（音声をテキストに変換する機能を簡単に追加）| AWS\u003c/a\u003eでsrt形式の日本語文字起こしをして、DockerのUbuntuにインストールしたFFmpegで動画に字幕を焼きこもうとした。\u003c/p\u003e\n\u003cp\u003e日本語文字が豆腐になってしまった。\u003c/p\u003e\n\u003cp\u003e日本語フォントとかインストールしてやらないとダメなのか。。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/ffmpeg_test/blob/main/Dockerfile\"\u003eできた\u003c/a\u003e\u003c/p\u003e","tags":["ffmpeg"],"title":"FFmpegで字幕"},{"categories":null,"objectID":"73f5fb0bcc4d703cb81bb27e140fbcfd","permalink":"https://umemak.github.io/blog/posts/2022/08/07_sqlc_with/","publish_date":"2022-08-07T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"mailto:sqlc@v1.10.0\"\u003esqlc@v1.10.0\u003c/a\u003eだと、\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e-- name: ListCommentsTree :many\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eWITH\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eRECURSIVE\u003c/span\u003e r \u003cspan style=\"color:#66d9ef\"\u003eAS\u003c/span\u003e (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e comments \u003cspan style=\"color:#66d9ef\"\u003eWHERE\u003c/span\u003e comments.id \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eUNION\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eALL\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e comments.\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e comments, r \u003cspan style=\"color:#66d9ef\"\u003eWHERE\u003c/span\u003e comments.parent_id \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e r.id\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e r;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eこれが\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sqlc generate\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# package sqlc\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edb/query.sql:35:5: syntax error near \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;WITH RECURSIVE r AS (\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eこう。\u003c/p\u003e\n\u003cp\u003esqlc@latestにするとこれは解消するけれど、昨日のtable aliasエラーが。。\u003c/p\u003e\n\u003cp\u003eうーん。\u003c/p\u003e","tags":["sqlc"],"title":"sqlcのエラー2"},{"categories":null,"objectID":"cdd5e447566d67a217a1f31c40f8cc40","permalink":"https://umemak.github.io/blog/posts/2022/08/06_sqlc/","publish_date":"2022-08-06T00:00:00Z","summary":"\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e-- name: ListEventUsers :many\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e eu.id, eu.eventid, eu.userid, eu.\u003cspan style=\"color:#f92672\"\u003e`\u003c/span\u003estatus\u003cspan style=\"color:#f92672\"\u003e`\u003c/span\u003e, u.name\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e id, eventid, userid, \u003cspan style=\"color:#f92672\"\u003e`\u003c/span\u003estatus\u003cspan style=\"color:#f92672\"\u003e`\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    row_number() OVER (PARTITION \u003cspan style=\"color:#66d9ef\"\u003eBY\u003c/span\u003e eventid, userid \u003cspan style=\"color:#66d9ef\"\u003eORDER\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eBY\u003c/span\u003e id \u003cspan style=\"color:#66d9ef\"\u003eDESC\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003eAS\u003c/span\u003e num\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e eventUser\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e) eu, \u003cspan style=\"color:#66d9ef\"\u003euser\u003c/span\u003e u\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eWHERE\u003c/span\u003e eu.eventid \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eAND\u003c/span\u003e eu.num \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eAND\u003c/span\u003e eu.userid \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e u.id\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eORDER\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eBY\u003c/span\u003e eu.id;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eこれが\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sqlc generate\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# package sqlc\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edb/query.sql:14:1: table alias \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;eu\u0026#34;\u003c/span\u003e does not exist\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eadminerで実行したらちゃんと思った結果得られるのに。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/kyleconroy/sqlc/issues/1385\"\u003eTable alias not working · Issue #1385 · kyleconroy/sqlc\u003c/a\u003eのissueだとv1.10.0だと使えていたっぽい。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sqlc version\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ev1.14.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ go install github.com/kyleconroy/sqlc/cmd/sqlc@v1.10.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sqlc version\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ev1.10.0\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eエラー消えて生成できるようになった。\u003c/p\u003e","tags":["sqlc"],"title":"sqlcのエラー"},{"categories":null,"objectID":"d6dca504e32812fef3a1563f898e5266","permalink":"https://umemak.github.io/blog/posts/2022/08/05_openapi_generator_src/","publish_date":"2022-08-05T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/GoServerCodegen.java\"\u003eopenapi-generator/GoServerCodegen.java at master · OpenAPITools/openapi-generator\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこの辺りから読み始めればよいのかな？\nけどJavaかぁ。。\u003c/p\u003e\n\u003cp\u003eJavaは出始めのころちょっと触って、今もそうかもしれないけど、パッケージ名の命名にドメインを逆順で、みたいのが当時ドメインとか持ってなくてどうすればいいんだ？ってなって躓いた。\u003c/p\u003e\n\u003cp\u003eあとなんかインポートするの長くて呪文みたいだなーって思ってそっと閉じた思い出。\u003c/p\u003e","tags":["OpenAPI"],"title":"OpenAPI generatorのソース"},{"categories":null,"objectID":"b098a10a811a54457822f5f705f526f9","permalink":"https://umemak.github.io/blog/posts/2022/08/04_openapi_sqlc/","publish_date":"2022-08-04T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://openapi-generator.tech/docs/generators/go-server/\"\u003eDocumentation for the go-server Generator\u003c/a\u003eで生成したファイルと\u003ca href=\"https://sqlc.dev/\"\u003esqlc.dev | Compile SQL to type-safe Go\u003c/a\u003eで生成したファイル、うまく連携できればもっと手数少なくAPIサーバーが作れるのになー・・\u003c/p\u003e\n\u003cp\u003e現状用意するものとしては、DDLとqueryとAPI定義で、APIのリソースとDBのテーブルが1:1なら決め打ちでかける部分が出てくるはず・・\u003c/p\u003e\n\u003cp\u003eどちらに寄せるかは、OpenAPI定義側かなぁ。。\nOpenAPI定義からDDLが生成できれば、queryはサーバーコードと一緒でも良いと思うし。\u003c/p\u003e","tags":["OpenAPI","sqlc"],"title":"OpenAPIとsqlcの連携"},{"categories":null,"objectID":"84eb79e309b3f473278311150423aa29","permalink":"https://umemak.github.io/blog/posts/2022/08/03_go_air/","publish_date":"2022-08-03T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/cosmtrek/air\"\u003ecosmtrek/air: ☁️ Live reload for Go apps\u003c/a\u003eで、コマンドラインでオプション指定できるみたいだけど、思ったように動かないな・・という内容で書こうとして見直してたら、\u003ccode\u003ebeta feature\u003c/code\u003eってちゃんと書いてあるし。\u003c/p\u003e\n\u003cp\u003eエラーになったり、完全に動かないわけではなく、\u003ccode\u003ebuild.cmd\u003c/code\u003eとか指定が効いてたので気づかなかった。\u003c/p\u003e\n\u003cp\u003eモノレポで使うときに、共通の部分は\u003ccode\u003e.air.toml\u003c/code\u003eに書いておいて、異なるところだけコマンドラインで指定できるとうれしい。\u003c/p\u003e","tags":["air"],"title":"airのオプション"},{"categories":null,"objectID":"7379b0c98a9af0081afa2caa18ac9668","permalink":"https://umemak.github.io/blog/posts/2022/08/02_codesandbox/","publish_date":"2022-08-02T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://codesandbox.io/\"\u003eCodeSandbox: Online Code Editor and IDE for Rapid Web Development\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://nmi.jp/2022-08-01-Becoming-YouTuber\"\u003eYouTube チャンネル「ニコニコプログラミング」を開設しました\u003c/a\u003eの記事で知った。\u003c/p\u003e\n\u003cp\u003e普段こういう用途だとGitHubに適当なリポジトリ作って、CodespacesかGitpodで開く感じだけど、さらにお手軽に環境が作れてすごい。\u003c/p\u003e\n\u003cp\u003e元記事のプログラミングRTAも見てみたけど、勉強になる。\u003c/p\u003e","tags":[],"title":"CodeSandbox"},{"categories":null,"objectID":"f0129692c2de6a0c568059bdcb47affb","permalink":"https://umemak.github.io/blog/posts/2022/08/01_vscode_webview/","publish_date":"2022-08-01T00:00:00Z","summary":"\u003cp\u003eVS Codeとブラウザを行き来するのが面倒なので、VS Code内でブラウザ表示できれば良いのでは？と思い方法を探してみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://coliss.com/articles/build-websites/operation/work/browser-preview-for-vscode.html\"\u003eデバッグ作業が快適に！VS Codeにブラウザのプレビュー機能を加える機能拡張 -Browser Preview for VS Code | コリス\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこれでいけるじゃん、ってインストールしようとしたら、Deprecated と書かれていて、代わりに\u003ca href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode.live-server\"\u003eLive Preview - Visual Studio Marketplace\u003c/a\u003eを使うよう誘導されていた。\u003c/p\u003e","tags":["VS Code"],"title":"VS Codeでブラウザ表示したい"},{"categories":null,"objectID":"88b8ad16ae3d3f3fa4dfa22b983cd08b","permalink":"https://umemak.github.io/blog/posts/2022/07/31_go_error_wrap/","publish_date":"2022-07-31T00:00:00Z","summary":"\u003cp\u003eエラーのラッピングをすると何がうれしいのかという問いへの解答が見えた気がする。\u003c/p\u003e\n\u003cp\u003eラッピングしない場合、元のエラーの文字列以外の情報が失われてしまうが、ラッピングするとエラー情報をアンラップして取り出すことができる。\u003c/p\u003e\n\u003cp\u003e失われてしまう情報が呼び出し元で必要な場合は、エラーをそのままreturnして返すか、必要な情報も含めてErrorfに書かないといけない。\u003c/p\u003e","tags":["go"],"title":"Go言語のエラーラッピング"},{"categories":null,"objectID":"6bf97c156aa889db3c749f3aac2cdb6c","permalink":"https://umemak.github.io/blog/posts/2022/07/30_code_book/","publish_date":"2022-07-30T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B09Y1MWK9N\"\u003e良いコード／悪いコードで学ぶ設計入門―保守しやすい　成長し続けるコードの書き方 | 仙塲 大也 | コンピュータ・IT | Kindleストア | Amazon\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e読み終えた。\u003c/p\u003e\n\u003cp\u003e最後のほうは、前に出てきたことの応用とかでせっかくKindleなんだからリンクしておいて参照できれば良いのに、と思った。\u003c/p\u003e\n\u003cp\u003e書いてある内容にはおおむね同意。ちゃんと言語化できるってすごい。\u003c/p\u003e","tags":["book"],"title":"良いコード／悪いコードで学ぶ設計入門"},{"categories":null,"objectID":"5f30570b587c1bc29d005ed41fae3fe8","permalink":"https://umemak.github.io/blog/posts/2022/07/29_openapi_generator/","publish_date":"2022-07-29T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://openapi-generator.tech/docs/generators/go-server/\"\u003eDocumentation for the go-server Generator\u003c/a\u003eで、routerは\u003ccode\u003emux\u003c/code\u003eと\u003ccode\u003echi\u003c/code\u003eが選べると書いてあって、省略時は\u003ccode\u003emux\u003c/code\u003eとのこと。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003echi\u003c/code\u003eの指定方法がわからなかったので調べた。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ wget https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker run --rm \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -v \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003ePWD\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e:/local openapitools/openapi-generator-cli generate \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -i /local/petstore.yaml \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -g go-server \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --additional-properties\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003erouter\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003echi \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -o /local/out\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eと、\u003ccode\u003e--additional-properties\u003c/code\u003eにつけるらしい。、\n他のパラメータ、たとえば\u003ccode\u003esererPort\u003c/code\u003eも指定したい場合はカンマ区切りで\u003ccode\u003e--additional-properties=router=chi,sererPort=18080\u003c/code\u003eこう。\u003c/p\u003e","tags":["OpenAPI"],"title":"OpenAPI Generator go-server"},{"categories":null,"objectID":"42cd286a2a1c0aac163dff5f04c5731e","permalink":"https://umemak.github.io/blog/posts/2022/07/28_sqlc/","publish_date":"2022-07-28T00:00:00Z","summary":"\u003cp\u003e別の調べものをしていて見つけた\u003ca href=\"https://sqlc.dev/\"\u003esqlc.dev | Compile SQL to type-safe Go\u003c/a\u003eを試してみた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eschema.sql\u003c/code\u003eは、今までMySQLの起動時に読み込ませていたSQLファイルがそのまま使えた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003equery.sql\u003c/code\u003eもgoのmodelパッケージ内に書いていたSQLをコピペで作れた。\u003c/p\u003e\n\u003cp\u003e結構良いかも。\u003c/p\u003e","tags":["Go","DB"],"title":"sqlc"},{"categories":null,"objectID":"0215eb66d88f871ad05d206d048fcf76","permalink":"https://umemak.github.io/blog/posts/2022/07/27_adminer_oracle/","publish_date":"2022-07-27T00:00:00Z","summary":"\u003cp\u003e昨日はとりあえず動くところまでできたので、Dockerfileを整えてみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/docker-adminer/blob/master/4/Dockerfile\"\u003ehttps://github.com/umemak/docker-adminer/blob/master/4/Dockerfile\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eイメージサイズ800MB弱。\nもっとスリム化できないかな。\u003c/p\u003e","tags":["Docker","Oracle"],"title":"AdminerのOracle対応"},{"categories":null,"objectID":"f88f11135c9a2b6f8a56a5c0828a17ff","permalink":"https://umemak.github.io/blog/posts/2022/07/26_adminer_oracle/","publish_date":"2022-07-26T00:00:00Z","summary":"\u003cp\u003e昨日の続き。\nとりあえず接続してテーブル一覧作ったりテーブル作成したりできた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://zenn.dev/marushin/articles/d8c8760e978489\"\u003eDocker + Laravel + Oracleの開発環境の構築方法\u003c/a\u003eが参考になった。\u003c/p\u003e","tags":["Docker","Oracle"],"title":"AdminerのOracle対応"},{"categories":null,"objectID":"6f6347a4879999c31567e25721aa0a2f","permalink":"https://umemak.github.io/blog/posts/2022/07/25_adminer_oracle/","publish_date":"2022-07-25T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.adminer.org/\"\u003eAdminer - Database management in a single PHP file\u003c/a\u003eのDockerイメージ\u003ca href=\"https://hub.docker.com/_/adminer/\"\u003eAdminer - Official Image | Docker Hub\u003c/a\u003eは、Oracle接続に必要なモジュールが入っていない。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.php.net/manual/ja/oci8.setup.php\"\u003ePHP: インストール/設定 - Manual\u003c/a\u003eによると、\u003ca href=\"https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html\"\u003eInstant Client for Linux x86-64 (64-bit)\u003c/a\u003eのBasicと、oci8が必要らしい。\u003c/p\u003e\n\u003cp\u003eDockerfileはOfficial Imageの\u003ca href=\"https://github.com/TimWolla/docker-adminer\"\u003eTimWolla/docker-adminer: Database management in a single PHP file\u003c/a\u003eを参考に。\u003c/p\u003e","tags":["Docker","Oracle"],"title":"AdminerのOracle対応"},{"categories":null,"objectID":"7a7737286978c77f56d2e4478827fb3e","permalink":"https://umemak.github.io/blog/posts/2022/07/25_prisma/","publish_date":"2022-07-25T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.prisma.io/\"\u003ePrisma\u003c/a\u003eを使ってDB設計ってできるのかな、と思い調べてみた。\u003c/p\u003e\n\u003cp\u003ePrisma自体は、ORMということだけれど、スキーマファイルをもとにDBに対してマイグレーションで定義を反映できる。\nモデル間の関連もスキーマファイルで表現できる。\u003c/p\u003e\n\u003cp\u003eでも、API側をOpenAPIやGraphQLで定義するとすると、似たようなものを管理しなくてはいけないのがちょっと。\u003c/p\u003e\n\u003cp\u003eGraphQLと組み合わせて使うこともできるようだけど、まだGraphQLへの苦手意識があるので試すまで至らない。\u003c/p\u003e","tags":["Prisma"],"title":"Prisma"},{"categories":null,"objectID":"acba2bff37ab359e98644b27127c94f0","permalink":"https://umemak.github.io/blog/posts/2022/07/24_graphql/","publish_date":"2022-07-24T00:00:00Z","summary":"\u003cp\u003eAPI設計するのに、GraphQLの可能性はどうなのかと思ってちょっとググってみた。\u003c/p\u003e\n\u003cp\u003e個人的にはAmplifyを試していたときに良くわからなくて挫折した思い出がある。\u003c/p\u003e\n\u003cp\u003eなんとなく、参照系はGraphQLで柔軟性を持たせつつ、更新系は従来のリソース志向のAPIで使い分けるのはどうかなと思った。\u003c/p\u003e\n\u003cp\u003eGoでのサーバー実装は、\u003ca href=\"https://github.com/99designs/gqlgen\"\u003e99designs/gqlgen: go generate based graphql server library\u003c/a\u003eがよく使われている感じ。\u003c/p\u003e","tags":["GraphQL"],"title":"GraphQL"},{"categories":null,"objectID":"59d179bde78a4a1fc914aef8d77cf92f","permalink":"https://umemak.github.io/blog/posts/2022/07/23_database/","publish_date":"2022-07-23T00:00:00Z","summary":"\u003cp\u003e昨日はコンテナ実行環境の比較、今日はマネージドDB（MySQL）を比較してみる。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/jp/rds/mysql/?nc=sn\u0026amp;loc=0\"\u003eAmazon RDS for MySQL （MySQLのためのマネージドリレーショナルデータベース） | AWS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cloud.google.com/sql/mysql?hl=ja\"\u003eCloud SQL for MySQL マネージドデータベース  |  Cloud SQL: リレーショナル データベース サービス  |  Google Cloud\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://azure.microsoft.com/ja-jp/services/mysql/\"\u003eAzure Database for MySQL - マネージド MySQL データベース | Microsoft Azure\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eリージョンは東京で、シングル構成の前払いなし。\u003c/p\u003e","tags":["aws","azure","gcp"],"title":"データベース比較"},{"categories":null,"objectID":"bf3ebad0a49794d60c65bf85b370e28a","permalink":"https://umemak.github.io/blog/posts/2022/07/22_container/","publish_date":"2022-07-22T00:00:00Z","summary":"\u003cp\u003eAWSとAzureとGCPで、コンテナ実行環境の比較をしてみたくなった。\u003c/p\u003e\n\u003cp\u003eGCPの\u003ca href=\"https://cloud.google.com/run?hl=ja\"\u003eCloud Run: コンテナを秒単位で本番環境にデプロイ  |  Google Cloud\u003c/a\u003eみたいなやつ。\u003c/p\u003e\n\u003cp\u003eAWSは\u003ca href=\"https://aws.amazon.com/jp/apprunner/\"\u003eAWS App Runner – フルマネージド型のコンテナアプリケーション - Amazon Web Services\u003c/a\u003e、Azureは\u003ca href=\"https://azure.microsoft.com/ja-jp/services/container-apps/#overview\"\u003eAzure Container Apps | Microsoft Azure\u003c/a\u003eが比較対象となるかな？\u003c/p\u003e\n\u003cp\u003eAWSは選択できる最低スペックが1vCPU/2GBメモリなので、GCPとAzureもこれに合わせた見積もりにする。\nなお、メモリはAzureは最低1GBから、GCPは最低128MBから選択できる。\u003c/p\u003e","tags":["aws","azure","gcp"],"title":"コンテナ実行環境比較"},{"categories":null,"objectID":"ad34236fe016db0bb7904f300be96567","permalink":"https://umemak.github.io/blog/posts/2022/07/21_openapi_generator/","publish_date":"2022-07-21T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://openapi-generator.tech/docs/generators#schema-generators\"\u003eGenerators List\u003c/a\u003eを眺めていたら、\u003ca href=\"https://openapi-generator.tech/docs/generators/mysql-schema\"\u003emysql-schema\u003c/a\u003eなんてのがあったので、試してみた。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ wget https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker run --rm \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -v \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003ePWD\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e:/local openapitools/openapi-generator-cli generate \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -i /local/petstore.yaml \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -g mysql-schema \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  -o /local/out\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ ls -R out/\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eout/:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eModel  README.md  mysql_schema.sql\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eout/Model:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eApiResponse.sql  Category.sql  Order.sql  Pet.sql  Tag.sql  User.sql\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eout/mysql_schema.sql\u003c/code\u003eにDDLが作成されていた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eout/Model\u003c/code\u003eには、CRUD用SQLのテンプレートが作られていた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003epetstore.yaml\u003c/code\u003eの\u003ccode\u003ecomponents \u0026gt; schemas\u003c/code\u003eの定義がもとになっているのかな。\u003c/p\u003e","tags":["OpenAPI"],"title":"OpenAPI Generator"},{"categories":null,"objectID":"30d92696b82b5584d4896be6cd396317","permalink":"https://umemak.github.io/blog/posts/2022/07/20_pocketbase_migratin/","publish_date":"2022-07-20T00:00:00Z","summary":"\u003cp\u003e昨日、Migratinが用意されているのを知って、試してみたけれど思ったように動かず。\u003c/p\u003e\n\u003cp\u003eマイグレーションにしか使わないパッケージもいくつかimportが必要だし、明示的に\u003ccode\u003emigrate up\u003c/code\u003eしないといけない。\u003c/p\u003e\n\u003cp\u003eであれば、普通にHTTP APIでCreate Collectionしても良いかなという気持ちになっている。\u003c/p\u003e","tags":["poketbase"],"title":"PocketbaseのMigration"},{"categories":null,"objectID":"6e5efb69c1ab6bd096094a07d282fe15","permalink":"https://umemak.github.io/blog/posts/2022/07/19_error_handring/","publish_date":"2022-07-19T00:00:00Z","summary":"\u003cp\u003e\u003ccode\u003efmt.Errorf(\u0026quot;～～: %w\u0026quot;, err)\u003c/code\u003eの書き方にルールあるのかな、と思って調べたら、先人の記事があった。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developers.cyberagent.co.jp/blog/archives/36253/\"\u003efmt.Errorfのメッセージについての調査と、linterとしての実装について | CyberAgent Developers Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eいつもその時の雰囲気で書いていたので、こういったルールで揃えられるのは良い。\u003c/p\u003e\n\u003cp\u003eもうひとつ、\u003ccode\u003etemplate.Execute\u003c/code\u003eでエラーになったときに、どうするべきなのかという疑問。これも解決されていた。\u003c/p\u003e","tags":["go"],"title":"Goのエラー処理"},{"categories":null,"objectID":"e94a900cff672d24d5ce6c65067873e5","permalink":"https://umemak.github.io/blog/posts/2022/07/19_pocketbase/","publish_date":"2022-07-19T00:00:00Z","summary":"\u003cp\u003eコンテナで起動時にコレクションを作成したい時のやり方が見つからない。\u003c/p\u003e\n\u003cp\u003eMySQLとかだと、\u003ccode\u003e/docker-entrypoint-initdb.d\u003c/code\u003eにSQLを置いておけば実行してくれる、そういうやつ。\u003c/p\u003e\n\u003cp\u003e→\u003ca href=\"https://pocketbase.io/docs/db-migrations/\"\u003eDB migrations - Docs - PocketBase\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePocketbaseの起動時に初期化するのではなく、利用するアプリ側でマイグレーションを実行する方式らしい。\u003c/p\u003e","tags":["poketbase"],"title":"PocketbaseのCollections"},{"categories":null,"objectID":"a053ab9013c1a2f0af739328e6d1074b","permalink":"https://umemak.github.io/blog/posts/2022/07/18_go_redirect/","publish_date":"2022-07-18T00:00:00Z","summary":"\u003cp\u003eログアウトの処理（GET /logout）実行後にトップページにリダイレクトしようとした。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ehttp.Redirect(w, r, \u0026ldquo;/\u0026rdquo;, 301)\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eおや？動作しない時がある。。\u003c/p\u003e\n\u003cp\u003e301だと、ブラウザはリダイレクト先を覚えて、次からはリダイレクト先を最初から叩くっぽい。\u003c/p\u003e\n\u003cp\u003eなので、302にしてあげないと思ったような動きにならない。\u003c/p\u003e\n\u003cp\u003eところで、Goのhttpパッケージに定義されているステータスコード\u003ccode\u003ehttp.StatusTemporaryRedirect\u003c/code\u003eは\u003ccode\u003e307\u003c/code\u003eなんだけど、これはPOSTの処理のリダイレクトもPOSTで行う（元のメソッドと同じにする）ので、トップページとかGETしか定義していないところへのリダイレクトがエラーになる。\u003c/p\u003e","tags":["go"],"title":"Goのredirect"},{"categories":null,"objectID":"5083f1c579a51a5689371f09eb3ce9d7","permalink":"https://umemak.github.io/blog/posts/2022/07/18_go_include/","publish_date":"2022-07-18T00:00:00Z","summary":"\u003cp\u003eテンプレートのincludeってどうやるんだっけ、と思って検索した。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://mikan.github.io/2019/12/08/implementing-header-and-footer-with-golang-html-template/\"\u003eGo の html/template でヘッダーやフッター等の共通化を実現する方法 · Yutaka 🍊 Kato\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eなるほど、\u003ccode\u003e{{define \u0026quot;header\u0026quot;}}\u003c/code\u003e～\u003ccode\u003e{{end}}\u003c/code\u003eで定義して、\u003ccode\u003e{{template \u0026quot;header\u0026quot; .}}\u003c/code\u003eで呼び出すのか。\u003c/p\u003e","tags":["go"],"title":"Goのtemplateのinclude"},{"categories":null,"objectID":"fd9d96b4a2b7d9f89f0cb8ff233e18c4","permalink":"https://umemak.github.io/blog/posts/2022/07/17_mermaid/","publish_date":"2022-07-17T00:00:00Z","summary":"\u003cp\u003eVS Codeのmermaid拡張でER図を試していて、カラム名に日本語使えなくて論理名と物理名両方書きたいのにどうしようかと思ったら、コメントとして書けば日本語も通ることに気づいた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://mermaid-js.github.io/mermaid/#/./entityRelationshipDiagram?id=attribute-keys-and-comments\"\u003emermaid - Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams, gantt charts and git graphs.\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eつまり、こう書ける。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003eerDiagram\n\nuser {\n  bigint id PK \u0026#34;ID Auto increment\u0026#34;\n  text email  \u0026#34;メール\u0026#34;\n  text name  \u0026#34;名前\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e型とカラム名はどっちが先でも通るっぽい。\u003c/p\u003e","tags":["mermaid"],"title":"mermaidのER図"},{"categories":null,"objectID":"6b80cc08c01a1e988a890ddd4a9a96fd","permalink":"https://umemak.github.io/blog/posts/2022/07/16_go_json/","publish_date":"2022-07-16T00:00:00Z","summary":"\u003cp\u003ePocketBaseのユーザー作成をGoからHTTP叩いて実行しようとして、正常時とエラー時で戻ってくるJSONの形式が違っていた。\u003c/p\u003e\n\u003cp\u003estructを別々に用意して、Unmarshalでエラーになったらもう片方を使う？とか思ったけど、\n\u003ca href=\"https://www.kaoriya.net/blog/2016/06/25/\"\u003egolang は ゆるふわに JSON を扱えまぁす! — KaoriYa\u003c/a\u003eによると、\u003ccode\u003einterface{}\u003c/code\u003e（Go1.18以降なら\u003ccode\u003eany\u003c/code\u003eか）を使えば、structを事前に用意する必要がないと。\u003c/p\u003e","tags":["Go"],"title":"GoのJSON"},{"categories":null,"objectID":"02f6302303ab0d56986aefccafbb199c","permalink":"https://umemak.github.io/blog/posts/2022/07/15_id_column/","publish_date":"2022-07-15T00:00:00Z","summary":"\u003cp\u003eDB設計するときのIDカラムについて。\u003c/p\u003e\n\u003cp\u003e昔ながらのシステムだと、auto increment使って連番が定番だと思うのだけど、PocketBaseでCollectionにRecord追加したとき、idは\u003ccode\u003e1ldTBeJNhX3jufu\u003c/code\u003eみたいな文字列が割り振られていて、そういえばFirebaseもそうだったな、と。\u003c/p\u003e","tags":["db"],"title":"idとauto increment"},{"categories":null,"objectID":"1925559bea1bb769b8f49f4f0453f638","permalink":"https://umemak.github.io/blog/posts/2022/07/15_live_share/","publish_date":"2022-07-15T00:00:00Z","summary":"\u003cp\u003eVS Codeの\u003ca href=\"https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare\"\u003eLive Share - Visual Studio Marketplace\u003c/a\u003e拡張、\u003ca href=\"https://github.co.jp/features/codespaces\"\u003eCodespaces | GitHub\u003c/a\u003eで使えたら良いなと思って試してみた。\u003c/p\u003e\n\u003cp\u003eWeb Editor（リポジトリ画面で\u003ccode\u003e.\u003c/code\u003e押すと開くやつ）だと、拡張のインストールやURLの発行はできるけど、Joinしようとするとサーバーが応答しない的なエラー（うろ覚え）で接続できない。\u003c/p\u003e\n\u003cp\u003eCodespacesで開いたら、問題なくできた。\nすばらしい。\u003c/p\u003e","tags":["GitHub"],"title":"Live Share on GitHub Codespaces"},{"categories":null,"objectID":"edaceddaaa44a4359a28d4b79133bbbe","permalink":"https://umemak.github.io/blog/posts/2022/07/15_pocketbase/","publish_date":"2022-07-15T00:00:00Z","summary":"\u003cp\u003ePocketBaseの更新が早い。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/pocketbase/pocketbase/releases\"\u003eReleases · pocketbase/pocketbase\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e手元のDockerfileもバージョン指定できるように変更した。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/eventsite_go/blob/7bc46cf58fd472582fe70ec32590a43c4d19a3f7/Dockerfile.pocketbase#L3\"\u003ehttps://github.com/umemak/eventsite_go/blob/7bc46cf58fd472582fe70ec32590a43c4d19a3f7/Dockerfile.pocketbase#L3\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eAdmin UIで日時の表示がUTC固定なのをTZ指定できるようにならないかな。\u003c/p\u003e","tags":["PocketBase"],"title":"PocketBaseの更新"},{"categories":null,"objectID":"154b0b2f31e1071f3c9a5fc78d5e5642","permalink":"https://umemak.github.io/blog/posts/2022/07/14_rdb/","publish_date":"2022-07-14T00:00:00Z","summary":"\u003cp\u003eずっと欲しいものリストに入っていて買ってなかった、\n\u003ca href=\"https://www.amazon.co.jp/dp/B07P8PMHLL\"\u003e失敗から学ぶRDBの正しい歩き方 Software Design plus | 曽根 壮大 | コンピュータ・IT | Kindleストア | Amazon\u003c/a\u003eをプライムデーのポイントアップ狙いで購入した。\u003c/p\u003e\n\u003cp\u003e細かいテーブルたくさん作るより、汎用テーブルにしたものを作ろうとしていたので、それはだめだと分かったので良かった。\u003c/p\u003e\n\u003cp\u003e細かいテーブル作るとコーディング面倒だけど、その面倒さに負けてはいけない。\u003c/p\u003e","tags":["book"],"title":"失敗から学ぶRDBの正しい歩き方"},{"categories":null,"objectID":"8e54fa7e29ba21846eb1b6ac4f58d7f5","permalink":"https://umemak.github.io/blog/posts/2022/07/13_pocketbase/","publish_date":"2022-07-13T00:00:00Z","summary":"\u003cp\u003esupabaseと格闘していたら、\u003ca href=\"https://pocketbase.io/\"\u003ePocketBase - Open Source backend in 1 file\u003c/a\u003eという似たような機能を提供するツールを見つけた。\u003c/p\u003e\n\u003cp\u003eGitHub見ると1週間ほど前に公開されたばかりのよう。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-dockerfile:Dockerfile.pocketbase\" data-lang=\"dockerfile:Dockerfile.pocketbase\"\u003eFROM alpine\n\nWORKDIR /app\n\nRUN wget https://github.com/pocketbase/pocketbase/releases/download/v0.2.4/pocketbase_0.2.4_linux_amd64.zip\nRUN unzip pocketbase_0.2.4_linux_amd64.zip\nRUN rm pocketbase_0.2.4_linux_amd64.zip\n\nCMD [ \u0026#34;/app/pocketbase\u0026#34;, \u0026#34;serve\u0026#34;, \u0026#34;--http\u0026#34;, \u0026#34;0.0.0.0:8090\u0026#34; ]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eこれで\u003ccode\u003ehttp://0.0.0.0:8090/_/\u003c/code\u003eにアクセスしたら管理者アカウントの作成画面が出た。\n\u003ccode\u003e--http\u003c/code\u003eオプション指定しないとアクセスできない。\u003c/p\u003e","tags":["PocketBase"],"title":"PocketBase"},{"categories":null,"objectID":"d9327777f9a2f59db5a069d711002943","permalink":"https://umemak.github.io/blog/posts/2022/07/12_gotrue/","publish_date":"2022-07-12T00:00:00Z","summary":"\u003cp\u003esupabaseで使っている認証モジュールが\u003ca href=\"https://github.com/netlify/gotrue\"\u003enetlify/gotrue: An SWT based API for managing users and issuing SWT tokens\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003esupabaseのAPIでGoは提供されてないので、直接たたけないか調べてみる。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://supabase.com/docs/architecture\"\u003eArchitecture | Supabase\u003c/a\u003e見ると、\u003ccode\u003e/auth\u003c/code\u003eでGoTrueに流されるようだが、Kongの公開ポート\u003ccode\u003e54321\u003c/code\u003e経由で\u003ccode\u003ehttp://localhost:54321/auth\u003c/code\u003eを叩いても、\u003ccode\u003e{\u0026quot;message\u0026quot;:\u0026quot;no Route matched with those values\u0026quot;}\u003c/code\u003eとのこと。\u003c/p\u003e","tags":["supabase"],"title":"GoTrue"},{"categories":null,"objectID":"ab6f7e14bcda4f02be052b0add103ad4","permalink":"https://umemak.github.io/blog/posts/2022/07/11_supabase/","publish_date":"2022-07-11T00:00:00Z","summary":"\u003cp\u003e以前調べたとき、ローカルで動かしたときにAuth系はサポートしてないというような記事を見て、残念に思っていたのだけれど、Kuzzleの認証も思ったのと違う感じで。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://supabase.com/docs/guides/hosting/docker\"\u003eWith Docker | Supabase\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/hrtk/articles/supabase-nextjs-local\"\u003eSupabaseをローカル環境に構築してNext.jsアプリで利用する（前半）\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこのあたりを見ると、なんかできそう。しかもDockerで。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ /bin/bash -c \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003ecurl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ echo \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;eval \u0026#34;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\u0026#34;\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; /home/umemak/.profile\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ eval \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003e/home/linuxbrew/.linuxbrew/bin/brew shellenv\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ brew install supabase/tap/supabase\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ supabase help\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSupabase CLI 0.29.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e :\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ supabase init\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ supabase start\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ehttp://localhost:54323/ でダッシュボードが表示された。\u003c/p\u003e","tags":["supabase"],"title":"supabaseを試す"},{"categories":null,"objectID":"b8e25d2cef7beff5ea821e4b33d69b4e","permalink":"https://umemak.github.io/blog/posts/2022/07/10_air/","publish_date":"2022-07-10T00:00:00Z","summary":"\u003cp\u003eHTMLとかコード修正したときに手動で再起動するのが面倒なので、ホットリロードツールを導入してみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/cosmtrek/air\"\u003ecosmtrek/air: ☁️ Live reload for Go apps\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ go install github.com/cosmtrek/air@latest\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ air init\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ air\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  __    _   ___  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e / /\u003cspan style=\"color:#ae81ff\"\u003e\\ \u003c/span\u003e | | | |_\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e/_/--\u003cspan style=\"color:#ae81ff\"\u003e\\ \u003c/span\u003e|_| |_| \u003cspan style=\"color:#ae81ff\"\u003e\\_\u003c/span\u003e , built with Go \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkdir /home/umemak/workspace/eventsite_go/tmp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewatching .\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewatching cmd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewatching cmd/eventsite\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewatching db\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewatching db/sql\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewatching model\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewatching model/user\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e!exclude tmp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewatching web\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewatching web/template\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebuilding...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eno Go files in /home/umemak/workspace/eventsite_go\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efailed to build, error: exit status \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e^Ccleaning...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esee you again~\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eデフォルトだと、cmdの下のmain.goを見つけてくれない？\u003c/p\u003e","tags":["go","air"],"title":"Airを試す"},{"categories":null,"objectID":"b76047f27e6a5307df407d0d11ca451b","permalink":"https://umemak.github.io/blog/posts/2022/07/09_mysql/","publish_date":"2022-07-09T00:00:00Z","summary":"\u003cp\u003eMySQLコンテナ作ろうと思って、\u003ca href=\"https://hub.docker.com/_/mysql\"\u003eMysql - Official Image | Docker Hub\u003c/a\u003eのcompose書き方見てたら、adminerというイメージを使っていて、同様に起動してみたらなかなか良い。\u003c/p\u003e\n\u003cp\u003e元のプログラムは\u003ca href=\"https://github.com/dockette/adminer\"\u003edockette/adminer: Tiniest boxed dockerized Adminer (MySQL, PostgreSQL, SQLite, Mongo, Oracle) Dockerfiles\u003c/a\u003eかな。\u003c/p\u003e\n\u003cp\u003eテーブル定義作るときに、カラム名を別のテーブル名+idにしたら、自動で外部キー定義として認識してくれてすごい。\u003c/p\u003e","tags":["mysql"],"title":"adminer"},{"categories":null,"objectID":"6d91787f45916e1ea051d9bc0cd79087","permalink":"https://umemak.github.io/blog/posts/2022/07/09_fleet/","publish_date":"2022-07-09T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/ja-jp/fleet/\"\u003eJetBrains Fleet: JetBrains の次世代 IDE\u003c/a\u003e、去年の11月末にPreview申し込みしていた。\n昨日、使えるようになったとメールが来たので早速インストールしてみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eファイルツリーでCtrl+C、Vでファイルがコピーされないし、Ctrl+Wでエディタタブが閉じられない（エディタにフォーカスが当たっていれば閉じられる）。\u003c/li\u003e\n\u003cli\u003e日本語入力中に、未確定でbackspace押していくと、最初の文字が削除できない。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこの記事を書いていて気になったのはこれくらいかな。\n以前、RubyMine使ってたことあるけど、そのときは上記現象なかった気がする。\u003c/p\u003e","tags":["fleet"],"title":"Fleetお試し"},{"categories":null,"objectID":"ffb57c8b7004bc4dbc35ea452445b2ea","permalink":"https://umemak.github.io/blog/posts/2022/07/09_eventsite_go/","publish_date":"2022-07-09T00:00:00Z","summary":"\u003cp\u003e結局、フレームワークは\u003ca href=\"https://github.com/go-chi/chi/\"\u003ego-chi/chi: lightweight, idiomatic and composable router for building Go HTTP services\u003c/a\u003eを使うことにした。\u003c/p\u003e\n\u003cp\u003e理由は、認証で使いそうなパッケージ\u003ca href=\"https://github.com/go-pkgz/auth\"\u003ego-pkgz/auth: Authenticator via oauth2, direct, email and telegram\u003c/a\u003eのサンプルが使っていたから。\u003c/p\u003e\n\u003cp\u003eとりあえず、HTTPリクエストを受けてDB読み書きしてテンプレート加工して返すところまでできた。\u003c/p\u003e","tags":["go","chi","mysql"],"title":"Goアプリ"},{"categories":null,"objectID":"e6d39857e41d5e8e0e59c3421417efd1","permalink":"https://umemak.github.io/blog/posts/2022/07/09_revel/","publish_date":"2022-07-09T00:00:00Z","summary":"\u003cp\u003eちょっとしたWebアプリを作りたくなったので、GoでRailsみたいなフレームワークないのかなと探した。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/revel/revel\"\u003erevel/revel: A high productivity, full-stack web framework for the Go language.\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eが近そうだったので、試してみた。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ go install github.com/revel/cmd/revel@latest\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/revel/cmd v1.1.2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/agtorre/gocolorize v1.0.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/jessevdk/go-flags v1.4.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/revel/config v1.1.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/revel/log15 v2.11.20+incompatible\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/mattn/go-colorable v0.1.8\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading gopkg.in/natefinch/lumberjack.v2 v2.0.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading gopkg.in/stack.v0 v0.0.0-20141108040640-9b43fcefddd0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/pkg/errors v0.9.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/fsnotify/fsnotify v1.4.9\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/mattn/go-isatty v0.0.14\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/inconshreveable/log15 v0.0.0-20201112154412-8562bdadbbac\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ revel new -a events_go -r\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erevel: command not found\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eおや？パスが通ってない？\u003c/p\u003e","tags":["go","revel"],"title":"Revel入門"},{"categories":null,"objectID":"69b1eff0352f187ac00f0f12be739da9","permalink":"https://umemak.github.io/blog/posts/2022/07/08_amazon_ivs/","publish_date":"2022-07-08T00:00:00Z","summary":"\u003cp\u003eストリームの再生にトークンが必要になる。\u003c/p\u003e\n\u003cp\u003eほぼこのブログのやり方でできた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dev.classmethod.jp/articles/update-amazon-interactive-video-service-auth/\"\u003e[アップデート] Amazon Interactive Video Service で再生時の認証が行えるようになりました！ | DevelopersIO\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e一点だけ、秘密鍵を Secrets Manager にアップロードのところでエラーになった。\ncliのバージョンが変わって、コマンドに\u003ccode\u003e--cli-binary-format raw-in-base64-out\u003c/code\u003eオプションを指定する必要があるとのこと。\u003c/p\u003e","tags":["aws"],"title":"Amazon IVSプライベートチャネル"},{"categories":null,"objectID":"c6b9e61529d135532312d7e53e5f3648","permalink":"https://umemak.github.io/blog/posts/2022/07/07_amazon_ivs/","publish_date":"2022-07-07T00:00:00Z","summary":"\u003cp\u003eIVSのサンプルアプリ（React製）をAmplifyにデプロイしてみた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003enpm run build\u003c/code\u003eした\u003ccode\u003ebuild\u003c/code\u003eディレクトリを丸ごとアップロードで。\u003c/p\u003e\n\u003cp\u003ejsとcssがHTTPコード301でファイル名の最後に\u003ccode\u003e/\u003c/code\u003eをつけたアドレスにリダイレクトされてエラーになっていたので、書き換えないようリダイレクト設定をしたら動いた。\u003c/p\u003e\n\u003cp\u003eIVSのストリーミングもOBSから送信できた。\u003c/p\u003e","tags":["aws"],"title":"Amazon IVS+Amplify"},{"categories":null,"objectID":"3bb27f92ddb690c7857734d9d41c6b04","permalink":"https://umemak.github.io/blog/posts/2022/07/06_amazon_ivs/","publish_date":"2022-07-06T00:00:00Z","summary":"\u003cp\u003eIVSのチャットルームがエラーで作れない件、試しにもう一つアカウント作ってみたけれど、同じ現象だった。\u003c/p\u003e\n\u003cp\u003e2年前に作ったアカウントと何が違うのだろう。。\u003c/p\u003e","tags":["aws"],"title":"Amazon IVSのエラー"},{"categories":null,"objectID":"6ef1557ee85f6efd91950c39ce9216fd","permalink":"https://umemak.github.io/blog/posts/2022/07/05_amazon_ivs/","publish_date":"2022-07-05T00:00:00Z","summary":"\u003cp\u003e相変わらずエラーでIVSのチャットルームが作れない\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYour account is pending verification. Until the verification process is complete, you may not be able to carry out requests with this account. If you have questions, contact AWS Support.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e仕方ないので、作れる方のアカウントで動作確認を進めることにした。\u003c/p\u003e\n\u003cp\u003e前に試したのと同じように、ap-northeast-1 でS3バケット作ってsam deployして、IVSチャットルームはus-east-1にした。\n\u003ccode\u003eWaiting to connect...\u003c/code\u003eでつながらない。\u003c/p\u003e","tags":["aws"],"title":"Amazon IVSのサンプル"},{"categories":null,"objectID":"96a6d185eed44e8738af123ae5d40272","permalink":"https://umemak.github.io/blog/posts/2022/07/04_flutter_crop/","publish_date":"2022-07-04T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/hnvn/flutter_image_cropper\"\u003ehnvn/flutter_image_cropper: A Flutter plugin for Android and iOS supports cropping images\u003c/a\u003eを使うときにエラーが出ていた件、解決。\u003c/p\u003e\n\u003cp\u003eFlutter Webで使うときは\u003ccode\u003eweb/index.html\u003c/code\u003eにcssとjsを追加するようにREADMEに書かれていた。\u003c/p\u003e\n\u003cp\u003eドキュメントはちゃんと読まないと、かえって時間を浪費してしまう例だ。\u003c/p\u003e\n\u003cp\u003eただ、スマホのブラウザで表示したときにはみ出してしまうので、この辺は要調査。\u003c/p\u003e","tags":["Flutter"],"title":"Image Cropper"},{"categories":null,"objectID":"0aa38368b86bcbf2b7ba7cebd5b6848f","permalink":"https://umemak.github.io/blog/posts/2022/07/03_flutter_cors/","publish_date":"2022-07-03T00:00:00Z","summary":"\u003cp\u003ecrop使うために、\u0026ndash;web-rendererをcanvaskitにしたら、Firebase Storageの画像を表示できなくなってしまった。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.flutter.dev/development/platform-integration/web/web-images#cross-origin-images\"\u003eDisplaying images on the web | Flutter\u003c/a\u003eにも書かれていて、いくつか回避策が提示されていた。\u003c/p\u003e\n\u003cp\u003eFirebase Hostingはfirebase.jsonで設定できるらしいが、今回問題になっているのはStorageの方で。\u003c/p\u003e","tags":["Flutter"],"title":"FlutterでCORS"},{"categories":null,"objectID":"7d2a846976b4deba4072230b4e2c9049","permalink":"https://umemak.github.io/blog/posts/2022/07/02_amazon_ivs/","publish_date":"2022-07-02T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/aws-samples/amazon-ivs-chat-web-demo\"\u003eaws-samples/amazon-ivs-chat-web-demo: A demo web application that shows how to implement a basic video + chat application using the AWS serverless application model (SAM) and Javascript (React).\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこれを試すにあたり、作ったものをまるごと削除できるようにAWS Organizationsで専用アカウント作成した。\nついでにAWS Single Sign-Onも設定してログインを集中管理できるようにした。\u003c/p\u003e\n\u003cp\u003eCloudShellで作業する。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ git clone https://github.com/aws-samples/amazon-ivs-chat-web-demo.git\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ cd amazon-ivs-chat-web-demo/serverless/dependencies/nodejs\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm install\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ cd ../../\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ aws s3api create-bucket --bucket ivstestumemakhome123 --region ap-northeast-1 \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e--create-bucket-configuration LocationConstraint\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eap-northeast-1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sam package --template-file template.yaml \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --s3-bucket ivstestumemakhome123 \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --output-template-file output.yaml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sam deploy --template-file ./output.yaml \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e--stack-name ivstest \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e--capabilities CAPABILITY_IAM \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e--region ap-northeast-1\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ cd ../web-ui/\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ vim src/config.js\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eCHAT_ROOM_ID\u003c/code\u003eを取得するために、コンソールからチャットルームを作成しようとしたら東京リージョンでは選択できなかった。\nus-east-1（バージニア北部）にした。\u003c/p\u003e","tags":["aws"],"title":"Amazon IVSのサンプルを試してみた"},{"categories":null,"objectID":"066aac601cead9e4787c7bce917043d5","permalink":"https://umemak.github.io/blog/posts/2022/07/01_flutter_state/","publish_date":"2022-07-01T00:00:00Z","summary":"\u003cp\u003e画像の選択前後で表示だし分けしたい件、Prvider使って実装してたけど、setStateで良いことに気づいた。\u003c/p\u003e\n\u003cp\u003eだいぶFlutterのことがわかってきた気がする。\u003c/p\u003e\n\u003cp\u003e（cropはまだできていない）\u003c/p\u003e","tags":["Flutter"],"title":"Flutterの状態管理"},{"categories":null,"objectID":"90aea90cbbd607c1c84e076a4765a24d","permalink":"https://umemak.github.io/blog/posts/2022/06/30_flutter_web_font/","publish_date":"2022-06-30T00:00:00Z","summary":"\u003cp\u003eFlutter Webでブラウザ表示したときに、漢字が中国風になってしまう件。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e--web-renderer html\u003c/code\u003eで動かせば回避できていたのだけれど、cropを試すのに\u003ccode\u003e--web-renderer canvaskit\u003c/code\u003eにしたら再発した。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://zenn.dev/enoiu/articles/596078e878145d\"\u003eFlutter Webでのフォント問題を解決する\u003c/a\u003eを参考にsawarabiGothicにして解決。\u003c/p\u003e","tags":["Flutter"],"title":"Flutter Webのフォント問題"},{"categories":null,"objectID":"3b74b484b945b5b23be76abd81fcff88","permalink":"https://umemak.github.io/blog/posts/2022/06/30_oracle_docker_go/","publish_date":"2022-06-30T00:00:00Z","summary":"\u003cp\u003ego-oci8を使ったイメージの、oraclelinux8をベースイメージにしたやつが\u003ccode\u003e1.25GB\u003c/code\u003eにもなったので、もっと小さくならないか試してみた。\u003c/p\u003e\n\u003cp\u003egolang:1-bullseyeをベースにした場合、rpmが使えないのでOracleInstantClient関連のzipを展開する方法でやって、\u003ccode\u003e1.32GB\u003c/code\u003e。増えてる。\u003c/p\u003e","tags":["Docker","oracle","go"],"title":"OracleにGoで接続するイメージの軽量化"},{"categories":null,"objectID":"0e2121215342e77701c5b83f92198de2","permalink":"https://umemak.github.io/blog/posts/2022/06/29_flutter_image_cropper/","publish_date":"2022-06-29T00:00:00Z","summary":"\u003cp\u003eアップロードする画像を正方形にしたかったので、加工用のパッケージを入れてみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/hnvn/flutter_image_cropper\"\u003ehnvn/flutter_image_cropper: A Flutter plugin for Android and iOS supports cropping images\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこれがFlutter Webだとどうもうまく動かない。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecroppie_dart.dart:129 Uncaught (in promise) TypeError: dart.global.Croppie is not a constructor\n    at new croppie_dart._Croppie.new (croppie_dart.dart:129:50)\n    at Croppie.new (croppie_dart.dart:68:12)\n    at cropImage (image_cropper_for_web.dart:120:21)\n    at cropImage.next (\u0026lt;anonymous\u0026gt;)\n    at runBody (async_patch.dart:84:54)\n    at Object._async [as async] (async_patch.dart:123:5)\n    at image_cropper_for_web.ImageCropperPlugin.new.cropImage (image_cropper_for_web.dart:74:33)\n    at cropper.ImageCropper.new.cropImage (cropper.dart:86:21)\n    at NewPostPage.dart:206:52\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFlutter、まだわからないことが多い。。\u003c/p\u003e\n\u003cp\u003e次は、\u003ca href=\"https://fluttergems.dev/crop-image/\"\u003eTop Flutter Image Cropping, Image Cropper packages | Flutter Gems\u003c/a\u003eで見つけた\u003ca href=\"https://github.com/xclud/flutter_crop\"\u003exclud/flutter_crop: Crop any widget/image in Android, iOS, Web and Desktop with fancy and customizable UI, in pure Dart code.\u003c/a\u003eを試してみようと思う。\u003c/p\u003e","tags":["Flutter"],"title":"Image Cropper"},{"categories":null,"objectID":"78008d50aeaae654dcfb043955744150","permalink":"https://umemak.github.io/blog/posts/2022/06/28_flutter_model/","publish_date":"2022-06-28T00:00:00Z","summary":"\u003cp\u003e昨日の2度呼ばれて2度目の内容が反映されない件。\u003c/p\u003e\n\u003cp\u003e結局よくわからなかったので、反映されない部品（WebViewX）だけ古い実装に戻すことにより回避した。\u003c/p\u003e\n\u003cp\u003eFirestore倍の回数呼び出すことになりそうだけど、仕方ない。\u003c/p\u003e","tags":["Flutter"],"title":"Flutterでmodelを使う"},{"categories":null,"objectID":"71d6a9220e24a83f802b2362f95f9328","permalink":"https://umemak.github.io/blog/posts/2022/06/27_flutter_model/","publish_date":"2022-06-27T00:00:00Z","summary":"\u003cp\u003eFirestoreから取得したデータを、Wighetの構築に受け渡しするのに引数並べるの大変になってきたので、\nmodelクラスの導入をしてみた。\u003c/p\u003e\n\u003cp\u003e参考：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/ryo_t/articles/5dd6970f2e3f06\"\u003e【Flutter \u0026amp; FireStore】Modelを作成して、データの一覧を取得 する\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/ryo_t/articles/0a367221d40f11\"\u003e【Flutter \u0026amp; FireStore】Modelを作成して、データの一覧を取得・表示する　その２\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e無事に引数はまとめることができたのだが、ChangeNotifierProviderを入れたせいなのか描画が2回呼ばれて、どうやら1回目はデータが取れていない状態、2回目はデータが入った状態らしい。\u003c/p\u003e","tags":["Flutter"],"title":"Flutterでmodelを使う"},{"categories":null,"objectID":"42990101ab90a2a6ae562f24448571d8","permalink":"https://umemak.github.io/blog/posts/2022/06/26_flutter_study/","publish_date":"2022-06-26T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://codezine.jp/article/detail/14820\"\u003eFlutterでのレイアウトの組み合わせ方を学ぼう～実際の画面例を使用 (1/2)：CodeZine（コードジン）\u003c/a\u003eを参考に実装し始めたら、サンプルコードがわかりにくいのに気づいた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003elib/list/CouponListView.dartの抜粋\u003c/code\u003eなど抜粋と明示されているものの、全体がないので部分をどう組み合わせているのかがわかりにくい。\u003c/p\u003e\n\u003cp\u003eどこかに全体コード置かれていたりするのだろうか？\u003c/p\u003e","tags":["Flutter"],"title":"Flutter学習"},{"categories":null,"objectID":"b401288ff727b47940857718069de5b6","permalink":"https://umemak.github.io/blog/posts/2022/06/25_flutter_drawer/","publish_date":"2022-06-25T00:00:00Z","summary":"\u003cp\u003eDrawerが表示できるようになったが、onTapが反応しない。\u003c/p\u003e\n\u003cp\u003eFlutter webだからかと思ったけど、\u003ca href=\"https://docs.flutter.dev/cookbook/design/drawer#interactive-example\"\u003eAdd a Drawer to a screen | Flutter\u003c/a\u003eのサンプルは動いているので、他の原因っぽい。\u003c/p\u003e\n\u003cp\u003eログアウト機能しか使う予定なかったし、ドロワー以外の方法でも良いか。。\u003c/p\u003e","tags":["Flutter"],"title":"Drawer"},{"categories":null,"objectID":"9e9dd2762fb1124eb15bf486df4c9899","permalink":"https://umemak.github.io/blog/posts/2022/06/24_flutter_study/","publish_date":"2022-06-24T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://codezine.jp/article/corner/830\"\u003eFlutterで始めるモバイルアプリ開発連載一覧：CodeZine（コードジン）\u003c/a\u003eの第8回以降を読んだ。\u003c/p\u003e\n\u003cp\u003eサンプルがわりと分かりやすくて良いと思った。\u003c/p\u003e\n\u003cp\u003eChoiceChip と Drawer を取り入れてみた。\u003c/p\u003e","tags":["Flutter"],"title":"Flutter学習"},{"categories":null,"objectID":"4c0ddbb822532ed1c1a6e65400ca98d8","permalink":"https://umemak.github.io/blog/posts/2022/06/23_dart_study/","publish_date":"2022-06-23T00:00:00Z","summary":"\u003cp\u003e昨日見つけた\u003ca href=\"https://codezine.jp/article/corner/830\"\u003eFlutterで始めるモバイルアプリ開発連載一覧：CodeZine（コードジン）\u003c/a\u003eの第7回まで読んだ。\u003c/p\u003e\n\u003cp\u003eここまではFlutterというよりはDartの言語的な解説がメインで、いままで何となくでやっていた所が復習できた。\u003c/p\u003e\n\u003cp\u003eただ、書かれた時期がFlutter2の登場以前なので、細かいところや作法は現在と変わっているかもしれない。\u003c/p\u003e","tags":["Flutter"],"title":"Dart復習"},{"categories":null,"objectID":"df4cfe11485cd6e92f0afbac1498132f","permalink":"https://umemak.github.io/blog/posts/2022/06/21_flutter_web_scroll/","publish_date":"2022-06-22T00:00:00Z","summary":"\u003cp\u003e基本的な実装ができたので、Firebase HostingにデプロイしてPixel4で表示してみた。\u003c/p\u003e\n\u003cp\u003e画像をアップロードして画面の表示項目が増えたら、画面下部のボタンが画面外に出て押せなくなってしまった。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://api.flutter.dev/flutter/widgets/SingleChildScrollView-class.html\"\u003eSingleChildScrollView\u003c/a\u003e でまるっと囲んでしまえば良いらしい。\u003c/p\u003e\n\u003cp\u003ePWAとしてインストールしていた場合は、再インストールしないと修正が反映されない。\u003c/p\u003e","tags":["Flutter"],"title":"Flutter Webをスマホで表示したらスクロールできなかった"},{"categories":null,"objectID":"75e8b718bde29a3236aa4521f0f69530","permalink":"https://umemak.github.io/blog/posts/2022/06/22_flutter_study/","publish_date":"2022-06-22T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://codezine.jp/article/detail/14820\"\u003eFlutterでのレイアウトの組み合わせ方を学ぼう～実際の画面例を使用 (1/2)：CodeZine（コードジン）\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこういうリスト作りたいなと思って検索してたどり着いたのだけど、\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://codezine.jp/article/corner/830\"\u003eFlutterで始めるモバイルアプリ開発連載一覧：CodeZine（コードジン）\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこの連載一通り読んでみれば勉強になりそう。\u003c/p\u003e","tags":["Flutter"],"title":"Flutterを学ぶ"},{"categories":null,"objectID":"a3d8d953ceec0f9af4ec83c277c55d2c","permalink":"https://umemak.github.io/blog/posts/2022/06/20_flutter_firestore/","publish_date":"2022-06-21T00:00:00Z","summary":"\u003cp\u003e親コレクションと子コレクションがあったとして、子を親のサブコレクションにするか、子に親のIDを持たせて別のコレクションにするか問題。\u003c/p\u003e\n\u003cp\u003e別のコレクションにした場合、クエリ時にwhereを使って親IDを指定して絞り込むと、orderByが使えない。\nエラーにならないけど、ゼロマッチになってしまう。\u003c/p\u003e\n\u003cp\u003eorderByを使いたかったので、サブコレクションを使うことにした。\u003c/p\u003e","tags":["Flutter"],"title":"Firestoreでサブコレクションを使う理由"},{"categories":null,"objectID":"c07478a2accf17fcf29a7e33d5ded34d","permalink":"https://umemak.github.io/blog/posts/2022/06/20_flutter_auth/","publish_date":"2022-06-20T00:00:00Z","summary":"\u003cp\u003e毎回ログイン画面に遷移して面倒だなぁと思っていた件。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://zenn.dev/kboy/articles/4c398560a2518f\"\u003eFlutterWebでFirebaseAuthのcurrentUserがリロード時にnullになることに対しての対処法\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e同様に、runAppの前に\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eawait\u003c/span\u003e FirebaseAuth.instance.userChanges().first;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eを入れたら解消した。\u003c/p\u003e","tags":["Flutter"],"title":"Flutterでリロードしたときもログイン状態を維持する"},{"categories":null,"objectID":"f3c807eacc6aae72471e8d1cde0c782d","permalink":"https://umemak.github.io/blog/posts/2022/06/19_flutter_dir/","publish_date":"2022-06-19T00:00:00Z","summary":"\u003cp\u003elib直下にmainとstateと画面ごとのファイルをおいているけど、ProviderやらRiverpodの参考に見てるページはmainに全部書いていて、ページごとに分割した書き方がいまいちわからない。\u003c/p\u003e\n\u003cp\u003e状態管理も考慮したファイル構成はどうなのかなとググったら、repositoryやらserviceやら出てきて、そこまで凝ったことしなくても良いんだけどな、、という気持ちになった。\u003c/p\u003e","tags":["Flutter"],"title":"Flutterのディレクトリ構成"},{"categories":null,"objectID":"e43d0c8e3fca14893eb5253842ca06af","permalink":"https://umemak.github.io/blog/posts/2022/06/18_amazon_ivs/","publish_date":"2022-06-18T00:00:00Z","summary":"\u003cp\u003eYouTubeみたいな動画配信とチャットできるサイト作るのに良さそうなサービスないかな、と思って探したのが\u003ca href=\"https://aws.amazon.com/jp/ivs/\"\u003eAmazon Interactive Video Service\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e動画の配信はOBSを使って簡単にできそう。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://catalog.us-east-1.prod.workshops.aws/workshops/022adf04-0ff9-49af-848f-993e42575540/ja-JP\"\u003eLive Streaming with Amazon Interactive Video Service\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eS3に自動的に保存することもできるようなので、後から視聴することもできそう。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.aws.amazon.com/ja_jp/ivs/latest/userguide/record-to-s3.html\"\u003eAmazon S3 への自動録画 - Amazon Interactive Video Service\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eチャットのサンプルも用意されていた。\u003c/p\u003e","tags":["aws"],"title":"Amazon IVS入門"},{"categories":null,"objectID":"b453d70267d4c375ecc354e6764049dc","permalink":"https://umemak.github.io/blog/posts/2022/06/17_flutter_upload/","publish_date":"2022-06-17T00:00:00Z","summary":"\u003cp\u003eファイルを選択してFirebase Storageにアップロードする処理は昨日できた。\u003c/p\u003e\n\u003cp\u003eフォーム画面で選択したファイルを、アップロードする前にプレビュー表示をしたい。\u003c/p\u003e\n\u003cp\u003e画像の表示は\u003ca href=\"https://api.flutter.dev/flutter/widgets/Image-class.html\"\u003eImage class - widgets library - Dart API\u003c/a\u003eを使えばできる、のだけれど、画面を表示したタイミングではまだ画像が選択されていないので何も表示できない。\u003c/p\u003e\n\u003cp\u003e画像を選択したら描画されるようにしたい。\u003c/p\u003e","tags":["Flutter"],"title":"アップロードしたファイルを表示する"},{"categories":null,"objectID":"04db20c0db43ea5bd77debdcb481ec01","permalink":"https://umemak.github.io/blog/posts/2022/06/16_flutter_upload/","publish_date":"2022-06-16T00:00:00Z","summary":"\u003cp\u003e画像を選択してアップロードする機能を付けたい。\u003c/p\u003e\n\u003cp\u003eアップロード先はFirebase Storageで。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://qiita.com/kazutxt/items/de764db4c9ffb2ee935a\"\u003eFlutter×Firebase(CloudStorage)でファイルダウンロードとアップロードを簡単に実現する方法 - Qiita\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eを見て実装してみたところ、\u003ccode\u003eUnsupported operation: Platform._operatingSystem\u003c/code\u003eなエラーが。\u003c/p\u003e\n\u003cp\u003eWebだと対応していない書き方なのかな・・環境ごとに分けるの面倒だな・・\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://stackoverflow.com/questions/59716944/flutter-web-upload-image-file-to-firebase-storage\"\u003egoogle cloud functions - Flutter web - Upload Image File to Firebase Storage - Stack Overflow\u003c/a\u003e\u003c/p\u003e","tags":["Flutter"],"title":"Flutterでファイルアップロード"},{"categories":null,"objectID":"a7b099c9aa8e588d27a9946d870cd25c","permalink":"https://umemak.github.io/blog/posts/2022/06/15_flutter_router/","publish_date":"2022-06-15T00:00:00Z","summary":"\u003cp\u003ego_router 続き。\u003c/p\u003e\n\u003cp\u003eパラメータを渡すところは、\u003ca href=\"https://github.com/csells/go_router/blob/main/docs/ja/parameters.mdx\"\u003ego_router/parameters.mdx at main · csells/go_router\u003c/a\u003eを見て書いたらうまくいった。\u003c/p\u003e\n\u003cp\u003eあとはログイン周り（リロードしたときにログイン状態を維持したい）は、routerとは別次元の問題なのでいったん置いておく。\n開発中は自分しか使わないし問題なし。\u003c/p\u003e","tags":["Flutter"],"title":"Flutterのrouter"},{"categories":null,"objectID":"4fddf31c82930a4a0f41b3aea0cab658","permalink":"https://umemak.github.io/blog/posts/2022/06/14_flutter_router/","publish_date":"2022-06-14T00:00:00Z","summary":"\u003cp\u003e画面レイアウトの調整が面倒な件、ロジックを作り始めると、目的の画面にたどり着くまでに手数が必要になるせいだと気づいた。\u003c/p\u003e\n\u003cp\u003eということで、目的の画面に直接アクセスできるように（Webアプリ版なので）URL指定で開けるようにする。\u003c/p\u003e\n\u003cp\u003eそのためにはrouterを使うのが良さそう。\u003c/p\u003e\n\u003cp\u003e軽く検索したところ、以下のパッケージがヒットした。\u003c/p\u003e","tags":["Flutter"],"title":"Flutterのrouter選定"},{"categories":null,"objectID":"a5e4e9d20deef09af5c97f2558127b5b","permalink":"https://umemak.github.io/blog/posts/2022/06/13_flutter_dropdown/","publish_date":"2022-06-13T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://api.flutter.dev/flutter/material/DropdownButton-class.html\"\u003eDropdownButton class - material library - Dart API\u003c/a\u003eのサンプルを持ってきて、サンプルではchildとvalueを同じ文字列にしてるのを別々に指定できるようにして、とりあえずループ使わないで配列直接指定にしてみたら、エラー。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eAssertion failed:\nfile:///home/umemak/sdk/flutter/packages/flutter/lib/src/material/dropdown.dart:882:15\nitems == null || items.isEmpty || value == null ||\n              items.where((DropdownMenuItem\u0026lt;T\u0026gt; item) {\n                return item.value == value;\n              }).length == 1\n\u0026#34;There should be exactly one item with [DropdownButton]\u0026#39;s value: One. \\nEither zero or 2 or more\n[DropdownMenuItem]s were detected with the same value\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003edropdownValueの初期値をサンプルからコピーしたまま直してなかった。。\u003c/p\u003e","tags":["Flutter"],"title":"FlutterのDropdownを使う"},{"categories":null,"objectID":"97465f53fb0794b59694184f5a3004d8","permalink":"https://umemak.github.io/blog/posts/2022/06/12_oracle_docker_go3/","publish_date":"2022-06-12T00:00:00Z","summary":"\u003cp\u003e昨日は、\u003ca href=\"https://github.com/mattn/go-oci8\"\u003emattn/go-oci8: Oracle driver for Go using database/sql\u003c/a\u003eと\u003ca href=\"https://github.com/sijms/go-ora\"\u003esijms/go-ora: Pure go oracle client\u003c/a\u003eを使ったサンプルをコンテナ上で\u003ccode\u003ego run\u003c/code\u003eして動かしていた。\u003c/p\u003e\n\u003cp\u003e今日は\u003ccode\u003ego build\u003c/code\u003eでバイナリにして実行できるようにしてみる。\u003c/p\u003e\n\u003cp\u003e何もオプション付けずにビルドしたら、どちらも問題なし。\u003c/p\u003e\n\u003cp\u003eバイナリサイズを小さくしようと、\u003ccode\u003e-ldflags=\u0026quot;-s -w -extldflags \\\u0026quot;-static\\\u0026quot;\u0026quot;\u003c/code\u003eをつけたところ、go-oraは大丈夫。go-oci8はNGだった。\u003c/p\u003e","tags":["Docker","oracle","go"],"title":"OracleにGoで接続する3"},{"categories":null,"objectID":"6712468b830f908446db188d06cfc684","permalink":"https://umemak.github.io/blog/posts/2022/06/11_oracle_docker/","publish_date":"2022-06-11T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/oracle/docker-images/tree/main/OracleDatabase/SingleInstance\"\u003edocker-images/OracleDatabase/SingleInstance at main · oracle/docker-images\u003c/a\u003eはクライアント側みたいにビルド済みイメージが用意されていないのかな、と思ったらOracle Container Registryにそれらしいものを見つけた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://container-registry.oracle.com/ords/f?p=113:10::::::\"\u003eHome\u003c/a\u003e \u0026gt; Database \u0026gt; express\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker pull container-registry.oracle.com/database/express:latest\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eサイズやばい\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker images | grep ora\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eoraclelinux                                      \u003cspan style=\"color:#ae81ff\"\u003e8\u003c/span\u003e            3bbe8a2c4b82   \u003cspan style=\"color:#ae81ff\"\u003e9\u003c/span\u003e days ago     226MB\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eoraclelinux                                      8-slim       1fcc1e6dda05   \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e weeks ago    101MB\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econtainer-registry.oracle.com/database/express   latest       e986fd612413   \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e months ago   11.2GB\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker run -d container-registry.oracle.com/database/express\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker ps\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCONTAINER ID   IMAGE                                            COMMAND                  CREATED          STATUS                             PORTS     NAMES\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eb9c64bc970d7   container-registry.oracle.com/database/express   \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/bin/sh -c \u0026#39;exec \u003c/span\u003e$O\u003cspan style=\"color:#e6db74\"\u003e…\u0026#34;\u003c/span\u003e   \u003cspan style=\"color:#ae81ff\"\u003e56\u003c/span\u003e seconds ago   Up \u003cspan style=\"color:#ae81ff\"\u003e55\u003c/span\u003e seconds \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003ehealth: starting\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e             wizardly_dijkstra\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker ps\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCONTAINER ID   IMAGE                                            COMMAND                  CREATED              STATUS                        PORTS     NAMES\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eb9c64bc970d7   container-registry.oracle.com/database/express   \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/bin/sh -c \u0026#39;exec \u003c/span\u003e$O\u003cspan style=\"color:#e6db74\"\u003e…\u0026#34;\u003c/span\u003e   About a minute ago   Up About a minute \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003ehealthy\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e             wizardly_dijkstra\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eStatusがhalthyになるまで1分くらいかかった。\u003c/p\u003e","tags":["Docker","oracle"],"title":"OracleサーバーのDockerイメージ"},{"categories":null,"objectID":"66b393cfbbaa031ac788abbd9476f469","permalink":"https://umemak.github.io/blog/posts/2022/06/11_oracle_docker_go/","publish_date":"2022-06-11T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"../11_oracle_docker\"\u003e前の記事\u003c/a\u003eでsqlplusで接続できたので、Goのプログラムから接続してみる。\u003c/p\u003e\n\u003cp\u003einstantclientベースでGoをインストールするDockerfile作成\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e ghcr.io/oracle/oraclelinux8-instantclient:21\u003c/span\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eRUN\u003c/span\u003e yum install -y wget tar\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eRUN\u003c/span\u003e wget https://go.dev/dl/go1.18.3.linux-amd64.tar.gz\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eRUN\u003c/span\u003e rm -rf /usr/local/go \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e tar -C /usr/local -xzf go1.18.3.linux-amd64.tar.gz\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eENV\u003c/span\u003e PATH\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003ePATH\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e:/usr/local/go/bin\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eCMD\u003c/span\u003e [ \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;go\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e ]\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003edocker-composeもそれを使うように修正\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eversion\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;3\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eservices\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003edb\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eimage\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003econtainer-registry.oracle.com/database/express\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eports\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#ae81ff\"\u003e1521\u003c/span\u003e:\u003cspan style=\"color:#ae81ff\"\u003e1521\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eenvironment\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#ae81ff\"\u003eORACLE_PWD=OraclePwd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003ecli\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ebuild\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eimage\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eoraclegocli\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003etty\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ecommand\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ebash\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://raw.githubusercontent.com/sijms/go-ora/master/examples/hello_sql/main.go\"\u003esijms/go-oraのサンプル\u003c/a\u003eファイルを拝借。\nimportの所はv2に修正。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# vi main.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# go mod tidy\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: finding module \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e package github.com/sijms/go-ora/v2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: downloading github.com/sijms/go-ora/v2 v2.4.24\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ego: found github.com/sijms/go-ora/v2 in github.com/sijms/go-ora/v2 v2.4.24\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# go run main.go  oracle://system:OraclePwd@db:1521/XE\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSuccessfully connected.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e接続はできているみたいだけど、SQLの実行結果が表示されない。。\u003c/p\u003e","tags":["Docker","oracle","go"],"title":"OracleにGoで接続する"},{"categories":null,"objectID":"014ac3e89ac2489cb5ccd70b2ac1345f","permalink":"https://umemak.github.io/blog/posts/2022/06/11_oracle_docker_go2/","publish_date":"2022-06-11T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/mattn/go-oci8\"\u003emattn/go-oci8: Oracle driver for Go using database/sql\u003c/a\u003eでやってみる。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# go run go-oci8/main.go \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# pkg-config --cflags  -- oci8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epkg-config: exec: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;pkg-config\u0026#34;\u003c/span\u003e: executable file not found in $PATH\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# yum install -y pkgconfig\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# go run go-oci8/main.go \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# pkg-config --cflags  -- oci8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ePackage oci8 was not found in the pkg-config search path.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ePerhaps you should add the directory containing \u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003eoci8.pc\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003eto the PKG_CONFIG_PATH environment variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003ePackage \u0026#39;\u003c/span\u003eoci8\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;, required by \u0026#39;\u003c/span\u003evirtual:world\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u0026#39;\u003c/span\u003e, not found\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epkg-config: exit status \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eとりあえずmain.goと同じところにoci8.pcを作成。中身は\u003ca href=\"https://github.com/mattn/go-oci8#linux\"\u003eExamples\u003c/a\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# export PKG_CONFIG_PATH\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# go run go-oci8/main.go \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# github.com/mattn/go-oci8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecgo: C compiler \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gcc\u0026#34;\u003c/span\u003e not found: exec: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gcc\u0026#34;\u003c/span\u003e: executable file not found in $PATH\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# yum install -y gcc\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# go run go-oci8/main.go \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# github.com/mattn/go-oci8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eIn file included from vendor/github.com/mattn/go-oci8/c_helpers.go:3:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e./oci8.go.h:1:10: fatal error: oci.h: No such file or directory\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#75715e\"\u003e#include \u0026lt;oci.h\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          ^~~~~~~\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompilation terminated.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh-4.4# find / | grep oci.h\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e/usr/include/oracle/21/client64/oci.h\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eoci8.pcのincludedirを/usr/include/oracle/21/client64に変更。\u003c/p\u003e","tags":["Docker","oracle","go"],"title":"OracleにGoで接続する2"},{"categories":null,"objectID":"acd9e2997863bfe1f56e4ecb7c57cf57","permalink":"https://umemak.github.io/blog/posts/2022/06/10_flutter_geochart/","publish_date":"2022-06-10T00:00:00Z","summary":"\u003cp\u003eリクエスト受けてHTML組み立てて返すFirebase Functions作って、これをWebViewXで利用することで実現できた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/photomap/blob/main/functions/src/index.ts\"\u003ephotomap/index.ts at main · umemak/photomap\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/photomap/blob/c70f1a41038bd5a82edd72b63971ea83a393b41a/lib/MapDetailPage.dart#L140-L149\"\u003ehttps://github.com/umemak/photomap/blob/c70f1a41038bd5a82edd72b63971ea83a393b41a/lib/MapDetailPage.dart#L140-L149\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://pub.dev/packages/webview_flutter\"\u003ewebview_flutter | Flutter Package\u003c/a\u003eはAndroid/iOSしか対応していないみたいなので、あきらめた。\u003c/p\u003e","tags":["Flutter"],"title":"FlutterでGeoChart"},{"categories":null,"objectID":"f28973ba37f60da0151c9729bc7e7b0f","permalink":"https://umemak.github.io/blog/posts/2022/06/09_flutter_paint/","publish_date":"2022-06-09T00:00:00Z","summary":"\u003cp\u003eどんな感じで作るのかなと思って、ググった。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/tigeeer/items/efa4ce8a4025bbda607b\"\u003eFlutterで手書きを実装する - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.egao-inc.co.jp/programming/flutter-paint/\"\u003e【Flutter】Flutterでお絵かきアプリ（ペイント機能）の実装を紹介します | 株式会社イーガオ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/inari_sushio/articles/9643f20ebff29d\"\u003e【Flutter】お絵描きアプリを作ってみた - InheritedNotifier / CustomPainter\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dartpad.dev/?null_safety=true\u0026amp;id=1cdb5019c521dfe613c4f7ec7b7fdf21\"\u003eDartPad\u003c/a\u003eで動くサンプルが用意されててすごい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zawapro.com/?p=2301\"\u003e【Flutter】GestureDetectorとCustomPaintを使い、タッチした場所に図形を描画する – ザワプロ！\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://api.flutter.dev/flutter/rendering/CustomPainter-class.html\"\u003eCustomPainter\u003c/a\u003eと\u003ca href=\"https://api.flutter.dev/flutter/widgets/GestureDetector-class.html\"\u003eGestureDetector\u003c/a\u003eがポイントっぽい。\u003c/p\u003e","tags":["Flutter"],"title":"Flutterでお絵描きアプリ"},{"categories":null,"objectID":"84cad6c109db4082adfea0ae868dd5d6","permalink":"https://umemak.github.io/blog/posts/2022/06/08_oracle_docker/","publish_date":"2022-06-08T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/oracle/docker-images\"\u003eoracle/docker-images: Official source for Docker configurations, images, and examples of Dockerfiles for Oracle products and projects\u003c/a\u003e にまとめられている。\u003c/p\u003e\n\u003cp\u003eサーバー側：\u003ca href=\"https://github.com/oracle/docker-images/tree/main/OracleDatabase\"\u003edocker-images/OracleDatabase at main · oracle/docker-images\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eクライアント側：\u003ca href=\"https://github.com/oracle/docker-images/tree/main/OracleInstantClient\"\u003edocker-images/OracleInstantClient at main · oracle/docker-images\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eベースイメージは\u003ca href=\"https://hub.docker.com/_/oraclelinux\"\u003eOraclelinux - Official Image | Docker Hub\u003c/a\u003eが使われている（結構でかい）。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ docker images | grep ora\noraclelinux              8            3bbe8a2c4b82   6 days ago     226MB\noraclelinux              8-slim       1fcc1e6dda05   3 weeks ago    101MB\n\u003c/code\u003e\u003c/pre\u003e","tags":["Docker","oracle"],"title":"OracleのDockerイメージ"},{"categories":null,"objectID":"e26df33c219b94e37c59227633a92bca","permalink":"https://umemak.github.io/blog/posts/2022/06/07_geochart/","publish_date":"2022-06-07T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://developers.google.com/chart/interactive/docs/gallery/geochart\"\u003eVisualization: GeoChart  |  Charts  |  Google Developers\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eFlutterアプリでGeoChartを使いたかったのだけれど、\u003ca href=\"https://pub.dev/packages/charts_flutter\"\u003echarts_flutter\u003c/a\u003eには含まれていない様子。\u003c/p\u003e\n\u003cp\u003eいずれにしてもSVGかVMLで出力されるので、それを返すWebAPIを作ってあげれば何とかなる？\u003c/p\u003e\n\u003cp\u003eドキュメント見た感じ、画像だけ取り出すのは難しそう？WebViewにするほうが簡単かも？\u003c/p\u003e","tags":["flutter"],"title":"GeoChart"},{"categories":null,"objectID":"8629a425d77b7e501d66fc9ccd23126f","permalink":"https://umemak.github.io/blog/posts/2022/06/06_newapp/","publish_date":"2022-06-06T00:00:00Z","summary":"\u003cp\u003e以前（途中まで）作ったアプリを流用してみたものの、Flutterのバージョンが上がったせいかそのままだと警告がたくさん出る。\u003c/p\u003e\n\u003cp\u003eほとんどはconstを追加する程度なので、問題はなさそう。\u003c/p\u003e\n\u003cp\u003eとりあえず、認証とFirestore登録までできた。\u003c/p\u003e","tags":["flutter"],"title":"新規Flutterアプリ"},{"categories":null,"objectID":"10aa3b7f9cee40de8f30a04e6fc15398","permalink":"https://umemak.github.io/blog/posts/2022/06/05_wsl_portforward/","publish_date":"2022-06-05T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://zenn.dev/solufa/articles/accessing-wsl2-from-mobile\"\u003eWSL2で開発中のWebアプリを同じLANのスマホで動作確認する方法\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eExpoじゃなくてFlutterだけど、上記ページの方法で接続することができた。\nまるでここ数日の苦労を見ていたかのようなタイミングでの投稿に感謝。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eNew-NetFireWallRule\u003c/code\u003eが重要っぽい。\u003c/p\u003e","tags":["wsl2"],"title":"WSL2にLAN内のAndroidから接続したい"},{"categories":null,"objectID":"d5e6a51798c7427aa02d4af6d683770f","permalink":"https://umemak.github.io/blog/posts/2022/06/05_newapp/","publish_date":"2022-06-05T00:00:00Z","summary":"\u003cp\u003eとりあえず手作業でFlutterアプリを構築していく。\u003c/p\u003e\n\u003cp\u003e認証とか基本的なところは、以前作ったアプリの流用で。\u003c/p\u003e\n\u003cp\u003eこういう自分テンプレみたいのをそろえていくと良いのだろうな。\u003c/p\u003e","tags":["flutter"],"title":"新規Flutterアプリ"},{"categories":null,"objectID":"913ee1499a5f4845a5d30681385b7afd","permalink":"https://umemak.github.io/blog/posts/2022/06/04_flutterflow/","publish_date":"2022-06-04T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://flutterflow.io/\"\u003eFlutterFlow - Build Native Apps Visually\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e前にチュートリアルやって、確か途中で分からなくなって放置してた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://zenn.dev/sugawara/articles/02e2f119a363fb\"\u003eFlutterFlowのススメ\u003c/a\u003eを読んで、再度挑戦する気になってやってみた。\u003c/p\u003e\n\u003cp\u003eやっぱりよくわからなかった。\u003c/p\u003e\n\u003cp\u003e慣れの問題かもしれないけれど、いきなり何でもできる状態に放り込まれると、逆に何をしたらよいかわからなくなる状態。\u003c/p\u003e\n\u003cp\u003eコードだとサンプルをコピペして、というところがGUIベースだとパラメータの設定がどこにあるのか探して入力していく感じなので、かえって手間がかかる感じ。\u003c/p\u003e","tags":["flutter"],"title":"FlutterFlow"},{"categories":null,"objectID":"a4b643a0e74bf5efe5da095b1305274e","permalink":"https://umemak.github.io/blog/posts/2022/06/03_expo_flutter/","publish_date":"2022-06-03T00:00:00Z","summary":"\u003cp\u003eちょっとしたアプリを作るのに、どちらが良いのか迷っている。\u003c/p\u003e\n\u003cp\u003eExpoはWindows環境でもiOS実機で動作確認ができるのが魅力。\u003c/p\u003e\n\u003cp\u003eただ、「ちょっとした」アプリでそこまでする必要があるのかというと微妙。\u003c/p\u003e\n\u003cp\u003eやっぱりFlutterの習熟度を上げていくのが良いのかなぁ。\u003c/p\u003e","tags":["expo","flutter"],"title":"ExpoとFlutter選択"},{"categories":null,"objectID":"262f2ffb71c80ff75dc1e658c4cd8875","permalink":"https://umemak.github.io/blog/posts/2022/06/02_wsl_portforward/","publish_date":"2022-06-02T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://mrk21.hatenablog.com/entry/2022/01/30/183331\"\u003eWSL2 の localhostForwarding 機能がうまくうごかない - mrk21::blog {}\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこの記事を見ながらやってみたけど、うまくいかない。\nもしかしたら経路のどこかでブロックされているのかもしれない。\u003c/p\u003e\n\u003cp\u003eうまくいったとしても、QRコードがWSL2のIPで作られているので、手打ちでWindows11のIPを打たないといけないのは面倒。\u003c/p\u003e","tags":["expo","wsl2"],"title":"WSL2のExpoにLAN内のAndroidから接続したい（未完）"},{"categories":null,"objectID":"d052d4d5d4b76472f437f17bf4342d82","permalink":"https://umemak.github.io/blog/posts/2022/06/01_expo/","publish_date":"2022-06-01T00:00:00Z","summary":"\u003cp\u003e以前一度使ってみたことがある\u003ca href=\"https://expo.dev/\"\u003eExpo\u003c/a\u003eに再入門。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://umemak.github.io/blog/posts/2020/07/22_raspi_expo/\"\u003e前にやったとき\u003c/a\u003eはWSLだとダメでラズパイで動かしていたけど、もう１年以上たっているしいけるのでは？という期待を込めてWSL2でやってみる。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo npm install --global expo-cli\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ cd photomap\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ expo init .\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔ Choose a template: › tabs \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eTypeScript\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e   several example screens and tabs using react-navigation and TypeScript\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔ Downloaded template.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e📦 Using npm to install packages.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔ Installed JavaScript dependencies.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✅ Your project is ready!\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTo run your project, run one of the following npm commands.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e- npm start \u003cspan style=\"color:#75715e\"\u003e# you can open iOS, Android, or web from here, or run them directly with the commands below.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e- npm run android\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e- npm run ios \u003cspan style=\"color:#75715e\"\u003e# requires an iOS device or macOS for access to an iOS simulator\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e- npm run web\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eProject is already inside of a git repo, skipping git init.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm start\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt; photomap@1.0.0 start\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt; expo start\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eStarting project at /home/umemak/workspace/photomap\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eStarting Metro Bundler\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e› Metro waiting on exp://127.0.0.1:19000\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e› Scan the QR code above with Expo Go \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eAndroid\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e or the Camera app \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eiOS\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e› Press a │ open Android\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e› Press w │ open web\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e› Press r │ reload app\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e› Press m │ toggle menu\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e› Press ? │ show all commands\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eLogs \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e your project will appear below. Press Ctrl+C to exit.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔ It looks like you\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;re trying to use web support but don\u0026#39;\u003c/span\u003et have the required dependencies installed. Would you like to install\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewebpack-dev-server@~3.11.0, @expo/webpack-config@~0.16.2? … yes\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔ Installed webpack-dev-server@~3.11.0, @expo/webpack-config@~0.16.2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCommandError: Missing package \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;webpack-dev-server\u0026#34;\u003c/span\u003e in the project. Try running the command again. \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003ecwd: /home/umemak/workspace/photomap\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eExpo GoでQRスキャンしても、LAN内のIPアドレス指定してマニュアル接続してみても接続できなかった。\u003c/p\u003e","tags":["expo"],"title":"Expo"},{"categories":null,"objectID":"f9f9bb7ef07108ad9f6714856a68cf2d","permalink":"https://umemak.github.io/blog/posts/2022/05/31_firebase_hosting/","publish_date":"2022-05-31T00:00:00Z","summary":"\u003cp\u003eWebViewを使うとして、MDMMLのJS版を公開する場所をFirebase Hostingにした。\u003c/p\u003e\n\u003cp\u003e久しぶりにFirebase使ったらオプションが色々増えている気がする。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ firebase init\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e     \u003cspan style=\"color:#75715e\"\u003e######## #### ########  ######## ########     ###     ######  ########\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e     \u003cspan style=\"color:#75715e\"\u003e##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e     \u003cspan style=\"color:#75715e\"\u003e######    ##  ########  ######   ########  #########  ######  ######\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e     \u003cspan style=\"color:#75715e\"\u003e##        ##  ##    ##  ##       ##     ## ##     ##       ## ##\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e     \u003cspan style=\"color:#75715e\"\u003e##       #### ##     ## ######## ########  ##     ##  ######  ########\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eYou\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;re about to initialize a Firebase project in this directory:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e  /home/umemak/workspace/mdmml_js\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e? Which Firebase features do you want to set up for this directory? Press Space to select features, then Enter to confirm your choices. Hostin\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003eg: Configure files for Firebase Hosting and (optionally) set up GitHub Action deploys, Hosting: Set up GitHub Action deploys\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e=== Project Setup\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003eFirst, let\u0026#39;\u003c/span\u003es associate this project directory with a Firebase project.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eYou can create multiple project aliases by running firebase use --add, \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebut \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e now we\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;ll just set up a default project.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e? Please select an option: Use an existing project\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e? Select a default Firebase project for this directory: mdmml-285c0 (mdmml)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003ei  Using project mdmml-285c0 (mdmml)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e=== Hosting Setup\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003eYour public directory is the folder (relative to your project directory) that\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003ewill contain Hosting assets to be uploaded with firebase deploy. If you\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003ehave a build process for your assets, use your build\u0026#39;\u003c/span\u003es output directory.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e? What \u003cspan style=\"color:#66d9ef\"\u003edo\u003c/span\u003e you want to use as your public directory? public\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e? Configure as a single-page app \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003erewrite all urls to /index.html\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e? No\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e? Set up automatic builds and deploys with GitHub? Yes\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔  Wrote public/404.html\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔  Wrote public/index.html\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ei  Detected a .git folder at /home/umemak/workspace/mdmml_js\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ei  Authorizing with GitHub to upload your service account to a GitHub repository\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;s secrets store.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003eWaiting for authentication...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e✔  Success! Logged into GitHub as umemak\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e? For which GitHub repository would you like to set up a GitHub workflow? (format: user/repository) umemak/mdmml_js\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e✔  Created service account github-action-487458244 with Firebase Hosting admin permissions.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e✔  Uploaded service account JSON to GitHub as secret FIREBASE_SERVICE_ACCOUNT_MDMML_285C0.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003ei  You can manage your secrets at https://github.com/umemak/mdmml_js/settings/secrets.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e? Set up the workflow to run a build script before every deploy? Yes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e? What script should be run before every deploy? npm ci \u0026amp;\u0026amp; npm run build\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e✔  Created workflow file /home/umemak/workspace/mdmml_js/.github/workflows/firebase-hosting-pull-request.yml\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e? Set up automatic deployment to your site\u0026#39;\u003c/span\u003es live channel when a PR is merged? Yes\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e? What is the name of the GitHub branch associated with your site\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u0026#39;\u003c/span\u003es live channel? main\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔  Created workflow file /home/umemak/workspace/mdmml_js/.github/workflows/firebase-hosting-merge.yml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ei  Action required: Visit this URL to revoke authorization \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e the Firebase CLI GitHub OAuth App:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehttps://github.com/settings/connections/applications/89cf50f02ac6aaed3484\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ei  Action required: Push any new workflow file\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003es\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e to your repo\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ei  Writing configuration info to firebase.json...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ei  Writing project information to .firebaserc...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔  Firebase initialization complete!\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eGitHub Actionsとの連携も入れてみた。\u003c/p\u003e","tags":["Firebase"],"title":"Firebase設定"},{"categories":null,"objectID":"82752557f8c146efef16ad982a3da935","permalink":"https://umemak.github.io/blog/posts/2022/05/30_json2md/","publish_date":"2022-05-30T00:00:00Z","summary":"\u003cp\u003e\u003ccode\u003e\u0026lt;\u003c/code\u003eが消えるのはエスケープ処理を入れることで回避できた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/mdmml_js/commit/7227e554490538dca2a2dce428fb0382297100f4\"\u003ehttps://github.com/umemak/mdmml_js/commit/7227e554490538dca2a2dce428fb0382297100f4\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eここまでできたら、アプリ化したい。\nFlutterは言語が違うけど、WebView的なものでラップすればいけるかな。\u003c/p\u003e","tags":["JavaScript"],"title":"json2md"},{"categories":null,"objectID":"bc7cd0cc94aa909bbf7e7abf3875cd4d","permalink":"https://umemak.github.io/blog/posts/2022/05/29_json2md/","publish_date":"2022-05-29T00:00:00Z","summary":"\u003cp\u003eJSONをマークダウンに変換するのは比較的簡単にできた。\u003c/p\u003e\n\u003cp\u003emdmmlに組み込んでサンプル鳴らしてみたらなんかおかしい。\u003c/p\u003e\n\u003cp\u003eよく見ると\u003ccode\u003e\u0026lt;\u003c/code\u003eと\u003ccode\u003e\u0026gt;\u003c/code\u003eに囲まれたところが消えている。タグ扱いされてしまっているようだ。\u003c/p\u003e\n\u003cp\u003eJSONに保存するタイミングで\u003ccode\u003e\u0026lt;\u003c/code\u003eなどが\u003ccode\u003e\u0026amp;lt;\u003c/code\u003eなどに変換されているなぁ。\u003c/p\u003e","tags":["JavaScript"],"title":"json2md"},{"categories":null,"objectID":"9b2c6050f1da54db1e61b74eeaf42321","permalink":"https://umemak.github.io/blog/posts/2022/05/28_json2md/","publish_date":"2022-05-28T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/codex-team/editor.js\"\u003ecodex-team/editor.js\u003c/a\u003eの出力を\u003ca href=\"https://github.com/IonicaBizau/json2md\"\u003eIonicaBizau/json2md: A JSON to Markdown converter.\u003c/a\u003eに入れてみた。\u003c/p\u003e\n\u003cp\u003e思ってはいたけど、ダメだった。\u003c/p\u003e\n\u003cp\u003e面倒でも自作しないといけないか。。\u003c/p\u003e","tags":["JavaScript"],"title":"json2md"},{"categories":null,"objectID":"8acc3a5564b78206d35c9de531d4847c","permalink":"https://umemak.github.io/blog/posts/2022/05/27_editorjs/","publish_date":"2022-05-27T00:00:00Z","summary":"\u003cp\u003e以前調べたマークダウンエディタ、\u003ca href=\"https://github.com/codex-team/editor.js\"\u003ecodex-team/editor.js\u003c/a\u003eは保存形式がJSONだったのであきらめたけど、JSONとマークダウンを相互変換できればやりたいことが実現できるのではないか？\u003c/p\u003e","tags":["JavaScript","editor"],"title":"マークダウンエディター選び"},{"categories":null,"objectID":"d551b817cce88fa4655e4d4d330312ff","permalink":"https://umemak.github.io/blog/posts/2022/05/26_kuzzle_auth/","publish_date":"2022-05-26T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://docs.kuzzle.io/core/2/guides/getting-started/authenticate-users/\"\u003eAuthenticate Users | Kuzzle Documentation\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e標準で用意されている認証方法は、ユーザー名＋パスワードもしくはOAuthで、Passport.jsに依存している様子。\u003c/p\u003e\n\u003cp\u003eFirebaseみたいなメールアドレスを使った認証はないのかとPassport.jsの\u003ca href=\"http://www.passportjs.org/packages/\"\u003eFeatures\u003c/a\u003eで検索しても、それらしいものはない。\u003c/p\u003e\n\u003cp\u003eちょっとこれは自分の使い方だと困ったなぁ。\u003c/p\u003e","tags":["Kuzzle"],"title":"Kuzzleのユーザー認証"},{"categories":null,"objectID":"c5a8aa100b9ab80abee766f5197710a6","permalink":"https://umemak.github.io/blog/posts/2022/05/25_snow_crash/","publish_date":"2022-05-25T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B09R4G6JQ9\"\u003eスノウ・クラッシュ (全2巻) Kindle版\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこれでメタヴァース完全に理解した。\u003c/p\u003e\n\u003cp\u003e終わり方がちょっと物足りない気がする。\u003c/p\u003e","tags":["Book"],"title":"スノウ・クラッシュ読了"},{"categories":null,"objectID":"ab27a1d24f8add533b14baee138695cd","permalink":"https://umemak.github.io/blog/posts/2022/05/24_kuzzle_doc/","publish_date":"2022-05-24T00:00:00Z","summary":"\u003cp\u003eちゃんと読もうと思ったので、日本語に訳しながらやっていこうかと。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/sdk-dart/blob/master/doc/3/getting-started/flutter/index.md\"\u003ehttps://github.com/umemak/sdk-dart/blob/master/doc/3/getting-started/flutter/index.md\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDeepLでざっくり訳して細かいところを手直しする感じで。\u003c/p\u003e\n\u003cp\u003eで、ファイル構成眺めていたら、getting-startedのコード見つけた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/kuzzleio/sdk-dart/tree/master/doc/3/getting-started/.flutter/lib\"\u003ehttps://github.com/kuzzleio/sdk-dart/tree/master/doc/3/getting-started/.flutter/lib\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこれはリンク張っといてほしかった。\u003c/p\u003e","tags":["Kuzzle","Dart"],"title":"KuzzleのDart SDKドキュメント"},{"categories":null,"objectID":"476e7637cc8785457f4cd30624e5e449","permalink":"https://umemak.github.io/blog/posts/2022/05/23_dartpad/","publish_date":"2022-05-23T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://firebase.flutter.dev/\"\u003eFlutterFire\u003c/a\u003e のページを見に行ったらヘッダに「DartPad」というのを見つけて、開いてみた。\u003c/p\u003e\n\u003cp\u003eブラウザでFlutterのサンプルが実行できてる・・！\u003c/p\u003e\n\u003cp\u003eGitHubの\u003ca href=\"https://github.com/dart-lang/dart-pad#readme\"\u003eReadme\u003c/a\u003eによると、2015年から作られ始めて、2019年にFlutter対応した新バージョンが公開されたらしい。\u003c/p\u003e\n\u003cp\u003eimportできるパッケージが限られている（そしてKuzzleは含まれていない）ので、何でもできるわけではないけれど、ローカルで色々準備せずにコードを試せるので、機会があれば使っていきたい。\u003c/p\u003e","tags":["flutter","Dart"],"title":"DartPad"},{"categories":null,"objectID":"4ae356bab745e0bbe313ea72e1d5b536","permalink":"https://umemak.github.io/blog/posts/2022/05/22_flutter_kuzzle/","publish_date":"2022-05-22T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://docs.kuzzle.io/sdk/dart/3/getting-started/flutter/\"\u003eFlutter | Kuzzle Documentation\u003c/a\u003e がとりあえず動くようになった。\nエラーが出ないように直して回っただけなので、本当に正しい修正なのかは自信なし。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/kuzzle_flutter_chat\"\u003ehttps://github.com/umemak/kuzzle_flutter_chat\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDBの読み書きはこれでできることが確認できた。\u003c/p\u003e","tags":["flutter","Kuzzle"],"title":"Flutter+Kuzzle サンプル"},{"categories":null,"objectID":"3effcf7997910266423e4c1280858094","permalink":"https://umemak.github.io/blog/posts/2022/05/21_flutter_kuzzle/","publish_date":"2022-05-21T00:00:00Z","summary":"\u003cp\u003eKuzzleのFlutterチュートリアル的なものをやってみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.kuzzle.io/sdk/dart/3/getting-started/flutter/\"\u003eFlutter | Kuzzle Documentation\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDart Null Safety v3.x を選択しても、中身はv2と同じようだ。\npubspec.yamlのSDKバージョン指定まで同じなので、v2系がインストールされてしまって\u003ccode\u003eflutter build web\u003c/code\u003e実行したときにコンパイルエラーになる。\n\u003ccode\u003ekuzzle: ^3.0.2\u003c/code\u003eに編集したらコンパイル通った。\u003c/p\u003e","tags":["flutter","Kuzzle"],"title":"Flutter+Kuzzle"},{"categories":null,"objectID":"ca50b2ff01770776d11fe4daf0fb59da","permalink":"https://umemak.github.io/blog/posts/2022/05/20_flutter/","publish_date":"2022-05-20T00:00:00Z","summary":"\u003cp\u003e久しぶりすぎてFlutterアプリの初手を忘れていたのでメモ。\u003c/p\u003e\n\u003cp\u003e先日、Flutter 3をインストールしてあったのでその続きから。\u003c/p\u003e\n\u003cp\u003e~/.bashrc にexport追加＆bashrc再読み込み。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eexport PATH=$HOME/sdk/flutter/bin:$PATH\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eアプリ用のディレクトリに入って初期化実行。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eflutter create .\n\u003c/code\u003e\u003c/pre\u003e","tags":["flutter"],"title":"Flutter再開"},{"categories":null,"objectID":"e25389ba53f671901e8eb1c3c3166f03","permalink":"https://umemak.github.io/blog/posts/2022/05/19_kuzzle_sdk/","publish_date":"2022-05-19T00:00:00Z","summary":"\u003cp\u003eGo用SDKを見ていて、Authenticationにユーザー作成のAPIがないなーと思って、Dart用を見たらsecurityの下にあった。\u003c/p\u003e\n\u003cp\u003eよく見ると言語ごとにSDKドキュメントの構成が違っていて、提供されているAPIも統一されていない様子。\u003c/p\u003e\n\u003cp\u003e全部読んだわけではないけど、どの言語を選ぶかによって実現できるアプリが変わってきそう。\u003c/p\u003e","tags":["Kuzzle"],"title":"Kuzzle SDKを眺めてみる"},{"categories":null,"objectID":"abd144cde3ca5f53e5c120cacf801e46","permalink":"https://umemak.github.io/blog/posts/2022/05/18_kuzzle_admin/","publish_date":"2022-05-18T00:00:00Z","summary":"\u003cp\u003eローカルでAdmin Consoleがうまくインストールできなかったので、公式のものを使わせてもらうことにした。\u003c/p\u003e\n\u003cp\u003e試しに、\u003ca href=\"https://next-console.kuzzle.io/\"\u003ehttps://next-console.kuzzle.io/\u003c/a\u003eにアクセスした後ネットワークを切断して、項目設定＆ログインできたし、DBも作成できたので外部への依存はないみたい（送信してないかは別）。\u003c/p\u003e\n\u003cp\u003eまあそんなに気にするような情報を扱うつもりもないし、まずは使ってみようと。\u003c/p\u003e","tags":["Kuzzle"],"title":"Kuzzle Admin Consoleをネットワーク切断して使ってみる"},{"categories":null,"objectID":"72b7d523ba6bdbff1b7917305e6b6b97","permalink":"https://umemak.github.io/blog/posts/2022/05/17_kuzzle_raspi/","publish_date":"2022-05-17T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/kuzzleio/kuzzle-admin-console#local-build\"\u003ehttps://github.com/kuzzleio/kuzzle-admin-console#local-build\u003c/a\u003e をやってみる\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ git clone https://github.com/kuzzleio/kuzzle-admin-console\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ cd kuzzle-admin-console\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm install\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! command sh -c node-gyp rebuild\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! gyp info it worked \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e it ends with ok\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! gyp info using node-gyp@3.8.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! gyp info using node@17.3.0 | linux | arm\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! gyp ERR! configure error \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! gyp ERR! stack Error: Command failed: /usr/bin/python -c import sys; print \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;%s.%s.%s\u0026#34;\u003c/span\u003e % sys.version_info\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e:3\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! gyp ERR! stack   File \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026lt;string\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! gyp ERR! stack     import sys; print \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;%s.%s.%s\u0026#34;\u003c/span\u003e % sys.version_info\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e:3\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! gyp ERR! stack                       ^\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm ERR! gyp ERR! stack SyntaxError: invalid syntax\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eダメか。。\u003c/p\u003e","tags":["Kuzzle","raspberry-pi"],"title":"Kuzzle Admin Consoleをラズパイ4に入れてみる"},{"categories":null,"objectID":"155cfe760c0b841ac1e2b94bb2df79ec","permalink":"https://umemak.github.io/blog/posts/2022/05/16_kuzzle/","publish_date":"2022-05-16T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://doc.kuzzle.io/sdk/dart/2/getting-started/flutter/\"\u003eFlutter | Kuzzle Documentation\u003c/a\u003e\nから\n\u003ca href=\"https://doc.kuzzle.io/core/2/guides/getting-started/run-kuzzle/\"\u003eRun Kuzzle | Kuzzle Documentation\u003c/a\u003e\nでバックエンドをローカルで起動する。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo npm install -g kourou\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ kourou app:scaffold playground\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ cd playground \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e npm run dev:docker\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ehttp://localhost:7512/ でJSONで情報が取得できた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://next-console.kuzzle.io/\"\u003ehttp://next-console.kuzzle.io/\u003c/a\u003e でAdmin Consoleが表示できるけど、ローカル環境なのに外部を一度経由するのかな。ちょっとこれは気になる。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.kuzzle.io/core/2/guides/introduction/what-is-kuzzle/#admin-console\"\u003eWhat is Kuzzle | Kuzzle Documentation\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAs it is a single-page application (SPA), no data related to your Kuzzle application will pass through our servers, so you can use the online version available at \u003ca href=\"http://next-console.kuzzle.io\"\u003ehttp://next-console.kuzzle.io\u003c/a\u003e.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eGitHubにローカルでAdmin Console動かす方法も書いてあった。\u003c/p\u003e","tags":["Kuzzle"],"title":"Kuzzleを使ってみる"},{"categories":null,"objectID":"747f4f965ac96d9c82d6d1ba8d1d3df0","permalink":"https://umemak.github.io/blog/posts/2022/05/15_baas/","publish_date":"2022-05-15T00:00:00Z","summary":"\u003cp\u003eFirebase以外のBaaSについて、年初に軽く調べていた。\u003c/p\u003e\n\u003cp\u003eその時はクラウドサービスを見ていたけれど、OSSのものも見てみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://parseplatform.org/\"\u003eParse Platform\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://supabase.com/\"\u003eThe Open Source Firebase Alternative | Supabase\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kuzzle.io/kuzzle-backend/\"\u003eOpen Source Backend - Kuzzle Backend\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.back4app.com/\"\u003eLow-code backend to build modern apps | Back4App\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eParse Platformベース\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSDK\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eJS\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eGo\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eFlutter\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eParse Platform\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eo\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e-\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eo\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eSupabase\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eo\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e-\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eo\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eKuzzle Backend\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eo\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eo\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eo\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eSDK的にはKuzzleだけど、情報量で見るとSupabaseが有利かな。\u003c/p\u003e","tags":["Firebase"],"title":"Firebase以外のBaaS"},{"categories":null,"objectID":"17a9a884822a6c6066d96044fb2e4079","permalink":"https://umemak.github.io/blog/posts/2022/05/14_js_book/","publish_date":"2022-05-14T00:00:00Z","summary":"\u003cp\u003e先日買った\u003ca href=\"https://www.amazon.co.jp/gp/product/B08QVCSY1D/\"\u003eJavaScriptモダンプログラミング完全ガイド\u003c/a\u003e、まだ途中だけど結構理解が進む気がする。\u003c/p\u003e\n\u003cp\u003e節ごとに難易度表示のアイコンがあるのも親切で良い。\u003c/p\u003e","tags":["JavaScript"],"title":"JavaScriptモダンプログラミング完全ガイド"},{"categories":null,"objectID":"97ecdb92051ec1d1cddc6755d018924f","permalink":"https://umemak.github.io/blog/posts/2022/05/13_flutter_3/","publish_date":"2022-05-13T00:00:00Z","summary":"\u003cp\u003eWSL2にインストールしてみる。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.flutter.dev/get-started/install/linux\"\u003eLinux install | Flutter\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ cd ~/sdk\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ git clone https://github.com/flutter/flutter.git -b stable\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ export PATH\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$PATH\u003cspan style=\"color:#e6db74\"\u003e:`pwd`/flutter/bin\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ flutter doctor\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMissing \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;unzip\u0026#34;\u003c/span\u003e tool. Unable to extract Dart SDK.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsider running \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;sudo apt-get install unzip\u0026#34;\u003c/span\u003e.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt-get install unzip\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ flutter doctor\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e✓\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e Flutter \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eChannel stable, 3.0.0, on Ubuntu 20.04 LTS 5.10.16.3-microsoft-standard-WSL2, locale C.UTF-8\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e✗\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e Android toolchain - develop \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e Android devices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    ✗ Unable to locate Android SDK.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      Install Android Studio from: https://developer.android.com/studio/index.html\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      On first launch it will assist you in installing the Android SDK components.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eor visit https://flutter.dev/docs/get-started/install/linux#android-setup \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e detailed instructions\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      If the Android SDK has been installed to a custom location, please use\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003eflutter config --android-sdk\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e to update to that location.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e✗\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e Chrome - develop \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e the web \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eCannot find Chrome executable at google-chrome\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    ! Cannot find Chrome. Try setting CHROME_EXECUTABLE to a Chrome executable.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e☠\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e Linux toolchain - develop \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e Linux desktop \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003ethe doctor check crashed\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    ✗ Due to an error, the doctor check did not complete. If the error message below is not helpful, please let us know about this issue\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      at https://github.com/flutter/flutter/issues.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    ✗ ProcessException: Failed to find \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;pkg-config\u0026#34;\u003c/span\u003e in the search path.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Command: pkg-config \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e!\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e Android Studio \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003enot installed\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e✓\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e Connected device \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e available\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e✓\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e HTTP Host Availability\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e! Doctor found issues in \u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e categories.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eとりあえず本体は入ったのでヨシ。\u003c/p\u003e","tags":["flutter"],"title":"Flutter 3をインストールしてみる"},{"categories":null,"objectID":"f692a646dd71924b4fde014ff0a0d01b","permalink":"https://umemak.github.io/blog/posts/2022/05/12_flutter3/","publish_date":"2022-05-12T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.publickey1.jp/blog/22/flutter_3fluttermacoslinuxmac.html?utm_source=pocket_mylist\"\u003e［速報］「Flutter 3」登場、FlutterによるmacOSとLinuxアプリ開発が正式版に。Macのユニバーサルバイナリにも対応 － Publickey\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eMacとLinuxのアプリケーション開発の正式版より、「Firebase plugin for Flutter」のほうが気になった。\u003c/p\u003e\n\u003cp\u003eこれは前に使っていたFlutterFireとは別物？と思ったけど、FlutterFireの説明が「The official Firebase plugins for Flutter.」ってなってるし、\u003ca href=\"https://firebase.flutter.dev/\"\u003ehttps://firebase.flutter.dev/\u003c/a\u003eが\u003ca href=\"https://firebase.google.com/docs/flutter/setup\"\u003ehttps://firebase.google.com/docs/flutter/setup\u003c/a\u003eにリダイレクトされるようになっているので、FlutterFireがFirebase plugin for Flutterに改名したということなのかな。\u003c/p\u003e","tags":["flutter"],"title":"Flutter 3"},{"categories":null,"objectID":"c975ab4c99fad9106ff403946a9e5ffd","permalink":"https://umemak.github.io/blog/posts/2022/05/11_docker_desktop_481/","publish_date":"2022-05-11T00:00:00Z","summary":"\u003cp\u003eDocker Desktopの4.8.1が出たので、host.docker.internalの件が変化あったか試してみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/docker_network_test\"\u003ehttps://github.com/umemak/docker_network_test\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e直っていた。\u003c/p\u003e\n\u003cp\u003e4.8.0でも試してみたところ、4.8.0のタイミングで修正された模様。\u003c/p\u003e","tags":["docker"],"title":"Docker Desktop 4.8.1でhost.docker.internal"},{"categories":null,"objectID":"249557722dcf397483ecd99ba73becd4","permalink":"https://umemak.github.io/blog/posts/2022/05/10_harbor/","publish_date":"2022-05-10T00:00:00Z","summary":"\u003cp\u003eローカルサーバーでやってみた。\u003c/p\u003e\n\u003cp\u003e検索は問題なく導入できて動作も問題なさそうだけど、見た目がだいぶ印象変わってしまうのがちょっと悩ましい。\u003c/p\u003e\n\u003cp\u003eあと、一覧で日付が出てるのに個別ページに遷移すると日付が出ないのはなぜだろう。デモサイトでは個別ページにも出てるのに。\u003c/p\u003e\n\u003cp\u003e乗り換えはいったん保留。\u003c/p\u003e","tags":["hugo"],"title":"harbor試してみた"},{"categories":null,"objectID":"638c2297df979cfec09df27672b6b934","permalink":"https://umemak.github.io/blog/posts/2022/05/09_harbor/","publish_date":"2022-05-09T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/matsuyoshi30/harbor\"\u003ematsuyoshi30/harbor: Simple and minimal personal blog theme.\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこのテーマ、全文検索対応しているようなので気になっている。\u003c/p\u003e\n\u003cp\u003e検索に使われているのは\u003ca href=\"https://github.com/nextapps-de/flexsearch\"\u003enextapps-de/flexsearch: Next-Generation full text search library for Browser and Node.js\u003c/a\u003eらしい。\u003c/p\u003e\n\u003cp\u003eflexsearch.jsは\u003ca href=\"https://d3.haro.jp/docs/2021/flexsearch/\"\u003e日本語だと半角英数字が検索できない\u003c/a\u003eとかあるみたいだけど、簡単に使うだけなら問題ないのではないか、問題あったとしても先人の工夫で乗り切れるのではないか。\u003c/p\u003e","tags":["hugo"],"title":"Hugoテーマharbor"},{"categories":null,"objectID":"bc56ea945f0c27b3f84e636cd5910cf9","permalink":"https://umemak.github.io/blog/posts/2022/05/08_mdeditor/","publish_date":"2022-05-08T00:00:00Z","summary":"\u003cp\u003eマークダウン部分の入力に使うライブラリを探す。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003emarkdown\u003c/code\u003e \u003ccode\u003eWYSIWYG\u003c/code\u003eをキーワードにnpmを\u003ca href=\"https://www.npmjs.com/search?q=markdown%20WYSIWYG\"\u003e検索\u003c/a\u003eした結果、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/outline/rich-markdown-editor\"\u003eoutline/rich-markdown-editor: The open source React and Prosemirror based markdown editor that powers Outline. Want to try it out? Create an account:\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e良さそうだけどArchivedになっててメンテナンスされてない？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/nhn/tui.editor\"\u003enhn/tui.editor: 🍞📝 Markdown WYSIWYG Editor. GFM Standard + Chart \u0026amp; UML Extensible.\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eプレビュー形式ではなくて、直接編集したい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/codex-team/editor.js\"\u003ecodex-team/editor.js: A block-styled editor with clean JSON output\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e良さそう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Saul-Mirone/milkdown\"\u003eSaul-Mirone/milkdown: 🍼 Plugin driven WYSIWYG markdown editor framework.\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eテーブルの行列追加がワンクリックでできれば\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eということで、editor.jsを試してみようと思う。\u003c/p\u003e","tags":["JavaScript","editor"],"title":"マークダウンエディター選び"},{"categories":null,"objectID":"12ae7a24103f66c0d01f75e8a6f6e34d","permalink":"https://umemak.github.io/blog/posts/2022/05/07_js_book/","publish_date":"2022-05-07T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B08QVCSY1D/\"\u003eJavaScriptモダンプログラミング完全ガイド　堅牢なコードを効率的に開発できる！ impress top gearシリーズ | Cay S. Horstmann, 吉川 邦夫 | 工学 | Kindleストア | Amazon\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eKindle版が安く売ってたので買ってみた。\u003c/p\u003e","tags":["JavaScript"],"title":"JavaScriptモダンプログラミング完全ガイド"},{"categories":null,"objectID":"2b8014954ce96bc8abf940bc9c0da214","permalink":"https://umemak.github.io/blog/posts/2022/05/07_jzz/","publish_date":"2022-05-07T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/magenta/magenta-js/tree/master/music\"\u003emagenta-js\u003c/a\u003eがうまく動いてくれなくて、他に似たもの探して\n\u003ca href=\"https://github.com/jazz-soft/JZZ-gui-Player\"\u003ejazz-soft/JZZ-gui-Player: MIDI Player for browsers\u003c/a\u003eを使ってみた。\u003c/p\u003e\n\u003cp\u003ereadmeのサンプルの通りだと音が出なかったけど、デモページのソースを参考に\u003ccode\u003eJZZ.synth.Tiny.register('Web Audio');\u003c/code\u003eを追加したらできた。\u003c/p\u003e\n\u003cp\u003eあとはエディタ部分をマークダウン対応のWYSIWYGなものを組み込めば、いい感じになりそう。\u003c/p\u003e","tags":["JavaScript","midi"],"title":"JZZ-gui-Player"},{"categories":null,"objectID":"c22b2aefae808da1bc27ba9ce02b2798","permalink":"https://umemak.github.io/blog/posts/2022/05/06_ts_export/","publish_date":"2022-05-06T00:00:00Z","summary":"\u003cp\u003eMDMMLのTypeScript移植が大体できたので、HTMLから呼び出せるようにしたい。\u003c/p\u003e\n\u003cp\u003e先日はexportしてるはずなのに見つからないというエラーでどうしたら良いかわからず。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://teratail.com/questions/190709\"\u003eHTMLから外部のJavascriptファイルのfunctionを呼びたい\u003c/a\u003eはやりたいこととあっているように思える。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ts\" data-lang=\"ts\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eWindow\u003c/span\u003e { \u003cspan style=\"color:#a6e22e\"\u003eHello\u003c/span\u003e()\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e; }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edeclare\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e window\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eWindow\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewindow.\u003cspan style=\"color:#a6e22e\"\u003eHello\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e () \u003cspan style=\"color:#f92672\"\u003e=\u0026gt;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003econsole\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eBuffer\u003c/span\u003e.\u003cspan style=\"color:#66d9ef\"\u003efrom\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eMDtoSMF\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;cdefg\u0026#34;\u003c/span\u003e)).\u003cspan style=\"color:#a6e22e\"\u003etoString\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;binary\u0026#34;\u003c/span\u003e));\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e};\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eとしてみたら呼べたけれど、今度は\u003ccode\u003eBuffer is not defined\u003c/code\u003eだと。\u003c/p\u003e\n\u003cp\u003eいろいろやってみて、\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ts\" data-lang=\"ts\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eimport\u003c/span\u003e { \u003cspan style=\"color:#a6e22e\"\u003eMDtoSMF\u003c/span\u003e } \u003cspan style=\"color:#66d9ef\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;./mdmml\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eWindow\u003c/span\u003e { \u003cspan style=\"color:#a6e22e\"\u003eMDtoSMF\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003emd\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e)\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eArrayBuffer\u003c/span\u003e; }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edeclare\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e window\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eWindow\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewindow.\u003cspan style=\"color:#a6e22e\"\u003eMDtoSMF\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e (\u003cspan style=\"color:#a6e22e\"\u003emd\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e=\u0026gt;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMDtoSMF\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003emd\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e};\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eこれで動いた。正しい自信はない。。\u003c/p\u003e","tags":["TypeScript"],"title":"TypeScriptのexport"},{"categories":null,"objectID":"0ad0b10e23f4d8cce2e17b3dd3b6180e","permalink":"https://umemak.github.io/blog/posts/2022/05/05_tdt/","publish_date":"2022-05-05T00:00:00Z","summary":"\u003cp\u003eもともとGoで書いていたテストが\u003ca href=\"https://github.com/umemak/mdmml/blob/main/mdmml_test.go#L162-L190\"\u003eこんな感じ\u003c/a\u003eだったのだけど、\n\u003ca href=\"https://github.com/umemak/mdmml_js/blob/7930f4f23801ac0a58c645284c5d2091d8fa8024/src/mdmml.test.ts#L22-L56\"\u003eこんな風に\u003c/a\u003e移植してて面倒だと感じていた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://tblog.acomagu.me/plh/\"\u003eTS と Jest で Table Driven Test をする · tblog\u003c/a\u003eを参考に書き換えて、\u003ca href=\"https://github.com/umemak/mdmml_js/blob/716849f09419651500e25750d6e0b43514f04e6b/src/mdmml.test.ts#L31-L48\"\u003eこうなった\u003c/a\u003e。\u003c/p\u003e","tags":["TypeScript","test"],"title":"TypeScriptでTable Driven Test"},{"categories":null,"objectID":"3c713dd9368175dad23a152517c87bf9","permalink":"https://umemak.github.io/blog/posts/2022/05/05_stdout/","publish_date":"2022-05-05T00:00:00Z","summary":"\u003cp\u003eマークダウンから変換したSMFデータを標準出力に書き出したいのだけれど、バイナリをそのまま出力する方法がわからず。。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003econsole.log\u003c/code\u003eだと型情報とかついた普通のテキストになってしまう。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ node dist/main.js\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eUint8Array\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e45\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  77,  84, 104, 100,  0,   0,   0, 6, 0,   1,  0,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   1,   3, 192,  77, 84, 114, 107, 0, 0,   0, 23,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   0, 255,   3,   0,  0, 255,  81, 3, 7, 161, 32,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   0, 255,  88,   4,  4,   2,  24, 8, 0, 255, 47,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003efs\u003c/code\u003eパッケージを使おうとしたけれど、\u003ccode\u003eModule not found: Error: Can't resolve 'fs'\u003c/code\u003eなどと言われてbuildできず。\u003c/p\u003e","tags":["TypeScript","mdmml"],"title":"TypeScriptで標準出力"},{"categories":null,"objectID":"e94cc05770a61d13e3be4c1501d19187","permalink":"https://umemak.github.io/blog/posts/2022/05/04_textencoder/","publish_date":"2022-05-04T00:00:00Z","summary":"\u003cp\u003ereplaceAllを使いたくて、tsconfig.jsonに以下設定を追加した。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e    \u0026#34;lib\u0026#34;: [\n      \u0026#34;ES2021.String\u0026#34;\n    ]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ereplaceAllが使えるようになったが、TextEncoderを使っているところでエラーになるようになってしまった。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eerror TS2304: Cannot find name \u0026#39;TextEncoder\u0026#39;.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e定義がないのか？と思って\u003ca href=\"https://www.npmjs.com/package/@types/text-encoding\"\u003e@types/text-encoding - npm\u003c/a\u003eにあるとおり追加してみた。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enpm install --save @types/text-encoding\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e別のエラーが出るようになった。\u003c/p\u003e","tags":["TypeScript"],"title":"TextEncoderのエラー"},{"categories":null,"objectID":"29f1c464bad56b182f83287851fb7cef","permalink":"https://umemak.github.io/blog/posts/2022/05/03_jest/","publish_date":"2022-05-03T00:00:00Z","summary":"\u003cp\u003eブラウザからの動作確認はいったん置いておいて、コマンドライン実行で動くものを目指す。\u003c/p\u003e\n\u003cp\u003eどうせなら自動テストも動かしながらやっていきたい。\u003c/p\u003e\n\u003cp\u003eJavaScriptのテストフレームワークは、\u003ca href=\"https://jestjs.io/ja/\"\u003eJest · 🃏 Delightful JavaScript Testing\u003c/a\u003eが主流らしいので、それに乗っかる。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://sterfield.co.jp/blog/development/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0/typescript%E3%81%A7%E3%81%AE%E5%8D%98%E4%BD%93%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9jest/\"\u003eTypescriptでの単体テストの書き方(Jest) | スターフィールド株式会社\u003c/a\u003eを見ながらインストール。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm install --save-dev jest typescript ts-jest @types/jest\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npx ts-jest config:init\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ code jest.config.js\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ code package.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm run test\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ets-jest\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eversions\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eWARN\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Version 28.0.3 of jest installed has not been tested with ts-jest. If you\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u0026#39;\u003c/span\u003ere experiencing issues, consider using a supported version \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u0026gt;\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e27.0.0 \u0026lt;28.0.0-0\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e. Please \u003cspan style=\"color:#66d9ef\"\u003edo\u003c/span\u003e not report issues in ts-jest \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e you are using unsupported versions.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ets-jest\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eWARN\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e message TS151001: If you have issues related to imports, you should consider setting \u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003eesModuleInterop\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e to \u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003etrue\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e in your TypeScript configuration file \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eusually \u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003etsconfig.json\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e. See https://blogs.msdn.microsoft.com/typescript/2018/01/31/announcing-typescript-2-7/#easier-ecmascript-module-interoperability \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e more information.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ejestとts-jestのバージョンが不一致らしい。\u003c/p\u003e","tags":["JavaScript","Jest"],"title":"Jestの導入"},{"categories":null,"objectID":"4f8242718bf9e3507a303d6ebe882a5f","permalink":"https://umemak.github.io/blog/posts/2022/05/03_n/","publish_date":"2022-05-03T00:00:00Z","summary":"\u003cp\u003eJest実行しようとしたらnode.jsのバージョンが低いらしく、エラーになったのでバージョンを上げる方法を検索したら\u003ccode\u003en\u003c/code\u003eというものがあると知ったので試してみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://parashuto.com/rriver/tools/updating-node-js-and-npm\"\u003eNode.jsとnpmをアップデートする方法 | Rriver\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ node -v\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ev10.19.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo npm install -g n\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo n stable\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ node -v\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ev10.19.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ hash -r\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ node -v\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ev16.15.0\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["JavaScript","n"],"title":"node.jsバージョン管理"},{"categories":null,"objectID":"75a39387a1b2e4c77679f87555de0395","permalink":"https://umemak.github.io/blog/posts/2022/05/03_rewire/","publish_date":"2022-05-03T00:00:00Z","summary":"\u003cp\u003eテストのために関数exportしないといけないの、チョット気持ち悪いので、解決策を探ってみる。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/jhnns/rewire\"\u003ejhnns/rewire: Easy monkey-patching for node.js unit tests\u003c/a\u003eが一般的らしい。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm install -D rewire @types/rewire\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eテストコードのimportを修正\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ts\" data-lang=\"ts\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eimport\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erewire\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;rewire\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e__local__\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erewire\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;./mdmml.ts\u0026#39;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eatoi\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e__local__\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003e__get__\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;atoi\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eテスト実行\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm test\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt; mdmml_js@1.0.0 test\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt; jest\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e FAIL  src/mdmml.test.ts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  ● Test suite failed to run\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    /home/umemak/workspace/mdmml_js/src/mdmml.ts:8\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Tracks: Track\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    SyntaxError: Unexpected identifier\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      at Object.load \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003enode_modules/rewire/lib/moduleEnv.js:57:18\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      at internalRewire \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003enode_modules/rewire/lib/rewire.js:49:15\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      at rewire \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003enode_modules/rewire/lib/index.js:11:12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTest Suites: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e failed, \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e total\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTests:       \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e total\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSnapshots:   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e total\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTime:        1.01 s\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eRan all test suites.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e関係ないところでエラーになるようになってしまった。。\u003c/p\u003e","tags":["JavaScript","rewire","jest"],"title":"rewireでjest"},{"categories":null,"objectID":"11b619a74f31a1735b98cfc5dc591aa0","permalink":"https://umemak.github.io/blog/posts/2022/05/02_http_server/","publish_date":"2022-05-02T00:00:00Z","summary":"\u003cp\u003eローカルでチョット確認するためのhttpサーバー立てるのに便利な\u003ca href=\"https://github.com/http-party/http-server\"\u003ehttp-party/http-server: a simple zero-configuration command-line http server\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e最近、起動はするもののリクエストを送ると終了してしまう現象が起きていて、ググったらissueがあった。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/http-party/http-server/issues/634\"\u003eServer Crashing with \u0026ldquo;Cannot set headers after they are sent to the client\u0026rdquo; · Issue #634 · http-party/http-server\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eバージョン13.0.2だと大丈夫らしい。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npx http-server@13.0.2\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e大丈夫だった。\u003c/p\u003e","tags":["npm"],"title":"http-serverメモ"},{"categories":null,"objectID":"5b28219df1cd5796e5298640e4bf238d","permalink":"https://umemak.github.io/blog/posts/2022/05/02_webpack/","publish_date":"2022-05-02T00:00:00Z","summary":"\u003cp\u003e昨日は、TypeScript環境構築に手間をかけたくないという想いでParcelを試してみたところ、エラーで途方に暮れていた。\u003c/p\u003e\n\u003cp\u003e今日は、古き良きwebpackを試した。\u003c/p\u003e\n\u003cp\u003e参考にしたページはこちら\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ics.media/entry/16329/#webpack-ts\"\u003e最新版TypeScript+webpack 5の環境構築まとめ(React, Vue.js, Three.jsのサンプル付き) - ICS MEDIA\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm init -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm i -D webpack webpack-cli typescript ts-loader\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ code package.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ code tsconfig.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ code webpack.config.js\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ code src/main.ts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ npm run build\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt; mdmml_js@1.0.0 build /home/umemak/workspace/mdmml_js\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt; webpack\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003easset main.js 1.2 KiB \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eemitted\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003ename: main\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e./src/main.ts \u003cspan style=\"color:#ae81ff\"\u003e14\u003c/span\u003e bytes \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003ebuilt\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003ecode generated\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewebpack 5.72.0 compiled successfully in \u003cspan style=\"color:#ae81ff\"\u003e1126\u003c/span\u003e ms\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eできた。\n楽をしようとしてかえって遠回りになった経験だった。\u003c/p\u003e","tags":["JavaScript","webpack"],"title":"webpackで構築"},{"categories":null,"objectID":"1d28ea54bcd6b31c9d3b46e83024b8ff","permalink":"https://umemak.github.io/blog/posts/2022/05/01_parcel/","publish_date":"2022-05-01T00:00:00Z","summary":"\u003cp\u003e久しぶりにJavaScript（TypeScript）を書こうとしたら、何から始めてよいかわからなくなっていた。\u003c/p\u003e\n\u003cp\u003eあまり環境構築に手間をかけたくなかったので、\u003ca href=\"https://github.com/parcel-bundler/parcel\"\u003eparcel-bundler/parcel: The zero configuration build tool for the web. 📦🚀\u003c/a\u003eを使ってみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://parceljs.org/getting-started/webapp/\"\u003eBuilding a web app with Parcel\u003c/a\u003eを見ながら\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm init\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm install --save-dev parcel\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003esrc/index.htmlを作って、\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpx parcel src/index.html\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e/home/umemak/workspace/mdmml_js/node_modules/@parcel/core/lib/Parcel.js:150\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e#requestTracker\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  ^\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSyntaxError: Invalid or unexpected token\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at new Script \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003evm.js:83:7\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at NativeCompileCache._moduleCompile \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e/home/umemak/workspace/mdmml_js/node_modules/v8-compile-cache/v8-compile-cache.js:240:18\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Module._compile \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e/home/umemak/workspace/mdmml_js/node_modules/v8-compile-cache/v8-compile-cache.js:184:36\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Object.Module._extensions..js \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/loader.js:789:10\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Module.load \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/loader.js:653:32\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at tryModuleLoad \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/loader.js:593:12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Function.Module._load \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/loader.js:585:3\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Module.require \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/loader.js:692:17\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at require \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e/home/umemak/workspace/mdmml_js/node_modules/v8-compile-cache/v8-compile-cache.js:159:20\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Object.\u0026lt;anonymous\u0026gt; \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e/home/umemak/workspace/mdmml_js/node_modules/@parcel/core/lib/index.js:81:39\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e/home/umemak/workspace/mdmml_js/node_modules/@parcel/logger/lib/Logger.js:41\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e#logEmitter\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  ^\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSyntaxError: Invalid or unexpected token\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at new Script \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003evm.js:83:7\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at NativeCompileCache._moduleCompile \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e/home/umemak/workspace/mdmml_js/node_modules/v8-compile-cache/v8-compile-cache.js:240:18\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Module._compile \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e/home/umemak/workspace/mdmml_js/node_modules/v8-compile-cache/v8-compile-cache.js:184:36\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Object.Module._extensions..js \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/loader.js:789:10\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Module.load \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/loader.js:653:32\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at tryModuleLoad \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/loader.js:593:12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Function.Module._load \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/loader.js:585:3\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at Module.require \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/loader.js:692:17\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at require \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003einternal/modules/cjs/helpers.js:25:18\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    at _logger \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e/home/umemak/workspace/mdmml_js/node_modules/parcel/lib/cli.js:54:16\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eうーん。。めんどくさい。。\u003c/p\u003e","tags":["JavaScript","Parcel"],"title":"Parcelを使ってみる"},{"categories":null,"objectID":"06c09edf0fe6882c60133adec9197bea","permalink":"https://umemak.github.io/blog/posts/2022/04/30_magenta/","publish_date":"2022-04-30T00:00:00Z","summary":"\u003cp\u003e昨日の\u003ca href=\"https://github.com/cifkao/html-midi-player\"\u003ecifkao/html-midi-player: 🎹 Play and display MIDI files on the web\u003c/a\u003eの使い方見ようとして、\u003ca href=\"https://github.com/magenta/magenta-js/tree/master/music/\"\u003emagenta-js/music at master · magenta/magenta-js\u003c/a\u003eを使っているのを知った。\u003c/p\u003e\n\u003cp\u003eMagentaは出始めのときにそんなのがあるのか、って思って深くは見ていなかったのだけど、今度はちゃんと使ってみようかな。\u003c/p\u003e\n\u003cp\u003ehtml-midi-playerではSMFファイルを渡して初期化しているところを、\ntextboxに書かれたマークダウンをSMFに変換して\u003ca href=\"https://github.com/magenta/magenta-js/blob/master/music/src/core/midi_io.ts#L274\"\u003eblobToNoteSequence\u003c/a\u003eに渡せばよいのかな。\nJavaScriptでテンポラリファイルとか作れるんだっけ・・？それなら無改造で行けそうだけど。\u003c/p\u003e","tags":["JavaScript"],"title":"Magenta.js"},{"categories":null,"objectID":"5b41172c0ebd40d06ca0ef092282f959","permalink":"https://umemak.github.io/blog/posts/2022/04/29_mdmml_js/","publish_date":"2022-04-29T00:00:00Z","summary":"\u003cp\u003eRust移植は未完だけれどもいい勉強になった。\u003c/p\u003e\n\u003cp\u003e今度はJavaScript（TypeScript）に移植しようと思う。\nというのも\u003ca href=\"https://github.com/cifkao/html-midi-player\"\u003ecifkao/html-midi-player: 🎹 Play and display MIDI files on the web\u003c/a\u003eと連携してブラウザで完結出来たら良さそうなので。\u003c/p\u003e\n\u003cp\u003eもともとのGoの実装でも、サーバー立てるなりローカルにバイナリ置くなりすればできそうな気もするけど、それはそれとして。\u003c/p\u003e","tags":["mdmml"],"title":"MDMMLのJavaScript移植"},{"categories":null,"objectID":"ba330d53ab6d39e7acb29c1689cdd834","permalink":"https://umemak.github.io/blog/posts/2022/04/28_github_actions/","publish_date":"2022-04-28T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://docs.github.com/ja/actions/using-workflows/workflow-syntax-for-github-actions\"\u003eGitHub Actionsのワークフロー構文 - GitHub Docs\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこの\u003ccode\u003ejobs.\u0026lt;job_id\u0026gt;.strategy.matrix\u003c/code\u003eは、jobに含まれるstepsをmatrixの組み合わせでループ実行するという理解。\u003c/p\u003e\n\u003cp\u003e同じようなことを、step単位でやりたいときにうまい方法がないかなぁ、と。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003ejobs\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eexample\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003esteps\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eexample begin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003erun\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eecho \u0026#34;begin\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eexample A\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003erun\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eecho \u0026#34;A\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eexample B\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003erun\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eecho \u0026#34;B\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eこんなイメージのフローがあったとして、beginは共通で一度だけ実行したくて、AとBは記述をまとめて省略したい、みたいな。\u003c/p\u003e","tags":["github"],"title":"GitHub Actionsのmatrix"},{"categories":null,"objectID":"22fda9ae8f293f53c1a210625abc025d","permalink":"https://umemak.github.io/blog/posts/2022/04/27_audio_interface/","publish_date":"2022-04-27T00:00:00Z","summary":"\u003cp\u003eAmazonのタイムセール祭りでオーディオインターフェース買おうと思っていたけれど、特に安くなってなかったので見送った。\u003c/p\u003e\n\u003cp\u003e候補はこの辺り\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B07VMCYKNZ/\"\u003eFocusrite フォーカスライト オーディオインターフェース 2イン/2アウト 24bit/192kHz Scarlett Solo (3rd Gen) ステッカー付きセット 【国内正規品】 : 楽器・音響機器\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B084BGC5LR/\"\u003eAmazon | audient 「EVO4」2in/2out オーディオ・インターフェース[国内正規品] | オーディオインターフェイス | 楽器・音響機器\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B08LGB4ZV8/\"\u003eAmazon | PreSonus AudioBox USB 96 25th Anniversary オーディオインターフェイス 24bit 96kHz 2入力/2出力 Studio One Artistバンドル | オーディオインターフェイス | 楽器・音響機器\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B08Q1V77NR/\"\u003eAmazon | M-Audio USB オーディオインターフェース 音楽制作ソフトウェア付 Mac Win DTM DAW 低ノイズ ライブ配信 再生 宅録 M-Track Duo | 楽器・音響機器 | 楽器・音響機器\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B09RWNYBKC/\"\u003eAmazon | PreSonus AudioBox GO オーディオインターフェイス 24Bit 96kHz iOS/Android/macOS/Windows/ChromeOS対応 Studio One Primeバンドル | オーディオインターフェイス | 楽器・音響機器\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e1万円以下のM-Track DuoとかAudioBox GOは在庫切れで、その他の1万4千円ぐらいのは在庫あるけど外れ引いたら嫌だなぁという気持ち。\u003c/p\u003e","tags":[],"title":"オーディオインターフェース選び"},{"categories":null,"objectID":"40ddf906a9d4f8d7378e66bc438fe773","permalink":"https://umemak.github.io/blog/posts/2022/04/26_ginkgo/","publish_date":"2022-04-26T00:00:00Z","summary":"\u003cp\u003e昨日の調べもので出てきた、\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGinkgo has several capabilities that can only be accessed via ginkgo.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e（Ginkgoには、ginkgoを経由してしかアクセスできない機能がいくつかあります。）\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eそのいくつかの機能を知りたい。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://onsi.github.io/ginkgo/#ginkgo-cli-overview\"\u003ehttps://onsi.github.io/ginkgo/#ginkgo-cli-overview\u003c/a\u003e には、コマンドライン引数について書かれているが、むしろginkgoでサポートしていないものがあるという記述なので、思っていたのとは違う感じ。\u003c/p\u003e","tags":["golang","ginkgo"],"title":"ginkgoの特殊機能とは？"},{"categories":null,"objectID":"6a4db3587a204c881754faceb24c556e","permalink":"https://umemak.github.io/blog/posts/2022/04/25_ginkgo/","publish_date":"2022-04-25T00:00:00Z","summary":"\u003cp\u003eGinkgoのV1とV2のテストケースが混在しているときに、V2のCLIでV1用のコードをテストしようとすると、ginkgo.timeoutが定義されてい内的なエラーになってしまう（うろ覚え）。\u003c/p\u003e\n\u003cp\u003eimportをv2にすれば多分良いのだけれど、そうしなくても、テストの実行をgo testに任せれば、importで指定しているバージョンで実行してくれる気がする。\u003c/p\u003e","tags":["golang","ginkgo"],"title":"ginkgoとgo test"},{"categories":null,"objectID":"d6faa7ec643d1b91aa2f87dd78b70d40","permalink":"https://umemak.github.io/blog/posts/2022/04/24_screeps_arena/","publish_date":"2022-04-24T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://store.steampowered.com/app/1137320/Screeps_Arena/\"\u003eSteam：Screeps: Arena\u003c/a\u003eのDemo版をやってみた。\u003c/p\u003e\n\u003cp\u003eチュートリアルの途中までやったけど、普通に何か自分で開発してたほうが良いかな。\u003c/p\u003e\n\u003cp\u003eノートPCで1画面でやってると、VS CodeとScreepsの行き来が面倒だったので、エディタは内蔵されていたほうが良いと思った。\u003c/p\u003e","tags":["steam","JavaScript"],"title":"Screeps: Arena体験"},{"categories":null,"objectID":"5fbe412dc8d0a48a2ac72d15169866b6","permalink":"https://umemak.github.io/blog/posts/2022/04/23_hugo_search/","publish_date":"2022-04-23T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://blog.piyo.tech/posts/2018-04-08-hugo-search-page/\"\u003eAlgoliaを使ってブログに全文検索をつける（検索ページ編） - PIYO - Tech \u0026amp; Life -\u003c/a\u003e を見ながらやって、何とか検索できるのはできたんだけど、色々混ぜて試行錯誤した結果、よくわからないものになってしまっている現状。\u003c/p\u003e\n\u003cp\u003eなおGitHub Actionsへの組み込みはまだ。\u003c/p\u003e","tags":["hugo","algolia"],"title":"HugoにAlgoliaを導入してみる"},{"categories":null,"objectID":"1d0eef7606cbbae615c18e30868d3cb1","permalink":"https://umemak.github.io/blog/posts/2022/04/22_hugo_search/","publish_date":"2022-04-22T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://ottan.xyz/posts/2021/07/947231059/\"\u003eHugo + Algolia + Instantsearch.jsで静的サイトに全文検索を導入 - OTTANXYZ\u003c/a\u003eを見ながらやってみた。\u003c/p\u003e\n\u003cp\u003eとりあえずローカルでできることを確認してから、GitHub Actionsに組み込もうかと。\u003c/p\u003e\n\u003cp\u003eで、上記サイトは設定ファイルがYAMLだったのでTOMLで書くところで躓いた。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-toml\" data-lang=\"toml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e[\u003cspan style=\"color:#a6e22e\"\u003eoutputFormats\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eAlgolia\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003ebaseName\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;algolia\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003eisPlainText\u003c/span\u003e = \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003emediaType\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003enotAlternative\u003c/span\u003e = \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eこれで動いた。\u003c/p\u003e","tags":["hugo","algolia"],"title":"HugoにAlgoliaを導入してみる"},{"categories":null,"objectID":"c6de33dfb3507774a2ebe8640b5440d6","permalink":"https://umemak.github.io/blog/posts/2022/04/20_makefile/","publish_date":"2022-04-20T00:00:00Z","summary":"\u003cp\u003e昨日の件、\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eVAR1 = \u0026#34;abc\u0026#34;\r\nif [ \u0026#34;$(CI)\u0026#34; = \u0026#34;true\u0026#34; ]; then \\\r\n    VAR1 += \u0026#34;def\u0026#34;; \\\r\nfi\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eではなく\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eVAR1 = \u0026#34;abc\u0026#34;\r\nifeq ($(CI),true)\r\n    VAR1 += \u0026#34;def\u0026#34;\r\nendif\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eで良かった。\nひとつ賢くなった。\u003c/p\u003e","tags":["Makefile"],"title":"Makefile入門"},{"categories":null,"objectID":"75d7b52bdabb0cf5e3ff30ef594f83fc","permalink":"https://umemak.github.io/blog/posts/2022/04/19_makefile/","publish_date":"2022-04-19T00:00:00Z","summary":"\u003cp\u003e普段使っていないわけではないけれど、GitHub Actionsで動かしたときに変数を変えたくて、ifで条件分ければ行けると思ったんだけど、うまくいかない。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eVAR1 = \u0026#34;abc\u0026#34;\r\nif [ \u0026#34;$(CI)\u0026#34; = \u0026#34;true\u0026#34; ]; then \\\r\n    VAR1 += \u0026#34;def\u0026#34;; \\\r\nfi\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eやりたいことはこんな感じなんだけど。\u003c/p\u003e","tags":["Makefile"],"title":"Makefile入門"},{"categories":null,"objectID":"10d5c4fd648f86cb6e41e9d1ff38d647","permalink":"https://umemak.github.io/blog/posts/2022/04/18_algolia/","publish_date":"2022-04-18T00:00:00Z","summary":"\u003cp\u003eAlgoliaにアカウント登録してみた。\u003c/p\u003e\n\u003cp\u003e登録完了すると、Applicationsに2つのunnamed applicationが作成されていた。\u003c/p\u003e\n\u003cp\u003eとりあえず、dashboardからAPI Keysを確認できた。\u003c/p\u003e\n\u003cp\u003eそして、hugo側の設定は、使用しているテーマがAlgolia未対応なので、どうしよう。\u003c/p\u003e\n\u003cp\u003e参考になりそうなページ\u003c/p\u003e","tags":["Algolia"],"title":"Algoliaサインアップ"},{"categories":null,"objectID":"cb97a7ce427051ff474ae976cc2b599a","permalink":"https://umemak.github.io/blog/posts/2022/04/17_hugo_search/","publish_date":"2022-04-17T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gohugo.io/tools/search/\"\u003e公式\u003c/a\u003eにいくつかやり方が紹介されている。\u003c/p\u003e\n\u003cp\u003e公式自体は\u003ca href=\"https://www.algolia.com/\"\u003eAlgolia\u003c/a\u003eを使っているので、無料枠もあるみたいだしAlgolia使ってみようかな。\u003c/p\u003e","tags":["hugo"],"title":"Hugoのblogに検索機能を付けたい"},{"categories":null,"objectID":"e379d16274f8fe9e31a12f2b2e38afb5","permalink":"https://umemak.github.io/blog/posts/2022/04/16_movie_caption/","publish_date":"2022-04-16T00:00:00Z","summary":"\u003cp\u003e動画に字幕入れるのに、今回はShotcutのテキストを重ねる方法で実現していた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=kbDIesukx6w\"\u003eAdobe PremiereとVoicepeakを使った簡単・なめらか音声合成ナレーション - YouTube\u003c/a\u003eみたいにするともっと簡単にできそうな気もするけど、Premiereとか自分には敷居が高そう・・・\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://cloud.google.com/speech-to-text?hl=ja\"\u003eSpeech-to-Text: 自動音声認識  |  Google Cloud\u003c/a\u003eでテキスト化はできそうだけど、SRT形式で出力できるのかな？\u003c/p\u003e","tags":["movie"],"title":"動画の字幕"},{"categories":null,"objectID":"ba111fb224ee794fa08c62605002a25f","permalink":"https://umemak.github.io/blog/posts/2022/04/15_movie_edit/","publish_date":"2022-04-15T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://shotcut.org/\"\u003eShotcut\u003c/a\u003eの操作方法の参考になったページ\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://wolfbash.hateblo.jp/entry/2018/01/17/012911\"\u003e無料の動画編集ツール Shotcut の使い方 その1 - 強まっていこう\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://wolfbash.hateblo.jp/entry/2018/01/23/171936\"\u003e無料の動画編集ツール Shotcut の使い方 その2 - 動画の切り貼り - 強まっていこう\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://wolfbash.hateblo.jp/entry/2018/02/06/031628\"\u003e無料の動画編集ツール Shotcut の使い方 その3 - 複数トラックを用いた編集 - 強まっていこう\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e続編がないのが残念。\u003c/p\u003e\n\u003cp\u003eとりあえず、同じの3回撮ってタイムラインに並べて、大体同じところで切って、比較して良いトラックを新規トラックにコピーしていった。\u003c/p\u003e\n\u003cp\u003eまとめた新規トラックをWAVで書き出して、\u003ca href=\"https://forest.watch.impress.co.jp/library/software/audacity/\"\u003e「Audacity」無料の音声編集ソフト - 窓の杜\u003c/a\u003eで読み込んでコンプレッサーかけて書き出し。\u003c/p\u003e","tags":["movie"],"title":"動画編集入門"},{"categories":null,"objectID":"d22cf7bc560b897a69089996f885113f","permalink":"https://umemak.github.io/blog/posts/2022/04/14_docker_desktop_470/","publish_date":"2022-04-14T00:00:00Z","summary":"\u003cp\u003eDocker Desktopの4.7.0が出たので、host.docker.internalの件が変化あったか試してみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/docker_network_test\"\u003ehttps://github.com/umemak/docker_network_test\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e変わっていなかった。\u003c/p\u003e\n\u003cp\u003eリリースノート見てもそれらしい変更なかったし、残念だが当然。\u003c/p\u003e\n\u003cp\u003e世界中でほかに誰も困っていないのかなぁ。。\u003c/p\u003e","tags":["docker"],"title":"Docker Desktop 4.7.0でhost.docker.internal"},{"categories":null,"objectID":"00de1bad24eda69150edec7840056593","permalink":"https://umemak.github.io/blog/posts/2022/04/13_movie_edit/","publish_date":"2022-04-13T00:00:00Z","summary":"\u003cp\u003eShotcutで動画にテロップつけるの、意外と難しいというかいろいろ理解するのに時間がかかって難航。。\u003c/p\u003e\n\u003cp\u003e今週中に仕上げられるのだろうか。\u003c/p\u003e","tags":["movie"],"title":"動画編集入門"},{"categories":null,"objectID":"be3777a099906c69b4c65c275c11a9df","permalink":"https://umemak.github.io/blog/posts/2022/04/12_shotcut/","publish_date":"2022-04-12T00:00:00Z","summary":"\u003cp\u003eOBSで収録した動画にテロップつけたいと思って、\u003ca href=\"https://shotcut.org/\"\u003eShotcut - Home\u003c/a\u003e をインストールした。\u003c/p\u003e\n\u003cp\u003eWindows11のフォトアプリでも動画編集できるらしいのだけれど、アプリが落ちまくって使い物にならなかった。。\u003c/p\u003e","tags":["windows"],"title":"Shotcut"},{"categories":null,"objectID":"0281657290baa949676a29aca559b36f","permalink":"https://umemak.github.io/blog/posts/2022/04/11_xsplit_vcam/","publish_date":"2022-04-11T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.xsplit.com/ja/partners/obs\"\u003eXSplit VCam: OBSでバーチャルグリーンバックを手に入れよう | XSplit\u003c/a\u003e を試してみた。\u003c/p\u003e\n\u003cp\u003eOBSで合成するのに、Zoomで背景緑にしてウィンドウキャプチャしていたけど、もっと簡単に導入できた。\u003c/p\u003e\n\u003cp\u003e無料版だとロゴが入るので、課金するかは検討中。年に2回程度しか使わない予定なので、だったら少しくらい面倒でもZoomで良い気もする。。\u003c/p\u003e","tags":["windows"],"title":"XSplit VCam"},{"categories":null,"objectID":"efae480e66218411ad49d2193e5f660e","permalink":"https://umemak.github.io/blog/posts/2022/04/10_rust_book/","publish_date":"2022-04-10T00:00:00Z","summary":"\u003cp\u003eunsafeの節を読んだ。\u003c/p\u003e\n\u003cp\u003eRustでも安全でないコードを書くことができる。しかしそれを局所化しておくことが大事。\u003c/p\u003e\n\u003cp\u003e直近で必要になることはなさそう。\u003c/p\u003e\n\u003cp\u003eその他Tipsを読んで読了した。\u003c/p\u003e\n\u003cp\u003e自分にはRustより先に習得すべきものがある気がした。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"d29648a187595ceec512c19c8e675a0d","permalink":"https://umemak.github.io/blog/posts/2022/04/09_rust_book/","publish_date":"2022-04-09T00:00:00Z","summary":"\u003cp\u003e他言語（C,Ruby）との連携の節を読んだ。\u003c/p\u003e\n\u003cp\u003e章的にはTipsなので、こんなこともできるんだねといった感じで。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"95e5ed67768423cd89413fddd2b5ca1b","permalink":"https://umemak.github.io/blog/posts/2022/04/08_rust_book/","publish_date":"2022-04-08T00:00:00Z","summary":"\u003cp\u003eマクロの節を読んだ。\u003c/p\u003e\n\u003cp\u003e結構ボリュームがあった。\u003c/p\u003e\n\u003cp\u003e実行速度を上げるには実行時の関数呼び出しよりコンパイル時に展開したほうが良いのはわかる。\u003c/p\u003e\n\u003cp\u003eそこまで速度を気にしないといけないものを作る機会がないというのもあるけど、使いどころが今一つイメージできなかった。\u003c/p\u003e\n\u003cp\u003e他人の書いたコードを読み解く必要があるときに知っているとよい感じかなぁ。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"8622f8018850374bb67a9dbb53209ce2","permalink":"https://umemak.github.io/blog/posts/2022/04/07_rust_book/","publish_date":"2022-04-07T00:00:00Z","summary":"\u003cp\u003eバイナリの最適化などの章を読んだ。\u003c/p\u003e\n\u003cp\u003eこの辺はまだ成熟していない印象。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"509a858a3196c5294bd0df7c4fe21495","permalink":"https://umemak.github.io/blog/posts/2022/04/06_rust_book/","publish_date":"2022-04-06T00:00:00Z","summary":"\u003cp\u003e組み込みの章を読んだ。\u003c/p\u003e\n\u003cp\u003eあまり直接関係なさそうだったのでさらっと。\u003c/p\u003e\n\u003cp\u003e開発ツールの章を読んだ。\u003c/p\u003e\n\u003cp\u003eGoとそう変わらない感じ？\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"64e9ac24fd90f7e24a738eb87828f243","permalink":"https://umemak.github.io/blog/posts/2022/04/05_rust_book/","publish_date":"2022-04-05T00:00:00Z","summary":"\u003cp\u003eGUIの章を読んだ。\u003c/p\u003e\n\u003cp\u003eColumnとRowをコンテナに配置して、ってFlutterっぽい（昔のHTMLテーブルレイアウトっぽいともいう）感じで配置していくのはわかりやすいと思った。\u003c/p\u003e\n\u003cp\u003eファイルを読んでバイト配列に入れる\u003ccode\u003einclude_bytes!\u003c/code\u003eマクロはほかでも使えそう。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"d58a2b8baa98cd86b16382eb6e6470cd","permalink":"https://umemak.github.io/blog/posts/2022/04/04_rust_book/","publish_date":"2022-04-04T00:00:00Z","summary":"\u003cp\u003eWebサーバーを立てる章とWASMの章を読んだ。\u003c/p\u003e\n\u003cp\u003eこれはRustに限ったことではないけれど、まだ若い言語ということもあって、Webフレームワークとかどれを選んだらよいか迷いそう。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"09b6b3d6124786373d5d731c5afab536","permalink":"https://umemak.github.io/blog/posts/2022/04/03_rust/","publish_date":"2022-04-03T00:00:00Z","summary":"\u003cp\u003eここ数日Rustから遠ざかってしまっていて、またRust筋力が落ちてしまった感。\u003c/p\u003e\n\u003cp\u003e何度か入門して感じたことは、やっぱりとっつきにくい言語だなぁということ。\u003c/p\u003e\n\u003cp\u003e用語が日本語だと直感的に理解しにくいのも一つの原因だと思う。クレートとか聞いたことないし。\u003c/p\u003e\n\u003cp\u003eまぁ、Goのスライスとかも最初何のことか理解するのに時間かかったし、慣れの問題かもしれない。\u003c/p\u003e","tags":["rust"],"title":"Rust雑感"},{"categories":null,"objectID":"5988af20ce6861ba9df8c602363c5d11","permalink":"https://umemak.github.io/blog/posts/2022/04/02_open_file_delete/","publish_date":"2022-04-02T00:00:00Z","summary":"\u003cp\u003eあと、sambaだけではなく、NFSでどうなるかも確認したい。\u003c/p\u003e\n\u003cp\u003eNFSならWindowsサーバー用意しなくても良いから少しは簡単かな？\u003c/p\u003e","tags":["linux"],"title":"開いたままのファイルを削除したらどうなるか4"},{"categories":null,"objectID":"4919d68e7a28973ca4e82979f7902ef5","permalink":"https://umemak.github.io/blog/posts/2022/04/01_open_file_delete/","publish_date":"2022-04-01T00:00:00Z","summary":"\u003cp\u003e昨日はAWSでEC2使って試したけど、ローカルでもdocker使ってsambaサーバー立てたら同じことできたのではないか？\u003c/p\u003e","tags":["linux"],"title":"開いたままのファイルを削除したらどうなるか3"},{"categories":null,"objectID":"bc4e819d6595cdad9c112b65603446a9","permalink":"https://umemak.github.io/blog/posts/2022/03/31_open_file_delete/","publish_date":"2022-03-31T00:00:00Z","summary":"\u003cp\u003e昨日のCパターンを実際にAWSで試してみた。Docker関係なかった。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eAmazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type\u003c/code\u003eと\u003ccode\u003eMicrosoft Windows Server 2019 Base\u003c/code\u003eのインスタンスを\u003ccode\u003et2.micro\u003c/code\u003eでそれぞれ作成\u003c/li\u003e\n\u003cli\u003eLinux側からWindows側へのセキュリティグループからのアクセスを許可\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"windows側\"\u003eWindows側\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eC:\\Users\\shared を作成してプロパティから共有設定\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"linux側\"\u003eLinux側\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eWindowsの共有フォルダをマウントしてテスト用ファイル作成\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo yum install cifs-utils\r\n$ sudo mkdir /mnt/shared\r\n$ sudo mount -t cifs //\u0026lt;WindowsのIP\u0026gt;/Users/shared /mnt/shared -o user=Administrator\r\n$ ls /mnt/shared/\r\n$ sudo mkdir /mnt/shared/test\r\n$ sudo vi /mnt/shared/test/test.txt\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eGoのインストールとオープンして待機するプログラムの実行\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo su\r\n# rm -rf /usr/local/go \u0026amp;\u0026amp; tar -C /usr/local -xzf go1.18.linux-amd64.tar.gz\r\n# exit\r\n$ export PATH=$PATH:/usr/local/go/bin\r\n$ go version\r\ngo version go1.18 linux/amd64\r\n$ sudo yum install git\r\n$ git clone https://github.com/umemak/open_file_delete_test.git\r\n$ cd open_file_delete_test\r\n$ sudo /usr/local/go/bin/go run main.go /mnt/shared/test/test.txt\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eLinux側別コンソールでファイル削除など確認\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo lsof | grep test.txt\r\nmain      3916                root    3r      REG               0,40         7 1688849860265148 /mnt/shared/test/test.txt\r\nmain      3916 3917           root    3r      REG               0,40         7 1688849860265148 /mnt/shared/test/test.txt\r\nmain      3916 3918           root    3r      REG               0,40         7 1688849860265148 /mnt/shared/test/test.txt\r\nmain      3916 3919           root    3r      REG               0,40         7 1688849860265148 /mnt/shared/test/test.txt\r\n$ ls -l /mnt/shared/test/\r\ntotal 1\r\n-rwxr-xr-x 1 root root 7 Mar 31 04:51 test.txt\r\n\r\n$ sudo rm /mnt/shared/test/test.txt\r\n$ sudo lsof | grep test.txt\r\nmain      3916                root    3r      REG               0,40         7 1688849860265148 /mnt/shared/test/test.txt (deleted)\r\nmain      3916 3917           root    3r      REG               0,40         7 1688849860265148 /mnt/shared/test/test.txt (deleted)\r\nmain      3916 3918           root    3r      REG               0,40         7 1688849860265148 /mnt/shared/test/test.txt (deleted)\r\nmain      3916 3919           root    3r      REG               0,40         7 1688849860265148 /mnt/shared/test/test.txt (deleted)\r\n\r\n$ ls -l /mnt/shared/test/\r\ntotal 1\r\n-rwxr-xr-x 0 root root 7 Mar 31 04:51 test.txt\r\n\r\n$ cat /mnt/shared/test/test.txt \r\ncat: /mnt/shared/test/test.txt: No such file or directory\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eGoプログラム終了\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ ls -l /mnt/shared/test/\r\ntotal 0\n\u003c/code\u003e\u003c/pre\u003e","tags":["linux"],"title":"開いたままのファイルを削除したらどうなるか2"},{"categories":null,"objectID":"3cb6f7099894967403a5d24c68f92e24","permalink":"https://umemak.github.io/blog/posts/2022/03/30_open_file_delete/","publish_date":"2022-03-30T00:00:00Z","summary":"\u003cp\u003eホストがマウントしたディレクトリをマウントしたコンテナでプロセス1で開いてクローズせずにプロセス2で削除したあとその他のプロセスからファイルはどう見えるか。\u003c/p\u003e\n\u003cp\u003eA. ファイルは削除されディレクトリにもリストされない\u003c/p\u003e\n\u003cp\u003eB. ファイルは削除できない\u003c/p\u003e\n\u003cp\u003eC. ファイルは削除されアクセスできないがディレクトリにリストされたまま\u003c/p\u003e\n\u003cp\u003eプロセス1がつかんだままなので削除できないかと思いきや、削除できてしまう。\u003c/p\u003e","tags":["docker"],"title":"開いたままのファイルを削除したらどうなるか"},{"categories":null,"objectID":"c9afda7c08162d9a15d528039c0ea232","permalink":"https://umemak.github.io/blog/posts/2022/03/29_host_docker_internal/","publish_date":"2022-03-29T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/umemak/docker_network_test\"\u003ehttps://github.com/umemak/docker_network_test\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDocker Desktopのバージョンを上げたら、host.docker.internal の挙動が変わったっぽいという話。\u003c/p\u003e\n\u003cp\u003eまだ現象の再現性を確認しただけで、原因の特定まではできていない。\u003c/p\u003e","tags":["docker"],"title":"host.docker.internalの謎"},{"categories":null,"objectID":"73f8f3084d40ad5b76c2011a8c71f4e7","permalink":"https://umemak.github.io/blog/posts/2022/03/28_mdmml/","publish_date":"2022-03-28T00:00:00Z","summary":"\u003cp\u003eVecの使い方を理解した気がする。\u003c/p\u003e\n\u003cp\u003eこれでどうにかSMFのバイナリを組み立てられるのではないだろうか。\u003c/p\u003e","tags":["mdmml","rust"],"title":"mdmml_rust"},{"categories":null,"objectID":"690b42af51bd4056581037ae81fa64d0","permalink":"https://umemak.github.io/blog/posts/2022/03/27_mdmml/","publish_date":"2022-03-27T00:00:00Z","summary":"\u003cp\u003eRust版を少し進めた。\u003c/p\u003e\n\u003cp\u003eこういうときはこう書けばよい、というのが身についていないのでなかなか進まない。\u003c/p\u003e","tags":["mdmml","rust"],"title":"mdmml_rust"},{"categories":null,"objectID":"706de214984b032c80bb1f2980be0bc8","permalink":"https://umemak.github.io/blog/posts/2022/03/26_mdmml_remote/","publish_date":"2022-03-26T00:00:00Z","summary":"\u003cp\u003eローカルファイルだけではなく、URL指定で読み込みできるようにしてみた。\u003c/p\u003e\n\u003cp\u003eissue立てておいたのにPRせずにmaster直PUSHしてしまった。。\u003c/p\u003e","tags":["mdmml"],"title":"mdmml機能追加"},{"categories":null,"objectID":"b281515a16c0085f10d7d4e20389df7b","permalink":"https://umemak.github.io/blog/posts/2022/03/25_rust_book/","publish_date":"2022-03-25T00:00:00Z","summary":"\u003cp\u003eCargoについて学んだ。\u003c/p\u003e\n\u003cp\u003eGoはgoコマンドでビルドもテストも外部モジュール管理もするけど、Rustはそうではないらしい。\u003c/p\u003e\n\u003cp\u003eというかrustコマンドが存在していない？rustcはあるけど。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"4b5e43e08a472425022f11addd1acf3e","permalink":"https://umemak.github.io/blog/posts/2022/03/24_rust_book/","publish_date":"2022-03-24T00:00:00Z","summary":"\u003cp\u003eクレートとモジュールについて学んだ。\u003c/p\u003e\n\u003cp\u003eしかし、なんでクレートなんて名前にしたのだろう。名前から機能がイメージできない。\u003c/p\u003e\n\u003cp\u003eファイル名がそのままモジュール名になるのは良いと思う。\nGoはディレクトリ名がパッケージ名だけど、その中のファイル名はパッケージ名と一致していなくてもよいので、紛らわしい名前でも付けようと思えばつけられてしまうのがちょっと。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"be78ec2e3538d9c61e1c80a82927386c","permalink":"https://umemak.github.io/blog/posts/2022/03/23_rust_book/","publish_date":"2022-03-23T00:00:00Z","summary":"\u003cp\u003eマルチスレッドについて学んだ。\u003c/p\u003e\n\u003cp\u003eメッセージパッシングはGoより分かりやすいかも（矢印の書き方いつも忘れる）。\u003c/p\u003e\n\u003cp\u003e非同期処理について学んだ。\u003c/p\u003e\n\u003cp\u003easync/awaitはReactとかFlutterで雰囲気で使っていたけど、ちょっと理解が進んだ気がした。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"178fe446b58728cff04e33f944de104c","permalink":"https://umemak.github.io/blog/posts/2022/03/22_rust_book/","publish_date":"2022-03-22T00:00:00Z","summary":"\u003cp\u003e読み進めていく。\u003c/p\u003e\n\u003cp\u003e別にこの本のせいではないのだけれど、、\u003c/p\u003e\n\u003cp\u003eマクロ、最後に\u003ccode\u003e!\u003c/code\u003eが付くのがちょっと落ち着かない（否定っぽい感じ）。\u003c/p\u003e\n\u003cp\u003eトレイトが何者かすぐ忘れてしまう。\u003c/p\u003e\n\u003cp\u003eimplはGoでいうところのメソッドだというのはわかった。\u003c/p\u003e\n\u003cp\u003eBoxもすぐ忘れそう。。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"961c7e6c4e9109364d0504a190c0061b","permalink":"https://umemak.github.io/blog/posts/2022/03/21_rust_book/","publish_date":"2022-03-21T00:00:00Z","summary":"\u003cp\u003eキャンペーンでKindle版が安くなっていたので買った。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/gp/product/B08PF27TRZ\"\u003e実践Rustプログラミング入門 | 初田直也, 山口聖弘, 吉川哲史, 豊田優貴, 松本健太郎, 原将己, 中村謙弘, フォルシア株式会社 | 工学 | Kindleストア | Amazon\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eMSのチュートリアル終わった後だからか、何言ってるのかわからない状態ではなく読み進められている（今のところ）。\u003c/p\u003e","tags":["rust"],"title":"実践Rustプログラミング入門"},{"categories":null,"objectID":"90fbffb0a800ac91fe92e6d61a0315ed","permalink":"https://umemak.github.io/blog/posts/2022/03/20_go_118/","publish_date":"2022-03-20T00:00:00Z","summary":"\u003cp\u003eWSLのGoのバージョンをあげて、GitHub Actionsのバージョン指定も1.18にしてみた。\u003c/p\u003e\n\u003cp\u003e問題なくCIが通ったので、大丈夫そう。\u003c/p\u003e","tags":["go"],"title":"Go 1.18"},{"categories":null,"objectID":"8e7d78b32b3a9b670ab3f9cb56feb0b9","permalink":"https://umemak.github.io/blog/posts/2022/03/19_ms_rust/","publish_date":"2022-03-19T00:00:00Z","summary":"\u003cp\u003eついに最後のモジュール。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.microsoft.com/ja-jp/learn/modules/rust-create-command-line-program/\"\u003eコマンドラインの to-do リスト プログラムを作成する - Learn | Microsoft Docs\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e途中で紹介されていた、\u003ca href=\"https://cheatsheetseries.owasp.org/index.html\"\u003eIntroduction - OWASP Cheat Sheet Series\u003c/a\u003eが便利そう。\u003c/p\u003e\n\u003cp\u003eこれでRust完全に理解した。\u003c/p\u003e","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"8c28c19d8a2ddeab9191ad8a728e23fa","permalink":"https://umemak.github.io/blog/posts/2022/03/18_crystaldiskinfo/","publish_date":"2022-03-18T00:00:00Z","summary":"\u003cp\u003eまたS.M.A.R.T.のエラーらしき通知が出たが、通知を開いても何も情報が得られなかったので監視ツールを探してみた。\u003c/p\u003e\n\u003cp\u003e→インテル® ドライバー \u0026amp; サポート・アシスタントをインストールしないと見れないようで、これも追加インストールした。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://forest.watch.impress.co.jp/library/software/crdiskinfo/\"\u003e「CrystalDiskInfo」HDD/SSDの健康状態をチェック - 窓の杜\u003c/a\u003eが良さそうだったのでインストールしてみた（ファイルサイズの小さい通常版）。\u003c/p\u003e","tags":["inspiron"],"title":"CrystalDiskInfoインストールしてみた"},{"categories":null,"objectID":"438aff5f63cd6e4a25b59bebe9de42cc","permalink":"https://umemak.github.io/blog/posts/2022/03/18_ms_rust/","publish_date":"2022-03-18T00:00:00Z","summary":"\u003cp\u003eみんな大好き自動テストの回。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.microsoft.com/ja-jp/learn/modules/rust-automated-tests/\"\u003e自動テストを記述する - Learn | Microsoft Docs\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eテスト対象のコードとテストコードを同じファイルに書くことができる（別のファイルに分けることもできる）。\u003c/p\u003e\n\u003cp\u003e個人的には、分けて書きたい派。同じファイルだとカーソルの行き来で混乱するから。\u003c/p\u003e","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"aa2119f1d657eb1d0848c5e1f5309d39","permalink":"https://umemak.github.io/blog/posts/2022/03/17_ms_rust/","publish_date":"2022-03-17T00:00:00Z","summary":"\u003cp\u003e今日は\u003ca href=\"https://docs.microsoft.com/ja-jp/learn/modules/rust-modules-packages-crates/\"\u003eモジュール、パッケージ、サードパーティーのクレートを調べる - Learn | Microsoft Docs\u003c/a\u003eを学習した。\u003c/p\u003e\n\u003cp\u003eこの辺りはmdmml_rustですでにやっていることだったので、軽く流す程度で。\u003c/p\u003e","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"4b8a946fd1e84c639358280870b653cf","permalink":"https://umemak.github.io/blog/posts/2022/03/16_ms_rust/","publish_date":"2022-03-16T00:00:00Z","summary":"\u003cp\u003e今日の学習モジュール\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.microsoft.com/ja-jp/learn/modules/rust-generic-types-traits/\"\u003eジェネリック型と特性を実装する - Learn | Microsoft Docs\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eちょうど今日リリースされたGo 1.18でも導入されたジェネリクスですね。\n個人的にはジェネリクスをどうしても使いたいと思ったことがないので、さらっと流す感じで。\u003c/p\u003e\n\u003cp\u003e特性というのはGoのinterfaceみたいなものかな。\u003c/p\u003e\n\u003cp\u003eイテレーターはmdmmlでも使えそうな気がする。\u003c/p\u003e","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"f3c6096ebc23a9fb8bf55fdedbda398c","permalink":"https://umemak.github.io/blog/posts/2022/03/15_ms_rust/","publish_date":"2022-03-15T00:00:00Z","summary":"\u003cp\u003e所有とか借用とか、既知の言語では聞かない概念を学習した。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.microsoft.com/ja-jp/learn/modules/rust-memory-management/\"\u003eRust によるメモリ管理の方法を理解する - Learn | Microsoft Docs\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e日本語訳がおかしいところがあって理解に支障が。。\n機械翻訳なのかな。\u003c/p\u003e","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"f85b19db434ee6ad04cd06e5f6f16d33","permalink":"https://umemak.github.io/blog/posts/2022/03/14_ms_rust/","publish_date":"2022-03-14T00:00:00Z","summary":"\u003cp\u003eエラー処理を学んだ。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.microsoft.com/ja-jp/learn/modules/rust-error-handling/\"\u003eRust でエラーを処理する - Learn | Microsoft Docs\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eやっぱり例題わかりにくい。。\u003c/p\u003e","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"9b125f8670956fc5f01ada9d91316c34","permalink":"https://umemak.github.io/blog/posts/2022/03/13_ms_rust/","publish_date":"2022-03-13T00:00:00Z","summary":"\u003cp\u003e昨日の続きで\u003ca href=\"https://docs.microsoft.com/ja-jp/learn/paths/rust-first-steps/\"\u003eRust の最初のステップ - Learn | Microsoft Docs\u003c/a\u003eを進める。\u003c/p\u003e\n\u003cp\u003eちょっと説明不足で何をしたらよいかわからないところがあるけど、コードの解答例もあるから最終的にはどうしたらよかったのかはわかる。\u003c/p\u003e\n\u003cp\u003e地道に進めていこう。\u003c/p\u003e","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"df143d0d84ce6411db9099b3176b478a","permalink":"https://umemak.github.io/blog/posts/2022/03/12_ms_rust/","publish_date":"2022-03-12T00:00:00Z","summary":"\u003cp\u003e昨日、すっかり初心者に戻ってしまったので、\u003ca href=\"https://docs.microsoft.com/ja-jp/learn/paths/rust-first-steps/\"\u003eRust の最初のステップ - Learn | Microsoft Docs\u003c/a\u003eをやってみることにした。\u003c/p\u003e\n\u003cp\u003e最初のモジュールのまとめに書かれていた、\u003ca href=\"https://rust-lang-nursery.github.io/rust-cookbook/\"\u003eTable of Contents - Rust Cookbook\u003c/a\u003eがいろいろ参考になりそう。\u003c/p\u003e","tags":["rust"],"title":"Rust再々入門"},{"categories":null,"objectID":"0342510b8f794ee449212e289927ad73","permalink":"https://umemak.github.io/blog/posts/2022/03/11_rust/","publish_date":"2022-03-11T00:00:00Z","summary":"\u003cp\u003ego版のリファクタリングも進めたので、またRust版を進めようと思ったら、すっかり構文など忘れてしまっていた。\u003c/p\u003e\n\u003cp\u003eやっぱり集中＆継続して触らないとダメだ。。\u003c/p\u003e","tags":["rust"],"title":"Rust移植再開"},{"categories":null,"objectID":"60eeea0cd6b23cbeb6d2528d990e8d39","permalink":"https://umemak.github.io/blog/posts/2022/03/10_func/","publish_date":"2022-03-10T00:00:00Z","summary":"\u003cp\u003e細かい変換を関数化してみた。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003estrconv.Atoi\u003c/code\u003eをエラーだったらデフォルト値で返すやつとか。\u003c/p\u003e\n\u003cp\u003etitleやtempoを[]byteにして返すやつとか。\u003c/p\u003e","tags":["go"],"title":"関数化"},{"categories":null,"objectID":"77714ab8d4e4bb03ae88364c2b32e016","permalink":"https://umemak.github.io/blog/posts/2022/03/09_method_func/","publish_date":"2022-03-09T00:00:00Z","summary":"\u003cp\u003e最初は、構造体のフィールドを参照しているものはメソッドにしていた。\u003c/p\u003e\n\u003cp\u003eけど、フィールドのごく一部しか使っていないものはメソッドではなく関数にして、疎結合な感じにしてみた。\u003c/p\u003e\n\u003cp\u003eもちろんフィールドを更新しているものはメソッドのほうが良いかもしれないが、それでも新しく構造体を生成して返すようにすれば必ずしもメソッドにする必要はない。\u003c/p\u003e","tags":["go"],"title":"メソッドか関数か"},{"categories":null,"objectID":"487d8800ae7a6829ae85353a85a6d5dc","permalink":"https://umemak.github.io/blog/posts/2022/03/08_go_main_test/","publish_date":"2022-03-08T00:00:00Z","summary":"\u003cp\u003emainのテストは、os.Argsを直接設定するという割と無理やりな書き方でテストしていたけれど、処理部分を別関数にしたので、引数を変えて正常系と異常系をテストし分けることができるようになった。\u003c/p\u003e","tags":["go"],"title":"main関数を分けたのでテストも書く"},{"categories":null,"objectID":"704168a300aefed62de72267563f15c8","permalink":"https://umemak.github.io/blog/posts/2022/03/07_docker_compose/","publish_date":"2022-03-07T00:00:00Z","summary":"\u003cp\u003eDocker Desktopでは設定でcomposeのバージョン（1系と2系）を切り替えることができる。\u003c/p\u003e\n\u003cp\u003eところで、いつまでV1が使えるのか気になったので調べてみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/docker/compose\"\u003ehttps://github.com/docker/compose\u003c/a\u003e では、デフォルトのブランチがv2となっている。masterブランチに切り替えてREADME.mdを見ると、\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNew features and bug fixes will only be considered in the V2 codebase\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eとあるが、\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ebut as of right now there is no concrete timeline\u003c/p\u003e","tags":["docker"],"title":"docker-compose v1のEOL"},{"categories":null,"objectID":"8ba126a74757673bd7399a0dd6d7d57e","permalink":"https://umemak.github.io/blog/posts/2022/03/06_go_main/","publish_date":"2022-03-06T00:00:00Z","summary":"\u003cp\u003eRust版でやっているように、main関数から処理を分離してrun関数を作ってみた。\u003c/p\u003e","tags":["go"],"title":"main関数を分ける"},{"categories":null,"objectID":"f19a46cabb7daeb2a0feda4180a1b0c7","permalink":"https://umemak.github.io/blog/posts/2022/03/05_go_flag/","publish_date":"2022-03-05T00:00:00Z","summary":"\u003cp\u003e入力ファイルを\u003ccode\u003eos.Args[1]\u003c/code\u003eで取得していたので、引数指定しないと範囲外アクセスでpanicしていた。\u003c/p\u003e\n\u003cp\u003eflagパッケージ使って\u003ccode\u003eflag.Arg(0)\u003c/code\u003eで取得するようにしたので、引数指定しなかった場合にはファイルなしエラーで終わるようになった。\u003c/p\u003e\n\u003cp\u003eもっと親切にするなら、エラー終了ではなくヘルプ表示にするのが良いのだろうけど、それはまた余裕があるときにでも。\u003c/p\u003e","tags":["go"],"title":"コマンドライン引数をflagで処理する"},{"categories":null,"objectID":"11e97d9997d4798140c6480a6782687a","permalink":"https://umemak.github.io/blog/posts/2022/03/04_go_const/","publish_date":"2022-03-04T00:00:00Z","summary":"\u003cp\u003eEOTとかbyteのスライスをconstで定義しようとしてできなかった。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003econst EOT = []byte{0x00, 0xFF, 0x2F, 0x00}\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ go run cmd/mdmml/main.go \r\n# github.com/umemak/mdmml\r\n./mdmml.go:10:7: const initializer []byte{...} is not a constant\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ca href=\"https://go.dev/ref/spec#Constants\"\u003eThe Go Programming Language Specification - The Go Programming Language\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e文字列リテラルが許されるならbyteスライスも許されてもよいではないかと思ったけれど、ダメらしい。\nvarで我慢する。\u003c/p\u003e","tags":["go"],"title":"Goのconst"},{"categories":null,"objectID":"8c0e917e06f1e5016b03f246ef3dea53","permalink":"https://umemak.github.io/blog/posts/2022/03/03_mdmml/","publish_date":"2022-03-03T00:00:00Z","summary":"\u003cp\u003eMDMMLのループバグ、デバッグが面倒だったのでループの展開だけ前処理に分けることにした。\u003c/p\u003e\n\u003cp\u003eこれだと文字列の状態でテストできるので、16進数より見やすい。\u003c/p\u003e\n\u003cp\u003eたぶん直ったと思う。\u003c/p\u003e","tags":["mdmml"],"title":"バグ取り"},{"categories":null,"objectID":"b15eeb9d7f66d3b74aadb3301f934f7e","permalink":"https://umemak.github.io/blog/posts/2022/03/02_voicevox/","publish_date":"2022-03-02T00:00:00Z","summary":"\u003cp\u003eDocker Desktopもインストールしたので、最近話題の\u003ca href=\"https://voicevox.hiroshiba.jp/\"\u003eVOICEVOX | 無料で使える中品質なテキスト読み上げソフトウェア\u003c/a\u003eを試してみた。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker run -it --rm -p 50021:50021 hiroshiba/voicevox_engine:cpu-ubuntu20.04-latest\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e最初、\u003ca href=\"https://zenn.dev/nobonobo/articles/60fe0cd1a5af74?utm_source=pocket_mylist\"\u003eGoとDockerでつくる音声合成CLI\u003c/a\u003eのページを参考にしてバージョン指定してたけど、latestにしたら使えるキャラクターが増えた。つい最近追加されたらしい。\u003c/p\u003e\n\u003cp\u003e上記ページを参考に、スクリプト作って、生成されたwavファイルをメディアプレーヤーで再生。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#!/bin/sh\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003eTXT\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003ecat hello.txt\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl -s -XPOST -G \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http://localhost:50021/audio_query?speaker=\u0026#34;\u003c/span\u003e$1 --data-urlencode text\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e$TXT \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e| curl -s -XPOST \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http://localhost:50021/synthesis?speaker=\u0026#34;\u003c/span\u003e$1 \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e-H \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;accept: audio/wav\u0026#39;\u003c/span\u003e -H \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Content-Type: application/json\u0026#39;\u003c/span\u003e -d @- \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e\u0026gt; hello.wav\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eテキストファイル監視して保存したら再生されるみたいな仕組み作れそうだけど、時間あるときにやるネタにしておこう。。\u003c/p\u003e","tags":null,"title":"VOICEVOX"},{"categories":null,"objectID":"d453c9aff960e0aa49eeb2c85ce7c51b","permalink":"https://umemak.github.io/blog/posts/2022/03/01_rancher_desktop/","publish_date":"2022-03-01T00:00:00Z","summary":"\u003cp\u003eInspironクリーンインストールした後、Dockerのセットアップしてなかったの忘れていて、せっかくなので\u003ca href=\"https://rancherdesktop.io/\"\u003eRancher Desktop\u003c/a\u003eを試してみることにした。\u003c/p\u003e\n\u003cp\u003e公式ページからWindows用のインストーラーをダウンロードして実行。\u003c/p\u003e\n\u003cp\u003e起動時に聞かれる\u003ccode\u003eContainer Runtime\u003c/code\u003eは\u003ccode\u003edockerd\u003c/code\u003eを選択した。\u003c/p\u003e\n\u003cp\u003ePowerShell でdockerコマンド使えるようにはなったけど、WSL2とかVS CodeからだとPermission deniedでダメだ。。\u003c/p\u003e","tags":null,"title":"Rancher Desktop"},{"categories":null,"objectID":"06a04cb05d60bbd7e56ef41ca0aed229","permalink":"https://umemak.github.io/blog/posts/2022/02/28_mdmml/","publish_date":"2022-02-28T00:00:00Z","summary":"\u003cp\u003eループと休符の組み合わせで、休符が消える現象が起きてる気がする。\u003c/p\u003e\n\u003cp\u003e後から実装したところはちょっと入り組んでしまっているね。。\u003c/p\u003e","tags":["mdmml"],"title":"バグ発見"},{"categories":null,"objectID":"aad9e3369588d9f545b69da627d0c582","permalink":"https://umemak.github.io/blog/posts/2022/02/27_rust/","publish_date":"2022-02-27T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://doc.rust-jp.rs/book-ja/title-page.html\"\u003eThe Rust Programming Language 日本語版 - The Rust Programming Language 日本語版\u003c/a\u003e、途中飛ばして12章やってたけれど、やっぱり最初からやったほうが良い気がしてきた。\u003c/p\u003e\n\u003cp\u003eそして、最初のページに\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eすべてのプロジェクトの Cargo.toml に edition=\u0026ldquo;2018\u0026rdquo; とあることを前提にしています。\nとの注意書きがあるのに今更ながら気づいた。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e昨日エラーが出ると言っていたのは、\u003ccode\u003eedition = \u0026quot;2021\u0026quot;\u003c/code\u003eだったので、試しに2018にしてみたらエラーではなく警告に変わった。\u003c/p\u003e","tags":["rust"],"title":"Rust学習"},{"categories":null,"objectID":"129811a2302695724f751467515456c2","permalink":"https://umemak.github.io/blog/posts/2022/02/26_rust_dyn/","publish_date":"2022-02-26T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://doc.rust-jp.rs/book-ja/ch12-03-improving-error-handling-and-modularity.html#run%E9%96%A2%E6%95%B0%E3%81%8B%E3%82%89%E3%82%A8%E3%83%A9%E3%83%BC%E3%82%92%E8%BF%94%E3%81%99\"\u003eリファクタリングしてモジュール性とエラー処理を向上させる - The Rust Programming Language 日本語版\u003c/a\u003e\nを写経していて、コンパイルエラーに遭遇した。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ cargo run\r\n   Compiling mdmml_rust v0.1.0 (mdmml_rust)\r\nerror[E0782]: trait objects must include the `dyn` keyword\r\n  --\u0026gt; src/main.rs:21:41\r\n   |\r\n21 | fn run(config: Config)-\u0026gt; Result\u0026lt;(), Box\u0026lt;Error\u0026gt;\u0026gt; {\r\n   |                                         ^^^^^\r\n   |\r\nhelp: add `dyn` keyword before this trait\r\n   |\r\n21 - fn run(config: Config)-\u0026gt; Result\u0026lt;(), Box\u0026lt;Error\u0026gt;\u0026gt; {\r\n21 + fn run(config: Config)-\u0026gt; Result\u0026lt;(), Box\u0026lt;dyn Error\u0026gt;\u0026gt; {\r\n   | \r\n\r\nFor more information about this error, try `rustc --explain E0782`.\r\nerror: could not compile `mdmml_rust` due to previous error\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e修正方法も提示してくれて親切。\u003c/p\u003e\n\u003cp\u003eで、この\u003ccode\u003edyn\u003c/code\u003eとは何なのか。書かれているように\u003ccode\u003erustc --explain E0782\u003c/code\u003eを実行すると、以下の出力となった。\u003c/p\u003e","tags":["rust"],"title":"dynとは？"},{"categories":null,"objectID":"93ef0f13e081c84fe50876c01d8a16b2","permalink":"https://umemak.github.io/blog/posts/2022/02/26_rust/","publish_date":"2022-02-26T00:00:00Z","summary":"\u003cp\u003eコードフォーマッターが欲しいと思って、プラグインを入れたけれど動かない。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eCouldn\u0026#39;t start client Rust Language Server\r\n---\r\nRustup not available. Install from https://www.rustup.rs/\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eどうやらツールが足りないようなので、追加でインストールした。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ curl --proto \u0026#39;=https\u0026#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh\r\n$ source $HOME/.cargo/env\r\n$ rustup --version\r\nrustup 1.24.3 (ce5817a94 2021-05-31)\r\ninfo: This is the version for the rustup toolchain manager, not the rustc compiler.\r\ninfo: The currently active `rustc` version is `rustc 1.59.0 (9d1b2106e 2022-02-23)`\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eそれでもエラーが解消しなかったので、OSごと再起動したら反映された。\u003c/p\u003e","tags":["rust"],"title":"VS CodeのRust用設定"},{"categories":null,"objectID":"a697b973b10ddde69800763b4d46339f","permalink":"https://umemak.github.io/blog/posts/2022/02/25_mdmml_rust/","publish_date":"2022-02-25T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://doc.rust-jp.rs/book-ja/ch12-03-improving-error-handling-and-modularity.html\"\u003eリファクタリングしてモジュール性とエラー処理を向上させる - The Rust Programming Language 日本語版\u003c/a\u003e\nを読みながら。\u003c/p\u003e\n\u003cp\u003eちょっと分量多いけど、この第12章をひととおりなぞれば、Rustを「完全に理解」できる気がする。\u003c/p\u003e","tags":["rust"],"title":"モジュール化"},{"categories":null,"objectID":"fc860a0d7e964103db22b45907143369","permalink":"https://umemak.github.io/blog/posts/2022/02/24_mdmml_rust/","publish_date":"2022-02-24T00:00:00Z","summary":"\u003cp\u003e以下ドキュメントを参考にしたら、引数で指定したファイルを読み込むのは簡単にできた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://doc.rust-jp.rs/book-ja/ch12-01-accepting-command-line-arguments.html\"\u003eコマンドライン引数を受け付ける - The Rust Programming Language 日本語版\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://doc.rust-jp.rs/book-ja/ch12-02-reading-a-file.html\"\u003eファイルを読み込む - The Rust Programming Language 日本語版\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e次は読み込んだテキストをパースしていくのだけれど、goの時のようにパッケージとして分けたい。\u003c/p\u003e","tags":["rust"],"title":"ファイルを読み込む"},{"categories":null,"objectID":"52d335bbb1bef0ef8dfaebd4cbea8591","permalink":"https://umemak.github.io/blog/posts/2022/02/23_rust/","publish_date":"2022-02-23T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://umemak.github.io/blog/posts/2020/08/01_hello_rust/\"\u003e以前\u003c/a\u003eRustでHello Worldするのはやってたので、再入門。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://doc.rust-jp.rs/book-ja/title-page.html\"\u003eThe Rust Programming Language 日本語版 - The Rust Programming Language 日本語版\u003c/a\u003eを見ながら。\u003c/p\u003e\n\u003cp\u003e今回はcargoを使ってビルドするようにしてみた。\u003c/p\u003e\n\u003cp\u003eマニュアルだと\u003ccode\u003ecargo new\u003c/code\u003eで作成しているが、先にGitHubでリポジトリを作ってしまっていたので、\u003ccode\u003ecargo init\u003c/code\u003eを使っている。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ curl --proto \u0026#39;=https\u0026#39; --tlsv1.2 https://sh.rustup.rs -sSf | sh\r\n$ source $HOME/.cargo/env\r\n$ rustc --version\r\nrustc 1.58.1 (db9d1b20b 2022-01-20)\r\n$ cargo --version\r\ncargo 1.58.0 (f01b232bc 2022-01-19)\r\n$ cargo init\r\n$ cargo build\r\n   Compiling mdmml_rust v0.1.0 (/home/umemak/workspace/mdmml_rust)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.36s\r\n$ ./target/debug/mdmml_rust \r\nHello, world!\r\n$ cargo run\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.00s\r\n     Running `target/debug/mdmml_rust`\r\nHello, world!\n\u003c/code\u003e\u003c/pre\u003e","tags":["rust"],"title":"Rust再入門"},{"categories":null,"objectID":"0cbcc87c94498e1bd74b7e5de3a50f39","permalink":"https://umemak.github.io/blog/posts/2022/02/23_mdmml/","publish_date":"2022-02-23T00:00:00Z","summary":"\u003cp\u003e大体やりたいことはやった感が出てきたので、go以外の言語で実装してみたいと思う。\u003c/p\u003e\n\u003cp\u003eやってることはテキスト変換なので、未知の言語の練習にもちょうどよいかと。\u003c/p\u003e\n\u003cp\u003eということでRustでやってみる。\u003c/p\u003e\n\u003cp\u003e前二日間更新がなかったのは、ワクチン副作用でダウンしていたため。\u003c/p\u003e","tags":null,"title":"別言語で実装"},{"categories":null,"objectID":"2ee20387fa23e6d32ad063d321ac7ce4","permalink":"https://umemak.github.io/blog/posts/2022/02/20_mdmml_test/","publish_date":"2022-02-20T00:00:00Z","summary":"\u003cp\u003eテストカバレッジを100％まであげた。\u003c/p\u003e\n\u003cp\u003eどうしてここ通らないんだろうってよく見たら変数名間違えていたバグだった。\u003c/p\u003e","tags":null,"title":"テスト追加2"},{"categories":null,"objectID":"1c25110a68f0295ae0a7ba5cd5220010","permalink":"https://umemak.github.io/blog/posts/2022/02/19_mdmml_test/","publish_date":"2022-02-19T00:00:00Z","summary":"\u003cp\u003eMDMMLで関数分割してテスト反映してなかったりしていたのを追加。\u003c/p\u003e\n\u003cp\u003eパラメータゼロ値で呼んだら落ちたり思ったのと違う動きをしていたり。\u003c/p\u003e\n\u003cp\u003eテストもたまに見返すと面白い。\u003c/p\u003e","tags":null,"title":"テスト追加"},{"categories":null,"objectID":"477e3c6aa10d9d43b856956012a45b65","permalink":"https://umemak.github.io/blog/posts/2022/04/21_ginkgo/","publish_date":"2022-02-18T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://umemak.github.io/blog/posts/2022/02/18_ginkgo/\"\u003eGinkgoわからん - umemak\u003c/a\u003e の続編。\u003c/p\u003e\n\u003cp\u003eItが上から順番に実行されない問題、V2で導入された\u003ccode\u003eOrdered\u003c/code\u003eを使えば解決できそう。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://onsi.github.io/ginkgo/#ordered-containers\"\u003ehttps://onsi.github.io/ginkgo/#ordered-containers\u003c/a\u003e\u003c/p\u003e","tags":["golang","ginkgo"],"title":"Ginkgoわかった"},{"categories":null,"objectID":"7d6acdb2cdc319277c3b5dff2d63d613","permalink":"https://umemak.github.io/blog/posts/2022/02/18_ginkgo/","publish_date":"2022-02-18T00:00:00Z","summary":"\u003cp\u003eMDMMLじゃない話。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://onsi.github.io/ginkgo/\"\u003ehttps://onsi.github.io/ginkgo/\u003c/a\u003e でテストを、\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eDescribe(){\r\n    Context(){\r\n        // 準備\r\n        It(){\r\n            Expect()\r\n        }\r\n        // 次の準備\r\n        It(){\r\n            Expect()\r\n        }\r\n        // 後片付け\r\n    }\r\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eみたいな感じで書いていたら、思った通りの動きにならなくてハマった。\u003c/p\u003e\n\u003cp\u003eどうやら、Contextの中は上から順番に実行されるのではなく、\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eDescribe(){\r\n    Context(){\r\n        // 準備\r\n        // 次の準備\r\n        // 後片付け\r\n        It(){\r\n            Expect()\r\n        }\r\n        It(){\r\n            Expect()\r\n        }\r\n    }\r\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eとなるらしい。\u003c/p\u003e\n\u003cp\u003eやりたい順番で実行したければ、\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eDescribe(){\r\n    It(){\r\n        // 準備\r\n        Expect()\r\n        // 次の準備\r\n        Expect()\r\n        // 後片付け\r\n    }\r\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eってやらないといけないのかなぁ。\u003c/p\u003e","tags":["golang","ginkgo"],"title":"Ginkgoわからん"},{"categories":null,"objectID":"e043b12c9b3395f346e0227c559eb385","permalink":"https://umemak.github.io/blog/posts/2022/02/17_mdmml/","publish_date":"2022-02-17T00:00:00Z","summary":"\u003cp\u003eいまさらながらGitHub ActionsでCIを設定した。\u003c/p\u003e\n\u003cp\u003eActionsのバージョン指定なしgoは1.15.15なんだね。もうじき1.18が出るのに。\u003c/p\u003e","tags":null,"title":"MDMML CI構築"},{"categories":null,"objectID":"10a1eaaf355f554eeba109840093dbc4","permalink":"https://umemak.github.io/blog/posts/2022/02/16_crontab/","publish_date":"2022-02-16T00:00:00Z","summary":"\u003cp\u003ecrontab、\u003ccode\u003e-\u003c/code\u003eで範囲指定ができるけれど、大小関係が逆だったらどうなるか気になったので調べてみた。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e59-1 * * * * time\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eこういうやつ。\u003c/p\u003e\n\u003cp\u003edockerでalpine使って動かしたところ、想定通り\u003ccode\u003e59,0,1\u003c/code\u003eで実行された。\u003c/p\u003e","tags":null,"title":"crontabの範囲指定について"},{"categories":null,"objectID":"a018db4cfbe045c18931d03b349201bd","permalink":"https://umemak.github.io/blog/posts/2022/02/16_mdmml/","publish_date":"2022-02-16T00:00:00Z","summary":"\u003cp\u003e通らなくなっていたテストを通した。\u003c/p\u003e\n\u003cp\u003eバイナリものはパッと見でどこが違うかわかりにくいのが難点。。\u003c/p\u003e","tags":null,"title":"リファクタリング"},{"categories":null,"objectID":"b3d7cfeff52644cc50fe78b21b0c6800","permalink":"https://umemak.github.io/blog/posts/2022/02/15_mdmml/","publish_date":"2022-02-15T00:00:00Z","summary":"\u003cp\u003eデータ構造の変更と、それに関連する部分を修正。\u003c/p\u003e\n\u003cp\u003eテーブルのセルごとに読み込んで保持するようにした。\u003c/p\u003e\n\u003cp\u003eテストが通らなくなった。。\u003c/p\u003e\n\u003cp\u003eセル（小節）ごとに変換したら、ループとか現在のオクターブとか状態として持たせないといけないのか・・ちょっと、あまり、よくない気がする。\u003c/p\u003e","tags":null,"title":"リファクタリング"},{"categories":null,"objectID":"a5ba60cf796dcaef777e3f46e839aacd","permalink":"https://umemak.github.io/blog/posts/2022/02/14_mdmml/","publish_date":"2022-02-14T00:00:00Z","summary":"\u003cp\u003eやりたかったのは、hタグでセクションをブロック化して取り出して加工だったのだけど、\n実際やってみて、hタグでブロック化はHTML的にも無理じゃんってなった。\u003c/p\u003e\n\u003cp\u003e結局自前でやっていくしかないのか。。\u003c/p\u003e\n\u003cp\u003eで、これをやっていて思いついたのが、今は読み捨てているテーブルのヘッダー部分をセクション代わりに使えないかなと。\u003c/p\u003e\n\u003cp\u003eひとつのテーブルで同じパートを複数書くのはできなくなるけど。\u003c/p\u003e","tags":null,"title":"マークダウンパーサーを使ってみたが"},{"categories":null,"objectID":"99cc55682e0da340937ba7adaedc3cc2","permalink":"https://umemak.github.io/blog/posts/2022/02/13_goldmark/","publish_date":"2022-02-13T00:00:00Z","summary":"\u003cp\u003e難解だと思って避けていたASTを直接見れば、goqueryを使わなくてもよいのでは？と思ってgoldmarkのソースを眺めてみた。\u003c/p\u003e\n\u003cp\u003erendererの\u003ca href=\"https://github.com/yuin/goldmark/blob/master/renderer/html/html.go\"\u003ehtml.go\u003c/a\u003eが参考になると思うんだけど、なかなか長大な感じ。\n\u003ca href=\"https://github.com/yuin/goldmark/blob/master/renderer/html/html.go#L162\"\u003eRegisterFuncs\u003c/a\u003eで各要素ごとの処理を登録していけばよいのかな。\u003c/p\u003e\n\u003cp\u003eうーん。変換結果としてASTを取る方法がわからぬ。HTMLになってしまう。\nもしかして、extensionとして書かないといけない？\nとなるとちょっと大変そうだなぁ。。\u003c/p\u003e","tags":null,"title":"goldmarkを読む"},{"categories":null,"objectID":"04566f4fdfd7f742128fe03eddab1f1c","permalink":"https://umemak.github.io/blog/posts/2022/02/12_mdmml/","publish_date":"2022-02-12T00:00:00Z","summary":"\u003cp\u003e機能を追加していってだんだんマークダウンのパターンマッチが面倒になってきたので、パーサー使おうかと。\u003c/p\u003e\n\u003cp\u003eマークダウンのパーサーは\u003ca href=\"https://github.com/yuin/goldmark\"\u003eyuin/goldmark: A markdown parser written in Go. Easy to extend, standard(CommonMark) compliant, well structured.\u003c/a\u003eが良さそう。\u003c/p\u003e\n\u003cp\u003eで、HTMLに変換したのを\u003ca href=\"https://github.com/PuerkitoBio/goquery\"\u003ePuerkitoBio/goquery: A little like that j-thing, only in Go.\u003c/a\u003eで必要な部分を取り出せばよいのでは？という目論見。\u003c/p\u003e","tags":null,"title":"ライブラリの力を借りる"},{"categories":null,"objectID":"59de62013539fc14989edb8e9f274bdc","permalink":"https://umemak.github.io/blog/posts/2022/02/11_mdmml/","publish_date":"2022-02-11T00:00:00Z","summary":"\u003cp\u003e結局、Sectionsで実装することにした。\u003c/p\u003e\n\u003cp\u003eデータ構造変更したのでテストも修正。修正の影響範囲がわかるから、テスト書いておいてよかったと思う。\u003c/p\u003e","tags":null,"title":"構成指定実装"},{"categories":null,"objectID":"f2044904f5586cbf4741474e2c164093","permalink":"https://umemak.github.io/blog/posts/2022/02/10_mdmml/","publish_date":"2022-02-10T00:00:00Z","summary":"\u003cp\u003e昨日思いついた、曲の構成もマークダウン上で管理するのをやってみようと思ったところ、変数名をどうするか悩んでいる。\u003c/p\u003e\n\u003cp\u003eイメージ的にはパートとかセクションかなーと思うんだけど、自信がない。\u003c/p\u003e","tags":null,"title":"曲の構成の変数名"},{"categories":null,"objectID":"896af4b677881b7ebf0bc9f17bf0f94a","permalink":"https://umemak.github.io/blog/posts/2022/02/09_mdmml/","publish_date":"2022-02-09T00:00:00Z","summary":"\u003cp\u003e曲の全体の構成と部品を分けて定義できるとよいのではないかと思いついた。\u003c/p\u003e\n\u003cp\u003eマークダウンなので、見出しでそのあたりの管理をするのは適していそう。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e## Song\r\n\r\n- Intro\r\n- A\r\n- B\r\n- A\r\n\r\n## Intro\r\n\r\n| | |\r\n|---|---|\r\n| pf | cdef |\r\n\r\n## A\r\n\r\n| | |\r\n|---|---|\r\n| pf | defg |\r\n\r\n## B\r\n\r\n| | |\r\n|---|---|\r\n| pf | gfed |\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eこんなイメージ？\u003c/p\u003e","tags":null,"title":"MDMML 機能追加"},{"categories":null,"objectID":"224278402eecaa846ee879707cbc7d3b","permalink":"https://umemak.github.io/blog/posts/2022/02/08_mdmml/","publish_date":"2022-02-08T00:00:00Z","summary":"\u003cp\u003e数値の下限と上限をチェックするようにした。\u003c/p\u003e\n\u003cp\u003eそろそろ一区切りかな。\u003c/p\u003e","tags":null,"title":"MDMML"},{"categories":null,"objectID":"8ad2ddb8cccc600c13fe0a9e02633a32","permalink":"https://umemak.github.io/blog/posts/2022/02/07_mdmml/","publish_date":"2022-02-07T00:00:00Z","summary":"\u003cp\u003eメタ情報をMarkDownのFront Matterで書けるようにした。\u003c/p\u003e\n\u003cp\u003eタイトルとかテンポとか。\u003c/p\u003e","tags":null,"title":"MDMML"},{"categories":null,"objectID":"1dcd2e57777710a6e90c7c51d647efbc","permalink":"https://umemak.github.io/blog/posts/2022/02/06_logik400p/","publish_date":"2022-02-06T00:00:00Z","summary":"\u003cp\u003eInspironのタッチパッドが相変わらず不調なのと、だいぶ前から欲しいものリストに入れていたので、\u003ca href=\"https://www.amazon.co.jp/gp/product/B00ZQNBTQK/\"\u003eAmazon.co.jp: ロジクール ワイヤレスキーボード タッチ キーボード K400pBK 国内正規品 : パソコン・周辺機器\u003c/a\u003eを買った。\u003c/p\u003e\n\u003cp\u003eパッド部分のタップでクリック動作になるのを抑制するには、専用のアプリを入れないといけないのがちょっといまいちポイント。\nどうせアプリで挙動変えられるなら、二本指左右スワイプで戻る進むも設定できればよかったのに。\u003c/p\u003e","tags":null,"title":"ロジクールK400p購入"},{"categories":null,"objectID":"4e36eed2109337291ab5e6e9aa8eb3ef","permalink":"https://umemak.github.io/blog/posts/2022/02/05_mdmml/","publish_date":"2022-02-05T00:00:00Z","summary":"\u003cp\u003eタイと繰り返しを実装した。\n繰り返しが入れ子になるとpanic起こすのでいつか直す。\u003c/p\u003e\n\u003cp\u003eテストが書きにくくなってきたので、もっと小さい単位で関数化していきたい。\u003c/p\u003e\n\u003cp\u003e和音も何とか実装した。\n前後の文字列によりpanicすることがあるのでいつか直す。\u003c/p\u003e\n\u003cp\u003eひとまず予定していたコマンド群は全部実装できた・・かな。\u003c/p\u003e","tags":null,"title":"MML実装"},{"categories":null,"objectID":"989c54b6e9178530edb956b09447e58c","permalink":"https://umemak.github.io/blog/posts/2022/02/04_mdmml/","publish_date":"2022-02-04T00:00:00Z","summary":"\u003cp\u003eおとといあげた実装したいコマンド群、あとはタイと繰り返しと和音を残すところまできた。\u003c/p\u003e\n\u003cp\u003eちょっと今の作りだとやりにくくなってきたからリファクタリングしたい気持ち。\u003c/p\u003e\n\u003cp\u003eノートオンオフを一つのメソッドにしてしまっているのを何とかしないとタイと和音ができない気がする。\u003c/p\u003e","tags":null,"title":"MML実装"},{"categories":null,"objectID":"dd31a99a36acb9f36f43983c4b2c7eff","permalink":"https://umemak.github.io/blog/posts/2022/02/03_inspiron/","publish_date":"2022-02-03T00:00:00Z","summary":"\u003cp\u003eInspironにDellのOSリカバリーツール使ったら、途中で先に進まなくなってWindows起動しなくなってしまった。\u003c/p\u003e\n\u003cp\u003eSurface Goでリカバリー用USB作って何とか復旧。\nただしWindows11Homeだと同じところで落ちたので、Windows11Sモード版で入れなおした。\u003c/p\u003e\n\u003ch2 id=\"設定\"\u003e設定\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eSモード解除\u003c/li\u003e\n\u003cli\u003eタッチパッドのスクロール方向変更\u003c/li\u003e\n\u003cli\u003e画面の拡大縮小の変更（150％→125％）\u003c/li\u003e\n\u003cli\u003eWindowsUpdateたくさん\u003c/li\u003e\n\u003cli\u003e変換無変換で入力モード切替\n\u003cul\u003e\n\u003cli\u003eIMEの設定→キーとタッチのカスタマイズ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"アプリケーション\"\u003eアプリケーション\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eChrome\u003c/li\u003e\n\u003cli\u003eGoogleDrive\u003c/li\u003e\n\u003cli\u003eVSCode\u003c/li\u003e\n\u003cli\u003eWSL2\u003c/li\u003e\n\u003cli\u003eObsidian\u003c/li\u003e\n\u003cli\u003eSteam\u003c/li\u003e\n\u003cli\u003eOBS\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eなお、タッチパッドが無反応になる現象は再インストールでも解消しなかった。\u003c/p\u003e","tags":null,"title":"Inspiron再セットアップ"},{"categories":null,"objectID":"06954711a2808f711c35ed02fd3d4bea","permalink":"https://umemak.github.io/blog/posts/2022/02/02_mdmml/","publish_date":"2022-02-02T00:00:00Z","summary":"\u003cp\u003eそれなりになってきたので、文法的なところもちゃんと決めていきたい。\u003c/p\u003e\n\u003cp\u003eMMLの標準化がされていないのは前に調べた通りなので、仕方ない。\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e記号\u003c/th\u003e\n          \u003cth\u003e意味\u003c/th\u003e\n          \u003cth\u003e備考\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003ecdefgab\u003c/td\u003e\n          \u003ctd\u003e音階\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e+, #\u003c/td\u003e\n          \u003ctd\u003e半音上げ\u003c/td\u003e\n          \u003ctd\u003e音階の直後に書く\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e-\u003c/td\u003e\n          \u003ctd\u003e半音下げ\u003c/td\u003e\n          \u003ctd\u003e音階の直後に書く\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e.\u003c/td\u003e\n          \u003ctd\u003e符点\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e^\u003c/td\u003e\n          \u003ctd\u003eタイ\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003er\u003c/td\u003e\n          \u003ctd\u003e休符\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003el\u003c/td\u003e\n          \u003ctd\u003e省略時音長\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eo\u003c/td\u003e\n          \u003ctd\u003eオクターブ\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u0026gt;\u003c/td\u003e\n          \u003ctd\u003e1オクターブ上げ\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u0026lt;\u003c/td\u003e\n          \u003ctd\u003e1オクターブ下げ\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003ev\u003c/td\u003e\n          \u003ctd\u003eベロシティ\u003c/td\u003e\n          \u003ctd\u003e0～127\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e@\u003c/td\u003e\n          \u003ctd\u003e音色\u003c/td\u003e\n          \u003ctd\u003e1～128\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e$\u003c/td\u003e\n          \u003ctd\u003eチャンネル\u003c/td\u003e\n          \u003ctd\u003e1～16\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003et\u003c/td\u003e\n          \u003ctd\u003eテンポ\u003c/td\u003e\n          \u003ctd\u003e1～960\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003ep\u003c/td\u003e\n          \u003ctd\u003eパンポット\u003c/td\u003e\n          \u003ctd\u003e0～64～127\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e[]\u003c/td\u003e\n          \u003ctd\u003e繰り返し\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e{}\u003c/td\u003e\n          \u003ctd\u003e和音\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eこんな感じかな。\u003c/p\u003e","tags":null,"title":"MML仕様"},{"categories":null,"objectID":"5c33d36461df5fa8a0eed2ea744ac810","permalink":"https://umemak.github.io/blog/posts/2022/02/01_mdmml/","publish_date":"2022-02-01T00:00:00Z","summary":"\u003cp\u003eSMFのこと何もわかっていなかった。\u003c/p\u003e\n\u003cp\u003e2トラック目の音が出ないのは、1トラック目のlength指定が間違っていたせい。\u003c/p\u003e\n\u003cp\u003e音色が変わらないのは、プログラムチェンジだけ書いてMSB/LSBがなかったせい。\u003c/p\u003e\n\u003cp\u003eとりあえず形になってきた。\u003c/p\u003e\n\u003cp\u003e参考ページ：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://maruyama.breadfish.jp/tech/smf/\"\u003eSMF(Standard MIDI File)フォーマット解説 | 技術的読み物 | FISH\u0026amp;BREAD\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.g200kg.com/jp/docs/tech/smf.html\"\u003eDTM技術情報 - 5.SMFフォーマット | g200kg Music \u0026amp; Software\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://izmi.com/midi/midi_ctrl_no.html\"\u003eMIDI:コントロール番号一覧 | DTM Solutions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dtm-solutions.jp/midi/midi_rpn_nrpn.html\"\u003eMIDI:RPNとNRPN | DTM Solutions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":null,"title":"mdmml"},{"categories":null,"objectID":"ee0ad3ca9b0f10a22981c58f51a42f55","permalink":"https://umemak.github.io/blog/posts/2022/01/31_mdmml/","publish_date":"2022-01-31T00:00:00Z","summary":"\u003cp\u003eとりあえず Timidity で再生できるSMFを吐き出すことはできるようになったのだけれど、なんか違う。\u003c/p\u003e\n\u003cp\u003e複数トラック作成しても、1トラック分しか再生されてないように聞こえる。\u003c/p\u003e\n\u003cp\u003eプログラムチェンジを入れても音色が変わらない。\u003c/p\u003e\n\u003cp\u003e何が間違っているのか・・\u003c/p\u003e","tags":null,"title":"mdmml"},{"categories":null,"objectID":"5f37e8743c0f93bd4332b9a3b0aca0c2","permalink":"https://umemak.github.io/blog/posts/2022/01/30_go_args/","publish_date":"2022-01-30T00:00:00Z","summary":"\u003cp\u003e昨日のgo runとgo testで挙動が違うのは、os.argsのインデックスが間違っていただけだった・・\u003c/p\u003e\n\u003cp\u003eos.args[0] はコンパイルしたバイナリで、欲しかったものはos.args[1] でとれた。\u003c/p\u003e\n\u003cp\u003eなんか初歩的なところで時間溶かした。。\u003c/p\u003e","tags":null,"title":"args"},{"categories":null,"objectID":"61e979b910e3960f33f638ecc7500658","permalink":"https://umemak.github.io/blog/posts/2022/01/30_hexdump/","publish_date":"2022-01-30T00:00:00Z","summary":"\u003cp\u003eSMF出力を確認したくて、\u003ccode\u003ehexdump\u003c/code\u003e使ったところ、2バイト単位の出力（しかもリトルエンディアン）なのね。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e-C\u003c/code\u003eオプション付ければ1バイト単位になるけど、右側にASCII文字も出る。\nこれのASCIIなし版が見たいんだけど、そういうオプションはないみたい。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ go run main.go ../../testdata/test.md | hexdump -C\r\n00000000  4d 54 68 64 00 00 00 06  00 01 00 03 03 c0 4d 54  |MThd..........MT|\r\n00000010  72 6b 00 00 00 17 00 ff  03 00 00 ff 51 03 06 8a  |rk..........Q...|\r\n...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003e-e\u003c/code\u003eで書式指定すればいける？と思ったけど、うまくいかない。\u003c/p\u003e","tags":null,"title":"hexdump"},{"categories":null,"objectID":"e18defa114f626418855dd39eccd6192","permalink":"https://umemak.github.io/blog/posts/2022/01/29_mdmml/","publish_date":"2022-01-29T00:00:00Z","summary":"\u003cp\u003e昨日マークダウンからMMLを抜き出すところをとりあえず作ったので、\n今日はMMLをSMF形式に変換するところを作る。\u003c/p\u003e\n\u003cp\u003eなかなか思ったように動いてくれない。。\u003c/p\u003e\n\u003cp\u003ego test と go run で挙動が違うのなんでだ・・\u003c/p\u003e","tags":null,"title":"mdmml"},{"categories":null,"objectID":"26ae42db864e8ee743036cd0d4ffa43e","permalink":"https://umemak.github.io/blog/posts/2022/01/28_mdmml/","publish_date":"2022-01-28T00:00:00Z","summary":"\u003cp\u003eマークダウンからテーブル部分をmmlとして読み込むところを作っていたら日付が変わってしまって毎日更新に穴があいてしまった。\u003c/p\u003e","tags":null,"title":"マークダウンでMMLを書く"},{"categories":null,"objectID":"6a8554e4260962d01cb8beb4953d125b","permalink":"https://umemak.github.io/blog/posts/2022/01/27_mdmml/","publish_date":"2022-01-27T00:00:00Z","summary":"\u003cp\u003emain.go と、とりあえず固定値を返すパッケージを書いた。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003epackage\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/umemak/mdmml\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eos\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eReadFile\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eos\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eArgs\u003c/span\u003e[\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;%+v\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#a6e22e\"\u003eos\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eExit\u003c/span\u003e(\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#a6e22e\"\u003emm\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emdmml\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eNewMDMML\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#a6e22e\"\u003eos\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eStdout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eWrite\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003emm\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSMF\u003c/span\u003e())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":null,"title":"マークダウンでMMLを書く"},{"categories":null,"objectID":"2d7d99ae52d2747821f03491693a2c4a","permalink":"https://umemak.github.io/blog/posts/2022/01/26_mdmml/","publish_date":"2022-01-26T00:00:00Z","summary":"\u003cp\u003eとりあえずリポジトリを作成して、VS CodeのDev Containerで開発できるようにした。\u003c/p\u003e\n\u003cp\u003etimidityはコンテナ内で実行しても出力デバイスが見つからないとかで動かなかった。\u003c/p\u003e\n\u003cp\u003eSMFの仕様は、Wikipedia見ても具体的にどうなのって感じで、脚注のリンク先も公式以外は消えてしまっていた。\nエンディアンとか久しぶりに見た。\u003c/p\u003e","tags":null,"title":"マークダウンでMMLを書く"},{"categories":null,"objectID":"d3ef0da442cc6a19f2afa415d8545e8e","permalink":"https://umemak.github.io/blog/posts/2022/01/25_mdmml/","publish_date":"2022-01-25T00:00:00Z","summary":"\u003cp\u003eどうせ方言が多いなら、ということで自分ならどうするか考えてみた。\u003c/p\u003e\n\u003cp\u003eで、タイトルのとおりマークダウン記法と組み合わせるといい感じになるんじゃないかなー、と。\u003c/p\u003e\n\u003cp\u003e具体的には\u003ccode\u003e|\u003c/code\u003eで区切れるようにする。\u003ccode\u003e|\u003c/code\u003eはマークダウンだとテーブルになるので、VS Codeとかでプレビューしたときに見やすくなるのではないか。\nテーブルの1列目をトラック名にすれば、複数トラックも縦に位置がそろって見やすい。\u003c/p\u003e","tags":null,"title":"MMLとマークダウンの組み合わせ"},{"categories":null,"objectID":"0cbff2809dbd5e05e468a00b1dc2220e","permalink":"https://umemak.github.io/blog/posts/2022/01/24_mml/","publish_date":"2022-01-24T00:00:00Z","summary":"\u003cp\u003eこんなページを見つけた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://music-school.mjapa.jp/mml_to_midi_converter.html\"\u003eMMLの楽譜を作成しMIDIやMP3に変換・再生 ネット音楽教室\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eこないだやりたいと思っていたことがすでに実現されていたとは。\u003c/p\u003e\n\u003cp\u003eところで、MMLって方言が結構あるようで、標準化はされてないのだろうか。\u003c/p\u003e\n\u003cp\u003e音階やオクターブ上下などはどこも同じだけど、コードとかループなんかは特に表記が揺れているところに思える。\u003c/p\u003e","tags":null,"title":"MML再生サービス"},{"categories":null,"objectID":"052add6992b9d60029fedbb8013160f9","permalink":"https://umemak.github.io/blog/posts/2022/01/23_mml/","publish_date":"2022-01-23T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/runvnc/music1\"\u003erunvnc/music1: A simple way to play with MML (Music Macro Language). Enter MML in text area and press play button.\u003c/a\u003e は、中身は\u003ca href=\"https://github.com/mohayonao/mml-emitter\"\u003emohayonao/mml-emitter: MML(Music Macro Language) event emitter for Web Audio API.\u003c/a\u003eで、そこから\u003ca href=\"https://github.com/mohayonao/mml-iterator\"\u003emohayonao/mml-iterator: MML(Music Macro Language) Iterator\u003c/a\u003eを使っているので、mml-iteratorを読んでみた。\u003c/p\u003e\n\u003cp\u003eとてもシンプルで読みやすいソースだと思った。\u003c/p\u003e\n\u003cp\u003e他のも読んでみよう。\u003c/p\u003e","tags":null,"title":"mml-iteratorのソースを読む"},{"categories":null,"objectID":"f97199737bdad195552c6b759e277783","permalink":"https://umemak.github.io/blog/posts/2022/01/22_wsl_midi/","publish_date":"2022-01-22T00:00:00Z","summary":"\u003cp\u003eMMLを再生するために何が必要か考えてみた。\u003c/p\u003e\n\u003cp\u003eMMLから直接再生できるのが良いけれど、大変そうなので既存の何かがあれば使っていきたい。\u003c/p\u003e\n\u003cp\u003emidiファイルを再生するアプリはTiMidityというのがよさそう。\u003c/p\u003e\n\u003cp\u003etimidityとSoundFontをインストール\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt install timidity freepats fluid-soundfont-gm fluid-soundfont-gs\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e参考\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://kemasoft.net/index.php#ke8617b0\"\u003eFrontPage - KemaSoft\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e適当なmidiファイルを流し込む\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ cat sample.mid | timidity -\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e鳴った。\u003c/p\u003e","tags":null,"title":"WSL2でmidi再生"},{"categories":null,"objectID":"e956494a6c168acf3bc3ba5850ca5114","permalink":"https://umemak.github.io/blog/posts/2022/01/21_mml/","publish_date":"2022-01-21T00:00:00Z","summary":"\u003cp\u003eMusic Macro Langurageの略。\u003c/p\u003e\n\u003cp\u003e音楽をテキストで作成するための記法。\u003c/p\u003e\n\u003cp\u003eベーマガに載っているリストをひたすら打ち込んでいた思い出。\n片手でもそこそこキーボード打てるのは、この時の経験があるからかもしれない（左手で本を抑えて、右手で入力してた）。\u003c/p\u003e\n\u003cp\u003eGitHub検索したらいくつかパーサーが公開されているけれど、Goでの実装は無いようなのでやってみようかな。\u003c/p\u003e","tags":null,"title":"MML"},{"categories":null,"objectID":"82233b6c61410f1fcd9711222577e071","permalink":"https://umemak.github.io/blog/posts/2022/01/20_wireless_debug/","publish_date":"2022-01-20T00:00:00Z","summary":"\u003cp\u003ePixel4でAndroid12の時の現象。ほかの組み合わせは未確認。\u003c/p\u003e\n\u003cp\u003eAndroidのワイヤレスデバッグを使おうとして\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ adb pair 192.168.***.***:nnnnn\r\nEnter pairing code: 999999\r\nFailed: Unable to start pairing client.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eこんなエラーになったとき\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ ping 192.168.***.***\r\nPING 192.168.***.*** (192.168.***.***) 56(84) bytes of data.\r\nFrom 192.168.***.*** icmp_seq=3 Destination Host Unreachable\r\n^C\r\n--- 192.168.***.*** ping statistics ---\r\n4 packets transmitted, 0 received, +1 errors, 100% packet loss, time 3093ms\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003epingも通らないなら\u003c/p\u003e\n\u003cp\u003eデバイスを再起動すると直る。\u003c/p\u003e","tags":null,"title":"ワイヤレスデバッグの接続ができないとき"},{"categories":null,"objectID":"b727e1594abc94161a398f77f085a18c","permalink":"https://umemak.github.io/blog/posts/2022/01/19_flutter_wsl/","publish_date":"2022-01-19T00:00:00Z","summary":"\u003cp\u003eAndroid実機でのワイヤレスデバッグができない件、Pixel4を再起動したらあっさり解決。\u003c/p\u003e\n\u003cp\u003e時間返して・・\u003c/p\u003e\n\u003cp\u003eということで、Flutterのでもアプリを実機で確認することができた。\u003c/p\u003e","tags":null,"title":"続々・FlutterをWSL2で開発したい"},{"categories":null,"objectID":"5f3e39c78b43e37161ddde9891830dd9","permalink":"https://umemak.github.io/blog/posts/2022/01/18_flutter_wsl/","publish_date":"2022-01-18T00:00:00Z","summary":"\u003cp\u003e昨日調べた中で手っ取り早そうな、デバイスは実機を使うパターンを試してみた。\u003c/p\u003e\n\u003cp\u003eVS CodeでFlutterデバッグ動かすところまでは行けたけど、デバイスの接続でエラーになってしまう。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ adb pair \u0026lt;ipaddress\u0026gt;:\u0026lt;port\u0026gt;\r\nEnter pairing code: \u0026lt;code\u0026gt;\r\nFailed: Unable to start pairing client.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eping打っても\u003ccode\u003eDestination Host Unreachable\u003c/code\u003eだし、WindowsのFirewall一時的にオフにしても変わらず。\u003c/p\u003e","tags":null,"title":"続・FlutterをWSL2で開発したい"},{"categories":null,"objectID":"07d50517976b68f56f50147d904507e1","permalink":"https://umemak.github.io/blog/posts/2022/01/17_flutter_wsl/","publish_date":"2022-01-17T00:00:00Z","summary":"\u003cp\u003eちょっと気分転換に。\u003c/p\u003e\n\u003cp\u003eSurface Go2では力不足だと思って遠慮していた、Flutterのローカル環境での開発をやりたい。\u003c/p\u003e\n\u003cp\u003e以前はFlutter Webを使っていたので、ホットリロードの恩恵が受けられずにいた。\u003c/p\u003e\n\u003cp\u003eInspironになってCore i7+16GBを手にした今、Androidエミュレータ使ってホットリロードしながらサクサク画面が作れるのではないか、と。\u003c/p\u003e","tags":null,"title":"FlutterをWSL2で開発したい"},{"categories":null,"objectID":"0e009d5fb13bdc46948aff6fad5fb0e8","permalink":"https://umemak.github.io/blog/posts/2022/01/16_firebase/","publish_date":"2022-01-16T00:00:00Z","summary":"\u003cp\u003eエラーメッセージ\u003ccode\u003eUncaught TypeError: Cannot read properties of undefined (reading 'initializeApp')\u003c/code\u003eでぐぐって出てきた\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/59050195/uncaught-typeerror-cannot-read-property-initializeapp-of-undefined\"\u003ejavascript - Uncaught TypeError: Cannot read property \u0026lsquo;initializeApp\u0026rsquo; of undefined - Stack Overflow\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eを参考にしたら、エラー解消して一歩進んだ。\n上記回答にも書いてあるが、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://firebase.google.com/docs/web/modular-upgrade#about_the_upgrade_process\"\u003eUpgrade from version 8 to the modular Web SDK  |  Firebase Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eドキュメントに書いてある（以前自分も見つけてたやつだけど、ふむふむ互換パッケージが用意されてるのね、程度できちんと読んでなかった）。\u003c/p\u003e","tags":null,"title":"続々・Firebase認証をvueで使う"},{"categories":null,"objectID":"7945b9882bb483ff22f9ad9c26057550","permalink":"https://umemak.github.io/blog/posts/2022/01/15_firebase/","publish_date":"2022-01-15T00:00:00Z","summary":"\u003cp\u003eどうもうまくいかない。\nライブラリのバージョンの問題なのか何か見落としていることがあるのか。\u003c/p\u003e\n\u003cp\u003eAmplifyのGraphQLもそうだけど、こういう、本質的ではないと（個人的には）思うところで躓いて先に進めないのはとてもストレスになる。\u003c/p\u003e","tags":null,"title":"続・Firebase認証をvueで使う"},{"categories":null,"objectID":"5007c2e0860ec7af1046120fe41de7ff","permalink":"https://umemak.github.io/blog/posts/2022/01/14_firebase_auth/","publish_date":"2022-01-14T00:00:00Z","summary":"\u003cp\u003e環境が整ってきたので、また再開。\u003c/p\u003e\n\u003cp\u003e前回はAmplifyからFirebaseへの差し替えは意外と面倒そうだというところで終わっていた。\u003c/p\u003e\n\u003cp\u003eこのあたりの記事が参考になりそう。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://devsakaso.com/firebase-vue-js-create-login-form/\"\u003eFirebase+Vue.js(Vue3 Composition API)でログイン/サインアップフォームを作成する | devsakaso\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/kasu/articles/70a77bd2d1ee01\"\u003eVue3でFirabaseログイン\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/isamua/articles/firebase-vue3-tutorial\"\u003eFriendlyEats-vue3 - Firebase9 Vue.js 3 Turorial\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":null,"title":"Firebase認証をvueで使う"},{"categories":null,"objectID":"013d71e9c615347f4f9dbdcdebb74353","permalink":"https://umemak.github.io/blog/posts/2022/01/14_antiv/","publish_date":"2022-01-14T00:00:00Z","summary":"\u003cp\u003eInspiron13にプリインストールされていた、マカフィー関連をアンインストールした。\nMicrosoft Difenderで十分だと思うし、いちいちユーザー登録させようとするのが嫌。\u003c/p\u003e","tags":null,"title":"マカフィーアンインストール"},{"categories":null,"objectID":"59bddd79b8248dcac5d75dfc66322df8","permalink":"https://umemak.github.io/blog/posts/2022/01/13_wsl2docker/","publish_date":"2022-01-13T00:00:00Z","summary":"\u003cp\u003eWSL2でFirebaseの作業再開しようとしたら、npmやらなにやら入ってない（Surfaceのほうは過去にインストールしてたらしい）ので、\ndocker入れてみることにした。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.docker.com/engine/install/ubuntu/\"\u003ehttps://docs.docker.com/engine/install/ubuntu/\u003c/a\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt-get remove docker docker-engine docker.io containerd runc\r\n$ sudo apt-get update\r\n$ sudo apt-get install \\\r\n    ca-certificates \\\r\n    curl \\\r\n    gnupg \\\r\n    lsb-release\r\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\r\n$ echo \\\r\n  \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\\r\n  $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null\r\n$ sudo apt-get update\r\n$ sudo apt-get install docker-ce docker-ce-cli containerd.io\r\n$ sudo service docker start\r\n$ sudo docker run hello-world\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ca href=\"https://docs.docker.com/engine/install/linux-postinstall/\"\u003ehttps://docs.docker.com/engine/install/linux-postinstall/\u003c/a\u003e\u003c/p\u003e","tags":null,"title":"WSL2でdocker"},{"categories":null,"objectID":"210a909b3c037d9783a4f2bc7cfea106","permalink":"https://umemak.github.io/blog/posts/2022/01/12_inspiron13/","publish_date":"2022-01-12T00:00:00Z","summary":"\u003cp\u003eInspiron13が到着した。意外と簡素な梱包。\u003c/p\u003e\n\u003cp\u003eOSははじめてのWindows11。\nとりあえずChromeとVS Codeインストール。\u003c/p\u003e\n\u003cp\u003eWSL2もインストール。terminalを管理者権限で起動して、\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ewsl --install\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eタッチパッドが頻繁に反応なくなるのはちょっと。。\u003c/p\u003e\n\u003cp\u003eキーボード、全体的にもう少し左に寄せてもよかったのでは。\u003ccode\u003e無変換\u003c/code\u003e押そうとして\u003ccode\u003ealt\u003c/code\u003eになることがしばしば。\nこれは慣れの問題かな。\u003c/p\u003e","tags":null,"title":"Inspiron13購入"},{"categories":null,"objectID":"192bfc5409f963c841223a2de82fb927","permalink":"https://umemak.github.io/blog/posts/2022/01/11_css/","publish_date":"2022-01-11T00:00:00Z","summary":"\u003cp\u003eHugoのテーマ、\u003ca href=\"https://themes.gohugo.io/themes/inkblotty/\"\u003eInkblotty\u003c/a\u003eを使わせてもらっているのだけれど、codeとリンクが見えにくいと思って、GitHubっぽくしてみた。\u003c/p\u003e","tags":null,"title":"HugoのCSSいじり"},{"categories":null,"objectID":"e4c80a9938e25cff1f54b19b1ddb0b9c","permalink":"https://umemak.github.io/blog/posts/2022/01/10_firebase_auth/","publish_date":"2022-01-10T00:00:00Z","summary":"\u003cp\u003eFirebaseのAuth組み込み、参考にしているWebサイトの例が\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eimport firebase from \u0026#34;firebase\u0026#34;;\r\n\r\nfirebase.auth().hogehoge\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eで、真似して実装しても\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eThis dependency was not found:\r\n\r\n* firebase in ./src/router/index.js\r\n\r\nTo install it, you can run: npm install --save firebase\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eエラーになって悩んでいた。\u003c/p\u003e\n\u003cp\u003e結局、\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eimport { getAuth } from \u0026#34;firebase/auth\u0026#34;;\r\n\r\ngetAuth().hogehoge\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eで書くと通ることに気づいた。\u003c/p\u003e\n\u003cp\u003eこれはJavaScript モジュール形式の Firebase JS SDK バージョン 9（v9 SDK）というものらしい。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://firebase.google.com/docs/web/setup?hl=ja#add-sdks-initialize\"\u003ehttps://firebase.google.com/docs/web/setup?hl=ja#add-sdks-initialize\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eたしかにインストールしたSDKは、firebase@9.6.2 だった。\u003c/p\u003e","tags":null,"title":"Firebase v9 SDK"},{"categories":null,"objectID":"70e2a352844e1cda8b62a891482ed70b","permalink":"https://umemak.github.io/blog/posts/2022/01/09_vue/","publish_date":"2022-01-09T00:00:00Z","summary":"\u003cp\u003eVueはtemplateとscriptがひとつのファイルに同居しているので（少なくとも今回作っていたアプリはそう）、AmplifyからFirebaseに乗り換えようとしたときは、結局scriptの方は書き換えないといけない。\ntemplateとscriptがまとめて管理できることが良くも悪くも特徴なんだな、と思った。\u003c/p\u003e","tags":null,"title":"VueアプリのAmplifyからFirebaseの移行"},{"categories":null,"objectID":"1ed79d1982a3253896dfd1d567509d0d","permalink":"https://umemak.github.io/blog/posts/2022/01/08_newpc/","publish_date":"2022-01-08T00:00:00Z","summary":"\u003cp\u003eアマゾンの欲しいものリスト眺めてたら、Inspiron14が10%オフになってて、買ってしまおうかと思った。\u003c/p\u003e\n\u003cp\u003eいったん落ち着いてDELLの直販見に行ったら、アマゾンのよりもストレージ容量上でも値段が若干安くなっていた。\u003c/p\u003e\n\u003cp\u003eじゃあ直販から買うかと思ったけど、どうせ直販から買うならもともと狙っていたInspiron13でもよいのでは？\nと思い、Inspiron13を買った。\u003c/p\u003e","tags":null,"title":"新しいPC注文"},{"categories":null,"objectID":"49049de3b568e07ea16192a73b675ca2","permalink":"https://umemak.github.io/blog/posts/2022/01/07_newpc/","publish_date":"2022-01-07T00:00:00Z","summary":"\u003cp\u003eローカルでもちゃんと開発できるようにしたいと思ったら、Serface Go 2では厳しいことがわかった。\u003c/p\u003e\n\u003cp\u003eそもそも持ち歩くことが多い可能性があったから、小型軽量を優先していたわけで、出歩くことが激減した昨今、小型軽量は優先度が下がってしまった。\u003c/p\u003e\n\u003cp\u003eで、代わりに優先度が上がってきたのが、性能。CPUはCore i5以上、メモリは16GBは欲しい。\n画面も13インチ以上で最近はやりのWUXGAが良さそう。\u003c/p\u003e","tags":null,"title":"新しいPC検討"},{"categories":null,"objectID":"7b16a8f155c0d13a8e0b342150fbc9cc","permalink":"https://umemak.github.io/blog/posts/2022/01/06_firebase_auth2/","publish_date":"2022-01-06T00:00:00Z","summary":"\u003cp\u003erouterでログイン状態のチェック入れて遷移先の制御などしていたけれど、状態の取得方法がFirebaseとAmplifyで違っているようで、単純に置き換えるだけということにはならなそう、というのが昨日からの学び。\u003c/p\u003e\n\u003cp\u003eもしかしてFirebaseの場合はstore経由で状態管理しなくてもよい？\u003c/p\u003e\n\u003cp\u003eだいぶ作りが変わるような。。\u003c/p\u003e","tags":null,"title":"続・認証の置き換え"},{"categories":null,"objectID":"afc84a8013737ec000965533b7d1a20c","permalink":"https://umemak.github.io/blog/posts/2022/01/05_firebase_auth/","publish_date":"2022-01-05T00:00:00Z","summary":"\u003cp\u003eAmplify AuthをFirebase Authに置きかえる。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://firebase.google.com/docs/auth/web/firebaseui?hl=ja\"\u003eFirebaseUI でウェブアプリに簡単にログイン機能を追加する  |  Firebase Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/okdyy75/items/24e78fdd0f12742b9e82\"\u003eFirebaseUI + vueでログイン処理 - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ npm install firebaseui --save\r\n$ npm install firebaseui-ja --save\n\u003c/code\u003e\u003c/pre\u003e","tags":null,"title":"認証の置き換え"},{"categories":null,"objectID":"7097f7f913691ba6441bca74c160e541","permalink":"https://umemak.github.io/blog/posts/2022/01/04_firebase/","publish_date":"2022-01-04T00:00:00Z","summary":"\u003cp\u003eAmplifyで挫折したお題を、Firebaseで作り比べてみる。\u003c/p\u003e\n\u003cp\u003eFirebaseでプロジェクトを作成、前回と同じリポジトリでCodespacesを起動。\u003c/p\u003e\n\u003cp\u003e「ウェブアプリへのFirebaseの追加」手順に沿ってインストール。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ npm install firebase\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esrc/main.js のAmplify関連で追加した部分を削除、Firebaseのコードをコピペ。\u003c/p\u003e\n\u003cp\u003eHosting用にCLIをインストール。\u003c/p\u003e","tags":null,"title":"Firebaseでやってみる"},{"categories":null,"objectID":"0784e7f43efa969bfa1afac202c8181f","permalink":"https://umemak.github.io/blog/posts/2022/01/02_mbaas/","publish_date":"2022-01-02T00:00:00Z","summary":"\u003cp\u003e機能やSDKの対応言語をまとめようと思って始めたけれど、Firebaseが数歩リードしている印象。\u003c/p\u003e\n\u003cp\u003eAWS AmplifyやAzure App Servicesでも同じようなことはできるかもだけど、ひとつのサービスとして揃っている（既存のサービスを組み合わせて都度構築する必要がない）のが強みだと思う。\u003c/p\u003e","tags":null,"title":"MBaaSの比較"},{"categories":null,"objectID":"336c8b1be8a06f15fde2e024a329d14b","permalink":"https://umemak.github.io/blog/posts/2022/01/01_mbaas/","publish_date":"2022-01-01T00:00:00Z","summary":"\u003cp\u003e一月ほどAmplify触ってみて、Firebaseのほうが使い勝手よさそうだなと思った。\u003c/p\u003e\n\u003cp\u003eほかにこのジャンル、Mobile Backend as a Service（MBaaS）はどんなのがあるのか気になったので調べてみた。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Mobile_backend_as_a_service\"\u003eMobile backend as a service - Wikipedia\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qeee.jp/magazine/articles/17082\"\u003eMBaaSでアプリ開発をスピーディに！モバイル開発サービス6選 | QEEE\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eニフクラmobilebackend\u003c/li\u003e\n\u003cli\u003eFirebase\u003c/li\u003e\n\u003cli\u003eAppPot\u003c/li\u003e\n\u003cli\u003eIGAWorks\u003c/li\u003e\n\u003cli\u003eAWS Amplify\u003c/li\u003e\n\u003cli\u003eAzure App Service\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eなるほど、ちょっとこの辺、比較してみようかな。\u003c/p\u003e","tags":null,"title":"MBaaSを調べる"},{"categories":null,"objectID":"d2b81bea28406bfd1af29c02b077eed7","permalink":"https://umemak.github.io/blog/posts/2021/12/31_ac/","publish_date":"2021-12-31T00:00:00Z","summary":"\u003cp\u003e今日で1か月。よく続いた。\u003c/p\u003e\n\u003cp\u003eアプリは完成までたどり着かなかったけど、学びは得られた。\u003c/p\u003e\n\u003cp\u003eGraphQL理解すればまた評価変わるかもしれないけど、AmplifyよりFirebaseのほうがとっつきやすいと感じた。\u003c/p\u003e\n\u003cp\u003e自分の環境ではモックがまともに使えなかったのも痛い。モックが使えなくても、pushが速ければ気にならなかったかもだけど。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"まとめ"},{"categories":null,"objectID":"90acea164d751078e83e9d72e95c85b6","permalink":"https://umemak.github.io/blog/posts/2021/12/30_ac/","publish_date":"2021-12-30T00:00:00Z","summary":"\u003cp\u003e昨日の続き。\u003c/p\u003e\n\u003cp\u003eAND以外に、ORも同様のエラーでNGだった。\nANDやORを使わなければ想定通りのフィルタになるので、間違ってないと思うんだけど。\u003c/p\u003e\n\u003cp\u003e何度目かの詰み。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"GraphQLでAND条件検索"},{"categories":null,"objectID":"0492ec5b450c90940014a0a346f5f3fa","permalink":"https://umemak.github.io/blog/posts/2021/12/29_ac/","publish_date":"2021-12-29T00:00:00Z","summary":"\u003cp\u003eエントリー処理ができるようになったので、同じようなノリでキャンセル処理も実装する。\u003c/p\u003e\n\u003cp\u003e同じノリなのになぜかエラーが出る、と思ったらエントリーの方もエラーが出ていた。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eVariable \u0026#39;id\u0026#39; has coerced Null value for NonNull type \u0026#39;ID!\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eeventIDとuserIDをキーに検索したいのに、idを指定しろと言われている。\ngetEventUserではなくlistEventUserにfilter指定したらいけそう。\n\u003ca href=\"https://docs.amplify.aws/lib/graphqlapi/query-data/q/platform/js/#compound-filters\"\u003eAPI (GraphQL) - Fetch data - JavaScript - AWS Amplify Docs\u003c/a\u003e\nと思ったけどand指定したらなんかエラー。。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"キャンセル処理入れる"},{"categories":null,"objectID":"7c9e9060d5ce25461076b4d8b93a1563","permalink":"https://umemak.github.io/blog/posts/2021/12/28_ac/","publish_date":"2021-12-28T00:00:00Z","summary":"\u003cp\u003eデータがある状態でデータ構造の変更をかけたせいか、挙動が怪しくなったので一度DynamoDBのテーブルを削除した。\u003c/p\u003e\n\u003cp\u003eその後、\u003ccode\u003eamplify update api\u003c/code\u003e、\u003ccode\u003eapmlify push\u003c/code\u003eを実行。\nしたらAppSyncのupdateでエラー終了してしまった。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eamplify delete\u003c/code\u003eで丸ごと削除してから\u003ccode\u003eamplify push\u003c/code\u003eしたら\u003ccode\u003eNo Amplify backend project files detected within this folder.\u003c/code\u003eになった。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"DB再作成"},{"categories":null,"objectID":"96333655a877c54699b824a9dbbcde85","permalink":"https://umemak.github.io/blog/posts/2021/12/27_ac/","publish_date":"2021-12-26T00:00:00Z","summary":"\u003cp\u003eリレーション張ろうとするからややこしくなるのであって、IDだけ持たせればとりあえずやりたいことは実現できるのでは？\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"データ構造再考"},{"categories":null,"objectID":"858a471808892b41989591e470805c49","permalink":"https://umemak.github.io/blog/posts/2021/12/26_ac/","publish_date":"2021-12-26T00:00:00Z","summary":"\u003ch2 id=\"やったこと\"\u003eやったこと\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAmplifyのチュートリアル\u003c/li\u003e\n\u003cli\u003eCodespacesでの開発\u003c/li\u003e\n\u003cli\u003eVSCode+WSLでの開発\u003c/li\u003e\n\u003cli\u003eVSCode+EC2での開発\u003c/li\u003e\n\u003cli\u003eVSCode+RaspberryPi4での開発\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"わかったこと\"\u003eわかったこと\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAmplifyはFirebaseみたいなもの\u003c/li\u003e\n\u003cli\u003eVueはわかりやすい\u003c/li\u003e\n\u003cli\u003eデータベースはGraphQLわからないとつらい\u003c/li\u003e\n\u003cli\u003eクラウド環境でAmplify mockを使うのは難しい\u003c/li\u003e\n\u003cli\u003eラズパイ（32bit）ではAmplify mockを使えない\u003c/li\u003e\n\u003cli\u003eSurface Go 2ではこのレベルの開発作業は厳しい\u003c/li\u003e\n\u003cli\u003eクラウドに開発環境を移行するにはまだ壁がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"つぎにやること\"\u003eつぎにやること\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e強いPCが欲しい\u003c/li\u003e\n\u003cli\u003eGraphQLを理解する\u003c/li\u003e\n\u003c/ul\u003e","tags":["AdventCalendar2021"],"title":"ここまでのまとめ"},{"categories":null,"objectID":"17b815eabdbe4fccfc842d932a783a92","permalink":"https://umemak.github.io/blog/posts/2021/12/25_ac/","publish_date":"2021-12-25T00:00:00Z","summary":"\u003cp\u003eSurface Go2 で厳しいので、EC2インスタンス立ててやってみる。\nとりあえず無料枠のt2.microでAmazonLinux。\u003c/p\u003e\n\u003cp\u003egitが入ってなかったのでインストール。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo yum update\n$ sudo yum install git\n$ git --version\ngit version 2.32.0\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003enpmも入っていなかった。\n\u003ca href=\"https://docs.aws.amazon.com/ja_jp/sdk-for-javascript/v2/developer-guide/setting-up-node-on-ec2-instance.html\"\u003eチュートリアル: Amazon EC2 インスタンスでの Node.js のセットアップ - AWS SDK for JavaScript\u003c/a\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash\n$ . ~/.nvm/nvm.sh\n$ nvm install node\n$ npm -v\n8.3.0\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e作ったソースダウンロードしてきてAmplifyのセットアップ。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"EC2で開発"},{"categories":null,"objectID":"acd6d089949f2ca198582bf7e308d08c","permalink":"https://umemak.github.io/blog/posts/2021/12/25_ac2/","publish_date":"2021-12-25T00:00:00Z","summary":"\u003cp\u003e寝る前にEC2で試してダメで、起きたらラズパイがあること思い出したので、ラズパイでも試してみる。\u003c/p\u003e\n\u003cp\u003e久しぶりの起動だし、OSクリーンインストールからやったら結構時間かかる。こんなにかかったっけ。\u003c/p\u003e\n\u003cp\u003e毎日のようにAmplify設定やっているとだいぶ慣れてくる。\nJavaはWSLのときのコマンドで入れる。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eadd-apt-repository コマンドが見つかりません\u003c/code\u003eエラーが出たので、インストールする。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"Raspberry pi 4でやってみる"},{"categories":null,"objectID":"4745581b2178519efcf73f9906273bf3","permalink":"https://umemak.github.io/blog/posts/2021/12/24_ac/","publish_date":"2021-12-24T00:00:00Z","summary":"\u003cp\u003eイベントにエントリーするときにユーザーテーブルとイベントテーブルの関連付けするので、それぞれのテーブルにデータがないといけない。\u003c/p\u003e\n\u003cp\u003eイベントテーブルの作成と編集はできるようになっているので、ユーザーテーブルにデータ登録するところを作る。\u003c/p\u003e\n\u003cp\u003eサインインのタイミングで登録できれば良いのだけれど、とりあえずログイン時にテーブルチェックして、なければ登録するようにする。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"ユーザーテーブルにデータ登録する"},{"categories":null,"objectID":"c6b50d512dc8c497017d7c4b1c280f5c","permalink":"https://umemak.github.io/blog/posts/2021/12/23_ac/","publish_date":"2021-12-23T00:00:00Z","summary":"\u003cp\u003e最初に試したチュートリアルもCodespaceでやってたのを思い出して、まだ残っていたのでaws-exporter.jsを持ってくることができた。\u003c/p\u003e\n\u003cp\u003eで、aws_appsync_graphqlEndpoint はAWSコンソールから確認できるだろう、と見に行ったら、バックエンドの設定をもってくるっぽいコマンドが。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"壊れたファイルを取り戻す"},{"categories":null,"objectID":"ceac070a1b85a1e6dfa1f3443d4e3168","permalink":"https://umemak.github.io/blog/posts/2021/12/22_ac/","publish_date":"2021-12-22T00:00:00Z","summary":"\u003cp\u003eデータ構造試行錯誤するのに、毎回amplify pushすると時間がかかって面倒だなーと思っていたら、ローカルで動かせるモックがあることを知った。\nCodespacesでまともに動くかわからないけど、やってみる。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ amplify mock api\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e動いた。けど、アプリから接続しに行くのがIPアドレス指定で、Codespacesの公開ポートになってない。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"Amplify mock使ってみる"},{"categories":null,"objectID":"b24d54db11f9e9f63f92d1f15bd416f8","permalink":"https://umemak.github.io/blog/posts/2021/12/21_ac/","publish_date":"2021-12-21T00:00:00Z","summary":"\u003cp\u003emanyToMany だとエントリーとキャンセルの状態を持たせるのができなさそうなので、やっぱり関連を持つテーブルを作ったほうがよさそう（おとといの設計\u003c/p\u003e\n\u003cp\u003eそしてレコード追加の書き方がわからない・・\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"データ構成続き2"},{"categories":null,"objectID":"a445f69ed61a79217468f8b22c30a2ac","permalink":"https://umemak.github.io/blog/posts/2021/12/20_ac/","publish_date":"2021-12-20T00:00:00Z","summary":"\u003cp\u003e昨日、多対多の関連を持つテーブルを定義したけれど、manyToManyの指定で実現できるのではないか。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.amplify.aws/cli/graphql/data-modeling/#many-to-many-relationship\"\u003eAPI (GraphQL) - Data modeling - AWS Amplify Docs\u003c/a\u003e\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"データ構成続き"},{"categories":null,"objectID":"a20c745f29a65d02ceea12d2951e57b1","permalink":"https://umemak.github.io/blog/posts/2021/12/19_ac/","publish_date":"2021-12-19T00:00:00Z","summary":"\u003cp\u003eテーブル内に配列を持たせるのではなく、当初考えていたように、関連を管理するテーブルを別に用意したほうが良いのではないだろうか。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ amplify push\n? Do you want to update code for your updated GraphQL API Yes\n? Do you want to generate GraphQL statements (queries, mutations and subscription) based on your schema types?\nThis will overwrite your current graphql queries, mutations and subscriptions Yes\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e気軽に全部Yesしたけど、結構待たされる。\u003c/p\u003e\n\u003cp\u003eGraphQL（というかDynamoDB？）のデータ設計は最初にしっかりやらないといけないのかなぁ。\n作りながら試行錯誤したい派。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"データ構造の見直し"},{"categories":null,"objectID":"008a9858e06036793389fb164e1fb913","permalink":"https://umemak.github.io/blog/posts/2021/12/18_ac/","publish_date":"2021-12-18T00:00:00Z","summary":"\u003cp\u003eイベントにエントリーできるようにする。\u003c/p\u003e\n\u003cp\u003e参加者をイベント内の配列で持たせようとしたのだけれど、追加の方法がわからない。。\u003c/p\u003e\n\u003cp\u003earray.push() で行けるだろうと思ったけどエラー。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"エントリー機能追加"},{"categories":null,"objectID":"7ae9a576c1db2369d3f33679f5765520","permalink":"https://umemak.github.io/blog/posts/2021/12/17_ac/","publish_date":"2021-12-17T00:00:00Z","summary":"\u003cp\u003eIDの指定ができるようになったので、それをキーに更新ができるようにする。\u003c/p\u003e\n\u003cp\u003eここはそれほど悩むことなく実装できた。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"データ更新機能"},{"categories":null,"objectID":"e4eadde7704ed34902e599ff266aa1cb","permalink":"https://umemak.github.io/blog/posts/2021/12/16_ac/","publish_date":"2021-12-16T00:00:00Z","summary":"\u003cp\u003eイベント作成と一覧が確認できたので、個別表示と編集のためのパラメータを渡す方法を調べる。\u003c/p\u003e\n\u003cp\u003e参考：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.amplify.aws/lib/graphqlapi/mutate-data/q/platform/js/\"\u003eAPI (GraphQL) - Create, update, delete data - JavaScript - AWS Amplify Docs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAPI.graphql の戻り値を見ればよさそうだけど、長いIDだ、、\nまあとりあえずはこれで。\u003c/p\u003e\n\u003cp\u003erouter.js にパラメータ追加して、\u003ccode\u003eprops: true\u003c/code\u003eも設定。\u003c/p\u003e\n\u003cp\u003eprops設定が抜けていて、\u0026ldquo;Variable \u0026lsquo;id\u0026rsquo; has coerced Null value for NonNull type \u0026lsquo;ID!\u0026rsquo;\u0026ldquo;エラーに悩まされた。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"作成したレコードのID取得"},{"categories":null,"objectID":"20bb7c5f84ca425dee52090bc8f77268","permalink":"https://umemak.github.io/blog/posts/2021/12/15_ac/","publish_date":"2021-12-15T00:00:00Z","summary":"\u003cp\u003e昨日、CORSのエラーで躓いていたものの解決ができず。\u003c/p\u003e\n\u003cp\u003eチュートリアルでやったときも出てたのか、出てなかったのか今となっては確認が面倒。。\u003c/p\u003e\n\u003cp\u003e問題の切り分けをするため、hostingに上げてみる。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ amplify add hosting\n? Select the plugin module to execute Hosting with Amplify Console (Managed hosting with custom domains, Continuous deployment)\n? Choose a type Manual deployment\n\n$ amplify publish\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eエラーは出ない。やっぱりCodespacesで実行したときの問題らしい。だけど毎回publishするのは時間もかかるしコストもかかるから避けたい。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"CORS続き"},{"categories":null,"objectID":"b632deaeb262a87a12a359227e415d75","permalink":"https://umemak.github.io/blog/posts/2021/12/14_ac/","publish_date":"2021-12-14T00:00:00Z","summary":"\u003cp\u003eデータの格納先ができたので、画面からデータ登録できるようにしてみる。\u003c/p\u003e\n\u003cp\u003e参考：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.amplify.aws/start/getting-started/data-model/q/integration/vue/#connect-frontend-to-api\"\u003eTutorial - Connect API and database to the app - Vue - AWS Amplify Docs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eCodespacesで\u003ccode\u003enpm run serve\u003c/code\u003eで実行してアクセスすると、ブラウザのコンソールに\u003ccode\u003eInvalid Host/Origin header\u003c/code\u003eが出ている。\u003c/p\u003e\n\u003cp\u003epackage.json を修正して回避。codespaces前提だけど。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e    \u0026#34;serve\u0026#34;: \u0026#34;vue-cli-service serve --public ${CODESPACE_NAME}.githubpreview.dev\u0026#34;,\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e参考：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/tetsuya-zama/items/d6ffc28ed6d67abab037\"\u003eAWS Cloud9上でwebpack-dev-serverでデバッグしようとするとInvalid Host header - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e次に出たのはCORSのエラー。\n今日はここまで。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"データ登録やってみる"},{"categories":null,"objectID":"471a35db4e2e67136f3124e4e5b47e62","permalink":"https://umemak.github.io/blog/posts/2021/12/13_ac/","publish_date":"2021-12-13T00:00:00Z","summary":"\u003cp\u003eデータ構造を考えたので、それをスキーマ情報に落としていく。\u003c/p\u003e\n\u003cp\u003eの前にamplifyコマンド\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ amplify add api\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e? Select from one of the below mentioned services: GraphQL\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e? Here is the GraphQL API that we will create. Select a setting to edit or \u003cspan style=\"color:#66d9ef\"\u003econtinue\u003c/span\u003e Continue\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e? Choose a schema template: One-to-many relationship \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003ee.g., “Blogs” with “Posts” and “Comments”\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e⚠️  WARNING: your GraphQL API currently allows public create, read, update, and delete access to all models via an API Key. To configure PRODUCTION-READY authorization rules, review: https://docs.amplify.aws/cli/graphql/authorization-rules\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGraphQL schema compiled successfully.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eEdit your schema at /workspaces/eventsite/amplify/backend/api/eventsite/schema.graphql or place .graphql files in a directory at /workspaces/eventsite/amplify/backend/api/eventsite/schema\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✔ Do you want to edit the schema now? \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eY/n\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e · yes\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e? Choose your default editor: Visual Studio Code\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eEdit the file in your editor: /workspaces/eventsite/amplify/backend/api/eventsite/schema.graphql\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✅ Successfully added resource eventsite locally\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e✅ Some next steps:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;amplify push\u0026#34;\u003c/span\u003e will build all your local backend resources and provision it in the cloud\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;amplify publish\u0026#34;\u003c/span\u003e will build all your local backend and frontend resources \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e you have hosting category added\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e and provision it in the cloud\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eschema.graphql ファイルを編集してpush。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"schemaファイルを作る"},{"categories":null,"objectID":"12657f939a64d0a402ef1af1e18ff406","permalink":"https://umemak.github.io/blog/posts/2021/12/12_ac/","publish_date":"2021-12-12T00:00:00Z","summary":"\u003cp\u003e各画面で必要な項目からデータ構造を作る。\u003c/p\u003e\n\u003ch2 id=\"event\"\u003eevent\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e項目名\u003c/th\u003e\n          \u003cth\u003ename\u003c/th\u003e\n          \u003cth\u003etype\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eID\u003c/td\u003e\n          \u003ctd\u003eid\u003c/td\u003e\n          \u003ctd\u003eint\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eイベント名\u003c/td\u003e\n          \u003ctd\u003etitle\u003c/td\u003e\n          \u003ctd\u003estring\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e開催日時\u003c/td\u003e\n          \u003ctd\u003estart\u003c/td\u003e\n          \u003ctd\u003etimestamp\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e開催場所\u003c/td\u003e\n          \u003ctd\u003eplace\u003c/td\u003e\n          \u003ctd\u003estring\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e公開期間From\u003c/td\u003e\n          \u003ctd\u003eopen\u003c/td\u003e\n          \u003ctd\u003edatetime\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e公開期間To\u003c/td\u003e\n          \u003ctd\u003eclose\u003c/td\u003e\n          \u003ctd\u003edatetime\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e作成者\u003c/td\u003e\n          \u003ctd\u003eauthor\u003c/td\u003e\n          \u003ctd\u003eint -\u0026gt; user.id\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"user\"\u003euser\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e項目名\u003c/th\u003e\n          \u003cth\u003ename\u003c/th\u003e\n          \u003cth\u003etype\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eID\u003c/td\u003e\n          \u003ctd\u003eid\u003c/td\u003e\n          \u003ctd\u003eint\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eユーザー名\u003c/td\u003e\n          \u003ctd\u003eusername\u003c/td\u003e\n          \u003ctd\u003estring\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"eventuser\"\u003eeventUser\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e項目名\u003c/th\u003e\n          \u003cth\u003ename\u003c/th\u003e\n          \u003cth\u003etype\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eID\u003c/td\u003e\n          \u003ctd\u003eid\u003c/td\u003e\n          \u003ctd\u003eint\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eイベントID\u003c/td\u003e\n          \u003ctd\u003eeventid\u003c/td\u003e\n          \u003ctd\u003eint -\u0026gt; event.id\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eユーザーID\u003c/td\u003e\n          \u003ctd\u003euserid\u003c/td\u003e\n          \u003ctd\u003eint -\u0026gt; user.id\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"upload\"\u003eupload\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e項目名\u003c/th\u003e\n          \u003cth\u003ename\u003c/th\u003e\n          \u003cth\u003etype\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eID\u003c/td\u003e\n          \u003ctd\u003eid\u003c/td\u003e\n          \u003ctd\u003eint\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eイベントID\u003c/td\u003e\n          \u003ctd\u003eeventid\u003c/td\u003e\n          \u003ctd\u003eint -\u0026gt; event.id\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e資料URL\u003c/td\u003e\n          \u003ctd\u003eurl\u003c/td\u003e\n          \u003ctd\u003estring\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"comment\"\u003ecomment\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e項目名\u003c/th\u003e\n          \u003cth\u003ename\u003c/th\u003e\n          \u003cth\u003etype\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eID\u003c/td\u003e\n          \u003ctd\u003eid\u003c/td\u003e\n          \u003ctd\u003eint\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eイベントID\u003c/td\u003e\n          \u003ctd\u003eeventid\u003c/td\u003e\n          \u003ctd\u003eint -\u0026gt; event.id\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eユーザーID\u003c/td\u003e\n          \u003ctd\u003euserid\u003c/td\u003e\n          \u003ctd\u003eint -\u0026gt; user.id\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eコメント\u003c/td\u003e\n          \u003ctd\u003ecomment\u003c/td\u003e\n          \u003ctd\u003estring\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e投稿日時\u003c/td\u003e\n          \u003ctd\u003epostedAt\u003c/td\u003e\n          \u003ctd\u003edatetime\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eとりあえずこんな感じかな。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"データ構造を考える"},{"categories":null,"objectID":"f6ff9b7e869a3931b43d466d2ce1012e","permalink":"https://umemak.github.io/blog/posts/2021/12/11_ac/","publish_date":"2021-12-11T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://docs.amplify.aws/start/getting-started/auth/q/integration/vue/#authentication-with-amplify\"\u003ehttps://docs.amplify.aws/start/getting-started/auth/q/integration/vue/#authentication-with-amplify\u003c/a\u003e\nこの手順\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eamplify add auth\namplify push\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eログイン情報を保存するために、storeを使用する\u003c/p\u003e\n\u003cp\u003e参考：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/minato-naka/items/4e4dcfea2bf5231f6c86\"\u003e【AWS Amplify × Vue.js 簡単サーバーレスアプリ構築チュートリアル】③ Authでユーザー登録、ログイン機能実装編 - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enpm install vuex@4\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e次はデータの読み書き\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"authを追加"},{"categories":null,"objectID":"d52398e6989e2e96c91c87a6cb8797c8","permalink":"https://umemak.github.io/blog/posts/2021/12/10_ac/","publish_date":"2021-12-10T00:00:00Z","summary":"\u003cp\u003e各画面のファイルができたので、必要な項目を並べていく作業。\nuiflow作ったときにおおむね書いておいたので、それをタグに落としていく。\u003c/p\u003e\n\u003cp\u003e一通り書いて、ボタンで画面遷移もするようにできた。\u003c/p\u003e\n\u003cp\u003e次はログイン機能をつける（チュートリアルでやったやつ）。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"画面を作る"},{"categories":null,"objectID":"5cccd2bb95af7b0ed19099fb8f0b8f03","permalink":"https://umemak.github.io/blog/posts/2021/12/09_ac/","publish_date":"2021-12-09T00:00:00Z","summary":"\u003cp\u003e参考にしたページ\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/yagi405/items/e41484fdc3795934172a\"\u003eVue.js 3 入門 「ルーティング」（Vue Router） - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこのままだと動かなかったので、vue-routerをバージョンアップ。最初インストールしたときはバージョン指定しなかったせいか3系が入っていた。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enpm install vue-router@4\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eこれで画面が表示されるようになった。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"画面モック作成続き"},{"categories":null,"objectID":"5d59f9244f255c3e8d0addb87115b485","permalink":"https://umemak.github.io/blog/posts/2021/12/08_ac/","publish_date":"2021-12-08T00:00:00Z","summary":"\u003cp\u003e昨日洗い出した画面をとりあえず書いてみる。\u003c/p\u003e\n\u003cp\u003e画面遷移にvue-routerを使うので、インストールしておく。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enpm install vue-router\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e各画面は、\u003ccode\u003esrc/views/\u003c/code\u003eに置く。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e $ ls -1 src/views/\nCancelConfirm.vue\nEntryConfirm.vue\nEventCreate.vue\nEventDetail.vue\nEventEdit.vue\nEventSearch.vue\nLogin.vue\nMyPage.vue\nTop.vue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eファイル作るところまでで今日は時間切れ。。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"画面モックを作る"},{"categories":null,"objectID":"41a0ce182a37fb7bda61358cfc777efd","permalink":"https://umemak.github.io/blog/posts/2021/12/07_ac/","publish_date":"2021-12-07T00:00:00Z","summary":"\u003cp\u003e初日にあげた機能をもとに、必要な画面とそれらの関連を考える。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003eイベントページの作成と編集\u003c/li\u003e\n\u003cli\u003eイベントの検索\u003c/li\u003e\n\u003cli\u003e参加エントリー、キャンセル\u003c/li\u003e\n\u003cli\u003eコメント投稿\u003c/li\u003e\n\u003c/ul\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"https://qiita.com/hirokidaichi/items/ff54a968bdd7bcc50d42\"\u003eUI Flow図\u003c/a\u003eで書いてみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/eventsite/blob/main/doc/uiflow.txt\"\u003ehttps://github.com/umemak/eventsite/blob/main/doc/uiflow.txt\u003c/a\u003e\n\u003cfigure\u003e\u003cimg src=\"https://raw.githubusercontent.com/umemak/eventsite/main/doc/uiflow.svg\"\u003e\n\u003c/figure\u003e\n\u003c/p\u003e\n\u003cp\u003eとりあえずこんな感じかな。\n足りないところがあればその都度足していく方針で。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"画面遷移を考える"},{"categories":null,"objectID":"201c9fd5549209f17972a23ec994e1d7","permalink":"https://umemak.github.io/blog/posts/2021/12/06_ac/","publish_date":"2021-12-06T00:00:00Z","summary":"\u003cp\u003eチュートリアルで雰囲気をつかんだので、実際に使うリポジトリを作って、必要なパッケージなどセットアップする。\u003c/p\u003e\n\u003cp\u003eGitHub Codespacesでやっていく。\u003c/p\u003e\n\u003cp\u003e基本的には、デフォルトの選択肢で次々進めてOK。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enpm install -g @aws-amplify/cli\namplify configure\nnpm install -g @vue/cli\nvue create .\n\u0026gt; vue3 を選択\nnpm install\nnpm run serve --open\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eここまででvueの動作確認ができる。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eamplify init\nnpm install aws-amplify @aws-amplify/ui-components\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eここまででAmplifyが使用可能になった。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"リポジトリを作って初期化する"},{"categories":null,"objectID":"5cff4697fdacb2b643d2aefb905ab8e3","permalink":"https://umemak.github.io/blog/posts/2021/12/05_ac/","publish_date":"2021-12-05T00:00:00Z","summary":"\u003cp\u003e昨日のチュートリアルでかかった費用、0.03ドルくらい。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"Amplify続き"},{"categories":null,"objectID":"8ed610da07c7e4f842a6f284b1758c86","permalink":"https://umemak.github.io/blog/posts/2021/12/04_ac/","publish_date":"2021-12-04T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://docs.amplify.aws/start/q/integration/vue/\"\u003eGetting started - Vue - AWS Amplify Docs\u003c/a\u003eをやってみた。\u003c/p\u003e\n\u003cp\u003eGitHubにリポジトリ作って、Codespaceで開いて。\u003c/p\u003e\n\u003cp\u003e小一時間で認証付きのToDoアプリができた。\u003c/p\u003e\n\u003cp\u003e意外と待ち時間が長かったのは、最初だけなのかCodespaceの力不足なのか。\nたぶんCloudFormationの実行待ち時間な気がするから、最初だけだと思っておく。\u003c/p\u003e\n\u003cp\u003eアーキテクチャはこれで全部賄える気がしてきたので、Amplifyで行けるとこまでやってみようと思う。\nFirebaseなら無料なところが、AWSのお試し期間過ぎてるから課金されそうなのが気になるけど、、\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"Amplify Tutorialやってみた"},{"categories":null,"objectID":"a9b87d8420ef3b3f2f1b14308fc349ef","permalink":"https://umemak.github.io/blog/posts/2021/12/03_ac/","publish_date":"2021-12-03T00:00:00Z","summary":"\u003cp\u003e昨日は使うツールなどを考えた。\u003c/p\u003e\n\u003cp\u003eAWSのAmplifyを使う予定でいたら、なんかすごいのが発表されてた。\n\u003ca href=\"https://www.publickey1.jp/blog/21/awswebaws_amplify_studioaws_reinvent_2021.html\"\u003e［速報］AWS、ローコードでWebのフロントエンドを開発できる「AWS Amplify Studio」発表。バックエンド管理機能も統合。AWS re:Invent 2021 － Publickey\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e生成されるコードはReactらしい。今回はVue.jsを触ってみる目的もあるので、Amplify Studioはまた今度。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://aws.amazon.com/jp/amplify/\"\u003eAWS Amplify（アプリケーションの構築とデプロイ）| AWS\u003c/a\u003e\nこれ見ると、必要そうな機能は用意されてる気がする。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"Amplify使ってみる"},{"categories":null,"objectID":"a9442090c150fbc96ed90971d12bea98","permalink":"https://umemak.github.io/blog/posts/2021/12/02_ac/","publish_date":"2021-12-02T00:00:00Z","summary":"\u003cp\u003e昨日は、作るものとその機能をざっくり決めた。\u003c/p\u003e\n\u003cp\u003e2日目の今日は、アーキテクチャなど考えたい。\u003c/p\u003e\n\u003cp\u003eWEBアプリなので、フロントエンドとバックエンドAPIとデータベースかな。\u003c/p\u003e\n\u003cp\u003eフロントは\u003ca href=\"https://nextjs.org/\"\u003eNext.js\u003c/a\u003eとか\u003ca href=\"https://nuxtjs.org/ja/\"\u003eNuxt\u003c/a\u003eとかその辺だろうか。\nNext.jsは前に触ったことあるので、今回はNuxtにしてみようかな。\u003c/p\u003e\n\u003cp\u003eバックエンドAPIは最近追えていない\u003ca href=\"https://deno.land/\"\u003eDeno\u003c/a\u003eでどうだろう。\n作り方によってはAPI層不要になるかも？\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"サービス開発日記"},{"categories":null,"objectID":"876422eabb1515f5106e4e371be76fbd","permalink":"https://umemak.github.io/blog/posts/2021/12/01_ac/","publish_date":"2021-12-01T00:00:00Z","summary":"\u003cp\u003e期間内にアプリを作ってみたい。\nその経過を毎日記事にしたらいい感じになるのではないだろうか。\u003c/p\u003e\n\u003cp\u003e1日目は、どんなものを作るか考えた。\u003c/p\u003e\n\u003cp\u003eイベント管理サイトを作ってみようと思う。\u003c/p\u003e\n\u003cp\u003e主催者用と参加者用。\nイベントページを介してコミュニケーションをとる。\u003c/p\u003e\n\u003cp\u003e機能は、\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eイベントページの作成と編集\u003c/li\u003e\n\u003cli\u003eイベントの検索\u003c/li\u003e\n\u003cli\u003e参加エントリー、キャンセル\u003c/li\u003e\n\u003cli\u003eコメント投稿\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eとりあえずこんな感じで。\u003c/p\u003e","tags":["AdventCalendar2021"],"title":"Advent Calendarやってみる"},{"categories":null,"objectID":"058dbd0767399c5bafd82fd47934a213","permalink":"https://umemak.github.io/blog/posts/2021/07/18_clouds/","publish_date":"2021-07-18T00:00:00Z","summary":"\u003cp\u003eAWSで構築しているシステムをAzureと並行稼働させることはできるのか？GCPは？という疑問を解消するために調べてみる。\u003c/p\u003e\n\u003ch2 id=\"サービス比較\"\u003eサービス比較\u003c/h2\u003e\n\u003cp\u003eまずはAWS, Azure, GCPのサービス比較。\u003c/p\u003e\n\u003cp\u003eサービス名先頭の AWS, Amazon, Azure, Cloud(GCP) は省略。\u003c/p\u003e\n\u003ch3 id=\"サーバーレスコンピューティング\"\u003eサーバーレスコンピューティング\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eAWS\u003c/th\u003e\n          \u003cth\u003eAzure\u003c/th\u003e\n          \u003cth\u003eGCP\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ca href=\"https://aws.amazon.com/jp/lambda/\"\u003eLambda\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca href=\"https://azure.microsoft.com/ja-jp/services/functions/\"\u003eFunctions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca href=\"https://cloud.google.com/functions?hl=ja\"\u003eFunctions\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eJava, Go, PowerShell, Node.js, C#, Python, Ruby\u003c/td\u003e\n          \u003ctd\u003eC#, JavaScript(Node.js), F#, Java, PowerShell, Python, TypeScript\u003c/td\u003e\n          \u003ctd\u003eNode.js, Python, Go, Java, .NET Core(C#, F#), Ruby, PHP\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ca href=\"https://aws.amazon.com/jp/lambda/edge/\"\u003eLambda@Edge\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eNode.js, Python\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ca href=\"https://aws.amazon.com/cloudfront/\"\u003eCloudFront Functions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eJavaScript\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"cdn\"\u003eCDN\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eAWS\u003c/th\u003e\n          \u003cth\u003eAzure\u003c/th\u003e\n          \u003cth\u003eGCP\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ca href=\"https://aws.amazon.com/jp/cloudfront/\"\u003eCloudFront\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca href=\"https://azure.microsoft.com/ja-jp/services/cdn/\"\u003eContent Delivery Network\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca href=\"https://cloud.google.com/cdn?hl=ja\"\u003eCDN\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"コードリポジトリ\"\u003eコードリポジトリ\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eAWS\u003c/th\u003e\n          \u003cth\u003eAzure\u003c/th\u003e\n          \u003cth\u003eGCP\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ca href=\"https://aws.amazon.com/jp/codecommit/\"\u003eCodeCommit\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca href=\"https://azure.microsoft.com/ja-jp/services/devops/repos/\"\u003eRepos\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca href=\"https://cloud.google.com/source-repositories/?hl=ja\"\u003eSource Repositories\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"cicd\"\u003eCI/CD\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eAWS\u003c/th\u003e\n          \u003cth\u003eAzure\u003c/th\u003e\n          \u003cth\u003eGCP\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ca href=\"https://aws.amazon.com/jp/codepipeline/\"\u003eCodePipeline\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca href=\"https://azure.microsoft.com/ja-jp/services/devops/pipelines/\"\u003ePipelines\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca href=\"https://cloud.google.com/build?hl=ja\"\u003eBuild\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"iac\"\u003eIaC\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eAWS\u003c/th\u003e\n          \u003cth\u003eAzure\u003c/th\u003e\n          \u003cth\u003eGCP\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ca href=\"https://aws.amazon.com/jp/cloudformation/\"\u003eCloudFormation\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca href=\"https://azure.microsoft.com/ja-jp/features/resource-manager/\"\u003eResource Manager\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca href=\"https://cloud.google.com/deployment-manager/docs?hl=ja\"\u003eDeployment Manager\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cul\u003e\n\u003cli\u003eAzure Resource Managerを簡易操作するためのツール、Azure Building Blocksというものもある。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"検討\"\u003e検討\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFaaSの対応言語が異なっている。共通で使えるのはJava、Node.js、C#、Python。\n\u003cul\u003e\n\u003cli\u003eLambda@Edgeも使っているなら、Node.jsかPythonしかない。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCloudFormation の資産を Azure や GCP に移行できるのか\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.terraform.io/\"\u003eTerraform\u003c/a\u003eという選択肢もあり\u003c/li\u003e\n\u003cli\u003eサーバーレス中心なら\u003ca href=\"https://www.serverless.com/\"\u003eserverless framework\u003c/a\u003eを検討してもよいかも\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"参考\"\u003e参考\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/hayao_k/items/906ac1fba9e239e08ae8\"\u003eAWS/Azure/GCPサービス比較 2021.07 - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.topgate.co.jp/aws-azure-gcp\"\u003e3大クラウドAWS、Azure、GCPの機能を比較したら見えてきたサービスごとの違いと特徴とは？ | 株式会社トップゲート\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dev.classmethod.jp/articles/amazon-cloudfront-functions-release/\"\u003eエッジで爆速コード実行！CloudFront Functionsがリリースされました！ | DevelopersIO\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eCloudFront FunctionsとLambda@Edgeの比較あり\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/devops/use-aws-codecommit-to-mirror-an-azure-devops-repository-using-an-azure-devops-pipeline/\"\u003eUse AWS CodeCommit to mirror an Azure DevOps repository using an Azure DevOps pipeline | AWS DevOps Blog\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eAzureからAWSにミラーする方法。リポジトリを持っている側のFunctionsでgit mirrorする感じ。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/jp/blogs/news/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale/\"\u003eCloudFront Functions の導入 – 任意の規模において低レイテンシーでコードをエッジで実行 | Amazon Web Services ブログ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://future-architect.github.io/articles/20200219/\"\u003eGCP連載#10 Terraform ではなくCloud Deployment Manager を使ってみよう | フューチャー技術ブログ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.microsoft.com/ja-jp/azure/architecture/example-scenario/serverless/serverless-multicloud\"\u003eServerless Framework を使用したマルチクラウド ソリューション - Azure Example Scenarios | Microsoft Docs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["aws","azure","gcp"],"title":"クラウドサービス比較"},{"categories":null,"objectID":"24041cdd4fa8aa63d78984fdad4eb3fb","permalink":"https://umemak.github.io/blog/posts/2021/04/17_minikube_mysql/","publish_date":"2021-04-17T00:00:00Z","summary":"\u003cp\u003eMacでやったらMySQLの起動時にエラーで落ちてしまったので、Windowsでどうなるか試す。\u003c/p\u003e\n\u003cp\u003e基本的には公式のドキュメントを参照。\n\u003ca href=\"https://kubernetes.io/ja/docs/tasks/run-application/run-single-instance-stateful-application/\"\u003ehttps://kubernetes.io/ja/docs/tasks/run-application/run-single-instance-stateful-application/\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"munikubeインストール\"\u003emunikubeインストール\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ewinget install minikube\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"minikube起動\"\u003eminikube起動\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eminikube start\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ kubectl get nodes\nNAME       STATUS   ROLES                  AGE   VERSION\nminikube   Ready    control-plane,master   73s   v1.20.2\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"マニフェストファイル作成\"\u003eマニフェストファイル作成\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/blog/blob/master/content/posts/2021/04/mysql.yaml\"\u003emysql.yaml\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"デプロイ\"\u003eデプロイ\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ kubectl apply -f mysql.yaml \nservice/mysql created\ndeployment.apps/mysql created\npersistentvolumeclaim/mysql-pv-claim created\npersistentvolume/mysql-pv-volume created\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ kubectl get pods -l app=mysql\nNAME                     READY   STATUS    RESTARTS   AGE\nmysql-68579b78bb-qcqww   1/1     Running   0          5m33s\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e動いてるねぇ。。\u003c/p\u003e\n\u003ch2 id=\"後片付け\"\u003e後片付け\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ kubectl.exe delete -f mysql.yaml\nservice \u0026#34;mysql\u0026#34; deleted\ndeployment.apps \u0026#34;mysql\u0026#34; deleted\npersistentvolumeclaim \u0026#34;mysql-pv-claim\u0026#34; deleted\npersistentvolume \u0026#34;mysql-pv-volume\u0026#34; deleted\n$ minikube stop\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eMacのほう、MySQLのコマンドライン色々指定したのがまずかったのかなぁ。\u003c/p\u003e","tags":["windows","minikube","mysql"],"title":"WindowsのminikubeでMySQLを動かす"},{"categories":null,"objectID":"7ad7b4b6b7286620e11cf01797a0d07d","permalink":"https://umemak.github.io/blog/posts/2021/03/20_ghactions_mysql/","publish_date":"2021-03-20T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"../../../2020/12/14_github_actions_mysql\"\u003e以前書いた\u003c/a\u003e、GitHub Actionsでインストール済みMySQLを使う方法で起動したMySQLは、\u003ccode\u003elower_case_table_names\u003c/code\u003eが\u003ccode\u003e0\u003c/code\u003eになっている（Linuxではこれがデフォルト）。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003elower_case_table_names\u003c/code\u003eを\u003ccode\u003e1\u003c/code\u003eに変更したければ、\u003ccode\u003e/etc/mysql/mysql.conf.d/mysqld.cnf\u003c/code\u003eに\u003ccode\u003elower_case_table_names = 1\u003c/code\u003eを追記して起動すれば良いだろうと気軽に考えてやってみたところ、MySQLが起動せず。\u003c/p\u003e","tags":["github","actions","mysql"],"title":"GitHub Actions の MySQL で lower_case_table_names を変更する"},{"categories":null,"objectID":"ee4da81df4fbab4d637d51cab8f25e23","permalink":"https://umemak.github.io/blog/posts/2021/01/11_settings/","publish_date":"2021-01-11T00:00:00Z","summary":"\u003cp\u003eコマンドラインアプリ起動時の設定をするときに、コマンドライン引数、環境変数、設定ファイルどれを優先するのが一般的なのか気になったのでググった結果のメモ。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://ayasuda.github.io/pages/note_configuration_order_at_command_line.html\"\u003ehttps://ayasuda.github.io/pages/note_configuration_order_at_command_line.html\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eまず設定ファイルを読み、環境変数が設定されていれば上書き、コマンドラインで指定されていればさらに上書き。ということでコマンドライン引数が最優先ということが分かった。\u003c/p\u003e","tags":["programmning"],"title":"コマンドラインの設定優先度について調べた"},{"categories":null,"objectID":"f1317aade047096cae02d6314022176d","permalink":"https://umemak.github.io/blog/posts/2020/12/14_github_actions_mysql/","publish_date":"2020-12-14T00:00:00Z","summary":"\u003cp\u003eGitHub ActionsでMySQLを使ったCIを回したかった。\u003c/p\u003e\n\u003cp\u003eググると、servicesでmysqlコンテナを立ち上げる方法がヒットしたが、コンテナの起動に45秒くらいかかっていて、ちょっと長いなー、と。\nそこでmysqlをインストールしたらどうなんだろうと思い、そういえばmysqlコマンドラインツールは最初から入っていたけど、他に何入っているんだろうと調べたら、MySQL Serverもインストールされているのを見つけた。\n\u003ca href=\"https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md\"\u003ehttps://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md\u003c/a\u003e\u003c/p\u003e","tags":["github","actions","mysql"],"title":"GitHub Actions で MySQL を使う"},{"categories":null,"objectID":"c33ae29d366be1f548fc6c1504136b18","permalink":"https://umemak.github.io/blog/posts/2020/11/28_go_interface/","publish_date":"2020-11-28T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003egolintの\u003ccode\u003eexported %s %s returns unexported type %s, which can be annoying to use\u003c/code\u003eを解消したい。\u003c/li\u003e\n\u003cli\u003einterfaceを定義して回避するのが一般的？らしい。\u003c/li\u003e\n\u003cli\u003estructが入れ子になっていて、内側のstructにメソッドが定義されていると、\u003ccode\u003ecannot call pointer method\u003c/code\u003eとなり呼べない。\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://play.golang.org/p/yvWspYJnYSv\"\u003ehttps://play.golang.org/p/yvWspYJnYSv\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003epointerを返してあげれば良い。\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://play.golang.org/p/l_l4tMAD-Bd\"\u003ehttps://play.golang.org/p/l_l4tMAD-Bd\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eシングルトンの場合\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://play.golang.org/p/cHgNNMoznFB\"\u003ehttps://play.golang.org/p/cHgNNMoznFB\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["go"],"title":"Goのinterfaceを学ぶ"},{"categories":null,"objectID":"23e96d7a86b15b916bda89151e02cba7","permalink":"https://umemak.github.io/blog/posts/2020/11/07_docker_swarm_mode/","publish_date":"2020-11-07T00:00:00Z","summary":"\u003cp\u003e複数の仮想サーバーでdocker-composeで起動したコンテナの管理をする方法を調べていて、swarm modeにたどり着いたので調べたことを残す。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eコマンドでモード切替\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e有効化：\u003ccode\u003edocker swarm init\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e無効化：\u003ccode\u003edocker swarm leave --force\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eシングルノードでも試せる\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eシングルノードの場合は、init時の\u003ccode\u003e--advertise-addr\u003c/code\u003e指定は不要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDocker swarmとswarm modeは別\u003c/p\u003e","tags":["docker"],"title":"Docker swarm modeを知る"},{"categories":null,"objectID":"d06b2c6f7f934c86a3d2e2d34199a91d","permalink":"https://umemak.github.io/blog/posts/2020/09/02_hello_flutter/","publish_date":"2020-09-02T00:00:00Z","summary":"\u003cp\u003eSurface Go 2 に Flutter Web 環境をインストールしたのでメモ。\u003c/p\u003e\n\u003cp\u003e基本的には\u003ca href=\"https://flutter.dev/docs/get-started/install\"\u003e公式手順\u003c/a\u003eに沿って進める。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003egitからclone\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ cd ~/workspace\n$ git clone https://github.com/flutter/flutter.git -b stable\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e環境変数PATHに追加\nユーザー環境変数の最後に追加した\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eflutter doctor実行\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[√] Flutter (Channel stable, 1.20.2, on Microsoft Windows [Version 10.0.19041.450], locale ja-JP)\n[X] Android toolchain - develop for Android devices\n    X Unable to locate Android SDK.\n      Install Android Studio from: https://developer.android.com/studio/index.html\n      On first launch it will assist you in installing the Android SDK components.\n      (or visit https://flutter.dev/docs/get-started/install/windows#android-setup for detailed instructions).\n      If the Android SDK has been installed to a custom location, set ANDROID_SDK_ROOT to that location.\n      You may also want to add it to your PATH environment variable.\n\n[!] Android Studio (not installed)\n[!] VS Code (version 1.48.2)\n    X Flutter extension not installed; install from\n      https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter\n[!] Connected device\n    ! No devices available\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eこの時点ではこれでOK\u003c/p\u003e","tags":["flutter"],"title":"Flutterに入門"},{"categories":null,"objectID":"ba4588b3007f3c5b536c6490ca795f71","permalink":"https://umemak.github.io/blog/posts/2020/08/01_hello_rust/","publish_date":"2020-08-01T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://misonln41.hateblo.jp/entry/2020/02/12/232853\"\u003eなぜDiscordはGoからRustへ移行するのか - MISONLN41\u0026rsquo;s Blog\u003c/a\u003e を読んで興味がわいたのでインストールしてみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.rust-lang.org/ja/tools/install\"\u003eRust をインストール - Rustプログラミング言語\u003c/a\u003e のWSLのコマンドで。インストール完了後、WSLログインしなおさないと\u003ccode\u003erustc\u003c/code\u003eコマンド使えなかった。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ rustc --version\nrustc 1.45.1 (c367798cf 2020-07-26)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eファイル作って\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ vim hello.rs\nfn main() {\n    println!(\u0026#34;Hello, world!\u0026#34;);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eコンパイル＆実行\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ rustc hello.rs\n$ ./hello\nHello, world!\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eできた。\u003c/p\u003e","tags":["rust"],"title":"Rust入門"},{"categories":null,"objectID":"99b5d98e95e52929a25f85d6e490f525","permalink":"https://umemak.github.io/blog/posts/2020/07/22_raspi_expo/","publish_date":"2020-07-22T00:00:00Z","summary":"\u003cp\u003eWSLでいろいろ試してみたものの、ポート関連のエラーで動かないので、Raspberry piで試してみた。\u003c/p\u003e\n\u003ch2 id=\"rubyインストール\"\u003eRubyインストール\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHomebrewインストールしようとしたときに、Rubyがないエラーで先に進まなくなってしまったので先にインストールしておく。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erbenv\u003c/code\u003eを使ってみる。\u003c/li\u003e\n\u003cli\u003e途中でパッケージが足りないエラーが出るので、\u003ccode\u003elibssl-dev\u003c/code\u003eと\u003ccode\u003elibreadline-dev\u003c/code\u003eを入れる。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt-get install -y libssl-dev libreadline-dev\n$ git clone https://github.com/rbenv/rbenv.git ~/.rbenv\n$ echo \u0026#39;export PATH=\u0026#34;$HOME/.rbenv/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc\n$ echo \u0026#39;eval \u0026#34;$(rbenv init -)\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc\n$ git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build\n$ rbenv rehash\n$ rbenv install --list\n$ rbenv install 2.6.6\n$ rbenv global 2.6.6\n$ rbenv rehash\n$ ruby --version\nruby 2.6.6p146 (2020-03-31 revision 67876) [aarch64-linux]\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"homebrewインストール\"\u003eHomebrewインストール\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e手順は先日\u003ca href=\"../20_wsl_brew\"\u003eWSLにインストール\u003c/a\u003eしたときと同様。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ /bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\u0026#34;\n$ sudo apt-get install build-essential\n$ echo \u0026#39;eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\u0026#39; \u0026gt;\u0026gt; /home/pi/.profile\n$ eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\n$ brew --version\nHomebrew 2.4.8\nHomebrew/linuxbrew-core (git revision 39fddf7; last commit 2020-07-21)\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"nodebrewインストール\"\u003eNodebrewインストール\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eこれも先日と同様。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ brew install nodebrew\n$ mkdir -p ~/.nodebrew/src\n$ nodebrew install stable\n$ nodebrew ls\n$ nodebrew use v14.6.0\n$ vi ~/.profile\nexport PATH=$HOME/.nodebrew/current/bin:$PATH\n$ source ~/.profile\n$ node -v\nv14.6.0\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"expoインストール\"\u003eExpoインストール\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eグローバルに\u003ccode\u003eexpo-cli\u003c/code\u003eをインストールしないで、init後にaddしている。\u003c/li\u003e\n\u003cli\u003eテンプレートは\u003ccode\u003etabs (TypeScript)\u003c/code\u003eを選択した。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ cd workspace/\n$ npx expo-cli init expotest\n$ cd expotest/\n$ npm install --save-dev expo-cli\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003enpm start\u003c/code\u003e後、しばらくすると以下のエラーが出るので、上限を上げる。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eError: ENOSPC: System limit for number of file watchers reached, watch \u0026#39;/home/pi/workspace/expotest/node_modules/metro/node_modules/string-width/node_modules/ansi-regex\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ cat /proc/sys/fs/inotify/max_user_watches\n8192\n$ sudo su\n# echo fs.inotify.max_user_watches= 65536 | tee -a /etc/sysctl.conf\nfs.inotify.max_user_watches= 65536\n# cat /proc/sys/fs/inotify/max_user_watches\n8192\n# sysctl -p\nfs.inotify.max_user_watches = 65536\n# cat /proc/sys/fs/inotify/max_user_watches\n65536\n# exit\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"expo起動\"\u003eExpo起動\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ npm start\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e表示されたQRコードを、iOSやAndroidのアプリで開くと表示される。\u003c/li\u003e\n\u003cli\u003e初回はJavaScriptのビルドが走る（アプリの画面下部に進捗が表示される）。\u003c/li\u003e\n\u003cli\u003eそれ以降はソースを変更するとほぼリアルタイムで反映される。\u003c/li\u003e\n\u003c/ul\u003e","tags":["expo","raspberry-pi"],"title":"Raspberry pi4 で expo を動かす"},{"categories":null,"objectID":"b15811f3b32b1194faf5dd24defbd1d7","permalink":"https://umemak.github.io/blog/posts/2020/07/20_wsl_brew/","publish_date":"2020-07-20T00:00:00Z","summary":"\u003cp\u003eNode.jsのバージョン管理したくなったので。\u003c/p\u003e\n\u003ch2 id=\"homebrewのインストール\"\u003eHomebrewのインストール\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://brew.sh/index_ja\"\u003ehttps://brew.sh/index_ja\u003c/a\u003e にしたがって。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ /bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\u0026#34;\n$ sudo apt-get install build-essential\n$ echo \u0026#39;eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\u0026#39; \u0026gt;\u0026gt; /home/`whoami`/.profile\n$ eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\n$ brew --version\nHomebrew 2.4.8\nHomebrew/linuxbrew-core (git revision 09353; last commit 2020-07-19)\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"インストール済みnodejsパッケージの削除\"\u003eインストール済みnodejsパッケージの削除\u003c/h2\u003e\n\u003cp\u003eaptで入れていたnodejsを削除。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt remove nodejs\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"nodebrewのインストール\"\u003enodebrewのインストール\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ brew install nodebrew\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"nodejsのインストール\"\u003enodejsのインストール\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ nodebrew install v12.18.2\nFetching: https://nodejs.org/dist/v12.18.2/node-v12.18.2-linux-x64.tar.gz\nWarning: Failed to create the file\nWarning: /home/umemak/.nodebrew/src/v12.18.2/node-v12.18.2-linux-x64.tar.gz:\nWarning: No such file or directory\ncurl: (23) Failed writing body (0 != 978)\n\ndownload failed: https://nodejs.org/dist/v12.18.2/node-v12.18.2-linux-x64.tar.gz\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eディレクトリ掘ってみる\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ mkdir -p ~/.nodebrew/src\n$ nodebrew install v12.18.2\nFetching: https://nodejs.org/dist/v12.18.2/node-v12.18.2-linux-x64.tar.gz\n################################################################################################################# 100.0%\nInstalled successfully\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e使用バージョン指定\u003c/p\u003e","tags":["wsl"],"title":"WSL2にbrewをつかってnodejsのインストールをする"},{"categories":null,"objectID":"c82a09437c2b9905ddaee6c80861afba","permalink":"https://umemak.github.io/blog/posts/2020/07/20_wsl_date/","publish_date":"2020-07-20T00:00:00Z","summary":"\u003cp\u003e\u003ccode\u003eapt update\u003c/code\u003eしたときにエラーになった場合の解決策のひとつ。\nWSL側の時計が大幅にずれているパターン。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/microsoft/WSL/issues/4245\"\u003ehttps://github.com/microsoft/WSL/issues/4245\u003c/a\u003e を参考に。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# hwclock -s\n\u003c/code\u003e\u003c/pre\u003e","tags":["wsl"],"title":"WSLの時計を合わせる"},{"categories":null,"objectID":"aff1345b7cbdff0efe04281bafcbd5fb","permalink":"https://umemak.github.io/blog/posts/2020/07/12_docker_win10/","publish_date":"2020-07-12T00:00:00Z","summary":"\u003cp\u003e最初にSurface Go2をセットアップしたとき、WSL2のほうにDockerをインストールしていた。\n使う時だけ起動すればいいと思っていたが、意外と面倒（sudoしてデーモン起動させるのとか）に感じていた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://code.visualstudio.com/blogs/2020/07/01/containers-wsl\"\u003eVSCode blogの記事\u003c/a\u003eを見て、Windows側にDocker Desktopをインストールするのもありかと思い、やってみた。\u003c/p\u003e","tags":["win10","docker"],"title":"Windows10にDocker Desktopをインストール"},{"categories":null,"objectID":"523892253b368ce656b1a3ba31ba2381","permalink":"https://umemak.github.io/blog/posts/2020/07/08_awscli_wsl2/","publish_date":"2020-07-08T00:00:00Z","summary":"\u003cp\u003eS3って、マネジメントコンソールからフォルダ名の変更ってできないんですね。。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://blog.goo.ne.jp/nakano-tomofumi/e/78ed6b49344715a89a9fdebeba8a8dd2\"\u003eこちら\u003c/a\u003eを参考に。\u003c/p\u003e\n\u003cp\u003eSurfaceにしてからAWS CLIインストールしてなかったし、せっかくなのでWLS2のUbuntuでやってみます。\u003c/p\u003e\n\u003cp\u003e公式の\u003ca href=\"https://docs.aws.amazon.com/ja_jp/cli/latest/userguide/install-cliv2-docker.html\"\u003eDocker版\u003c/a\u003eでインストール（というほどのことでもないですが）。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ docker run --rm -it amazon/aws-cli --version\naws-cli/2.0.29 Python/3.7.3 Linux/4.19.104-microsoft-standard botocore/2.0.0dev33\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e認証情報入れる。\nIAMでアクセスキーを取得して、configureコマンドで設定。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ docker run --rm -ti -v ~/.aws:/root/.aws amazon/aws-cli configure\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e動作確認\u003c/p\u003e","tags":["wsl","aws","docker"],"title":"WSL2でAWS CLIを使ってS3のフォルダ名を変更する"},{"categories":null,"objectID":"44de9f77c5d50d045d6a1784dec562a9","permalink":"https://umemak.github.io/blog/posts/2020/06/22_update_hugo/","publish_date":"2020-06-22T00:00:00Z","summary":"\u003cp\u003eしばらく追っていなかったら、Hugoのバージョンが結構上がっていたので、最新を使ってみることにした。\u003c/p\u003e\n\u003cp\u003eとはいえ、デプロイにGitHub Actionsを使っているので、設定ファイルの更新だけで完了した。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/umemak/blog/compare/3c9b96d8e81049b07911da9a31030e3d6f045397...649f6f3abb39fd48dff5d05236448156ccc12b22\"\u003e差分\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eHugoのバージョン変更より、ついでに更新したactionsの変更で躓いてしまった。\n今は\u003ccode\u003eDEPLOY_KEY\u003c/code\u003eを作る必要はなく、自動的に\u003ccode\u003eGITHUB_TOKEN\u003c/code\u003eが作られるようになっていた。\u003c/p\u003e","tags":["hugo"],"title":"Hugoのバージョンアップ"},{"categories":null,"objectID":"8d83243f59e3cdfea447bd14eb629db5","permalink":"https://umemak.github.io/blog/posts/2020/06/11_deployserver/","publish_date":"2020-06-11T00:00:00Z","summary":"\u003cp\u003eSourceRepositoriesで管理して、CloudBuildでFirebase HostingにデプロイしているGatsbyプロジェクトを、SourceRepositoryとCloudBuildを使わずに実現してみる。\nGiteaがCentOS6で動くようになったので、SourceRepository部分は置き換えられる。\nCloudBuildをWebhookでスクリプト呼び出してやろうとしたところ、CentOS6ではGatsbyのビルドができない（古すぎる。。）\n仕方ないので、ビルドサーバーを別で用意する。\u003c/p\u003e","tags":["linux","firebase","gitea"],"title":"Firebase用デプロイサーバーを作る"},{"categories":null,"objectID":"5f0a1d965b3e0895e779eb5f0d715a15","permalink":"https://umemak.github.io/blog/posts/2020/06/08_gitea_pgsql/","publish_date":"2020-06-08T00:00:00Z","summary":"\u003cp\u003eOSはCentOS6です。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://qiita.com/hatayan1126/items/9b0d3be9c7ecdc207642\"\u003ehttps://qiita.com/hatayan1126/items/9b0d3be9c7ecdc207642\u003c/a\u003e を参考に進めます。\nこの記事では9.6をインストールしていますが、せっかくなので最新の12を入れてみます。\u003c/p\u003e\n\u003ch2 id=\"postgresqlのインストール\"\u003ePostgreSQLのインストール\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo su\n# yum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-6-x86_64/pgdg-redhat-repo-latest.noarch.rpm\n# yum update\n# yum install postgresql12-server\n# rpm -qa | grep postgres\npostgresql12-12.3-1PGDG.rhel6.x86_64\npostgresql12-libs-12.3-1PGDG.rhel6.x86_64\npostgresql12-server-12.3-1PGDG.rhel6.x86_64\n# service postgresql-12 initdb\n# cp /var/lib/pgsql/12/data/pg_hba.conf{,.bk}\n# vim /var/lib/pgsql/12/data/pg_hba.conf\n# diff /var/lib/pgsql/12/data/pg_hba.conf{.bk,}\n80c80\n\u0026lt; local   all             all                                     peer\n---\n\u0026gt; local   all             all                                     trust\n82c82\n\u0026lt; host    all             all             127.0.0.1/32            ident\n---\n\u0026gt; host    all             all             127.0.0.1/32            trust\n\n# service postgresql-12 start\n# chkconfig postgresql-12 --list\npostgresql-12   0:off   1:off   2:off   3:off   4:off   5:off   6:off\n# chkconfig postgresql-12 on\n# chkconfig postgresql-12 --list\npostgresql-12   0:off   1:off   2:on    3:on    4:on    5:on    6:off\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"gitea用設定\"\u003eGitea用設定\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://docs.gitea.io/en-us/database-prep/#postgresql\"\u003ehttps://docs.gitea.io/en-us/database-prep/#postgresql\u003c/a\u003e の通り\u003c/p\u003e","tags":["gitea","pgsql","centos6"],"title":"GiteaのデータベースをPostgreSQLにする"},{"categories":null,"objectID":"a568d1a8eeb18abdfe6f1aa555871159","permalink":"https://umemak.github.io/blog/posts/2020/06/08_gitea2/","publish_date":"2020-06-08T00:00:00Z","summary":"\u003cp\u003e先日の続き。\u003c/p\u003e\n\u003cp\u003eCentOS6だと、ビルド済みバイナリは依存物のバージョンが合わず、自前ビルドはメモリが足りず。\n古いGiteaのビルド済みバイナリなら動くが、やっぱり最新版使いたいし、ちょっとした機能追加もしたい。\u003c/p\u003e\n\u003cp\u003eそこで、バイナリ1本にまとめる方法をやめた（\u003ccode\u003eTAGS=\u0026quot;bindata\u0026quot;\u003c/code\u003eを使わない）ところ、ビルドが通った。\nただ、おそらく開発環境向けの手順のため、設定ファイルなどがバイナリと同じ階層からたどれるところにある前提になっている。\nビルド時に\u003ccode\u003eLDFLAG\u003c/code\u003e環境変数を設定することで、書き換えることができる。\u003c/p\u003e","tags":["centos","gitea"],"title":"続・CentOS6にgiteaをインストールする"},{"categories":null,"objectID":"498e9363385780a716fd1b9e3a91dc01","permalink":"https://umemak.github.io/blog/posts/2020/06/05_gitea/","publish_date":"2020-06-05T00:00:00Z","summary":"\u003cp\u003eWikiはGitHubにも付いているのを思い出して、単独のWikiではなくGitHubクローンを試してみる。\nGitLabとか重量系は最初からあきらめて、Goで書かれたシングルバイナリの軽量OSS、Giteaで挑戦。\u003c/p\u003e\n\u003cp\u003eVMはいつものGCP無料枠のやつ。\nOSはCentOS6でディスクは30GB。\u003c/p\u003e\n\u003ch2 id=\"mysqlのインストール\"\u003eMySQLのインストール\u003c/h2\u003e\n\u003cp\u003eデフォルトだと5.1系しか入らないので、5.6系を \u003ca href=\"https://qiita.com/Esfahan/items/83200c64de8d826677b5\"\u003ehttps://qiita.com/Esfahan/items/83200c64de8d826677b5\u003c/a\u003e を参考に入れる。\u003c/p\u003e","tags":["centos","gitea"],"title":"CentOS6にgiteaをインストールする（未完）"},{"categories":null,"objectID":"35c1ed8c0414887ed0105975696a87d8","permalink":"https://umemak.github.io/blog/posts/2020/05/28_gas/","publish_date":"2020-05-28T00:00:00Z","summary":"\u003cp\u003e今まで存在は知っていたし、Kindle Unlimitedで読める入門書を読んだりはしていた。\nここにきてようやく実際に手を動かしてみたので、その感想。\u003c/p\u003e\n\u003cp\u003e作ったものは、POSTリクエストを受けて、スプレッドシートのA列に入力と同じ文字列があれば、B列の内容を返すというもの。\u003c/p\u003e\n\u003cp\u003e学び\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eスクリプトを修正したときは、Newバージョンでデプロイする。\n\u003cul\u003e\n\u003cli\u003eバージョン変えずに更新ボタン押して、なんで挙動変わらないんだろうと悩んだ。\u003c/li\u003e\n\u003cli\u003eデフォルトが\u003ccode\u003eNew\u003c/code\u003eでも良いと思うんだけど。。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eTextFinder\u003c/code\u003eで特定の列から検索するメソッドは（たぶん）用意されていない。\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efindAll()\u003c/code\u003eで全体から拾って、ループ回して\u003ccode\u003egetColumn()\u003c/code\u003eで列番号を比較して拾う。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWindowsのVSCodeのターミナルでは、\u003ccode\u003ecurl\u003c/code\u003eで日本語をパラメータとして渡すと正しく伝わらない。\n\u003cul\u003e\n\u003cli\u003e文字コードの問題。\u003c/li\u003e\n\u003cli\u003eWSLに入って実行すればOK。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eそんなに速度は速くない。\n\u003cul\u003e\n\u003cli\u003eとはいえ遅すぎるというほどでもない。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eこれでGAS実績が解放された。\u003c/p\u003e","tags":["gas"],"title":"GAS入門"},{"categories":null,"objectID":"8f69a28a3a202c358e7bf4c2c21149cb","permalink":"https://umemak.github.io/blog/posts/2020/05/28_wsl/","publish_date":"2020-05-28T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://pc.watch.impress.co.jp/docs/news/1255256.html\"\u003eWindows 10大型アップデート「May 2020 Update」がダウンロード開始\u003c/a\u003e という記事を見て、さっそく更新して、WSLとUbuntuをインストールしてみた。\u003c/p\u003e\n\u003cp\u003e\u003cfigure\u003e\u003cimg src=\"../wsl.png\"\u003e\n\u003c/figure\u003e\n\n\u003cimg src=\"./wsl.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eとくに問題なく完了。\u003c/p\u003e\n\u003cp\u003eそしてdockerもインストール。\n\u003ca href=\"https://docs.docker.com/engine/install/ubuntu/\"\u003ehttps://docs.docker.com/engine/install/ubuntu/\u003c/a\u003e\n\u003ccode\u003eAdd Docker’s official GPG key:\u003c/code\u003eのところでエラー。\u003c/p\u003e\n\u003cp\u003eWSLをインストールしただけでは、WSL2ではないらしい。\n\u003ca href=\"https://github.com/microsoft/WSL/issues/5125\"\u003ehttps://github.com/microsoft/WSL/issues/5125\u003c/a\u003e\u003c/p\u003e","tags":["surface"],"title":"Surface Go 2でWSL2+Dokcer"},{"categories":null,"objectID":"b4fd5d78400218a838f8e146c82ef493","permalink":"https://umemak.github.io/blog/posts/2020/05/25_duet_display/","publish_date":"2020-05-25T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://ja.duetdisplay.com/\"\u003ehttps://ja.duetdisplay.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGoogle Playの300円クーポンが有効期限間近だったので買ってみた。\n\u003ca href=\"https://spacedesk.net/\"\u003espacedesk\u003c/a\u003eでも特に不便なくつかえていたのだけれど、有料アプリも試してみたかった。\u003c/p\u003e\n\u003cp\u003e環境はSurface Go2がホストでChromebook C101PA（Androidアプリ）がモニタでWiFi接続。\nモバイルモニタの接続で使っていたUSB-Cケーブルで接続したけれど認識されず。\u003c/p\u003e\n\u003cp\u003eduetの設定は30FPSの省エネモード。それでもブロックノイズになったり描画の遅延が起こったり。\nspacedeskは気になるような遅延やノイズはなかった。\u003c/p\u003e","tags":["windows","chromebook"],"title":"Duetを使ってみる"},{"categories":null,"objectID":"336ed77343226f54588aa18c5e5c0869","permalink":"https://umemak.github.io/blog/posts/2020/05/25_nginx/","publish_date":"2020-05-25T00:00:00Z","summary":"\u003cp\u003eWiki.jsをservice化したときに、nobodyユーザーだと80番ポートでlistenできないので、Wiki（node.js）はデフォルトの3000番に戻して、nginxでプロキシすることにした。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.requarks.io/install/linux\"\u003ehttps://docs.requarks.io/install/linux\u003c/a\u003e の\u003ccode\u003eRun as service\u003c/code\u003eをやりたかった。\nホームディレクトリに展開していたwikiを/var/にmvして、sqliteのデータファイルのパスも変更、ファイルのパーミッションをまとめてnobodyに変更。\u003c/p\u003e","tags":["nginx","wikijs"],"title":"nginxで80番ポートの向き先を変更する"},{"categories":null,"objectID":"6ba78af55c3bd35de18830878c4cb9a0","permalink":"https://umemak.github.io/blog/posts/2020/05/24_wikijs/","publish_date":"2020-05-24T00:00:00Z","summary":"\u003cp\u003eGCP無料枠でWikiを動かしてみるシリーズ。\n今回はWiki.js。\u003c/p\u003e\n\u003cp\u003edocker-composeを使う方法も用意されているが、軽量優先で通常インストールのほうで。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.requarks.io/install/linux\"\u003ehttps://docs.requarks.io/install/linux\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003econfig.yml\u003c/code\u003eの編集では、ポートを80に、DBをsqliteに変更した。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt install wget nodejs npm\n$ wget https://github.com/Requarks/wiki/releases/download/2.3.81/wiki-js.tar.gz\n$ mkdir wiki\n$ tar xzf wiki-js.tar.gz -C ./wiki\n$ cd ./wiki\n$ mv config.sample.yml config.yml\n$ nano config.yml\n$ npm rebuild sqlite3\n$ sudo node server\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e動いた・・・！\u003c/p\u003e","tags":["wikijs"],"title":"Wiki.jsを試す"},{"categories":null,"objectID":"3f487ae6b3424ce3591b3e439c512f5e","permalink":"https://umemak.github.io/blog/posts/2020/05/23_past/","publish_date":"2020-05-23T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://past.atcoder.jp/\"\u003ehttps://past.atcoder.jp/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eリアルタイム受験と通常受験があって、リアルタイム受験の方をやってみた。\u003c/p\u003e\n\u003cp\u003eまだ通常受験の期間内なので、内容について口外できない。\u003c/p\u003e\n\u003cp\u003e6月6日を過ぎたら書きたいことを書こうと思う。\u003c/p\u003e","tags":null,"title":"第三回アルゴリズム実技検定受けてみた"},{"categories":null,"objectID":"aec06b3c62cb2efd639f61af488efe05","permalink":"https://umemak.github.io/blog/posts/2020/05/20_surfacego2/","publish_date":"2020-05-20T00:00:00Z","summary":"\u003cp\u003e昨日注文して今日届いた。\u003c/p\u003e\n\u003cp\u003e最近、Chromebookだけだと作業効率が悪いことがあって、Intel系CPUでWindowsOSで軽量で解像度がそれなりにあるものを探していたので。\nC101PAを買う前に、最後まで比較したのが初代Goだったのもあり、やはり自分で使ってみないと評価できないよね、と。\u003c/p\u003e","tags":["Surface"],"title":"Surface Go 2を入手"},{"categories":null,"objectID":"247d3170a9599a4898a35d50d2dbb3d5","permalink":"https://umemak.github.io/blog/posts/2020/05/15_deno/","publish_date":"2020-05-15T00:00:00Z","summary":"\u003cp\u003eDenoのバージョン1が出たというニュース記事を見て、試してみた。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://deno.land/v1\"\u003ehttps://deno.land/v1\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eNode.jsを作者自ら作り直したもの。\u003c/p\u003e\n\u003cp\u003e最初にRaspberry Pi 4で試したところ、公式のインストーラーが\u003ccode\u003ex86_64\u003c/code\u003eしか対応していなかったので断念。\n\u003ca href=\"https://deno.land/manual/contributing/building_from_source\"\u003eソースからビルドする手順\u003c/a\u003eも試してみたけれど、途中でエラーになってしまう。\u003c/p\u003e\n\u003cp\u003earmで動くようになればきっと裾野が広がるだろうなと思いつつ、ひとまず使ってみたかったのでChromebook C223NAで実行。\u003c/p\u003e","tags":["deno"],"title":"DenoをChromebookで使ってみる"},{"categories":null,"objectID":"f8c6a3720123b1cccdb12088b1a741fb","permalink":"https://umemak.github.io/blog/posts/2020/05/01_vscodeonline/","publish_date":"2020-05-01T00:00:00Z","summary":"\u003cp\u003e改名というよりは、ベータ版から正式名称になったという方が正しいか。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-codespaces/\"\u003ehttps://devblogs.microsoft.com/visualstudio/introducing-visual-studio-codespaces/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eということで、先日作成したのを見に行ったら、\u003c/p\u003e\n\u003cfigure\u003e\u003cimg src=\"../vscode_error.png\"\u003e\n\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"./vscode_error.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eChrome OS未対応・・・！\u003c/p\u003e\n\u003cp\u003eどういう理由だろう。。\u003c/p\u003e","tags":["vscode"],"title":"VSCode onlineがVSCodespaceに改名"},{"categories":null,"objectID":"ec27633c50ea43de4543e1efd0e54777","permalink":"https://umemak.github.io/blog/posts/2020/05/01_droidcam/","publish_date":"2020-05-01T00:00:00Z","summary":"\u003cp\u003eラズパイにWebカメラ付けてみたくても売っていないので、Android端末をカメラ化する。\u003c/p\u003e\n\u003cp\u003eAndroid端末側にはアプリをインストールしておく。\u003c/p\u003e\n\u003cp\u003eラズパイ側。公式ページにはLinux用のインストール方法が用意されているが、\n\u003ca href=\"http://www.dev47apps.com/droidcam/linuxx/\"\u003ehttp://www.dev47apps.com/droidcam/linuxx/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote: 32-bit binaries are no longer provided, you’ll need to compile the client from source.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eこの条件に該当するのでソースからインストールする。\u003c/p\u003e","tags":["raspberry-pi"],"title":"ラズパイでdroidcam"},{"categories":null,"objectID":"24d76034b521a919d927144bba47ce45","permalink":"https://umemak.github.io/blog/posts/2020/04/27_rpi_update/","publish_date":"2020-04-27T00:00:00Z","summary":"\u003cp\u003esnapを導入してみたところ、実行時にエラーが出る。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ hello-world\nERROR: ld.so: object \u0026#39;/usr/lib/arm-linux-gnueabihf/libarmmem-${PLATFORM}.so\u0026#39; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored.\nHello World!\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e実行自体はできているっぽいんだけど、気になるのでググったら\u003ccode\u003erpi-update\u003c/code\u003eを実行すると解消するかもしれないということで、やってみた。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e#############################################################\nWARNING: \u0026#39;rpi-update\u0026#39; updates to pre-releases of the linux \nkernel tree and Videocore firmware.\n\n\u0026#39;rpi-update\u0026#39; should only be used if there is a specific \nreason to do so - for example, a request by a Raspberry Pi \nengineer.\n\nDO NOT use \u0026#39;rpi-update\u0026#39; as part of a regular update process.\n\n##############################################################\nWould you like to proceed? (y/N)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eこんな警告出る。まあそんなに気軽にやるものではないよね、\u003ccode\u003eY\u003c/code\u003e\u003c/p\u003e","tags":["raspberry-pi"],"title":"はじめてのrpi-update"},{"categories":null,"objectID":"19b9de95f86973f01d00dd81acd9b0df","permalink":"https://umemak.github.io/blog/posts/2020/04/24_raspi_ubuntu/","publish_date":"2020-04-24T00:00:00Z","summary":"\u003cp\u003eUbuntuの新しいLTS版が出たので、ラズパイで動かしてみた。\u003c/p\u003e\n\u003cp\u003e実は先日、18.04＋kubuntuを入れてみたところ、動作が重くてちょっと実用にはならないなと思っていたところ。\u003c/p\u003e\n\u003cp\u003e20.04になってもしかしたら軽くなっているかもと期待して試した。\u003c/p\u003e\n\u003cp\u003e結果、kubuntuのGUIが起動しなくて公平な比較ができず。\u003c/p\u003e\n\u003cp\u003eただ、kubuntuの代わりにgnomeでGUI起動したところ、ストレスなく操作することができたので、もしかしたらkubuntuが重量級だっただけかもしれない。\u003c/p\u003e","tags":["raspberry-pi"],"title":"ラズパイ4にUbuntu20.04を入れる"},{"categories":null,"objectID":"a01a8d727b154afcf82c751f4442b99c","permalink":"https://umemak.github.io/blog/posts/2020/04/23_box86/","publish_date":"2020-04-23T00:00:00Z","summary":"\u003cp\u003eラズパイはARM系のCPUなので、INTEL系のCPU用にビルドされたバイナリはそのままでは動きません。\u003c/p\u003e\n\u003cp\u003eそこでエミュレーターを使ってみます。\u003c/p\u003e\n\u003cp\u003e今回使ってみたのは、 \u003ca href=\"https://github.com/ptitSeb/box86\"\u003ehttps://github.com/ptitSeb/box86\u003c/a\u003e です。\u003c/p\u003e\n\u003cp\u003eラズパイ4用のビルド方法が書いてあるので、その通りにして\n\u003ca href=\"https://github.com/ptitSeb/box86/blob/master/COMPILE.md\"\u003ehttps://github.com/ptitSeb/box86/blob/master/COMPILE.md\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e途中、cmake がインストールされてないエラーが出たので、aptでインストールしています。\u003c/p\u003e","tags":["raspberry-pi"],"title":"ラズパイでbox86を試す"},{"categories":null,"objectID":"2579bd7de0f896e3cdc3746b7c95bca5","permalink":"https://umemak.github.io/blog/posts/2020/04/17_raspi/","publish_date":"2020-04-17T00:00:00Z","summary":"\u003cp\u003e以前から興味があったラズパイについに手を出しました。\n4Bの4GB版。\u003c/p\u003e\n\u003cp\u003eさっそくSDカードにOSを入れて、と思ったらChromebookでできない。\n\u003ca href=\"https://www.raspberrypi.org/downloads/\"\u003ehttps://www.raspberrypi.org/downloads/\u003c/a\u003e の\u003ccode\u003eRaspberry Pi Imager for Ubuntu\u003c/code\u003eを入れて、起動はするもののSDカードを認識してくれないので書き込み先が指定できず。\u003c/p\u003e\n\u003cp\u003e開発者モードにすればいけるのかもしれないけれど、いったん諦めてWindows10で。\nあっさり認識してOS入りSDカード作成完了。\u003c/p\u003e","tags":["raspberry-pi"],"title":"ラズパイ4導入"},{"categories":null,"objectID":"ee4fba19429c53fd4042ff1fa6e7f823","permalink":"https://umemak.github.io/blog/posts/2020/04/08_gitpod_firebase_login/","publish_date":"2020-04-08T00:00:00Z","summary":"\u003cp\u003e何度もググるので。。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ npm i -g firebase-tools\n$ firebase login --no-localhost\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e表示されるURLを別タブで開くと認証画面が表示されるので許可する。\n許可するとコードが表示されるのでコピーしてコマンドラインに貼り付ける。\u003c/p\u003e","tags":["firebase","gitpod"],"title":"Gitpodでfirebaseログインする方法"},{"categories":null,"objectID":"7a1e6e2816595fc0ca904f0020f8c251","permalink":"https://umemak.github.io/blog/posts/2020/04/08_gitpod_node_version/","publish_date":"2020-04-08T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/zeit/next.js/tree/master/examples/with-firebase-hosting-and-typescript\"\u003ehttps://github.com/zeit/next.js/tree/master/examples/with-firebase-hosting-and-typescript\u003c/a\u003e\nこれを動かしたくて、\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ yarn create next-app --example with-firebase-hosting-and-typescript with-firebase-hosting-and-typescript-app\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eしたところ、\u003ccode\u003eThe engine \u0026quot;node\u0026quot; is incompatible with this module. Expected version \u0026quot;10\u0026quot;. Got \u0026quot;12.16.1\u0026quot;\u003c/code\u003eというエラーで正常終了しない。バージョン10系を要求されているのに、インストールされているのは12系。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ nvm install 10\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eを実行することで、10系になる。\u003c/p\u003e","tags":["node","gitpod"],"title":"Gitpodのnodeバージョンを変更する"},{"categories":null,"objectID":"08f61ecae6e66521043426e122ee31fb","permalink":"https://umemak.github.io/blog/posts/2020/04/06_nextjs_with_dotenv/","publish_date":"2020-04-06T00:00:00Z","summary":"\u003cp\u003ereactでdotenv使うとき、起動モードごとに定義ファイルを変えられるように、\u003ccode\u003e.env.development\u003c/code\u003eにしていたので、同じようにやったら読み込まれない。\u003c/p\u003e\n\u003cp\u003eNextJSで使うときは、\u003ccode\u003e.env\u003c/code\u003eしか認識してくれないらしい。\n環境ごとにファイル分けたい場合のやり方は、未調査。\u003c/p\u003e","tags":["nextjs"],"title":"NextJSとdotenvでハマった"},{"categories":null,"objectID":"dc3c558e6d003fc3c27803f1b3ad2e9b","permalink":"https://umemak.github.io/blog/posts/2020/03/30_win10setup/","publish_date":"2020-03-30T00:00:00Z","summary":"\u003cp\u003eChromebookでの作業に限界が見えたので、WindowsPCを調達しました。\n自分で買うのは初めてのDell。\u003c/p\u003e\n\u003cp\u003eOSはWindows10 Homeで、これも初めて使う。\u003c/p\u003e\n\u003cp\u003e以下やったこと\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eChromeインストール\n\u003cul\u003e\n\u003cli\u003eMcAfeeプラグイン削除\u003c/li\u003e\n\u003cli\u003eReact Developer Toolsインストール\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eトラックパッドの設定変更\n\u003cul\u003e\n\u003cli\u003eスクロール方向を逆に\u003c/li\u003e\n\u003cli\u003eタップでクリックをオフに\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eキーボードの設定変更\n\u003cul\u003e\n\u003cli\u003e表示間隔を最短に\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e画面倍率の設定変更\n\u003cul\u003e\n\u003cli\u003e150%を125%に\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIMEの設定変更\n\u003cul\u003e\n\u003cli\u003eIME入力モード切替の通知をオフに\u003c/li\u003e\n\u003cli\u003e「無変換」キーをIMEオフに割り当て\u003c/li\u003e\n\u003cli\u003e「変換」キーをIMEオンに割り当て\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGitインストール\n\u003cul\u003e\n\u003cli\u003eCRLFの設定をfalseにした以外はデフォルトで\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eVSCodeインストール\u003c/li\u003e\n\u003cli\u003eVSCode設定変更\n\u003cul\u003e\n\u003cli\u003eTelemetry系をオフに\u003c/li\u003e\n\u003cli\u003eデフォルトのターミナルをgitbashに\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eworkbench.editor.enablePreview\u003c/code\u003eをfalseに\u003c/li\u003e\n\u003cli\u003eAuto Saveを有効に\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003enode.jsインストール\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eTools for Native Modules\u003c/code\u003eのページのチェックをオンに\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eyarnインストール\n\u003cul\u003e\n\u003cli\u003ePowerShellを管理者権限で起動して、\u003ccode\u003echoco install yarn\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003echocoコマンドは、node.jsインストール時に入る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eVSCodeプラグイン\n\u003cul\u003e\n\u003cli\u003eDebugger for Chrome\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ecross-envインストール\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/kentcdodds/cross-env#readme\"\u003ehttps://github.com/kentcdodds/cross-env#readme\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003epackage.jsonで環境変数を設定するときに、OSの違いを吸収してくれる\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/riversun/items/d45b26f4a7aad6e51b69\"\u003ehttps://qiita.com/riversun/items/d45b26f4a7aad6e51b69\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eNODE_OPTIONS='--inspect'\u003c/code\u003eをつけると、\u003ccode\u003eStarting inspector on 127.0.0.1:9229 failed: address already in use\u003c/code\u003eが出続ける\n\u003cul\u003e\n\u003cli\u003e最新のNext.jsの不具合らしい\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/zeit/next.js/issues/11030\"\u003ehttps://github.com/zeit/next.js/issues/11030\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eyarn upgrade next@9.2.0\u003c/code\u003eでダウングレードしてみる\n\u003cul\u003e\n\u003cli\u003e表示頻度は下がったが、まだ出る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003espacedeskのインストール\n\u003cul\u003e\n\u003cli\u003eモバイルディスプレイ代わりにCT100PA（Chromebookタブレット）を使ってみる\u003c/li\u003e\n\u003cli\u003eHTML5版だとタッチ反応しなかったけれど、Andriodアプリ版だとタッチ反応する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["windows"],"title":"Windows10の設定"},{"categories":null,"objectID":"3919801f31ab123eabf4f1dfdfc39619","permalink":"https://umemak.github.io/blog/posts/2020/03/27_gatsbyjs_blog/","publish_date":"2020-03-27T00:00:00Z","summary":"\u003cp\u003eGatsbyJSでblogを構築します。\u003c/p\u003e\n\u003cp\u003e環境はGitHubに空のリポジトリ（blog-gatsby）を作成して、Gitpodで開いたところから。\u003c/p\u003e\n\u003cp\u003estarterとして\u003ca href=\"https://www.gatsbyjs.org/starters/hagnerd/gatsby-starter-blog-mdx/\"\u003egatsby-starter-blog-mdx\u003c/a\u003eを採用。\u003c/p\u003e\n\u003cp\u003eすでに\u003ccode\u003e.git\u003c/code\u003eディレクトリが存在するとエラーになるので、一旦リネームしてセットアップする。\n途中でパッケージマネージャーを\u003ccode\u003enpm\u003c/code\u003eと\u003ccode\u003eyarn\u003c/code\u003eどちらを使うか聞かれるので、\u003ccode\u003eyarn\u003c/code\u003eを選択。\u003c/p\u003e","tags":["gatsbyjs"],"title":"GatsbyJSでBlogを構築する"},{"categories":null,"objectID":"df237973c9004648ae19a9ab2e7a1755","permalink":"https://umemak.github.io/blog/posts/2020/03/27_gitpod_debug/","publish_date":"2020-03-27T00:00:00Z","summary":"\u003cp\u003eNext.jsの動作がよくわからないので、デバックモードで追いかけようとしたところ、設定に躓いたのでメモ。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome\"\u003ehttps://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome\u003c/a\u003e\nここの\u003ccode\u003eDownload Extension\u003c/code\u003eでvsixファイルをダウンロードする。\u003c/p\u003e\n\u003cp\u003eGitpodのExtensions(Beta)サイドメニューを開いて、\u003ccode\u003eDrag \u0026amp; drop VS Code extensions (*.vsix) to install\u003c/code\u003eのところにダウンロードしたファイルを入れるとインストールされる。\u003c/p\u003e","tags":["gitpod"],"title":"GitpodでReactアプリのデバッグをする（未完）"},{"categories":null,"objectID":"eb20b9493dd4be57bb5ba61692936f4c","permalink":"https://umemak.github.io/blog/posts/2020/03/25_vscodeonline/","publish_date":"2020-03-25T00:00:00Z","summary":"\u003cp\u003eGitpodのバックアップ的な感じでVSCode online（パブリックベータ）を作成。\u003c/p\u003e\n\u003cp\u003e前回試したときはアカウント作成のところで面倒になってやめていたけれど、先へ進んでみた。\nそしたらなぜか再度試用扱いになってる様子。\u003c/p\u003e\n\u003cp\u003eアカウントさえ有効化すれば後は特に引っかかるところもなく、Github連携も問題なし。\u003c/p\u003e\n\u003cp\u003e動作はGitpodのほうが軽いような気がする。GCPのコンソールと同じくらいの印象。\u003c/p\u003e","tags":["vscode"],"title":"VSCode onlineその2"},{"categories":null,"objectID":"8c2f99563db2d05bc8dcc630e30e36d4","permalink":"https://umemak.github.io/blog/posts/2020/03/06_flets/","publish_date":"2020-03-06T00:00:00Z","summary":"\u003cp\u003eそこそこのポイントが年度末で失効するということで、交換手続きをしようとしたところ、契約回線認証が通らず。\u003c/p\u003e\n\u003cp\u003eChromebookだとダメなのかと思い、iPhone8やPixel4で試してもダメ。\n昔はMacBookでできてた記憶があるけど、もうMacBook手元にないし、詰んだかと思ったが、ググって解決。\u003c/p\u003e\n\u003cp\u003eルーターのIPv6を有効にする必要がある。\u003c/p\u003e","tags":[],"title":"フレッツ光メンバーズクラブの契約回線認証でハマった"},{"categories":null,"objectID":"e7ffad946315839713e0c9fdbc05c708","permalink":"https://umemak.github.io/blog/posts/2020/03/02_aws_workspaces/","publish_date":"2020-03-02T00:00:00Z","summary":"\u003cp\u003eChromebookででかいExcelを扱うのに重いので、Windowsなら大丈夫なのか確かめるためにWorkSpacesで試してみる。\u003c/p\u003e\n\u003cp\u003eChromebook買ってすぐに一度試した気がするんだけど、なんか前と手順が変わっているような気がするので、\n\u003ca href=\"https://dev.classmethod.jp/cloud/aws/relay_looking_back_amazon-workspaces/\"\u003eDevelopers.IO\u003c/a\u003eの記事を参考にすすめる。\u003c/p\u003e\n\u003cp\u003eワークスペース作成完了のメールが来ないなーと思っていたら、迷惑メールに分類されていた。\u003c/p\u003e","tags":["aws"],"title":"AWS WorkSpacesを使う"},{"categories":null,"objectID":"e71e1f6bd3f614f8381a12eaf0b5c9e6","permalink":"https://umemak.github.io/blog/posts/2020/02/29_rss/","publish_date":"2020-02-29T00:00:00Z","summary":"\u003cp\u003eRSSリーダーをNewsifyからInoreaderに移行するにあたって、無料プランだと150件までしか登録できないので、更新されていないものなど削除して棚下ろす。\u003c/p\u003e\n\u003cp\u003eInoreaderに移行する理由は、NewsifyのAndroidアプリが存在しないため。\u003c/p\u003e\n\u003ch2 id=\"日本のニュース\"\u003e日本のニュース\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://rss.itmedia.co.jp/rss/2.0/itmedia_all.xml\"\u003eITmedia 総合記事一覧\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.sbbit.jp/index1.rss\"\u003eビジネス+IT 最新記事\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://feed.japan.zdnet.com/rss/news/index.rdf\"\u003eZDNet Japan 最新情報　総合\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://jp.techcrunch.com/feed/\"\u003eTechCrunch Japan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.publickey1.jp/atom.xml\"\u003ePublickey\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://feed.japan.cnet.com/rss/index.rdf\"\u003eCNET Japan 最新情報　総合\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://thinkit.co.jp/rss.xml\"\u003eThink IT（シンクイット）\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://codezine.jp/rss/new/20/index.xml\"\u003eCodeZine:新着一覧\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://rss.itmedia.co.jp/rss/1.0/ait.xml\"\u003e＠IT 全フォーラム 最新記事一覧\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://feed.infoq.com/jp\"\u003eInfoQ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"software-engineering\"\u003eSoftware Engineering\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://feeds.feedburner.com/blogspot/Dcni\"\u003eGoogle Developers Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://news.ycombinator.com/rss\"\u003eHacker News\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://feeds.feedburner.com/blogspot/hsDu\"\u003eAndroid Developers Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.reddit.com/r/programming/.rss\"\u003ereddit:programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.reddit.com/r/technology/.rss\"\u003ereddit:Technology\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://rubyweekly.com/rss\"\u003eRuby Weekly\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tech-news\"\u003eTech News\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://lifehacker.com/rss\"\u003eLifehacker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.theverge.com/rss/index.xml\"\u003eThe Verge\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.engadget.com/rss.xml\"\u003eEngadget\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"gcp\"\u003egcp\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cloudblog.withgoogle.com/ja/products/gcp/rss/\"\u003eGoogle Cloud Platform\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://googledevjp.blogspot.com/feeds/posts/default\"\u003eGoogle Developer Japan Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cloudplatform.googleblog.com/feeds/posts/default?alt=rss\"\u003eGoogle Cloud Platform\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://feeds.feedburner.com/GoogleCloudPlatformJapanBlog\"\u003eGoogle Cloud Platform Japan 公式ブログ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cloudblog.withgoogle.com/rss/\"\u003eCloud Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"azure\"\u003eazure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://azure.microsoft.com/en-us/blog/feed/\"\u003eMicrosoft Azure Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://azure.microsoft.com/en-us/updates/feed/\"\u003eAzure service updates\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://azure.microsoft.com/en-us/blog/topics/announcements/feed/\"\u003eMicrosoft Azure Blog \u0026gt; Announcements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://azureinfohub.azurewebsites.net/Feed?serviceTitle=Azure\"\u003eAzure InfoHub RSS - Azure\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"aws\"\u003eaws\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/about-aws/whats-new/recent/feed/\"\u003eaws blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/database/feed/\"\u003eAWS Database Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/feeds/videos.xml?user=AmazonWebServices\"\u003eAmazon Web Services\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://d3gih7jbfe3jlq.cloudfront.net/aws-podcast.rss\"\u003eAWS Podcast\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/feeds/videos.xml?user=AmazonWebServicesJP\"\u003eAmazon Web Services Japan 公式\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/feeds/videos.xml?user=AWSwebinars\"\u003eAWS Online Tech Talks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://alas.aws.amazon.com/alas.rss\"\u003eAmazon Linux Security Center\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/enterprise-strategy/feed/?_=5597\"\u003eAWS Cloud Enterprise Strategy Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/aws/feed/\"\u003eAWS News Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/architecture/feed/\"\u003eAWS Architecture Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/apn/feed/\"\u003eAWS Partner Network (APN) Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/awsmarketplace/feed/\"\u003eAWS Marketplace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/big-data/feed/\"\u003eAWS Big Data Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/compute/feed/\"\u003eAWS Compute Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/developer/feed/\"\u003eAWS Developer Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/devops/feed/\"\u003eAWS DevOps Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/gametech/feed/\"\u003eAmazon Game Tech Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/iot/feed/\"\u003eThe Internet of Things on AWS – Official Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/machine-learning/feed/\"\u003eAWS Machine Learning Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/mt/feed/\"\u003eAWS Management \u0026amp; Governance Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/media/feed/\"\u003eAWS Media Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/messaging-and-targeting/feed/\"\u003eAWS Messaging \u0026amp; Targeting Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/mobile/feed/\"\u003eAWS Mobile Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/networking-and-content-delivery/feed/\"\u003eNetworking \u0026amp; Content Delivery\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/opensource/feed/9\"\u003eAWS Open Source Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/publicsector/feed/\"\u003eAWS Government, Education, \u0026amp; Nonprofits Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/awsforsap/feed/\"\u003eAWS for SAP\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/security/feed/\"\u003eAWS Security Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/blogs/startups/feed/\"\u003eAWS Startups Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://aws.amazon.com/jp/blogs/news/feed/\"\u003eAmazon Web Services ブログ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"企業blog\"\u003e企業blog\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dev.classmethod.jp/feed/\"\u003eDevelopers.IO\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.asial.co.jp/rss\"\u003eアシアルブログ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://research.sakura.ad.jp/feed/\"\u003eさくらインターネット研究所\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://tech.mercari.com/feed\"\u003eMercari Engineering Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://moneyforward.com/engineers_blog/feed/\"\u003eEngineers\u0026rsquo; Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://future-architect.github.io/atom.xml\"\u003eFuture Tech Blog - フューチャーアーキテクト\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://buildersbox.corp-sansan.com/feed\"\u003esansan builders box\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://techracho.bpsinc.jp/feed/atom\"\u003eTechRacho\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.m3tech.blog/feed\"\u003eエムスリーテックブログ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://techlife.cookpad.com/feed\"\u003eクックパッド開発者ブログ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://techblog.yahoo.co.jp/index.xml\"\u003eYahoo! JAPAN Tech Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["rss"],"title":"RSS棚卸し"},{"categories":null,"objectID":"879b77110a7b2518d64301da28be939f","permalink":"https://umemak.github.io/blog/posts/2020/02/29_book/","publish_date":"2020-02-29T00:00:00Z","summary":"\u003cp\u003eKindleの積ん読解消のため、見える化したい。\u003c/p\u003e\n\u003cp\u003eKindleの管理ページからCSV化するJSを試してみたけれど、200冊以上あると２ページ目以降が変換できないっぽい。\u003c/p\u003e\n\u003cp\u003eということで、コピペしてテキストエディタでがんばった。\u003c/p\u003e","tags":["book"],"title":"買った本の棚卸し"},{"categories":null,"objectID":"b9cc627d150fbe1336cff72e000b9f92","permalink":"https://umemak.github.io/blog/posts/2020/02/24_tamiat/","publish_date":"2020-02-24T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://github.com/tamiat/tamiat\"\u003ehttps://github.com/tamiat/tamiat\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eFirebaseを使ったCMSを探していて、見つけたもの。\u003c/p\u003e\n\u003cp\u003eセットアップはリポジトリのREADMEに書いてあるとおりでほぼ行けた。\n1箇所だけ、パッケージの依存が解決できなくて手動でyarn addしたものがあったくらい。\u003c/p\u003e\n\u003cp\u003eGCPでプロジェクト作って、Cloud Shellで作業。便利。\u003c/p\u003e\n\u003cp\u003eで、構築は簡単にできたけれど、使い方がわからない。。\u003c/p\u003e","tags":["cms"],"title":"tamiatを試す"},{"categories":null,"objectID":"31e1dfce494c63a892874d52ee83d4ed","permalink":"https://umemak.github.io/blog/posts/2020/02/23_qwiklabs/","publish_date":"2020-02-23T00:00:00Z","summary":"\u003cp\u003e先日のデブサミのハンズオンで使ったアカウントに１ヶ月のサブスクリプションが付与されていたのを思い出して、途中になっていたKubernatesのクエストの続きを終わらせた。\nJenkinsを使ったCI/CDのやつ。\u003c/p\u003e\n\u003cp\u003eJenkinsは昔使ったことあったけれど、最近はCI/CDのサービスが充実してきているので自前で用意して使うことはなくなってきたなー、ということで久しぶりに触った。\u003c/p\u003e","tags":["gcp","kubernetes"],"title":"Qwiklabsの続きをやる"},{"categories":null,"objectID":"f8659406e4dc6e00dfbf39870e4bdeeb","permalink":"https://umemak.github.io/blog/posts/2020/02/14_devsumi/","publish_date":"2020-02-14T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://event.shoeisha.jp/devsumi/20200213\"\u003ehttps://event.shoeisha.jp/devsumi/20200213\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"14-b-1-ともにつくるを実践するドメイン駆動設計\"\u003e14-B-1 「ともにつくる」を実践するドメイン駆動設計\u003c/h2\u003e\n\u003ch3 id=\"成瀬-允宣gmoインターネット\"\u003e成瀬 允宣[GMOインターネット]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eドメイン駆動設計\n\u003cul\u003e\n\u003cli\u003e当たり前のことを当たり前にやるためのプラクティス\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e構成要素\n\u003cul\u003e\n\u003cli\u003eモデリング\n\u003cul\u003e\n\u003cli\u003eドメインの物事を、知識として抽出する\u003c/li\u003e\n\u003cli\u003e何が重要かはソフトウェアによって異なる\n\u003cul\u003e\n\u003cli\u003e「トラック」は「アクセルを踏めば進む」のか「荷物を運ぶことができる」のか\u003c/li\u003e\n\u003cli\u003eどちらが重要かは「ドメインエキスパート」が知っている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eパターン\n\u003cul\u003e\n\u003cli\u003eドメインモデルをコード（ドメインオブジェクト）に落とし込む\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e開発者とドメインエキスパートのコミュニケーション\n\u003cul\u003e\n\u003cli\u003e会話が必要\u003c/li\u003e\n\u003cli\u003e会話のためには共通基盤（ユビキタス言語）が必要\u003c/li\u003e\n\u003cli\u003e「単語帳」ではない\u003c/li\u003e\n\u003cli\u003e技術語と固有語、どちらかに寄せる必要はない\u003c/li\u003e\n\u003cli\u003e開発者が主体となって協力して構築する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e境界付けられたコンテキスト\n\u003cul\u003e\n\u003cli\u003e「注文」を発注側と受注側で分ける\n\u003cul\u003e\n\u003cli\u003e発注側コンテキスト、受注側コンテキスト\u003c/li\u003e\n\u003cli\u003eチームを分ける場合にも使える\u003c/li\u003e\n\u003cli\u003eチーム間コミュニケションのために、「コンテキストマップ」が必要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e開発者だけで完結しない\n\u003cul\u003e\n\u003cli\u003e開発者、エキスパート、ステークホルダーの「共創」\u003c/li\u003e\n\u003cli\u003eボトムアップアプローチで「パターン」からやってみる\u003c/li\u003e\n\u003cli\u003eコードとドメインは相互変換できる必要があるべき\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"14-e-2-プリンシプルオブともにつくる-web-performerを支えるドクトリン-\"\u003e14-E-2 プリンシプル・オブ・“ともにつくる”～ Web Performerを支えるドクトリン ～\u003c/h2\u003e\n\u003ch3 id=\"上田-勲キヤノンitソリューションズ\"\u003e上田 勲[キヤノンITソリューションズ]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e撮影禁止\u003c/li\u003e\n\u003cli\u003eプリンシプル：長い歴史を持つ抽象的知見\u003c/li\u003e\n\u003cli\u003e我と汝\n\u003cul\u003e\n\u003cli\u003e世界は人間の二重の態度に応じて二重である\u003c/li\u003e\n\u003cli\u003e人間の世界は　「我（ヒト）と汝（ヒト）」か「我（ヒト）とそれ（モノ）」か\u003c/li\u003e\n\u003cli\u003e「我とそれ」ではチームにならない。コミュニケーション不全に陥る\n\u003cul\u003e\n\u003cli\u003e相手がヒトであってもモノとして見たら「我とそれ」になってしまう。「汝」として見ることが必要。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eシニフィアンとシニフィエ\n\u003cul\u003e\n\u003cli\u003e言葉は恣意的である\u003c/li\u003e\n\u003cli\u003e意味するもの（文字や音）と意味されるもの（実物）\u003c/li\u003e\n\u003cli\u003eシニフィアンとシニフィエの関係は一意ではない\n\u003cul\u003e\n\u003cli\u003e言語が違えばシニフィアンが異なる（「馬」と「Horse」）\u003c/li\u003e\n\u003cli\u003e日本では「蝶」と「蛾」に分けられてもフランス語では「パピヨン」\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e世界の文節化\n\u003cul\u003e\n\u003cli\u003e世界があって言葉があるのではなく、言葉があって世界があるという概念\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eパッチワーク\n\u003cul\u003e\n\u003cli\u003e認識している世界はありのままではなく、言葉におって歪められたいびつなもの\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e人間は言葉で思考／会話している\n\u003cul\u003e\n\u003cli\u003e言葉は世界を完璧に表現できない\n\u003cul\u003e\n\u003cli\u003e思考も会話も完璧にはならない\n\u003cul\u003e\n\u003cli\u003e言葉が世界を構築するなら、知識を増やせば思考も豊かになる\u003c/li\u003e\n\u003cli\u003eいびつな世界しか表現できないなら、言葉より、「何を意味したいのか」に意識を向ける（我と汝）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e無知の知\n\u003cul\u003e\n\u003cli\u003e自らが最大の知恵者だとすれば、それは「自らいかに知らないかを知る」ことだ\u003c/li\u003e\n\u003cli\u003e無知の無知は、成長を止める\u003c/li\u003e\n\u003cli\u003e既知の既知 ＜ 既知の未知 ＜＜＜＜ 未知の未知\u003c/li\u003e\n\u003cli\u003e無知を自覚する\n\u003cul\u003e\n\u003cli\u003e無知である姿勢で、どんなヒトからも学べる。知識を吸収し続ける\u003c/li\u003e\n\u003cli\u003e知れば知るほど、知らないこと（既知の未知）が増える\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e既知すら疑う\n\u003cul\u003e\n\u003cli\u003e自分の考えは、振り返ると間違っていることが多い\n\u003cul\u003e\n\u003cli\u003e時代の変化により間違いになることもある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e決めつけずに「自分の知らない世界があるかも」と考えてみる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e「謙虚さ」が必要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e絶望\n\u003cul\u003e\n\u003cli\u003e死に至る病とは絶望のことである\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch2 id=\"環世界\"\u003e環世界\u003c/h2\u003e\n\u003c/li\u003e\n\u003cli\u003eアフォーダンス\n\u003cul\u003e\n\u003cli\u003e人間の行動は、環境と近くの直接の対応関係によって決定される\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eドクトリン：\u003c/li\u003e\n\u003cli\u003e保守主義\n\u003cul\u003e\n\u003cli\u003e歴史と時代の変化\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eフリクションレス\n\u003cul\u003e\n\u003cli\u003e宣言型にしてユーザーのやりたいことを表現する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eプラガブル\n\u003cul\u003e\n\u003cli\u003e拡張ポイントを多数用意思している\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e家具の裏側\n\u003cul\u003e\n\u003cli\u003e目に見えない部分にこだわることで、全体の品質を上げる\u003c/li\u003e\n\u003cli\u003e自動生成するコードの可読性\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eまなざし\n\u003cul\u003e\n\u003cli\u003eユーザー専任のロールをおいている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e卓越性\n\u003cul\u003e\n\u003cli\u003e得意な部分を活かす\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e工学\n\u003cul\u003e\n\u003cli\u003e科学との対比でわかりやすい\n\u003cul\u003e\n\u003cli\u003e科学：自然を説明するるルール\u003c/li\u003e\n\u003cli\u003e工学：役に立つものを作成する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e現実と対峙するのは工学\n\u003cul\u003e\n\u003cli\u003eヒトの役に立つためのハブ＆インターフェース\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e「目の前の仕事をこなす」から「この仕事で役に立つ」に視点を転回\u003c/li\u003e\n\u003cli\u003e「余らせる」という意識を持つ\n\u003cul\u003e\n\u003cli\u003e対象は何でも良い\u003c/li\u003e\n\u003cli\u003e余っていないと、役に立てない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"14-b-3-k8s使ってますかリテールテック小売決済等でのコンテナ活用例と2025年の崖克服に向けたコンテナ導入のススメ\"\u003e14-B-3 K8S使ってますか？リテールテック（小売・決済等）でのコンテナ活用例と「2025年の崖」克服に向けたコンテナ導入のススメ！\u003c/h2\u003e\n\u003ch3 id=\"程-建強rancher-labs山澤-一仁スーパーソフトウエア井川-知幸カゴヤジャパン\"\u003e程 建強[Rancher Labs]/山澤 一仁[スーパーソフトウエア]/井川 知幸[カゴヤ・ジャパン]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e今後3年以内に76%の企業がK8sを標準基盤として利用\u003c/li\u003e\n\u003cli\u003eコンテナの良さ\n\u003cul\u003e\n\u003cli\u003eゲストOS不要で資源効率性\u003c/li\u003e\n\u003cli\u003e移植性\u003c/li\u003e\n\u003cli\u003e設置性\u003c/li\u003e\n\u003cli\u003e開発容易性\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRANCHER日本の利用率は低い\u003c/li\u003e\n\u003cli\u003eRANCHERはOSSなのでベンダーロックイン回避可能\u003c/li\u003e\n\u003cli\u003eRancher Pipelines\n\u003cul\u003e\n\u003cli\u003eRancherに統合されたCI/CD\u003c/li\u003e\n\u003cli\u003eUIもついている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRancherカタログ\n\u003cul\u003e\n\u003cli\u003eHelmベースのアプリケーションをRancherからデプロイする機能\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRIO(Micro PaaS)の統合予定\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"14-c-4-エッジコンピューティングエッジaiの可能性\"\u003e14-C-4 エッジコンピューティング、エッジAIの可能性\u003c/h2\u003e\n\u003ch3 id=\"中村-晃一idein\"\u003e中村 晃一[Idein]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eエッジコンピューティング\n\u003cul\u003e\n\u003cli\u003eデバイス状やデバイスの近くで計算を行う\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eエッジが注目される背景\n\u003cul\u003e\n\u003cli\u003eデータセンター・回線のキャパシティオーバー\n\u003cul\u003e\n\u003cli\u003eデバイスの増加、計算負荷・データ量の大きいアプリケーションの需要増加\u003c/li\u003e\n\u003cli\u003eデータセンターへの電力供給量の限界、半導体そのものの電力効率の頭打ち\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eプライバシーへの関心の高まり\n\u003cul\u003e\n\u003cli\u003eGDPRなど\u003c/li\u003e\n\u003cli\u003e不要な情報は送らない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e超低遅延化への需要増加\n\u003cul\u003e\n\u003cli\u003e自動車・ロボット・ドローンなどリアルタイム性が重要なもの\u003c/li\u003e\n\u003cli\u003e5Gの恩恵を活かしたい\n\u003cul\u003e\n\u003cli\u003e無線区間は速くなっても、有線区間は変わらない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e計算資源が制限されるとめんどくさい\u003c/li\u003e\n\u003cli\u003e電源の制限もある\u003c/li\u003e\n\u003cli\u003e機械学習は仕様を決められない\n\u003cul\u003e\n\u003cli\u003e売り切りにするのは難しい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMobile GPUで汎用計算を実現するためのコンパイラスタックを自社開発\n\u003cul\u003e\n\u003cli\u003eなので、コンパイラ職がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAIベンダーが作成したアプリを1日単位の課金（数十円）で利用できるマーケットプレイスを用意している\n\u003cul\u003e\n\u003cli\u003eここで稼ぐビジネスプラン\u003c/li\u003e\n\u003cli\u003ePythonで書く\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"14-d-5-マルチクラウドに向けてnginx活用促進する為に知っておいてほしいこと\"\u003e14-D-5 マルチクラウドに向けてNGINX活用促進する為に知っておいてほしいこと\u003c/h2\u003e\n\u003ch3 id=\"鈴木-孝彰nginx-part-of-f5\"\u003e鈴木 孝彰[NGINX (Part of F5)]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eNginxの利点\n\u003cul\u003e\n\u003cli\u003e同時接続処理\u003c/li\u003e\n\u003cli\u003eメモリ使用量\u003c/li\u003e\n\u003cli\u003e目安はnginxのサイトに公開されている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eオートスケールに対応するためのOSSがある\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/nginxinc/nginx-asg-sync\"\u003ehttps://github.com/nginxinc/nginx-asg-sync\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eK8sのingressコントローラーとして使う\u003c/li\u003e\n\u003cli\u003eExternal Nameを指定してマルチクラウド構成を構築できる\u003c/li\u003e\n\u003cli\u003enginxでJWT認証もできる\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"14-g-2-gcp-kubernetes-ハンズオン-gcp-をさわりまくろうスペシャリストに聞きまくろう-qwiklabs-大会-kubernetes-編-\"\u003e14-G-2 【GCP Kubernetes ハンズオン】 GCP をさわりまくろう！スペシャリストに聞きまくろう！〜 QWIKLABS 大会 Kubernetes 編 〜\u003c/h2\u003e\n\u003ch3 id=\"google-cloud-チームグーグルクラウドジャパン\"\u003eGoogle Cloud チーム[グーグル・クラウド・ジャパン]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e面白かった。けど疲れた。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"14-c-8-雲の中心で愛を叫ぶ-クラウド横断パネルディスカッション\"\u003e14-C-8 雲の中心で愛を叫ぶ！ クラウド横断パネルディスカッション\u003c/h2\u003e\n\u003ch3 id=\"濱田-孝治クラスメソッド松村-優大オルターブース高野-遼クラウドエース司会近藤-佑子翔泳社\"\u003e濱田 孝治[クラスメソッド]/松村 優大[オルターブース]/高野 遼[クラウドエース]/【司会】近藤 佑子[翔泳社]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eアメリカ１週間滞在でひとり50万くらい\u003c/li\u003e\n\u003cli\u003e業務における気付きについて\n\u003cul\u003e\n\u003cli\u003eどんな案件が増えているか\n\u003cul\u003e\n\u003cli\u003eAWS: 多種多様な顧客\u003c/li\u003e\n\u003cli\u003eAWS: コンテナ案件増えている\n\u003cul\u003e\n\u003cli\u003eこれからサービスを作ろうとするときに選ぶ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAzure: エンタープライズ系、モダナイぜーション案件\u003c/li\u003e\n\u003cli\u003eAzure: PaaS、サーバーレスの組み合わせが多い。ノーコードも。\u003c/li\u003e\n\u003cli\u003eGCP: DX。BigQueryを中心にしたデータ分析案件。\u003c/li\u003e\n\u003cli\u003eGCP: GSuiteとの連携が強い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e便利なところ\n\u003cul\u003e\n\u003cli\u003eGCP: プロダクトが多くない、選択で悩まない\u003c/li\u003e\n\u003cli\u003eGCP: Googleがお手本を見せてくれる\u003c/li\u003e\n\u003cli\u003eAzure: 開発に特化したサービス。イベントドリブンな処理を作りやすい。\u003c/li\u003e\n\u003cli\u003eAWS: なんでもできる。選択肢が多い。\u003c/li\u003e\n\u003cli\u003eAWS: 開発者向けに寄ってきている（CDK）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e他のクラウドで羨ましいところ\n\u003cul\u003e\n\u003cli\u003eAzure: AWSは利用者が活発（JAWS-UG）\u003c/li\u003e\n\u003cli\u003eAzure: GCPはFirebaseのような気軽に使えるサービス\u003c/li\u003e\n\u003cli\u003eAWS: JAWSは偉大\u003c/li\u003e\n\u003cli\u003eAWS: GCPは使おうとしている顧客がイケイケなイメージ\u003c/li\u003e\n\u003cli\u003eAWS: AzureはMS系のライセンスの扱いが楽（BYOL）\u003c/li\u003e\n\u003cli\u003eGCP: Oracleが使えるところ、シェアがたくさんある、情報がたくさんある、サポートもいい（らしい）\u003c/li\u003e\n\u003cli\u003eAzure: ドキュメントはたしかに多い。変な翻訳も。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e個人のキャリアや組織について\n\u003cul\u003e\n\u003cli\u003eキャリアの変化、可能性\n\u003cul\u003e\n\u003cli\u003eAWS: 自分の市場価値\u003c/li\u003e\n\u003cli\u003eAzure: アプリケーションの作り方が変わった\u003c/li\u003e\n\u003cli\u003eGCP: 最新の技術の周りには最新の問題が転がっている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eチームとして成果を出すにはどうしたらいいか\n\u003cul\u003e\n\u003cli\u003eAWS: AWSの範囲が広いので、得意領域を持って組み合わせる。社内勉強会おすすめ。\u003c/li\u003e\n\u003cli\u003eAzure: AWSと同様。一人で全部わかるわけがない。アウトプット大事。\u003c/li\u003e\n\u003cli\u003eGCP: 機能分けの組織。自分の守備範囲を認識する。他のポジションのことも理解する。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eクラウドの学び方について\n\u003cul\u003e\n\u003cli\u003eGCP: 教える側は魅力を伝える必要がある。学ぶ側は全部を学ぶ必要はないが、基本的なところは抑えておく必要がある。\u003c/li\u003e\n\u003cli\u003eGCP: 膨大なサービスは覚えない。ざっくり覚える。\u003c/li\u003e\n\u003cli\u003eAzure: 公式ドキュメントやサンプルドキュメント\u003c/li\u003e\n\u003cli\u003eAzure: 今はマイクロソフトラーンhttps://docs.microsoft.com/ja-jp/learn/\u003c/li\u003e\n\u003cli\u003eAWS: 低レイヤーや基礎ををないがしろにしない\u003c/li\u003e\n\u003cli\u003eAWS: 認定試験の勉強で思想が理解できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["event"],"title":"Developers Summit 2020 day2"},{"categories":null,"objectID":"952e128ee1a5034e97d6d82f5667ab58","permalink":"https://umemak.github.io/blog/posts/2020/02/13_devsumi/","publish_date":"2020-02-13T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://event.shoeisha.jp/devsumi/20200213\"\u003ehttps://event.shoeisha.jp/devsumi/20200213\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"13-d-3-サーバーレスなpci-dss対応クレジットカード決済基盤システムを運用しながらみんなでわいわいdiyの精神で新しいモバイル決済サービス6gramを作っている話\"\u003e13-D-3 サーバーレスなPCI DSS対応クレジットカード決済基盤システムを運用しながら、みんなでわいわいDIYの精神で、新しいモバイル決済サービス6gramを作っている話\u003c/h2\u003e\n\u003ch3 id=\"田岡-文利ミクシィ\"\u003e田岡 文利[ミクシィ]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003ePCI DSS\n\u003cul\u003e\n\u003cli\u003eクレジットカード業界のセキュリティ基準\u003c/li\u003e\n\u003cli\u003eイシュア、決済代行業者は対応必須\n\u003cul\u003e\n\u003cli\u003eカード情報を保存しないといけないので\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eエンドユーザは対象外\u003c/li\u003e\n\u003cli\u003e通信経路も対象\n\u003cul\u003e\n\u003cli\u003e直接カード情報を取り扱わない（トークンなど）で回避可能\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e12要件、約400項目\u003c/li\u003e\n\u003cli\u003e運用手順のドキュメントなど監査の対象になる\u003c/li\u003e\n\u003cli\u003eアカウント要件\n\u003cul\u003e\n\u003cli\u003eパスワードが必須になっている\u003c/li\u003e\n\u003cli\u003eパスワードレスにしたいのに。。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e運用負荷を下げたい\n\u003cul\u003e\n\u003cli\u003eインスタンスを使わない\u003c/li\u003e\n\u003cli\u003eコンテナをReadOnlyで使う\n\u003cul\u003e\n\u003cli\u003eログインできない＝IDパスワードが不要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDynamoDBを使用\n\u003cul\u003e\n\u003cli\u003eRDBのID/パスワードからの開放\u003c/li\u003e\n\u003cli\u003eKMS, IAMで暗号化や権限管理ができる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e6gram\n\u003cul\u003e\n\u003cli\u003e物理カードの重量（5g）＋1\u003c/li\u003e\n\u003cli\u003e満たす製品がない\n\u003cul\u003e\n\u003cli\u003eなぜ\n\u003cul\u003e\n\u003cli\u003e既製品はコンテナネイティブなものがない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサービス間通信にSQSを採用\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"13-f-4-若年層におけるプログラミング的思考の学びの場づくりと動機づけ\"\u003e13-F-4 若年層におけるプログラミング的思考の学びの場づくりと動機づけ\u003c/h2\u003e\n\u003ch3 id=\"鷲崎-弘宜早稲田大学齋藤-大輔早稲田大学坂本-一憲早稲田大学\"\u003e鷲崎 弘宜[早稲田大学]/齋藤 大輔[早稲田大学]/坂本 一憲[早稲田大学]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eプログラミング的思考\u003c/li\u003e\n\u003cli\u003eなぜ必要なのか\n\u003cul\u003e\n\u003cli\u003e第４次産業革命\n\u003cul\u003e\n\u003cli\u003e本質を捉えて論理的に思考し手順建てて世界を再定義する考え方と技能を\u003c/li\u003e\n\u003cli\u003e諸外国では始まっている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eプログラミング学習の意義\n\u003cul\u003e\n\u003cli\u003e創造的思考、数学的思考、メタ認知に効果あり\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eプログラミング的思考\n\u003cul\u003e\n\u003cli\u003e日常生活の問題解決にも有効\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eどのように養うか\n\u003cul\u003e\n\u003cli\u003e知らない→知っている→使える→応用できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eプログラミング的思考の整理\n\u003cul\u003e\n\u003cli\u003e現実の世界→モデルの世界\n\u003cul\u003e\n\u003cli\u003e分解、一般化、抽象化\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e論理的推論\n\u003cul\u003e\n\u003cli\u003e身近な話題で考える\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e地域におけるプログラミング学習の場の形成\u003c/li\u003e\n\u003cli\u003e活動テーマ：ものづくりと地域貢献\n\u003cul\u003e\n\u003cli\u003eルーブリック（Rubric）を用いた評価\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e課題\n\u003cul\u003e\n\u003cli\u003e人、モノ、金\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e学びの動機づけ\u003c/li\u003e\n\u003cli\u003e学習効果＝教材の質×学習の量\n\u003cul\u003e\n\u003cli\u003e適切な動機付けて、行動量を増やせる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e内発的動機づけ\n\u003cul\u003e\n\u003cli\u003e行動自体のために行動したいと感じる意欲のこと\u003c/li\u003e\n\u003cli\u003e３大欲求\n\u003cul\u003e\n\u003cli\u003e自立性、自己決定間：」選択肢をああ得る\u003c/li\u003e\n\u003cli\u003e有能勘・自己効力感：自身を与えるべき\u003c/li\u003e\n\u003cli\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e報酬と動機づけの関係\n\u003cul\u003e\n\u003cli\u003e統制的昨日、情報的昨日\u003c/li\u003e\n\u003cli\u003e２つの側面があり、使いどころに注意\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e内発的動機づけの低下（アンダーマイニング効果）\n\u003cul\u003e\n\u003cli\u003e効果については論争中\u003c/li\u003e\n\u003cli\u003e良くない報酬の共通認識はある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e個性とやる気が出る刺激がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"13-b-5-best-practices-in-implementing-container-image-promotion-pipelines--知っておくべきコンテナイメージプロモーションの方法\"\u003e13-B-5 Best Practices In Implementing Container Image Promotion Pipelines -知っておくべきコンテナイメージ・プロモーションの方法\u003c/h2\u003e\n\u003ch3 id=\"baruch-sadogurskyjfrog\"\u003eBaruch Sadogursky[JFrog]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://jfrog.com/shownote/developers-summit-2020/\"\u003ehttps://jfrog.com/shownote/developers-summit-2020/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e開発と本番環境の切り替え\n\u003cul\u003e\n\u003cli\u003eLABEL METADATA\u003c/li\u003e\n\u003cli\u003eDOCKER REPOSITORIES\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"13-e-6-なぜ技術力評価会の評価者はペアなのかー-8年半で378組の評価者ペアが835回評価した事例からみるペアの効果-ー\"\u003e13-E-6 なぜ技術力評価会の評価者はペアなのか？ー 8年半で378組の評価者ペアが835回評価した事例からみるペアの効果 ー\u003c/h2\u003e\n\u003ch3 id=\"小賀-昌法voyage-group\"\u003e小賀 昌法[VOYAGE GROUP]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e2011年以前は上長だけがする評価制度だった\u003c/li\u003e\n\u003cli\u003e現在はほぼすべてのエンジニアが評価に関わるように\u003c/li\u003e\n\u003cli\u003eエンジニア技術力評価の難しい理由\n\u003cul\u003e\n\u003cli\u003eバイアス\u003c/li\u003e\n\u003cli\u003e技術の多様化\n\u003cul\u003e\n\u003cli\u003e評価者が被評価者より詳しいとは限らない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e評価スキル向上機会の不足\n\u003cul\u003e\n\u003cli\u003e1on1をやっても考え方を引き出すスキルやフィードバックのやりかた\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e同じ人が長く評価することでの方より\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e技術力評価会制度は効果が見られた\u003c/li\u003e\n\u003cli\u003e評価制度\n\u003cul\u003e\n\u003cli\u003e誰がどのグレードかは社内に公開されている\u003c/li\u003e\n\u003cli\u003e上の等級に上がるには何が必要か\u003c/li\u003e\n\u003cli\u003e評価を通じて成長を促す\u003c/li\u003e\n\u003cli\u003e半年に１度実施\u003c/li\u003e\n\u003cli\u003e事業貢献×能力×CCFBの総合評価\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e報酬制度\n\u003cul\u003e\n\u003cli\u003e報酬と評価の結びつき\u003c/li\u003e\n\u003cli\u003e年功序列や均等割なら評価はいらない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e技術力評価会\n\u003cul\u003e\n\u003cli\u003eチームを超えた技術力評価\u003c/li\u003e\n\u003cli\u003e評価委員がいる\u003c/li\u003e\n\u003cli\u003eプレゼン30分＋質疑応答60分\n\u003cul\u003e\n\u003cli\u003eプレゼンの技術で評価されないよう、質疑の時間を多くしている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e誰から評価されてるのかは対面なのでもちろんオープン\u003c/li\u003e\n\u003cli\u003e評価は数値ではなく文章で書く\u003c/li\u003e\n\u003cli\u003e評価結果も社内に公開している\n\u003cul\u003e\n\u003cli\u003e８年で1050以上の蓄積\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e社外評価者\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eペアで評価することの効果\n\u003cul\u003e\n\u003cli\u003e評価が難しい原因を解消\u003c/li\u003e\n\u003cli\u003e悪い点もある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"13-b-7-コンテナをシンプルに使おう--cloud-run-のすゝめ-2020-冬\"\u003e13-B-7 コンテナをシンプルに使おう 〜 Cloud Run のすゝめ 2020 冬\u003c/h2\u003e\n\u003ch3 id=\"篠原-一徳グーグルクラウドジャパン\"\u003e篠原 一徳[グーグル・クラウド・ジャパン]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e撮影禁止\u003c/li\u003e\n\u003cli\u003e開発者はK8sを直接触りたいのか？\n\u003cul\u003e\n\u003cli\u003eコードを書きたいのではないか\u003c/li\u003e\n\u003cli\u003ek8sを使うには多数の手順が必要\u003c/li\u003e\n\u003cli\u003e簡単にするならサーバーレス\n\u003cul\u003e\n\u003cli\u003eインフラ管理不要、古マネージドセキュリティ、使った分だけ支払い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCloud Run\n\u003cul\u003e\n\u003cli\u003eKnativeベースのサーバーレスサービス\u003c/li\u003e\n\u003cli\u003e高速デプロイ\n\u003cul\u003e\n\u003cli\u003e0スケールから数秒でURL付与まで\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサーバーレスネイティブ\u003c/li\u003e\n\u003cli\u003e高いポータビリティ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e知っておいたほうが良いこと\n\u003cul\u003e\n\u003cli\u003eリソースモデル\n\u003cul\u003e\n\u003cli\u003eProject \u0026gt; Service \u0026gt; Revision \u0026gt; Container\u003c/li\u003e\n\u003cli\u003eServiceごとにエンドポイントが発行される\u003c/li\u003e\n\u003cli\u003eデプロイごとにRevisionが生成される\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eコンテナに関する\n\u003cul\u003e\n\u003cli\u003eタイムアウトデフォルト5分（最大15分）\n\u003cul\u003e\n\u003cli\u003e長時間のバッチの利用には向かない\n\u003cul\u003e\n\u003cli\u003e今後に期待\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e1vCPU、最大2vCPU\n\u003cul\u003e\n\u003cli\u003e今後に期待\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eメモリ256MB、最大2GB\u003c/li\u003e\n\u003cli\u003eデータの永続性なし\n\u003cul\u003e\n\u003cli\u003eコンテナとともに消える\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eオートスケーリング\n\u003cul\u003e\n\u003cli\u003eリクエスト数に応じてスケールする、最大1000\u003c/li\u003e\n\u003cli\u003eコンテナインスタンスが0になるまでの仕組みは非公開\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConcurrency\n\u003cul\u003e\n\u003cli\u003e1コンテナインスタンスで同時に受けられるリクエスト数\u003c/li\u003e\n\u003cli\u003e最大80\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e課金時間\n\u003cul\u003e\n\u003cli\u003e最初のリクエストが始まったところから最後のリクエストが終わったところまで\u003c/li\u003e\n\u003cli\u003eインスタンスの生存時間ではない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e実践的に使っていく\n\u003cul\u003e\n\u003cli\u003eアクセス制御\n\u003cul\u003e\n\u003cli\u003eIP制限はない\u003c/li\u003e\n\u003cli\u003eIAMで発行したトークンがヘッダに乗っていたら許可する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGCPサービス関連系\n\u003cul\u003e\n\u003cli\u003eサービスアカウント（アプリケーション用アカウント）を使う\u003c/li\u003e\n\u003cli\u003eデプロイ時にサービスアカウントを指定する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e3rdパーティサービスの利用\n\u003cul\u003e\n\u003cli\u003eSecret Managerを使う\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDBとの接続\n\u003cul\u003e\n\u003cli\u003eデプロイ時にDBのインスタンスIDのを指定すると、UNIX Socket経由でアクセスできる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e独自ドメインを使う\n\u003cul\u003e\n\u003cli\u003eCNAMEを登録すれば独自ドメイン持ち込み可能\u003c/li\u003e\n\u003cli\u003e証明書はLetsEncrypt\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eトラフィックの制御\n\u003cul\u003e\n\u003cli\u003eUpdate traffic昨日でBlue/Greenデプロイやカナリアリリースが可能\u003c/li\u003e\n\u003cli\u003eリビジョンを指定する\n\u003cul\u003e\n\u003cli\u003e今日GA\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eコンテナインスタンスが増えすぎないようにする\n\u003cul\u003e\n\u003cli\u003eMax instancesを指定する\n\u003cul\u003e\n\u003cli\u003eDBコネクション枯渇対策\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCold Start対応\n\u003cul\u003e\n\u003cli\u003eMinimum instancesで常時起動コンテナ数を指定できる\n\u003cul\u003e\n\u003cli\u003eアルファ機能\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eビルドデプロイの自動化\n\u003cul\u003e\n\u003cli\u003eCloud Buildを使う\u003c/li\u003e\n\u003cli\u003ekanikoを使うと、artifactのキャッシュをしてくれるのでおすすめ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"13-f-8-あのイベントの裏側が知れるカンファレンス運営者lt\"\u003e13-F-8 あのイベントの裏側が知れる！？カンファレンス運営者LT\u003c/h2\u003e\n\u003ch3 id=\"西馬-一郎backlog-world島根-義和jasst-tokyo岸川-孝明jaws-days高橋-慎一明日の開発カンファレンス谷本-心jjug-ccc細澤-あゆみxp祭り柏岡-秀男phpカンファレンス司会鍋島-英莉翔泳社\"\u003e西馬 一郎[Backlog World]/島根 義和[JaSST Tokyo]/岸川 孝明[JAWS DAYS]/高橋 慎一[明日の開発カンファレンス]/谷本 心[JJUG CCC]/細澤 あゆみ[XP祭り]/柏岡 秀男[PHPカンファレンス]/【司会】鍋島 英莉[翔泳社]\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eBacklog World 2020でともに学びましょう\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e2/29 大崎\u003c/li\u003e\n\u003cli\u003eDevRelCon Tokyo、技術書典と同日\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eJaSST Tokyo実行委員のお仕事\u003c/p\u003e","tags":["event"],"title":"Developers Summit 2020 day1"},{"categories":null,"objectID":"8e9e0c1544f52371b42b41a6319de52e","permalink":"https://umemak.github.io/blog/posts/2020/01/31_ntt_tech_conf_4/","publish_date":"2020-01-31T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://ntt-techconf.connpass.com/event/161866/\"\u003ehttps://ntt-techconf.connpass.com/event/161866/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eNTTグループのエンジニア有志が主催するカンファレンスイベントの4回目とのこと。\n初参加です。\u003c/p\u003e\n\u003ch2 id=\"opening-keynote\"\u003eOpening Keynote\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e参加者の半数がNTTグループ\n\u003cul\u003e\n\u003cli\u003eNTTグループは919社もある\u003c/li\u003e\n\u003cli\u003e30万人いるのでグループと言ってもでかすぎる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eエンジニアの有志が主催しています\u003c/li\u003e\n\u003cli\u003e前回から1年半\n\u003cul\u003e\n\u003cli\u003e退職エントリとか押しかけラグビーとか色々炎上していたので自粛していた\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"kubernetes基礎\"\u003eKubernetes基礎\u003c/h2\u003e\n\u003ch3 id=\"吉村-翔太\"\u003e吉村 翔太\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/yosshi_/kubernetesfalseji-chu\"\u003ehttps://speakerdeck.com/yosshi_/kubernetesfalseji-chu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e基本的なリソースを理解する\u003c/li\u003e\n\u003cli\u003e全体像\n\u003cul\u003e\n\u003cli\u003emasterのAPIサーバーを経由して動いている\n\u003cul\u003e\n\u003cli\u003e状態はetcd\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003emaster\u003c/li\u003e\n\u003cli\u003enode\n\u003cul\u003e\n\u003cli\u003eContainer runtime\u003c/li\u003e\n\u003cli\u003eKubeket\u003c/li\u003e\n\u003cli\u003eKube-proxy\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eetcd\u003c/li\u003e\n\u003cli\u003ekubectl\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMasterとControl Plane cmponentsのち外\n\u003cul\u003e\n\u003cli\u003eMaster + Kubelet + Kube-proxy = Control Plane\u003c/li\u003e\n\u003cli\u003eドキュメントによって表現に揺れがある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eetcsに行かない例外もある\n\u003cul\u003e\n\u003cli\u003e4パターン\u003c/li\u003e\n\u003cli\u003e/proxy, /exec, /attach, /logs\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eマネージドで使うなら、kubectlとコンテナだけ使えれば良いことが多い\n\u003cul\u003e\n\u003cli\u003eオンプレでやるなら全部理解しないと辛い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWorkload\n\u003cul\u003e\n\u003cli\u003ePod\n\u003cul\u003e\n\u003cli\u003eコンテナのデプロイの最小単位\u003c/li\u003e\n\u003cli\u003e複数コンテナをまとめたもの\u003c/li\u003e\n\u003cli\u003eメインのコンテナ＋サイドカーみたいな構成\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eReplicaSet\n\u003cul\u003e\n\u003cli\u003ePodの数を維持するためのリソース\u003c/li\u003e\n\u003cli\u003ePodのラベルで認識する\n\u003cul\u003e\n\u003cli\u003eラベルの付け方に注意する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eselectorとtemplateのラベルは基本的に同じ。歴史的経緯で冗長になっている。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDeployment(deploy)\n\u003cul\u003e\n\u003cli\u003eReplicaSetを管理するリソース\u003c/li\u003e\n\u003cli\u003eRollingUpdateに使う\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConfiguration\n\u003cul\u003e\n\u003cli\u003eConfigmap\n\u003cul\u003e\n\u003cli\u003e設定情報を保存するリソース\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSecret\n\u003cul\u003e\n\u003cli\u003eopaque\n\u003cul\u003e\n\u003cli\u003e使い方はConfigmapと同じ\u003c/li\u003e\n\u003cli\u003eエンコードされている\u003c/li\u003e\n\u003cli\u003econfigmapと権限を分けて管理するのが良い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDiscovery \u0026amp; LB\n\u003cul\u003e\n\u003cli\u003eClusterIP\n\u003cul\u003e\n\u003cli\u003eクラスタ内のアクセスを保証する\u003c/li\u003e\n\u003cli\u003eこれもラベルで宛先を認識する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNodePort\n\u003cul\u003e\n\u003cli\u003eクラスタ外からポート指定でアクセスする\u003c/li\u003e\n\u003cli\u003eノード内に同じラベルのPodが複数あったら、どこに行くかはランダム\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMetadata\n\u003cul\u003e\n\u003cli\u003eNamespace\n\u003cul\u003e\n\u003cli\u003e1つのクラスタを仮想クラスタにわかる\u003c/li\u003e\n\u003cli\u003e障害の影響範囲でどう分けるか考える\n\u003cul\u003e\n\u003cli\u003e開発環境ならNamespace、本番環境はクラスタとか\u003c/li\u003e\n\u003cli\u003eクラスタ分けると管理コストが上がる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1870件以上のカーネルの不具合修正に貢献した再現用プログラムを自動生成する試験自動化技術\"\u003e1870件以上のカーネルの不具合修正に貢献した再現用プログラムを自動生成する試験自動化技術\u003c/h2\u003e\n\u003ch3 id=\"藤井-秀行\"\u003e藤井 秀行\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.slideshare.net/nttdata-tech/syzkaller-linux-kerneltestingnttdata\"\u003ehttps://www.slideshare.net/nttdata-tech/syzkaller-linux-kerneltestingnttdata\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGoogleのDmitry Vykovが開発したsyzkaller（シスコーラー）\n\u003cul\u003e\n\u003cli\u003eGo言語\u003c/li\u003e\n\u003cli\u003eGoogleとしては非公式\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eファジング\n\u003cul\u003e\n\u003cli\u003e未知の不具合や脆弱性の検出に適したテスト手法\u003c/li\u003e\n\u003cli\u003eLinuxのセキュリティ品質向上に貢献\u003c/li\u003e\n\u003cli\u003eリリース前にセキュリティ脆弱性が修正されるようになりCVEが現象してきている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eドキュメント調査\n\u003cul\u003e\n\u003cli\u003e入力データの生成の仕組みが肝\u003c/li\u003e\n\u003cli\u003eソースカバレッジも気にする\u003c/li\u003e\n\u003cli\u003eカーネルの入力インターフェースはシステムコール\u003c/li\u003e\n\u003cli\u003esyz_manager\n\u003cul\u003e\n\u003cli\u003e仮想化ホスト上に存在するプロセス\u003c/li\u003e\n\u003cli\u003esyz-fuzzerに指示を行う\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eworkdir\n\u003cul\u003e\n\u003cli\u003e入出力ファイルを置く\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003esyz_fuzzer\n\u003cul\u003e\n\u003cli\u003e試験環境内に存在するプロセス\u003c/li\u003e\n\u003cli\u003esyz_executorを生成\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003esyz_eecutor\n\u003cul\u003e\n\u003cli\u003eシステムコールを送る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e動作確認\n\u003cul\u003e\n\u003cli\u003e20分くらいで見つかった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e試すなら私物PC、私物ネットワークでやる。絶対。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"coffee-break\"\u003eCoffee Break\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eShowcaseで「技術系業務自動化のエンジン展示」の説明を聞きました。\n\u003cul\u003e\n\u003cli\u003eTSVを入力として、コマンドを実行する\u003c/li\u003e\n\u003cli\u003esshとかtelnetとかブラウザとか操作できる\u003c/li\u003e\n\u003cli\u003eこれを横連携させて実行できるのは（開発開始した当時は）あまりなかった\u003c/li\u003e\n\u003cli\u003eOSSとして公開したいが、まだ調整中。\u003c/li\u003e\n\u003cli\u003e公開されたら試してみたいと思います。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"react-hooksとgraphqlで社内レガシーサービス巻き取ってみたらものすごくはかどった話\"\u003eReact HooksとGraphQLで社内レガシーサービス巻き取ってみたらものすごくはかどった話\u003c/h2\u003e\n\u003ch3 id=\"奥井-寛樹\"\u003e奥井 寛樹\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/hrk091/react-hookstographqldeshe-nei-regasisabisuwojuan-kiqu-tutemitaramofalsesugokuhakadotutahua-153983bf-84bd-4be7-83c4-c8fa826db79e\"\u003ehttps://speakerdeck.com/hrk091/react-hookstographqldeshe-nei-regasisabisuwojuan-kiqu-tutemitaramofalsesugokuhakadotutahua-153983bf-84bd-4be7-83c4-c8fa826db79e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eフロントエンド＋BFFの話\u003c/li\u003e\n\u003cli\u003eうまく行った理由\n\u003cul\u003e\n\u003cli\u003eフレームワークによる抽象化がうまく、ユースケースにフォーカスした開発ができた\u003c/li\u003e\n\u003cli\u003eGraphQLエコシステムが充実していた\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eReact Hooks\n\u003cul\u003e\n\u003cli\u003eReact FCでStateを扱えるようにするフレームワーク\u003c/li\u003e\n\u003cli\u003eReact lifecycle eventを意識しなくて良くなる\u003c/li\u003e\n\u003cli\u003eContext APIの使い勝手が向上\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGraphQL\n\u003cul\u003e\n\u003cli\u003eAPIプロトコル\u003c/li\u003e\n\u003cli\u003eRESTより柔軟\u003c/li\u003e\n\u003cli\u003eクライアント側でレスポンスを定義できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGraphene\n\u003cul\u003e\n\u003cli\u003ePythonのGraphQLフレームワーク\u003c/li\u003e\n\u003cli\u003eORMモデル定義からAPIを自動生成してくれる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eApollo\n\u003cul\u003e\n\u003cli\u003eGraphQLのライブラリ\u003c/li\u003e\n\u003cli\u003eバックエンドとフロントエンドクライアントを提供\u003c/li\u003e\n\u003cli\u003eReactに標準対応している\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e漸近的型付け\n\u003cul\u003e\n\u003cli\u003e動的型付け言語に後で型をつけること\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"海外講演を通じて得られた知見英語力α編\"\u003e海外講演を通じて得られた知見(英語力＋α編)\u003c/h2\u003e\n\u003ch3 id=\"神原-健一\"\u003e神原 健一\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/korodroid/ntt-tech-conference-hai-wai-jiang-yan-wotong-zitede-raretazhi-jian-ying-yu-li-abian\"\u003ehttps://speakerdeck.com/korodroid/ntt-tech-conference-hai-wai-jiang-yan-wotong-zitede-raretazhi-jian-ying-yu-li-abian\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/korodroid/items/bf029f7aad896731771a\"\u003ehttps://qiita.com/korodroid/items/bf029f7aad896731771a\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e英語を学ぶ目的を具体的に描く\n\u003cul\u003e\n\u003cli\u003e海外カンファレンスで講演する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eskills\n\u003cul\u003e\n\u003cli\u003ereading, listening, writing, speaking\u003c/li\u003e\n\u003cli\u003e自分のレベルの把握\u003c/li\u003e\n\u003cli\u003eどのスキルをどのくらいにしたいのか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e先人に学ぶ\n\u003cul\u003e\n\u003cli\u003eSlideShare, Speaker Deck\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e登壇→フィードバック→次回への反映のループ\n\u003cul\u003e\n\u003cli\u003e習うより慣れろ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e頭の中にある考えをリアルタイムに英語で話す\n\u003cul\u003e\n\u003cli\u003eCheat Strategy\n\u003cul\u003e\n\u003cli\u003eスライドのノートにセリフを全部書く\u003c/li\u003e\n\u003cli\u003e→会場を見ないで読むだけになってしまった。失敗。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e自身を持って自分の言葉で話すことが大事\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003etips for communications\n\u003cul\u003e\n\u003cli\u003e自分から話しかける\u003c/li\u003e\n\u003cli\u003eお互いの作品を見せ合う\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e英語の教材の選び方\n\u003cul\u003e\n\u003cli\u003e（自分の目的とレベルに合わせて選ぶしか）ない\u003c/li\u003e\n\u003cli\u003eノンネイティブ英語の練習\n\u003cul\u003e\n\u003cli\u003eノンネイティブスピーカーのセッション動画\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eネイティブ英語の練習\n\u003cul\u003e\n\u003cli\u003eTOEIC公式問題集\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e英語の「音」の聞き分け\n\u003cul\u003e\n\u003cli\u003e英語耳\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eオンライン英会話\n\u003cul\u003e\n\u003cli\u003e体験レッスンやってみると良い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e英語を話す機会を増やす\n\u003cul\u003e\n\u003cli\u003e面倒なことこそ、修行のチャンス\u003c/li\u003e\n\u003cli\u003e知識＜＜＜実践\u003c/li\u003e\n\u003cli\u003eビジネスだけではなくプライベートでも\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"パワポをよくしただけなのにデザインの力で会社に貢献するチームの紹介\"\u003eパワポをよくしただけなのに〜デザインの力で会社に貢献するチームの紹介\u003c/h2\u003e\n\u003ch3 id=\"鈴木-雅貴\"\u003e鈴木 雅貴\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.slideshare.net/suzukima/ss-226433621\"\u003ehttps://www.slideshare.net/suzukima/ss-226433621\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e2つのデザイン支援チームができてしまった\n\u003cul\u003e\n\u003cli\u003e統合した\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e製品の価値・魅力向上\u003c/li\u003e\n\u003cli\u003e社外のデザイナーと比較して気軽に依頼できる\u003c/li\u003e\n\u003cli\u003eデザインサポーター制度\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"アジャイル開発手法における監視システム開発効率化の取り組み\"\u003eアジャイル開発手法における監視システム開発効率化の取り組み\u003c/h2\u003e\n\u003ch3 id=\"石田-瑛一\"\u003e石田 瑛一\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://drive.google.com/file/d/1imNXoqfQAbBGUDH1Y45fn1sVb1rgHjW6/view\"\u003ehttps://drive.google.com/file/d/1imNXoqfQAbBGUDH1Y45fn1sVb1rgHjW6/view\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eデプロイ作業の効率化が必要\n\u003cul\u003e\n\u003cli\u003e手順書でやってた\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAnsible、Gitlab CI/CD\n\u003cul\u003e\n\u003cli\u003e安定するまで2ヶ月くらいかかった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"スタートアップチームで学んだエンジニアの心構え\"\u003eスタートアップチームで学んだエンジニアの心構え\u003c/h2\u003e\n\u003ch3 id=\"松木-久幸\"\u003e松木 久幸\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/matsu0228/the-attitude-of-the-engineer-who-learned-from-the-start-up-team\"\u003ehttps://speakerdeck.com/matsu0228/the-attitude-of-the-engineer-who-learned-from-the-start-up-team\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e開発で一番難しいのは何を作るか決めること\n\u003cul\u003e\n\u003cli\u003e詳細まで認識を合わせる\u003c/li\u003e\n\u003cli\u003e正解は誰にも判断できない\n\u003cul\u003e\n\u003cli\u003e常に変化が求められる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e価値向上のために「発散」も必要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e仕事を楽しむこと\n\u003cul\u003e\n\u003cli\u003eメンバーが主体的になるためにも、承認欲求を満たすことが大切\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"nttデータのトップ技術者育成技統本塾のご紹介\"\u003eNTTデータのトップ技術者育成！「技統本塾」のご紹介\u003c/h2\u003e\n\u003ch3 id=\"小泉-鉄之祐\"\u003e小泉 鉄之祐\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e技術革新統括本部\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"amazon-eks上でのvnf開発奮闘記\"\u003eAmazon EKS上でのVNF開発奮闘記\u003c/h2\u003e\n\u003ch3 id=\"篠原-健太\"\u003e篠原 健太\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/sinohara/amazon-eksshang-defalsevnfkai-fa-fen-dou-ji\"\u003ehttps://speakerdeck.com/sinohara/amazon-eksshang-defalsevnfkai-fa-fen-dou-ji\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eネットワークの仮想化\u003c/li\u003e\n\u003cli\u003e閉域NW構築\n\u003cul\u003e\n\u003cli\u003eAWSを閉域として構築できるか？\u003c/li\u003e\n\u003cli\u003eサブネットを分けて構築する\u003c/li\u003e\n\u003cli\u003eEKS v1.13から対応\u003c/li\u003e\n\u003cli\u003eマネージドのLBが外向きの通信に課題があったのでnginxを立てた\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"cisco-ルータのログを-stackdriver-に送って可視化してみた\"\u003eCisco ルータのログを Stackdriver に送って可視化してみた\u003c/h2\u003e\n\u003ch3 id=\"田島-照久\"\u003e田島 照久\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/tjmtrhs/cisco-rutafalseroguwo-stackdriver-nisong-tuteke-shi-hua-sitemita\"\u003ehttps://speakerdeck.com/tjmtrhs/cisco-rutafalseroguwo-stackdriver-nisong-tuteke-shi-hua-sitemita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eログ基盤を作りたいわけではなく、可視化したログを見たいだけ\u003c/li\u003e\n\u003cli\u003estackdriverは外部のsyslogを直接受信できない\n\u003cul\u003e\n\u003cli\u003eルーターで処理すれば良い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCiscoのルーターで、Pythonが動かせる機種がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"closing-keynote\"\u003eClosing Keynote\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e151/180人参加（速報値）\u003c/li\u003e\n\u003cli\u003e15人#1〜#4までに登壇した退職者\u003c/li\u003e\n\u003cli\u003eもっと面白いエンジニアになる\u003c/li\u003e\n\u003c/ul\u003e","tags":["event","ntt"],"title":"NTT Tech Conference #4"},{"categories":null,"objectID":"ab6acd3293c87e3705a6919eb9af1f41","permalink":"https://umemak.github.io/blog/posts/2020/01/24_docomo_openhouse/","publish_date":"2020-01-24T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"http://docomo-rd-openhouse.jp/2020/\"\u003ehttp://docomo-rd-openhouse.jp/2020/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e昨日に引き続き、来ました。\n昨日より人が多い印象。\u003c/p\u003e\n\u003ch2 id=\"特別講演-5g時代の幕開けとサスティナブルな社会の実現\"\u003e[特別講演] 5G時代の幕開けとサスティナブルな社会の実現\u003c/h2\u003e\n\u003ch3 id=\"株nttドコモ-取締役常務執行役員-rdイノベーション本部長-中村-寛\"\u003e(株)NTTドコモ 取締役常務執行役員 R\u0026amp;Dイノベーション本部長 中村 寛\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e18の未来\u003c/li\u003e\n\u003cli\u003e5G, AI, デバイスの進化\u003c/li\u003e\n\u003cli\u003eこの先の10年の展望\u003c/li\u003e\n\u003cli\u003e5Gプレサービス\n\u003cul\u003e\n\u003cli\u003eまだ端末が販売されていないので、プレという位置づけ\n\u003cul\u003e\n\u003cli\u003eイベントなどではドコモが貸出している\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e春、商用スタート\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e通信基盤（1G〜2G）、生活基盤（2G〜4G）から社会基盤（5G）へ\u003c/li\u003e\n\u003cli\u003e5Gを軸としたパートナーとの共創\n\u003cul\u003e\n\u003cli\u003e3200を超える企業、団体が参画\u003c/li\u003e\n\u003cli\u003e様々な業界\u003c/li\u003e\n\u003cli\u003e業界を超えた価値共創\u003c/li\u003e\n\u003cli\u003e事例\n\u003cul\u003e\n\u003cli\u003eスポーツ/ライブ観戦\u003c/li\u003e\n\u003cli\u003eゲーム/eスポーツ\u003c/li\u003e\n\u003cli\u003e観光\u003c/li\u003e\n\u003cli\u003eTV番組制作の作業効率化\n\u003cul\u003e\n\u003cli\u003eケーブル取り回し・敷設が不要になる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e工場内\n\u003cul\u003e\n\u003cli\u003e多品種少量生産への対応\n\u003cul\u003e\n\u003cli\u003eレイアウトフリー生産ライン\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e熟練工不足への対応\n\u003cul\u003e\n\u003cli\u003eAI/IoTによるリアルタイムコーチング\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eネットワークの進化\n\u003cul\u003e\n\u003cli\u003eトラフィックのスパイク\u003c/li\u003e\n\u003cli\u003eセキュリティ\u003c/li\u003e\n\u003cli\u003eいままではE2Eで最適化されたネットワーク\u003c/li\u003e\n\u003cli\u003e仮想化\u003c/li\u003e\n\u003cli\u003e可搬基地局\u003c/li\u003e\n\u003cli\u003eO-RAN, MEC, 5GC\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eドコモオープンイノベーションクラウド\u003c/li\u003e\n\u003cli\u003e6Gに向けたホワイトペーパーを公開（2020/1/22）\u003c/li\u003e\n\u003cli\u003e4Gと5Gの比較\n\u003cul\u003e\n\u003cli\u003e5Gの特徴\u003c/li\u003e\n\u003cli\u003e4Gと5Gの連携\n\u003cul\u003e\n\u003cli\u003eスムーズなマイグレーションができるよう設計されている\u003c/li\u003e\n\u003cli\u003eLTEからLTEアドバンスドへの移行のときもそうだった\u003c/li\u003e\n\u003cli\u003e4Gネットワークでもできることはある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデバイスの進化\n\u003cul\u003e\n\u003cli\u003e電話の進化（〜2G）、情報ツールの進化（〜4G）、ユーザー体験の進化（5G〜）\u003c/li\u003e\n\u003cli\u003eまだ発展の余地がある\n\u003cul\u003e\n\u003cli\u003e操作の制約、画面サイズの制約\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eマイネットワーク構想\n\u003cul\u003e\n\u003cli\u003eスマホのみでは不便なところをサポートするデバイス\n\u003cul\u003e\n\u003cli\u003eスマートグラス、VR、フレキシブルディスプレイ\u003c/li\u003e\n\u003cli\u003eMagic Leap社と連携\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAIの進化\n\u003cul\u003e\n\u003cli\u003e環境が整った（第3次ブーム）\u003c/li\u003e\n\u003cli\u003eAIの意義\n\u003cul\u003e\n\u003cli\u003eAIを個人に活かす\n\u003cul\u003e\n\u003cli\u003e翻訳の高度化\n\u003cul\u003e\n\u003cli\u003eMirai Translator\n\u003cul\u003e\n\u003cli\u003e2年前はTOEICで700点くらいを目指していた。現在は960点いける。\n\u003cul\u003e\n\u003cli\u003eプロの翻訳家なみ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e話し言葉のリアルタイム翻訳\n\u003cul\u003e\n\u003cli\u003e実用的なレベルになってきている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAIを社会・産業に活かす\n\u003cul\u003e\n\u003cli\u003eネットワークの品質向上\n\u003cul\u003e\n\u003cli\u003e最適なエリアの自動設計\u003c/li\u003e\n\u003cli\u003eサイレント故障の検知\u003c/li\u003e\n\u003cli\u003eユーザー申告要因解析\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAI会議室管理\n\u003cul\u003e\n\u003cli\u003e利用データを解析して未来の利用を予測する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eドコモのAIの強み\n\u003cul\u003e\n\u003cli\u003e活用ノウハウ、データサイエンティスト、ビッグデータ\u003c/li\u003e\n\u003cli\u003eKDD CUP 2019で世界一位\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサステイナブルな社会の実現に向けて\n\u003cul\u003e\n\u003cli\u003eサイバーとフィジカルの融合\u003c/li\u003e\n\u003cli\u003e実世界の人・モノ・コトを情報化し、未来を予測して、実世界を最適化\u003c/li\u003e\n\u003cli\u003e90年代のユビキタスコンピューティングの概念から\u003c/li\u003e\n\u003cli\u003e通信インフラやコンピューティング、AIなど環境が整って、実現の可能性が見えてきた\u003c/li\u003e\n\u003cli\u003e提供価値\n\u003cul\u003e\n\u003cli\u003e交通\n\u003cul\u003e\n\u003cli\u003e現在：スマホやカーナビで渋滞情報がわかる\n\u003cul\u003e\n\u003cli\u003e最短ルートを示してくれるが、渋滞自体の解消はしてくれない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e未来：車両の走行状況や目的地、周辺道路状況などを情報化し、交通を制御\n\u003cul\u003e\n\u003cli\u003e信号のコントロールも考えられる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e農業\n\u003cul\u003e\n\u003cli\u003e現在：労働集約多々産業であり、従事者のノウハウで成立している\n\u003cul\u003e\n\u003cli\u003e産業の効率化と後継者不足\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e未来：\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e融合の要諦（ようてい）\n\u003cul\u003e\n\u003cli\u003e人モノコトの情報化：デバイス\u003c/li\u003e\n\u003cli\u003eデータ取得と蓄積：AI\u003c/li\u003e\n\u003cli\u003e未来予測地の発見：AI\u003c/li\u003e\n\u003cli\u003eアクチュエイト：デバイス\u003c/li\u003e\n\u003cli\u003eのループを回す\u003c/li\u003e\n\u003cli\u003eAIとデバイスは5Gで接続\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"招待講演-ラグビーから学ぶ組織づくりと技術進化に伴う-スポーツの未来について\"\u003e[招待講演] ラグビーから学ぶ組織づくりと技術進化に伴う スポーツの未来について\u003c/h2\u003e\n\u003ch3 id=\"元ラグビー日本代表-神戸製鋼コベルコスティーラーズ-アンバサダー-大畑-大介\"\u003e元ラグビー日本代表 神戸製鋼コベルコスティーラーズ アンバサダー 大畑 大介\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e今回の大会を振り返って\n\u003cul\u003e\n\u003cli\u003e選手たちのハードワーク\u003c/li\u003e\n\u003cli\u003e明確な目標のイメージ\u003c/li\u003e\n\u003cli\u003e年間240日一緒に生活\u003c/li\u003e\n\u003cli\u003e一緒に過ごした時間が長い\u003c/li\u003e\n\u003cli\u003eそれぞれの役割が適材適所に与えられた\n\u003cul\u003e\n\u003cli\u003e個々ができることを同じベクトルを向いて全力で取り組む\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eアイルランド戦の前半最後スクラムで押し込んだ場面\n\u003cul\u003e\n\u003cli\u003e軸になるものをしっかり作った\u003c/li\u003e\n\u003cli\u003e体格だけではなく、技術を高めた\u003c/li\u003e\n\u003cli\u003e足の向きなど細かいところまでこだわる\u003c/li\u003e\n\u003cli\u003e精神的に優位に立てた\u003c/li\u003e\n\u003cli\u003e精神論だけではない\n\u003cul\u003e\n\u003cli\u003eデータも活用\u003c/li\u003e\n\u003cli\u003eレフェリーの癖も分析して対策する\n\u003cul\u003e\n\u003cli\u003eトップのレフェリーほど基準がブレない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e15人の個性をまとめ上げる\n\u003cul\u003e\n\u003cli\u003eジャッジを下す人がどこに向かっているのかを明確に示す\u003c/li\u003e\n\u003cli\u003e各自がどこにいてどこに向かっているのかを意識する\u003c/li\u003e\n\u003cli\u003eしっかりした方向性、目標\u003c/li\u003e\n\u003cli\u003e目標の道中での評価\n\u003cul\u003e\n\u003cli\u003e適切に軌道修正も行う\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e権限を預ける\n\u003cul\u003e\n\u003cli\u003e個々人がそれぞれ考えて動く\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e30年くらい前の大学ラグビーとの比較\n\u003cul\u003e\n\u003cli\u003eラグビーは進化している\n\u003cul\u003e\n\u003cli\u003eルールも変わる\n\u003cul\u003e\n\u003cli\u003e昔はトライは0点だった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e前に送るにはキックが手っ取り早いが、ボールが相手に渡ってしまう\n\u003cul\u003e\n\u003cli\u003eキックの技術の向上\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eある程度行き着いた先に何があるかを考える\u003c/li\u003e\n\u003cli\u003e指導する立場でも自分が覚えた頃のことが通用しなくなる\n\u003cul\u003e\n\u003cli\u003e押し付けでは伝わらない\u003c/li\u003e\n\u003cli\u003e自分の中で思い描き、伝える\u003c/li\u003e\n\u003cli\u003eトップの言葉の説得力\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデータ取りの方法\n\u003cul\u003e\n\u003cli\u003e5G時代どうなる\u003c/li\u003e\n\u003cli\u003eGPSや心拍数の例\u003c/li\u003e\n\u003cli\u003e選手の負担が減る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e観戦体験\n\u003cul\u003e\n\u003cli\u003e試合会場で見るよりわかりやすい\u003c/li\u003e\n\u003cli\u003e臨場感は負ける\u003c/li\u003e\n\u003cli\u003eマルチアングル視聴\n\u003cul\u003e\n\u003cli\u003e8系統\u003c/li\u003e\n\u003cli\u003e解説者には最適\u003c/li\u003e\n\u003cli\u003eそれぞれが好きな場面を見れる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eスタッツの活用\u003c/li\u003e\n\u003cli\u003eレフェリーの技術向上\u003c/li\u003e\n\u003cli\u003eレフェリーカメラで技術伝承\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eスクラムの衝撃\n\u003cul\u003e\n\u003cli\u003eスクラムの中も見れるようになる？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e個人の人気から競技の人気へ\u003c/li\u003e\n\u003cli\u003eサッカーとラグビー\u003c/li\u003e\n\u003cli\u003eラグビーの良さ\n\u003cul\u003e\n\u003cli\u003e自己犠牲のスポーツ\u003c/li\u003e\n\u003cli\u003e人間関係\u003c/li\u003e\n\u003cli\u003eチーム（組織）に対して不利益なことをしてはいけない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e2023フランスWC\n\u003cul\u003e\n\u003cli\u003e自国アドバンテージのない中でどう戦うか\u003c/li\u003e\n\u003cli\u003eランキング8以内に入れるかが重要\n\u003cul\u003e\n\u003cli\u003e予選のグループ分けに影響する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"パートナー講演-5gevolution--6gパネルセッション5gの発展とその先の未来\"\u003e[パートナー講演] 5GEvolution \u0026amp; 6Gパネルセッション：「5Gの発展とその先の未来」\u003c/h2\u003e\n\u003ch3 id=\"株nttドコモ-執行役員5gイノベーション推進室長-中村-武宏-ericssonnokianvidia\"\u003e(株)NTTドコモ 執行役員　5Gイノベーション推進室長 中村 武宏 Ericsson,Nokia,Nvidia\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e結構ゆっくり喋ってくれたので、比較的聞き取りやすい英語だったけれど、知らない単語が多くて理解できないところが多かった。\u003c/li\u003e\n\u003cli\u003e以下はスライドからのメモ。書き写すのが間に合わなくて足りないところ多数。\u003c/li\u003e\n\u003cli\u003eDr.Erik Dahlman\n\u003cul\u003e\n\u003cli\u003e6 pillars for 6G\u003c/li\u003e\n\u003cli\u003eJourney towards 6G\n\u003cul\u003e\n\u003cli\u003eConnectivity everywhere\u003c/li\u003e\n\u003cli\u003eJoint communication and sensig\u003c/li\u003e\n\u003cli\u003eZero-cost, zero-energy devices\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSome key technology components\n\u003cul\u003e\n\u003cli\u003eFurther spectrum extension\n\u003cul\u003e\n\u003cli\u003eEntering the THz range\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAI\u003c/li\u003e\n\u003cli\u003eNew ways for connectivity\n\u003cul\u003e\n\u003cli\u003eEvolved IAB, D2D, non-terrestrial components, \u0026hellip;\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDr.Amitava Ghosh\n\u003cul\u003e\n\u003cli\u003e6G\n\u003cul\u003e\n\u003cli\u003eRF Sensing 100 Gbits/sec @ short range, Gboos @ high speed\u003c/li\u003e\n\u003cli\u003eIndustrial IoT optimezed\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSix questions\n\u003cul\u003e\n\u003cli\u003emost important net technologies\u003c/li\u003e\n\u003cli\u003eprimary use cases\u003c/li\u003e\n\u003cli\u003emost important KPIs\u003c/li\u003e\n\u003cli\u003eserve limitations of 5G\u003c/li\u003e\n\u003cli\u003eflexivility and scalabilyty\u003c/li\u003e\n\u003cli\u003ebackwards compatible\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMr.Masataka Osaki\n\u003cul\u003e\n\u003cli\u003e3 REVOLUTIONS SHAPPENNING\n\u003cul\u003e\n\u003cli\u003eIoT\u003c/li\u003e\n\u003cli\u003e5G\u003c/li\u003e\n\u003cli\u003eAI\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eQuestions\n\u003cul\u003e\n\u003cli\u003eTypical use cases in 2020s and 2030s, respectively?\u003c/li\u003e\n\u003cli\u003eDefinition of 6G\u003c/li\u003e\n\u003cli\u003eKey requirements for 6GG\u003c/li\u003e\n\u003cli\u003eMajor technologies for 5G evolution and 6G\u003c/li\u003e\n\u003cli\u003eRole of AI for 5G evolution and 6G\u003c/li\u003e\n\u003cli\u003eTime schedule for 6G\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"オープンセミナー-無人販売機とドコモ会員基盤を使った購買データ分析について\"\u003e[オープンセミナー] 無人販売機とドコモ会員基盤を使った購買データ分析について\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e無人システム販売のトレンド\n\u003cul\u003e\n\u003cli\u003eRFIDから画像認識に\u003c/li\u003e\n\u003cli\u003eキャッシュレスが追い風に\u003c/li\u003e\n\u003cli\u003e店舗対象が激増したが、ほとんどが実験段階もしくは実装店舗\u003c/li\u003e\n\u003cli\u003e自販機が復権\n\u003cfigure\u003e\u003cimg src=\"../IMG_20200124_121338.jpg\"\u003e\n  \u003c/figure\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e無人販売の限界\n\u003cul\u003e\n\u003cli\u003e日本の小売業界の諸問題\n\u003cul\u003e\n\u003cli\u003eロジスティック\u003c/li\u003e\n\u003cli\u003e年間商品点数の多さ\u003c/li\u003e\n\u003cli\u003e各種法規制など\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eシステムだけではなく「運用をどう回すか」が重要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eドコモは昔から自販機ビジネスをやっていた\u003c/li\u003e\n\u003cli\u003e社内で実証実験中\n\u003cfigure\u003e\u003cimg src=\"../IMG_20200124_122002.jpg\"\u003e\n  \u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e専用アプリでQRコードを読み込んで認証＆自販機のドアロック解除\u003c/li\u003e\n\u003cli\u003e商品を取り出す\u003c/li\u003e\n\u003cli\u003eドアを閉めると決済が走る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e商用化に向けた検討\n\u003cul\u003e\n\u003cli\u003e必要機能の洗い出し\u003c/li\u003e\n\u003cli\u003e運用上の課題抽出\u003c/li\u003e\n\u003cli\u003eデータ分析手法の開発\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e購買データ分析の世代\n\u003cul\u003e\n\u003cli\u003e伝票からPOS、個人IDへ\u003c/li\u003e\n\u003cli\u003e企業目線から消費者目線での分析に変化していっている\u003c/li\u003e\n\u003cli\u003e匿名ではあるが、実際に存在する人間の購買データが分析できる\n\u003cfigure\u003e\u003cimg src=\"../IMG_20200124_122517.jpg\"\u003e\n  \u003c/figure\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eプラットフォーム化がもたらすもの\n\u003cul\u003e\n\u003cli\u003e顧客像\u003c/li\u003e\n\u003cli\u003e行動特性\u003c/li\u003e\n\u003cli\u003e異業種のデータ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e活用アイデア\n\u003cul\u003e\n\u003cli\u003e業界をまたがったクラスタによる商品レコメンド\u003c/li\u003e\n\u003cli\u003e健康管理サービスとの連携\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"オープンセミナー-ivaintelligent-video-analyticsエッジaiプラットフォーム-iot-with-ai時代を支えるエコシステム構築に向けて\"\u003e[オープンセミナー] IVA（Intelligent Video Analytics）エッジAIプラットフォーム 〜IoT with AI時代を支えるエコシステム構築に向けて〜\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eIoTの普及でセンサーやカメラなどのエッジデバイスから大量のデータが発生\n\u003cul\u003e\n\u003cli\u003eデータトラフィック予想、2022年には25EB/Month\u003c/li\u003e\n\u003cli\u003eクラウドだけで処理しきれないならばデータ生成場所（エッジ）で処理する\n\u003cfigure\u003e\u003cimg src=\"../IMG_20200124_141251.jpg\"\u003e\n  \u003c/figure\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIoTにおいて映像解析がフィ津用となるユースケースは多い\n\u003cul\u003e\n\u003cli\u003eセキュリティ\n\u003cul\u003e\n\u003cli\u003e顔認証、人物検知、不信物検出\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eスマートシティ／ビルディング\n\u003cul\u003e\n\u003cli\u003e人流計測、入隊管理、火災検知\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e交通\n\u003cul\u003e\n\u003cli\u003e交通量計測、車種認識、ナンバープレート認識\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e建設\n\u003cul\u003e\n\u003cli\u003e稼働監視、動線分析、危険検知\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e工場\n\u003cul\u003e\n\u003cli\u003e製品検査、行動・動線分析、在庫監視\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e物流\n\u003cul\u003e\n\u003cli\u003e車両検知、動線分析、倉庫監視\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e広告／マーケティング\n\u003cul\u003e\n\u003cli\u003e人数計測、滞留検知、人物属性認識\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e小売\n\u003cul\u003e\n\u003cli\u003e人数計測、顔認証、万引検知\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAIソリューション導入の課題\n\u003cul\u003e\n\u003cli\u003e利用者側\n\u003cul\u003e\n\u003cli\u003eシステム基板への高額な投資\u003c/li\u003e\n\u003cli\u003eAIソリューション選定の難しさ\u003c/li\u003e\n\u003cli\u003e運用・維持の煩雑さ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAIアルゴリズムメーカー側\n\u003cul\u003e\n\u003cli\u003e設定やチューニング作業の現場実施が困難\u003c/li\u003e\n\u003cli\u003e設置作業者と設定技術者がほとんどの場合異なるため、設置現場での共同作業は非現実的\u003c/li\u003e\n\u003cli\u003e設置後も微調整が必要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eエッジAIプラットフォームでAI流通エコシステムを構築\n\u003cfigure\u003e\u003cimg src=\"../IMG_20200124_141652_MP.jpg\"\u003e\n  \u003c/figure\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"オープンセミナー-電池で10年動く省電力lte端末開発の取り組み\"\u003e[オープンセミナー] 電池で10年動く！省電力LTE端末開発の取り組み\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e昨日と同じ内容でした\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"オープンセミナー-ドコモオープンイノベーションクラウドのご紹介\"\u003e[オープンセミナー] ドコモオープンイノベーションクラウドのご紹介\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e5G実現に向けたロードマップ\n\u003cul\u003e\n\u003cli\u003e2019年9月20日：プレサービス開始\u003c/li\u003e\n\u003cli\u003e2020年春：商用サービス開始\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDOCOMO 5G Open Partner Program\n\u003cul\u003e\n\u003cli\u003e2018年2月：プログラム提供開始\u003c/li\u003e\n\u003cli\u003e約3200団体・企業が参加\u003c/li\u003e\n\u003cli\u003e263件の5Gトライアル実施\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eドコモオープンイノベーションクラウド\n\u003cul\u003e\n\u003cli\u003eドコモ網との直結により伝送遅延の低減を実現するMEC（Multi-access Edge Computing）\n\u003cul\u003e\n\u003cli\u003e通信のリアルタイム性\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e閉域での提供\n\u003cul\u003e\n\u003cli\u003eセキュリティ担保\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"会場散策\"\u003e会場散策\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eオリンピックのトーチ\n\u003cfigure\u003e\u003cimg src=\"../IMG_20200124_101917_MP.jpg\"\u003e\n  \u003c/figure\u003e\n\u003c/p\u003e","tags":["event","5g","docomo"],"title":"DOCOMO Open House 2020 day2"},{"categories":null,"objectID":"10f54217903d096f59b41e5370c519cc","permalink":"https://umemak.github.io/blog/posts/2020/01/23_docomo_openhouse/","publish_date":"2020-01-23T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"http://docomo-rd-openhouse.jp/2020/\"\u003ehttp://docomo-rd-openhouse.jp/2020/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eまさかビッグサイトが2箇所あるとは知らず、東京ビッグサイト駅で降りてどこで開催されているかわからず、そしてここじゃないということに気づいた。\n\u003cfigure\u003e\u003cimg src=\"../IMG_20200123_100822.jpg\"\u003e\n\u003c/figure\u003e\n\nシャトルバスが来る気配もなく、雨の中1キロ以上歩いて移動。\nそんなに離れているなら別の名前にしてほしかった。\n（後で調べたところ、青海展示棟はオリンピック対策で作った仮設の施設とのこと。）\u003c/p\u003e","tags":["event","5g","docomo"],"title":"DOCOMO Open House 2020 day1"},{"categories":null,"objectID":"51c3cee36ac6a1524dbb4c212e40eb7d","permalink":"https://umemak.github.io/blog/posts/2020/01/21_freee_tech_night_5/","publish_date":"2020-01-21T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://freee-tech-night.connpass.com/event/157012/\"\u003ehttps://freee-tech-night.connpass.com/event/157012/\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"会計freeeのデプロイを10倍早くした話\"\u003e会計freeeのデプロイを10倍早くした話\u003c/h2\u003e\n\u003ch3 id=\"北川修平-shuheiktgw\"\u003e北川修平 (shuheiktgw)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch2 id=\"会計freee\"\u003e会計freee\u003c/h2\u003e\n\u003c/li\u003e\n\u003cli\u003ePhusion Passenger\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.phusionpassenger.com/\"\u003ehttps://www.phusionpassenger.com/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCapistrano を使ったデプロイ\n\u003cul\u003e\n\u003cli\u003e問題点\n\u003cul\u003e\n\u003cli\u003e直列デプロイ\n\u003cul\u003e\n\u003cli\u003eLBから１つづつ外してデプロイしている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e50分ちかくかかっている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e解決案\n\u003cul\u003e\n\u003cli\u003eEKSへの移行\u003c/li\u003e\n\u003cli\u003eAutoScalingGroupを使ったBlue/Greenデプロイ\n\u003cul\u003e\n\u003cli\u003eサーバー自体のプロビジョニングに４分ぐらいかかる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eアプリケーションサーバー（unicorn）によるホットデプロイ\n\u003cul\u003e\n\u003cli\u003eこれを選択\u003c/li\u003e\n\u003cli\u003eデプロイ・ロールバックの時間が短くて済む\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eアプリケーションサーバーの入れ替え\n\u003cul\u003e\n\u003cli\u003ePhusion PassengerをUnicornにした\u003c/li\u003e\n\u003cli\u003e安全に入れ替えるには\n\u003cul\u003e\n\u003cli\u003e影響範囲が大きい\u003c/li\u003e\n\u003cli\u003eプランBの確保\n\u003cul\u003e\n\u003cli\u003eBlue/Greenを用意\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e変更対象を深く理解する\n\u003cul\u003e\n\u003cli\u003eソースコードリーディング\u003c/li\u003e\n\u003cli\u003e起動から陸セストをさばき始めるまでの流れ\u003c/li\u003e\n\u003cli\u003eUSR2シグナルを受け取ったときの処理\u003c/li\u003e\n\u003cli\u003e各パラメータの使われ方と影響範囲\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePreloadによるFileDDescriptorの共有\n\u003cul\u003e\n\u003cli\u003eLinuxのfork処理の理解が必要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e段階的リリース\n\u003cul\u003e\n\u003cli\u003eテスト環境での負荷試験\n\u003cul\u003e\n\u003cli\u003e「負荷試験コトハジメ」\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e他サービスでの先行リリース\u003c/li\u003e\n\u003cli\u003e本番環境でのカナリアリリース\n\u003cul\u003e\n\u003cli\u003e2%程度\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eUnicornへ移行した結果\n\u003cul\u003e\n\u003cli\u003e25〜30分かかっていたのが2〜3分に短縮\n\u003cul\u003e\n\u003cli\u003eデプロイ数の増加\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRedisまわりで一部問題があった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFusionPassengerの有料版なら同じことできるが、サービス規模で試算したら高額だった\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"データの構造から再検討するパフォーマンスチューニング\"\u003eデータの構造から再検討するパフォーマンスチューニング\u003c/h2\u003e\n\u003ch3 id=\"久保卓也-tkuboma\"\u003e久保卓也 (tkuboma)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e会計freeeの中の話\u003c/li\u003e\n\u003cli\u003e監視\n\u003cul\u003e\n\u003cli\u003eMackrel\u003c/li\u003e\n\u003cli\u003eNewRelic\u003c/li\u003e\n\u003cli\u003eMonyog\n\u003cul\u003e\n\u003cli\u003eDBリアルタイム監視に利用\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDatadog\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRedashで見えるか\n\u003cul\u003e\n\u003cli\u003eindex効率、フルスキャンなど\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDBパフォーマンス改善\n\u003cul\u003e\n\u003cli\u003eindexでチューニング\n\u003cul\u003e\n\u003cli\u003eexplainで地道に\u003c/li\u003e\n\u003cli\u003eインデックス追加したり、使うようにしたり\u003c/li\u003e\n\u003cli\u003eActiveRecordのscopeに注意\u003c/li\u003e\n\u003cli\u003eindexを無駄にはらない\u003c/li\u003e\n\u003cli\u003e検証は本番相当のデータで\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eクエリの変更でチューニング\n\u003cul\u003e\n\u003cli\u003e対象データのrowが多すぎる\n\u003cul\u003e\n\u003cli\u003e抽出条件の追加\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eクエリの結果が変わらないように注意\n\u003cul\u003e\n\u003cli\u003eアプリケーション側で頑張る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデータの持ちかたの見直し\n\u003cul\u003e\n\u003cli\u003eidでなくstringでjoinしているテーブル\u003c/li\u003e\n\u003cli\u003eマスターデータとunionしている\n\u003cul\u003e\n\u003cli\u003eマスターデータをコピーしてしまう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e頻繁にマスターデータが更新されるテーブルだと使えない\n\u003cul\u003e\n\u003cli\u003e設計でカバー\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eテーブル構成の見直し\n\u003cul\u003e\n\u003cli\u003e大量データを都度集計している\n\u003cul\u003e\n\u003cli\u003e集計テーブルを作成する\n\u003cul\u003e\n\u003cli\u003e圧縮率＝削減行数\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eロック問題\n\u003cul\u003e\n\u003cli\u003e別トランザクションにして非同期実行する\n\u003cul\u003e\n\u003cli\u003eKinesis streamを利用\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e集計テーブルのデータの切り方の設計重要\u003c/li\u003e\n\u003cli\u003eリアルタイム性の低下\u003c/li\u003e\n\u003cli\u003e導入までのリードタイムが結構かかる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e機能の見直し\n\u003cul\u003e\n\u003cli\u003e必要以上に実行されていないか\n\u003cul\u003e\n\u003cli\u003eHome画面とか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eビジネスサイドとのコミュニケーション必要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eslaveへ逃がす\n\u003cul\u003e\n\u003cli\u003eレプリケーションのラグに注意\u003c/li\u003e\n\u003cli\u003e社内ライブラリを使用（OSSではない）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eN+1の解消\n\u003cul\u003e\n\u003cli\u003ebullet\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eElasticsearch化\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"エンジニアがドメインロジックに集中するためのコアパッケージ整備\"\u003eエンジニアがドメインロジックに集中するためのコアパッケージ整備\u003c/h2\u003e\n\u003ch3 id=\"志賀誠-maco_tasu\"\u003e志賀誠 (@Maco_Tasu)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eコアパッケージ：各サービスで共通して使われるもの\n\u003cul\u003e\n\u003cli\u003eロガーやエラーとか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eマイクロサービス化でgoを使うことが多い\u003c/li\u003e\n\u003cli\u003eマイクロサービス基盤にK8sを採用\u003c/li\u003e\n\u003cli\u003eマイクロサービス化で各チームでそれぞれ作り込んでいて横連携ができていなかった\n\u003cul\u003e\n\u003cli\u003eサービス基盤\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e全マイクロサービスのコードを読んで機能を洗い出す\n\u003cul\u003e\n\u003cli\u003egoらしい作りになっているか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデファクトとしてのパッケージ\n\u003cul\u003e\n\u003cli\u003e強制するものではない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e拡張性\n\u003cul\u003e\n\u003cli\u003eダッグタイピング\u003c/li\u003e\n\u003cli\u003ego-cloud（CDK）を参考にした\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eかんたんに組み込める\n\u003cul\u003e\n\u003cli\u003e依存関係\u003c/li\u003e\n\u003cli\u003ewire（DIツール）を使う\n\u003cul\u003e\n\u003cli\u003e依存の依存も解決してくれるのが良い\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developers.freee.co.jp/entry/service-infra-and-wire\"\u003ehttps://developers.freee.co.jp/entry/service-infra-and-wire\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e改善点\n\u003cul\u003e\n\u003cli\u003e早めに提供して改善ループをまわす\u003c/li\u003e\n\u003cli\u003e使うことによる利点を伝える\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eclaat\n\u003cul\u003e\n\u003cli\u003eチュートリアル作成ツール\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/googlecodelabs/tools/tree/master/claat\"\u003ehttps://github.com/googlecodelabs/tools/tree/master/claat\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["freee","event"],"title":"freee Tech Night 「freeeにおけるモノリシック」"},{"categories":null,"objectID":"950270fb4a29ff1973e3a3b0276d3f74","permalink":"https://umemak.github.io/blog/posts/2019/12/19_shuumai/","publish_date":"2019-12-19T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://shuuu-mai.connpass.com/event/155130/\"\u003ehttps://shuuu-mai.connpass.com/event/155130/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e初参加。\nエンジニアのキャリア、組織論についてお話いただく回とのことです。\u003c/p\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eきました \u003ca href=\"https://t.co/uRtdj6xWH2\"\u003epic.twitter.com/uRtdj6xWH2\u003c/a\u003e\u003c/p\u003e\u0026mdash; umemak (@umemak8) \u003ca href=\"https://twitter.com/umemak8/status/1207601880886468608?ref_src=twsrc%5Etfw\"\u003eDecember 19, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\n\u003cp\u003e柱が邪魔でトークセッション見れない疑惑。\u003c/p\u003e\n\u003ch2 id=\"1830開場受付開始\"\u003e18:30\t開場・受付開始\u003c/h2\u003e\n\u003ch2 id=\"19001915主催者からのご挨拶当日のプログラムご案内\"\u003e19:00~19:15\t主催者からのご挨拶・当日のプログラムご案内\u003c/h2\u003e\n\u003ch2 id=\"19152000ctoトークセッション-リアルタイム質疑応答あり\"\u003e19:15~20:00\tCTOトークセッション ※リアルタイム質疑応答あり！\u003c/h2\u003e\n\u003ch3 id=\"株式会社smarthr-cto-芹澤雅人氏\"\u003e株式会社SmartHR CTO 芹澤雅人氏\u003c/h3\u003e\n\u003ch3 id=\"株式会社finc-technologies-代表取締役cto-南野充則氏\"\u003e株式会社FiNC Technologies 代表取締役CTO 南野充則氏\u003c/h3\u003e\n\u003ch3 id=\"株式会社クラウドワークス執行役員-兼-エンジニアリングdiv-gm-飯田-意己氏\"\u003e株式会社クラウドワークス執行役員 兼 エンジニアリングDiv GM 飯田 意己氏\u003c/h3\u003e\n\u003ch3 id=\"モデレーター-安尾-友佑-氏dely株式会社-サーバーサイドエンジニア\"\u003eモデレーター 安尾 友佑 氏＊dely株式会社 サーバーサイドエンジニア\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eなぜCTOになることを選んだのか\n\u003cul\u003e\n\u003cli\u003e南野：最初からそういう役割で参画した。\u003c/li\u003e\n\u003cli\u003e芹澤：不可抗力的な感じ。VPoEから。VPoEになったのも不可抗力（前CTOの退職がきっかけ）。\u003c/li\u003e\n\u003cli\u003e飯田：前CTOの退職がきっかけ。あえてCTOとは名乗っていない。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eどうやったらなれるのか\n\u003cul\u003e\n\u003cli\u003eスタートアップに行けば不可抗力的になれる（笑）\u003c/li\u003e\n\u003cli\u003e技術力だけではなく、ソフトスキルも必要。ビジネスとかマネジメントとか。\u003c/li\u003e\n\u003cli\u003e経営も理解しないといけない。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e今までの人生で一番影響を受けた本\n\u003cul\u003e\n\u003cli\u003e南野：「CEO」\n\u003cul\u003e\n\u003cli\u003e役職についてからどうあるべきかが書かれている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e芹澤：「ハッカーと画家」\n\u003cul\u003e\n\u003cli\u003e今でも通用する内容\u003c/li\u003e\n\u003cli\u003eネットでも読める（？）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e飯田：「エンジニアリング組織論への招待」\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e良いエンジニアとはどんなエンジニアか\n\u003cul\u003e\n\u003cli\u003e南野：サボるのがうまいエンジニア\n\u003cul\u003e\n\u003cli\u003eできるだけ楽に成果を上げる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e芹澤：課題にフォーカスした行動ができる\n\u003cul\u003e\n\u003cli\u003e技術は手段でしかない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e飯田：考えを表明できる\n\u003cul\u003e\n\u003cli\u003e周りを巻き込んでいく\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eエンジニアの採用で見ているところ\n\u003cul\u003e\n\u003cli\u003e南野：マインド（価値観、こだわり）\n\u003cul\u003e\n\u003cli\u003eものづくりの原体験\u003c/li\u003e\n\u003cli\u003eものをつくることを楽しめる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e芹澤：課題解決のプロセス\u003c/li\u003e\n\u003cli\u003e飯田：結果よりプロセス\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eエンジニアの評価について\n\u003cul\u003e\n\u003cli\u003e南野：行動指針の360度＋OKR\n\u003cul\u003e\n\u003cli\u003e評価が難しいと思ったことはない\u003c/li\u003e\n\u003cli\u003eエンジニアの人数比率が多いとやりやすい印象\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e芹澤：OKR（半年ごと）\n\u003cul\u003e\n\u003cli\u003e成長につながる目標を設定する\u003c/li\u003e\n\u003cli\u003e定性的な結果をどう評価するか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e飯田：MBO\n\u003cul\u003e\n\u003cli\u003e目標設定\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e今後エンジニアに求められることとは何なのか\n\u003cul\u003e\n\u003cli\u003e南野：技術、VPoE、プロダクト\n\u003cul\u003e\n\u003cli\u003eテックリードとして。会社のどこを伸ばすのか。強みはなにか。そこに自分はどう関わるのか。どんな知識が必要なのか。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e芹澤：スペシャリストを目指すor浅く広くやるか\u003c/li\u003e\n\u003cli\u003e飯田：責任を持てる範囲を広げていこう\n\u003cul\u003e\n\u003cli\u003e影響範囲を広げていく\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"20002015スポンサー様ピッチ\"\u003e20:00~20:15\tスポンサー様ピッチ\u003c/h2\u003e\n\u003ch3 id=\"cbcloud株式会社\"\u003eCBcloud株式会社\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e物流系スタートアップ\u003c/li\u003e\n\u003cli\u003e課題\n\u003cul\u003e\n\u003cli\u003eモノリス\u003c/li\u003e\n\u003cli\u003etoC向け\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"株式会社legalforce\"\u003e株式会社LegalForce\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e法律×テクノロジー\n\u003cul\u003e\n\u003cli\u003e契約書レビューシステム\n\u003cul\u003e\n\u003cli\u003eアップロードすると、修正箇所と修正例を出してくれる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"株式会社オープンエイト\"\u003e株式会社オープンエイト\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e素材から動画を生成する\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"freee株式会社\"\u003efreee株式会社\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e会社紹介\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"20152115まつもとゆきひろ氏講演エンジニアキャリアアップ\"\u003e20:15~21:15\tまつもとゆきひろ氏講演「エンジニア・キャリアアップ」\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e桜を見る会の招待もらった\u003c/li\u003e\n\u003cli\u003e「へびのように賢く、鳩のように素直であれ」\u003c/li\u003e\n\u003cli\u003eRuby開発までの話\n\u003cul\u003e\n\u003cli\u003eバブル崩壊\u003c/li\u003e\n\u003cli\u003e社内ツール開発からのチーム解散\u003c/li\u003e\n\u003cli\u003e保守している間に作った\u003c/li\u003e\n\u003cli\u003e自分のためのツール\u003c/li\u003e\n\u003cli\u003eクラスとインスタンスどっちが先問題\u003c/li\u003e\n\u003cli\u003eemacsのソースコードを一番参考にしていた\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e言語と思考の関係\n\u003cul\u003e\n\u003cli\u003eサピア・ウォーフ仮説\n\u003cul\u003e\n\u003cli\u003e人々の思考は使っている言語に影響される\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eへび\n\u003cul\u003e\n\u003cli\u003e自由であることとコントロール意識\u003c/li\u003e\n\u003cli\u003e叱ると生産性60%低下\u003c/li\u003e\n\u003cli\u003e叱られることはコントロールできていないこと\u003c/li\u003e\n\u003cli\u003eコントロール意識で生産性向上\u003c/li\u003e\n\u003cli\u003e環境、未来は変えられないが、意識を変えることはできる\u003c/li\u003e\n\u003cli\u003eコントロールできないものと戦わない\u003c/li\u003e\n\u003cli\u003e変えられないものは変えられない\u003c/li\u003e\n\u003cli\u003e伝えないことは伝わらない、伝えたことも伝わらない\u003c/li\u003e\n\u003cli\u003e諦めの気持ちが大事\u003c/li\u003e\n\u003cli\u003e雨の予報は変えられないが、備えることはできる\u003c/li\u003e\n\u003cli\u003e他人の態度もコントロール不能\n\u003cul\u003e\n\u003cli\u003e自分の受け止め方はコントロール可能\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e「There must bu a reason」を３回唱える\u003c/li\u003e\n\u003cli\u003eできないことに心を傷めない\u003c/li\u003e\n\u003cli\u003e未来予測\n\u003cul\u003e\n\u003cli\u003eソフトウェア開発者としては「上がり」のいちにいるので「現状維持」\u003c/li\u003e\n\u003cli\u003eRubyが落ちぶれないようにする\u003c/li\u003e\n\u003cli\u003eできることに集中する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e「正解」もコントロールできない\u003c/li\u003e\n\u003cli\u003e正解がある分野都内分野\n\u003cul\u003e\n\u003cli\u003eないぶんやで正解を追い求めることは無駄\u003c/li\u003e\n\u003cli\u003e正解がないことを認める\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e「浅く広く」と「深く狭く」は両立できない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e鳩\n\u003cul\u003e\n\u003cli\u003e何が流行るかわからない\u003c/li\u003e\n\u003cli\u003e運の要素\u003c/li\u003e\n\u003cli\u003e未来予測に依存する判断を避ける\u003c/li\u003e\n\u003cli\u003e判断基準\n\u003cul\u003e\n\u003cli\u003e実績、ライブラリ、相談できるヒトの有無・・・\u003c/li\u003e\n\u003cli\u003e本能、勘\u003c/li\u003e\n\u003cli\u003e「好き」な技術を\n\u003cul\u003e\n\u003cli\u003e外れても学ぶことはある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e本能や勘には自認が要る\n\u003cul\u003e\n\u003cli\u003e自分の興味、傾向を棚卸しする\u003c/li\u003e\n\u003cli\u003e「好き」を知る\u003c/li\u003e\n\u003cli\u003eコネクティング・ドット\n\u003cul\u003e\n\u003cli\u003e３点→面\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e「期待に応えない」\n\u003cul\u003e\n\u003cli\u003e勝手な期待\u003c/li\u003e\n\u003cli\u003e外から来る動機は弱い。内からの動機は強い\u003c/li\u003e\n\u003cli\u003e他人を動機にしない\u003c/li\u003e\n\u003cli\u003e他人を制約にしない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eモチベーションの外部化はうまくいかない\u003c/li\u003e\n\u003cli\u003e後追いではないキャリアを\u003c/li\u003e\n\u003cli\u003e「鶏口牛後」の時代\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"21152125アンケート回答お写真撮影\"\u003e21:15~21:25\tアンケート回答/お写真撮影\u003c/h2\u003e\n\u003ch2 id=\"21252155懇親会-本物のシューマイ出します\"\u003e21:25~21:55\t懇親会 ※本物のシューマイ出します!!\u003c/h2\u003e\n\u003ch2 id=\"2200完全撤収\"\u003e22:00\t完全撤収\u003c/h2\u003e","tags":["event"],"title":"【シューマイカンファレンス】Rubyの父 まつもとゆきひろ氏 ＆ 有名ベンチャーCTO登壇!!"},{"categories":null,"objectID":"7e57ff3fb35db2c3f45a05cae110608a","permalink":"https://umemak.github.io/blog/posts/2019/12/18_pwa_night_11/","publish_date":"2019-12-18T00:00:00Z","summary":"\u003cp\u003e今回はCMS回です。Webサイトの基本ともいえるCMS（コンテンツ・マネジメント・システム）におけるPWA活用法を学びましょう！\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://pwanight.connpass.com/event/156622/\"\u003ehttps://pwanight.connpass.com/event/156622/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eきました \u003ca href=\"https://t.co/Fb0SO391qZ\"\u003epic.twitter.com/Fb0SO391qZ\u003c/a\u003e\u003c/p\u003e\u0026mdash; umemak (@umemak8) \u003ca href=\"https://twitter.com/umemak8/status/1207242239287521280?ref_src=twsrc%5Etfw\"\u003eDecember 18, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\n\u003ch3 id=\"1900開場\"\u003e19:00\t開場\u003c/h3\u003e\n\u003ch2 id=\"1920挨拶pwa-nightについて\"\u003e19:20\t挨拶\u0026amp;PWA Nightについて\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e2/1 PWA Night Confernce\n\u003cul\u003e\n\u003cli\u003eタイムテーブル公開しました\u003c/li\u003e\n\u003cli\u003eLT応募これから\u003c/li\u003e\n\u003cli\u003eまだチケット買えるよ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1930自己紹介全員\"\u003e19:30\t自己紹介（全員）\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e本当に全員やった（持ち時間10秒）\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1940microcmsとpwaで創るウェブ開発の未来\"\u003e19:40\tmicroCMSとPWAで創るウェブ開発の未来\u003c/h2\u003e\n\u003ch3 id=\"ウォンタ株式会社-松田承一shoma2daさん\"\u003eウォンタ株式会社 松田承一（@shoma2da）さん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/shoma2da/microcmstopwatechuang-ruuehukai-fa-falsewei-lai\"\u003ehttps://speakerdeck.com/shoma2da/microcmstopwatechuang-ruuehukai-fa-falsewei-lai\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://microcms.io/\"\u003ehttps://microcms.io/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eヘッドレスCMS\n\u003cul\u003e\n\u003cli\u003e管理画面とDBを持って、出力はAPIを用意する\u003c/li\u003e\n\u003cli\u003e全体ではなく、画面の1部のみCMS化できる\u003c/li\u003e\n\u003cli\u003eサイネージで使ったり\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e日本ではWPが強い（非ヘッドレス）\u003c/li\u003e\n\u003cli\u003e管理画面はReact/Reduxで使ったSPA\u003c/li\u003e\n\u003cli\u003eインフラはAWS Amplify\u003c/li\u003e\n\u003cli\u003eデモ\n\u003cul\u003e\n\u003cli\u003eフォームの項目は管理画面で定義する\u003c/li\u003e\n\u003cli\u003e「コンテンツ参照」が特徴的\u003c/li\u003e\n\u003cli\u003e管理画面でAPIプレビュー（JSON表示）ができる\u003c/li\u003e\n\u003cli\u003eHTMLのtemplateタグ初めて見た\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e5Gでネイティブアプリのインストールが容易になったとき、PWAの立ち位置はどうなるか\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2000wordpress-と-ssg-で作る情報発信サイト-の-jamstack-な-pwa\"\u003e20:00\tWordPress と SSG で作る、情報発信サイト の JAMstack な PWA\u003c/h2\u003e\n\u003ch3 id=\"lulzneko-ラルズネコさん\"\u003elulzneko (ラルズネコ)さん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eWPは世界の30$のウェブページで使われている\n\u003cul\u003e\n\u003cli\u003eWPで色々やろうとするとPHPの知識なりスキルが必要になってくる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSSG(Static Site Generator)\n\u003cul\u003e\n\u003cli\u003eServerSideRenderingの対義\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eJAMstack\n\u003cul\u003e\n\u003cli\u003eJavaScript + API + Markup\u003c/li\u003e\n\u003cli\u003eパフォーマンス、コスト、スケーリング\u003c/li\u003e\n\u003cli\u003eセキュリティ\u003c/li\u003e\n\u003cli\u003eデータとHTMLの分離\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eこういう使い方をするならば、WPもヘッドレスと言える\u003c/li\u003e\n\u003cli\u003eコンテンツ管理システムとしてのWPの強みを活かす\u003c/li\u003e\n\u003cli\u003eWPの運用どうする問題\n\u003cul\u003e\n\u003cli\u003eマネージドWPを使う\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2020休憩\"\u003e20:20\t休憩\u003c/h2\u003e\n\u003ch2 id=\"2025firebaseflamelinknuxtnetlifypwaを使ってjamstackなブログを作る仮\"\u003e20:25\tFirebase、Flamelink、Nuxt、Netlify、PWAを使ってJAMstackなブログを作る（仮）\u003c/h2\u003e\n\u003ch3 id=\"みやおかさん\"\u003eみやおかさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://slides.com/masayakazama/pwa-night-cms#/\"\u003ehttps://slides.com/masayakazama/pwa-night-cms#/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flamelink.io/\"\u003ehttps://flamelink.io/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eヘッドレスCMSはプレビューがないのが課題\u003c/li\u003e\n\u003cli\u003eCSR with Prerendering\u003c/li\u003e\n\u003cli\u003e1年運用した感想\n\u003cul\u003e\n\u003cli\u003e開発者側は楽\u003c/li\u003e\n\u003cli\u003e編集者側はいまいち\n\u003cul\u003e\n\u003cli\u003e管理画面使いづらい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCMSのデモ\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://studio.design/ja\"\u003ehttps://studio.design/ja\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eなんかすごい\u003c/li\u003e\n\u003cli\u003e開発中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2045lt-1\"\u003e20:45\tLT-1\u003c/h2\u003e\n\u003ch3 id=\"hissyさん5分\"\u003ehissyさん（5分）\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/hissy/introducing-concrete5-pwa-add-on-japanese\"\u003ehttps://speakerdeck.com/hissy/introducing-concrete5-pwa-add-on-japanese\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003econcrete5 CMSのPWAアドオン\u003c/li\u003e\n\u003cli\u003e100ドルで試せる\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"lt-2\"\u003eLT-2\u003c/h2\u003e\n\u003ch3 id=\"mercyさん5分\"\u003emercyさん（5分）\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.slideshare.net/bitpart/pwa-night-vol11-20191218\"\u003ehttps://www.slideshare.net/bitpart/pwa-night-vol11-20191218\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e「漢はコピペ」\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2105懇親会\"\u003e21:05\t懇親会\u003c/h2\u003e\n\u003ch2 id=\"2155片付け\"\u003e21:55\t片付け\u003c/h2\u003e\n\u003ch2 id=\"2200終了\"\u003e22:00\t終了\u003c/h2\u003e","tags":["event","pwa"],"title":"PWA Night vol.11 ～PWA × CMS～"},{"categories":null,"objectID":"08ee76cc1ef337f5092b557402b5d323","permalink":"https://umemak.github.io/blog/posts/2019/12/13_yjtc/","publish_date":"2019-12-13T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://techconference.yahoo.co.jp/2019_shibuya/?cpt_n=2019_shibuya_promo\u0026amp;amp;cpt_m=web\u0026amp;amp;cpt_s=passmarket\"\u003ehttps://techconference.yahoo.co.jp/2019_shibuya/?cpt_n=2019_shibuya_promo\u0026amp;amp;cpt_m=web\u0026amp;amp;cpt_s=passmarket\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eきました \u003ca href=\"https://t.co/mN83GXKkkn\"\u003epic.twitter.com/mN83GXKkkn\u003c/a\u003e\u003c/p\u003e\u0026mdash; umemak (@umemak8) \u003ca href=\"https://twitter.com/umemak8/status/1205334852607721473?ref_src=twsrc%5Etfw\"\u003eDecember 13, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\n\u003cp\u003e3年連続３回目の参加。\n毎年会場が変わって、今年は渋谷です。表参道駅から歩きましたが。。\u003c/p\u003e\n\u003ch2 id=\"基調講演-1300---1345\"\u003e基調講演 13:00 - 13:45\u003c/h2\u003e\n\u003ch3 id=\"藤門-千明-取締役-常務執行役員ctoチーフテクノロジーオフィサー\"\u003e藤門 千明 取締役 常務執行役員、CTO（チーフテクノロジーオフィサー）\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.slideshare.net/techblogyahoo/yjtc19-in-shibuya-yjtc\"\u003ehttps://www.slideshare.net/techblogyahoo/yjtc19-in-shibuya-yjtc\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e「未来を、共に創ろう」\n\u003cul\u003e\n\u003cli\u003eユーザーアクションの最大化\u003c/li\u003e\n\u003cli\u003eオフラインにも進出（PayPay）\u003c/li\u003e\n\u003cli\u003eMUU5049万、MUB9302万, DR1132億\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e未来をす作るためになければならないもの\n\u003cul\u003e\n\u003cli\u003eAI,データ\u003c/li\u003e\n\u003cli\u003e価値を届けるスピードを大事にしている\n\u003cul\u003e\n\u003cli\u003e5年前は鈍化していた\u003c/li\u003e\n\u003cli\u003eモダナイゼーション\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e過去のモダナイゼーション\n\u003cul\u003e\n\u003cli\u003e失敗例\n\u003cul\u003e\n\u003cli\u003e2013年、アプリケーションライフサイクルマネジメントの実現\n\u003cul\u003e\n\u003cli\u003e常に最新のOS.HW・SWへ追従するための土台づくりが未完了\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eうまく行かない３つのレガシー\n\u003cul\u003e\n\u003cli\u003eマインド、テクノロジー、習慣のモダナイゼーションを同時並行してすすめる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eマインドのモダナイゼーション\n\u003cul\u003e\n\u003cli\u003e2015年12月、決起集会を開催を２０００人集めて実施\u003c/li\u003e\n\u003cli\u003e会場はここ（ベルサール渋谷ファースト）だった\u003c/li\u003e\n\u003cli\u003eトップからメッセージング\u003c/li\u003e\n\u003cli\u003e自分ごと、オープン化、チャレンジ\u003c/li\u003e\n\u003cli\u003e仮想化、CIのチャレンジが成功したのは、潜在的にエンジニアがいたから\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eテクノロジーのモダナイゼーション\n\u003cul\u003e\n\u003cli\u003e\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"zxx\" dir=\"ltr\"\u003e\u003ca href=\"https://t.co/0KKstVSH68\"\u003epic.twitter.com/0KKstVSH68\u003c/a\u003e\u003c/p\u003e","tags":["event","yahoo"],"title":"Yahoo! JAPAN Tech Conference 2019 in Shibuya"},{"categories":null,"objectID":"bc3fbf6254c3f96edf0a25c8d5dafdea","permalink":"https://umemak.github.io/blog/posts/2019/12/10_bpstudy_148/","publish_date":"2019-12-10T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://bpstudy.connpass.com/event/152350/\"\u003ehttps://bpstudy.connpass.com/event/152350/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e野球系IT勉強会です。\u003c/p\u003e\n\u003cp\u003eLT18本＋始球式という、先日のgolang.tokyo LT大会を上回る本数。。\nの予定でしたが、緊急登板回避が3名発生したため、始球式合わせて16本になりました。\u003c/p\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eきました \u003ca href=\"https://t.co/mzQj64wp4K\"\u003epic.twitter.com/mzQj64wp4K\u003c/a\u003e\u003c/p\u003e\u0026mdash; umemak (@umemak8) \u003ca href=\"https://twitter.com/umemak8/status/1204335609977823232?ref_src=twsrc%5Etfw\"\u003eDecember 10, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\n\u003cp\u003e感想：次回も参加したい。\u003c/p\u003e\n\u003ch2 id=\"始球式18441849-2020年に向けて-中日ドラゴンズ与田剛監督へ1つの提言\"\u003e始球式(18:44〜18:49) 2020年に向けて 中日ドラゴンズ与田剛監督へ1つの提言\u003c/h2\u003e\n\u003ch3 id=\"佐藤治夫twitter-haru860\"\u003e佐藤治夫（Twitter: @haru860）\u003c/h3\u003e\n\u003cp\u003e昨年12月の開催で中日ドラゴンズ与田新監督就任にあたり、2つの提言をさせていただきました。\u003c/p\u003e","tags":["event","baseball"],"title":"Baseball Play Study2019冬 シーズン振返りスペシャル(BPStudy#148)"},{"categories":null,"objectID":"da8423a525066167052af95a3fd8c976","permalink":"https://umemak.github.io/blog/posts/2019/12/04_golang_tokyo_28/","publish_date":"2019-12-04T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://golangtokyo.connpass.com/event/156678/\"\u003ehttps://golangtokyo.connpass.com/event/156678/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eLT大会（１６本！）です。\u003c/p\u003e\n\u003ch2 id=\"1900-開場受付\"\u003e19:00 ~\t開場・受付\u003c/h2\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eきました \u003ca href=\"https://t.co/T9mR1MzOss\"\u003epic.twitter.com/T9mR1MzOss\u003c/a\u003e\u003c/p\u003e\u0026mdash; umemak (@umemak8) \u003ca href=\"https://twitter.com/umemak8/status/1202169265698131968?ref_src=twsrc%5Etfw\"\u003eDecember 4, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\n\u003ch2 id=\"1930--1940オープニング乾杯\"\u003e19:30 ~ 19:40\tオープニング・乾杯\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eyappli\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1940--1945lt1-仮wiregoをプロダクトで使ってみた\"\u003e19:40 ~ 19:45\tLT1: [仮]wire.goをプロダクトで使ってみた\u003c/h2\u003e\n\u003ch3 id=\"bieshanさん\"\u003ebieshanさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDIツール\n\u003cul\u003e\n\u003cli\u003e依存関係のコードを生成してくれる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ewire使い方イマイチ理解していないので助かる\u003c/li\u003e\n\u003cli\u003e型を見て生成しているので、同じ定義だとどちらを使っていいか判断できない\n\u003cul\u003e\n\u003cli\u003e型の名前を変えれば良い\u003c/li\u003e\n\u003cli\u003e内部まで書き換えに行く？\n\u003cul\u003e\n\u003cli\u003e構造体でラップしてあげれば良い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1945--1950lt2-作業効率アップ便利なtuiツール5選\"\u003e19:45 ~ 19:50\tLT2: 作業効率アップ！便利なTUIツール5選\u003c/h2\u003e\n\u003ch3 id=\"ゴリラさん\"\u003eゴリラさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/gorilla0513/zuo-ye-xiao-lu-atupu-osusumetuituru5xuan\"\u003ehttps://speakerdeck.com/gorilla0513/zuo-ye-xiao-lu-atupu-osusumetuituru5xuan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003elazygit\u003c/li\u003e\n\u003cli\u003edocui\u003c/li\u003e\n\u003cli\u003epst\u003c/li\u003e\n\u003cli\u003eff\u003c/li\u003e\n\u003cli\u003etson\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1950--1955lt3-twitter-を自由自在にフィルタリングする-twilter-を作った\"\u003e19:50 ~ 19:55\tLT3: Twitter を自由自在にフィルタリングする Twilter を作った\u003c/h2\u003e\n\u003ch3 id=\"kawasin73さん\"\u003ekawasin73さん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003etweetbotおすすめ\u003c/li\u003e\n\u003cli\u003eフィルタした結果をRTするBOT\u003c/li\u003e\n\u003cli\u003e鍵垢（BOT）でRTしてそれをフォローしておく運用\n\u003cul\u003e\n\u003cli\u003e鍵垢じゃないとRTするたびに相手に通知が飛ぶ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2000--2005lt5-go-toolを使ってインライン展開をのぞいてみる仮\"\u003e20:00 ~ 20:05\tLT5: go toolを使ってインライン展開をのぞいてみる(仮)\u003c/h2\u003e\n\u003ch3 id=\"tutuzさん\"\u003etutuzさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eobjdump（標準ツール）で逆アセンブリできる\u003c/li\u003e\n\u003cli\u003eインライン展開しない場合の実行コスト\n\u003cul\u003e\n\u003cli\u003e５倍くらいになる場合もある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e複雑なものは展開されない\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2005--2010lt6-markdown内のコードだって美しくしたいんだ\"\u003e20:05 ~ 20:10\tLT6: Markdown内のコードだって美しくしたいんだ！！\u003c/h2\u003e\n\u003ch3 id=\"po3rinさん\"\u003epo3rinさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/po3rin/i-want-to-make-the-code-in-markdown-beautiful\"\u003ehttps://speakerdeck.com/po3rin/i-want-to-make-the-code-in-markdown-beautiful\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003emdを構文解析して処理している\u003c/li\u003e\n\u003cli\u003e舌打ちはアイデアになる\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2010--2015lt7-grpc周りで困ったこととその解決方法\"\u003e20:10 ~ 20:15\tLT7: gRPC周りで困ったこととその解決方法\u003c/h2\u003e\n\u003ch3 id=\"go-sagawaさん\"\u003eGo Sagawaさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/1bmTIrdgyi3E-bK3r7KHpsOFXDQOZoZVz6oXi7iSFPsw/edit#slide=id.g33148270ac_0_143\"\u003ehttps://docs.google.com/presentation/d/1bmTIrdgyi3E-bK3r7KHpsOFXDQOZoZVz6oXi7iSFPsw/edit#slide=id.g33148270ac_0_143\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eprotoの扱い\u003c/li\u003e\n\u003cli\u003e抽象化が難しい\u003c/li\u003e\n\u003cli\u003e構造化を考える\u003c/li\u003e\n\u003cli\u003eclang-format でフォーマットできる\u003c/li\u003e\n\u003cli\u003e実装する前にレビューするの大事\u003c/li\u003e\n\u003cli\u003egrpc-gatewayを使うと、ミドルウェアがかけるので良い\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2015--2020lt8-仮初めてgoで開発してみて思ったこと\"\u003e20:15 ~ 20:20\tLT8: (仮)初めてGoで開発してみて思ったこと\u003c/h2\u003e\n\u003ch3 id=\"rkmathiさん\"\u003erkmathiさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e言語使用や書き方はわかった、実際のアプリケーションはどう書くのか\u003c/li\u003e\n\u003cli\u003eGopher道場\u003c/li\u003e\n\u003cli\u003eC++やRubyと比べて長短\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2030--2035lt9-仮keepaliveのすゝめ\"\u003e20:30 ~ 20:35\tLT9: [仮]keepAliveのすゝめ\u003c/h2\u003e\n\u003ch3 id=\"shogo_tomiokaさん\"\u003eShogo_Tomiokaさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/10vwEqHnqL-woEmUYJ9Ei5jEouFiv02GgyqaMAVDo6pk/edit#slide=id.p1\"\u003ehttps://docs.google.com/presentation/d/10vwEqHnqL-woEmUYJ9Ei5jEouFiv02GgyqaMAVDo6pk/edit#slide=id.p1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ehttp.TansPortで設定できる\n\u003cul\u003e\n\u003cli\u003eデフォルト有効\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003etcnksm/go-httpstat\u003c/li\u003e\n\u003cli\u003eres.Body.Close() しないと使い回せない\u003c/li\u003e\n\u003cli\u003eパラメータはアプリケーションの特性を考えて調整する\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2016--2026休憩\"\u003e20:16 ~ 20:26\t休憩\u003c/h2\u003e\n\u003ch2 id=\"2035--2040lt10-マイクロサービスで共用するprivateなエラーロギングパッケージを作った\"\u003e20:35 ~ 20:40\tLT10: マイクロサービスで共用するprivateなエラー\u0026amp;ロギングパッケージを作った\u003c/h2\u003e\n\u003ch3 id=\"shohei-oさん\"\u003eShohei O.さん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/shoheshohe/maikurosabisudegong-yong-suruprivatenaera-and-rogingupatukeziwozuo-tutahua\"\u003ehttps://speakerdeck.com/shoheshohe/maikurosabisudegong-yong-suruprivatenaera-and-rogingupatukeziwozuo-tutahua\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eubarのzapでロギング\n\u003cul\u003e\n\u003cli\u003eJSON形式で出力\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGOPRIVATE環境変数\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2040--2045lt11-grpcのクライアントが絡むテスト\"\u003e20:40 ~ 20:45\tLT11: gRPCのクライアントが絡むテスト\u003c/h2\u003e\n\u003ch3 id=\"dice_zuさん\"\u003edice_zuさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://daisuzu.github.io/golang-tokyo-28/#1\"\u003ehttps://daisuzu.github.io/golang-tokyo-28/#1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDI\n\u003cul\u003e\n\u003cli\u003e3rbパーティ性のライブラリが辛い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eダミーサーバー\n\u003cul\u003e\n\u003cli\u003eコード量が増えて辛い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eリクエストレスポンスを記録再生する\n\u003cul\u003e\n\u003cli\u003ecloud.google.com/go/rpcreplay\u003c/li\u003e\n\u003cli\u003egRPCクライアントのシグネチャに縛りあり\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2045--2050lt12-repositoryによる抽象化の理想と現実\"\u003e20:45 ~ 20:50\tLT12: Repositoryによる抽象化の理想と現実\u003c/h2\u003e\n\u003ch3 id=\"sonatardさん\"\u003esonatardさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/sonatard/ideal-and-reality-of-abstraction-by-repository\"\u003ehttps://speakerdeck.com/sonatard/ideal-and-reality-of-abstraction-by-repository\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e抽象化するためにRepositoryを使う\u003c/li\u003e\n\u003cli\u003e具象が変更したときに対応できる抽象化か？\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2050--2055lt13-インフラエンジニアもgolangが書きたい\"\u003e20:50 ~ 20:55\tLT13: インフラエンジニアもGolangが書きたい\u003c/h2\u003e\n\u003ch3 id=\"nwiizoさん\"\u003enwiizoさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003ePython（Fabric）のSSHクライアントをGoにした話\u003c/li\u003e\n\u003cli\u003e運用が複雑化するとスクリプトも肥大化していく\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2055--2100lt14-年末なのでgoを使ったプロダクトを初めてリリース運用した1年を振り返ってみる\"\u003e20:55 ~ 21:00\tLT14: 年末なのでgoを使ったプロダクトを初めてリリース・運用した1年を振り返ってみる\u003c/h2\u003e\n\u003ch3 id=\"keitaro_1020さん\"\u003ekeitaro_1020さん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/keitaro1020/nian-mo-nafalsedegowoshi-tutaapuriworirisusita1nian-wozhen-rifan-tutemiru\"\u003ehttps://speakerdeck.com/keitaro1020/nian-mo-nafalsedegowoshi-tutaapuriworirisusita1nian-wozhen-rifan-tutemiru\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eスター数でライブラリ選定したら後で辛いことがあった\u003c/li\u003e\n\u003cli\u003e開発者のGo経験不足\n\u003cul\u003e\n\u003cli\u003eGo有識者にソースコードレビューや勉強会を開催してもらった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2100--2105lt15-transform-go-error-handling-using-ast-inspector\"\u003e21:00 ~ 21:05\tLT15: Transform Go error handling using AST inspector\u003c/h2\u003e\n\u003ch3 id=\"hidetake-iwataさん\"\u003eHidetake Iwataさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/int128/rewrite-go-error-handling-using-ast-transformation\"\u003ehttps://speakerdeck.com/int128/rewrite-go-error-handling-using-ast-transformation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eソースコードとASTの相互変換ができる\u003c/li\u003e\n\u003cli\u003eASTで呼び出す関数を置き換えてしまう\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2105--2110lt16-go基礎力に効く標準ライブラリcontext徹底理解あなたはcontextの挙動を説明できますか\"\u003e21:05 ~ 21:10\tLT16: Go基礎力に効く標準ライブラリContext徹底理解。あなたはContextの挙動を説明できますか？\u003c/h2\u003e\n\u003ch3 id=\"shibu_jpさん\"\u003eshibu_jpさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/1xglEURYptsTg5KXh4bxWVKKOPba7N5DwPvazdi6Q1HY/edit#slide=id.p\"\u003ehttps://docs.google.com/presentation/d/1xglEURYptsTg5KXh4bxWVKKOPba7N5DwPvazdi6Q1HY/edit#slide=id.p\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eContextクイズ\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1955--2000lt4-write-kubernetes-custom-controller-in-go\"\u003e19:55 ~ 20:00\tLT4: Write Kubernetes Custom Controller in Go\u003c/h2\u003e\n\u003ch3 id=\"morito_ikedaさん\"\u003emorito_ikedaさん\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003ekubernetes-sigs/controller-runtime\u003c/li\u003e\n\u003cli\u003e割とかんたんにカスタムコントローラーが作成できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2110--2135懇親会\"\u003e21:10 ~ 21:35\t懇親会\u003c/h2\u003e\n\u003ch2 id=\"2135--2145結果発表\"\u003e21:35 ~ 21:45\t結果発表\u003c/h2\u003e\n\u003ch2 id=\"2145--2155終了撤収\"\u003e21:45 ~ 21:55\t終了・撤収\u003c/h2\u003e","tags":["event","golang"],"title":"golang.tokyo #28"},{"categories":null,"objectID":"c510437c951f758d65938b2dd3870cd4","permalink":"https://umemak.github.io/blog/posts/2019/12/03_kubernetes_meetup_tokyo_26/","publish_date":"2019-12-03T00:00:00Z","summary":"\u003cp\u003e今回は 2019/11/18-21 で開催された KubeCon + CloudNativeCon North America 2019 の Recap 会だそうです。\nどちらも参加していないのでどんな話が聞けるのか楽しみです。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://k8sjp.connpass.com/event/155240/\"\u003ehttps://k8sjp.connpass.com/event/155240/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eきました \u003ca href=\"https://t.co/NkIGEmFehn\"\u003epic.twitter.com/NkIGEmFehn\u003c/a\u003e\u003c/p\u003e\u0026mdash; umemak (@umemak8) \u003ca href=\"https://twitter.com/umemak8/status/1201797492385275905?ref_src=twsrc%5Etfw\"\u003eDecember 3, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\n\u003ch2 id=\"1815-1915受付開始\"\u003e18:15-19:15\t受付開始\u003c/h2\u003e\n\u003ch2 id=\"1900-1905opening-5min\"\u003e19:00-19:05\tOpening (5min)\u003c/h2\u003e\n\u003ch2 id=\"1905-1920kubecon--cloudnativecon-north-america-2019-overview\"\u003e19:05-19:20\tKubeCon + CloudNativeCon North America 2019 Overview\u003c/h2\u003e\n\u003ch3 id=\"ian-lewis-ianmlewis-google\"\u003eIan Lewis (@IanMLewis), Google\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e２つのイベントが同時開催だった\u003c/li\u003e\n\u003cli\u003e次回登壇したいヒトは明日までCFP受付中\u003c/li\u003e\n\u003cli\u003e12000人くらい。去年は8000人くらいだった。\u003c/li\u003e\n\u003cli\u003e女性11%はDev系カンファレンスでは多い方\u003c/li\u003e\n\u003cli\u003e関連イベントたくさん（スライドに入り切らない）\u003c/li\u003e\n\u003cli\u003eCNCF End User Community\n\u003cul\u003e\n\u003cli\u003e日本の企業もいくつかある（もっとある？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eKubernetes Project Update\n\u003cul\u003e\n\u003cli\u003e1.16\u003c/li\u003e\n\u003cli\u003eEphemeral Containers\u003c/li\u003e\n\u003cli\u003e毎月3000人以上がコントリビュートしている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1920-1940your-path-to-production-ready-kubernetes-hosted-by-weaveworks\"\u003e19:20-19:40\tYour Path to Production Ready Kubernetes hosted by Weaveworks\u003c/h2\u003e\n\u003ch3 id=\"土田-智大-dullest-楽天株式会社\"\u003e土田 智大 (dullest), 楽天株式会社\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCo-located eventのひとつ\u003c/li\u003e\n\u003cli\u003eProduction Readyのために\n\u003cul\u003e\n\u003cli\u003eLiveness/Readiness Probe\u003c/li\u003e\n\u003cli\u003eConfigmap\u003c/li\u003e\n\u003cli\u003eFGraceful shutdown\u003c/li\u003e\n\u003cli\u003eTwelve-Factor App\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eハンズオン資料\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://tinyurl.com/kubecon-2019-workshop\"\u003ehttps://tinyurl.com/kubecon-2019-workshop\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.weave.works/product/cloud/\"\u003ehttps://www.weave.works/product/cloud/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ecurlでスクリプト叩くだけでデプロイできる\u003c/li\u003e\n\u003cli\u003eGitのファイルをもとにする（GitOps）\u003c/li\u003e\n\u003cli\u003eProduction Ready Checklist\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1940-2000keynote-seamless-customer-experience-at-walmart-stores-powered-by-kubernetesedge\"\u003e19:40-20:00\tKeynote: Seamless Customer Experience at Walmart Stores Powered by Kubernetes@Edge\u003c/h2\u003e\n\u003ch3 id=\"junichi-yoshise-jyoshise-hewlett-packard-enterprise\"\u003eJunichi Yoshise (@jyoshise), Hewlett Packard Enterprise\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eWalmartの決済の話\u003c/li\u003e\n\u003cli\u003ePOSシステムをクラウド化した（４年前）\u003c/li\u003e\n\u003cli\u003e通信コスト削減のためにエッジに処理を一部移動させる\u003c/li\u003e\n\u003cli\u003eクラウドネイティブ化の動機\n\u003cul\u003e\n\u003cli\u003eDynamic deployment\u003c/li\u003e\n\u003cli\u003eScalability\u003c/li\u003e\n\u003cli\u003eResiliency\u003c/li\u003e\n\u003cli\u003eObservability\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eエッジコンピューティングの動機\n\u003cul\u003e\n\u003cli\u003eLow latency\u003c/li\u003e\n\u003cli\u003eMassive data\u003c/li\u003e\n\u003cli\u003ePrivacy security\u003c/li\u003e\n\u003cli\u003eLocal autonomy\u003c/li\u003e\n\u003cli\u003eDevices\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMEC(Mobile Edge Computing)\u003c/li\u003e\n\u003cli\u003eデータの同期\n\u003cul\u003e\n\u003cli\u003eEdgeとクラウドで整合性が取れていないといけない\n\u003cul\u003e\n\u003cli\u003e商品の金額とか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e物理的な制約\n\u003cul\u003e\n\u003cli\u003e各店舗にラックマウントサーバーを設置している\u003c/li\u003e\n\u003cli\u003e基本的にEdge環境では、過酷な環境でメンテナンスフリーに近い形で稼働し続けなければならない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eK8sクラスタの更新\n\u003cul\u003e\n\u003cli\u003e遠隔地のクラスタ自体のデプロイを集中管理する仕組みが必要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMECでは、端末は移動する前提\u003c/li\u003e\n\u003cli\u003eスマートじゃないデバイスへの対応\n\u003cul\u003e\n\u003cli\u003eKubeEdge\n\u003cul\u003e\n\u003cli\u003eDevice Twin\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eアプリケーションのデプロイ\n\u003cul\u003e\n\u003cli\u003eGitOpsが最適\u003c/li\u003e\n\u003cli\u003eWalmartはCDエンジンを自作\n\u003cul\u003e\n\u003cli\u003e今ならArgo flexやTectonが使える？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSecurity\n\u003cul\u003e\n\u003cli\u003eSecret管理\n\u003cul\u003e\n\u003cli\u003eVaultから撮ってきたsecretをetcdに一時的に保存するoperationを自作\u003c/li\u003e\n\u003cli\u003eクラウド側のみだとネットワーク切れたら使えなくなってしまうので\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2000-2020running-apache-samza-on-kubernetes---weiqing-yang-linkedin-corporation\"\u003e20:00-20:20\tRunning Apache Samza on Kubernetes - Weiqing Yang, LinkedIn Corporation\u003c/h2\u003e\n\u003ch3 id=\"吉村翔太-yosshi_-ntt-communications\"\u003e吉村翔太 (@yosshi_), NTT Communications\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003esamza\n\u003cul\u003e\n\u003cli\u003eもともとはLinkedinが作ったストリーミング処理OSS\u003c/li\u003e\n\u003cli\u003e似たものにSparkやFlinkがある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e最近のHadoopの動向\n\u003cul\u003e\n\u003cli\u003eオンプレで使う場合はディストリビューションを使う。主なものは３つ\u003c/li\u003e\n\u003cli\u003eClouderaとHortonworksが統合。2021年くらい？\u003c/li\u003e\n\u003cli\u003eClouderaDataPlatform\n\u003cul\u003e\n\u003cli\u003eAWSをサポート。AzureとGCPも近々\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eKafkaがHDFSなら、SamzaはMapReduceに当たる存在\n\u003cul\u003e\n\u003cli\u003eKafkaもLinkedinが開発したOSS\u003c/li\u003e\n\u003cli\u003eMessage queue, Message hub\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2025-2055懇親タイム-sponsored-by-yahoo-japan\"\u003e20:25-20:55\t懇親タイム sponsored by Yahoo! JAPAN\u003c/h2\u003e\n\u003ch2 id=\"2055-2115how-yelp-moved-security-from-the-app-to-the-mesh-with-envoy-and-opa\"\u003e20:55-21:15\tHow Yelp Moved Security From the App to the Mesh with Envoy and OPA\u003c/h2\u003e\n\u003ch3 id=\"鳥居隆史-ttorii0609-dell-emc\"\u003e鳥居隆史 (@ttorii0609), Dell EMC\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSecurity\n\u003cul\u003e\n\u003cli\u003eK8s is NOT secure by default\n\u003cul\u003e\n\u003cli\u003e基本フルオープンなので、ザル。\u003c/li\u003e\n\u003cli\u003e9個のプラクティス全部やれ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eK8sのセキュリティは今アツい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOpen Policy Agent(OPA)\u003c/li\u003e\n\u003cli\u003emTLS\u003c/li\u003e\n\u003cli\u003eOPAを使うにあたっての課題\n\u003cul\u003e\n\u003cli\u003eOPA Policy Managerを作った\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eセキュリティを考えるとサービスメッシュは必要\u003c/li\u003e\n\u003cli\u003eScope Creep\n\u003cul\u003e\n\u003cli\u003e要件がどんどん広がっていく様\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2115-2135the-release-team-shadow-program---mentoring-for-the-future---guinevere-saenger-github--lachlan-evenson-microsoft\"\u003e21:15-21:35\tThe Release Team Shadow Program - Mentoring For the Future - Guinevere Saenger, GitHub \u0026amp; Lachlan Evenson, Microsoft\u003c/h2\u003e\n\u003ch3 id=\"yang-li-idealhack-kubernetes-community\"\u003eYang Li (@idealhack), Kubernetes community\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["event","k8s","kubernetes"],"title":"Kubernetes Meetup Tokyo #26"},{"categories":null,"objectID":"5c5289dbbb248d8a7c2ec4ebae5b76a7","permalink":"https://umemak.github.io/blog/posts/2019/11/29_ochacafe_premium_1/","publish_date":"2019-11-29T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://ochacafe.connpass.com/event/152768/\"\u003ehttps://ochacafe.connpass.com/event/152768/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e番外編の第１回。高可用性の話です。\u003c/p\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eきました \u003ca href=\"https://t.co/plY4jy7rsN\"\u003epic.twitter.com/plY4jy7rsN\u003c/a\u003e\u003c/p\u003e\u0026mdash; umemak (@umemak8) \u003ca href=\"https://twitter.com/umemak8/status/1200347955196133377?ref_src=twsrc%5Etfw\"\u003eNovember 29, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\n\u003ch2 id=\"1830受付開始\"\u003e18：30　受付開始　\u003c/h2\u003e\n\u003ch2 id=\"1900オープニング\"\u003e19：00　オープニング\u003c/h2\u003e\n\u003ch2 id=\"1910セッション開始\"\u003e19：10　セッション開始\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/mmarukaw/oracleclouddekao-erugao-ke-yong-xing-akitekutiya\"\u003ehttps://speakerdeck.com/mmarukaw/oracleclouddekao-erugao-ke-yong-xing-akitekutiya\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eデータセンター電源障害の話から\u003c/li\u003e\n\u003cli\u003eOCIはまだ日本に来てから日が浅いこともあり、大規模障害はまだない。\n\u003cul\u003e\n\u003cli\u003e海外ではあった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDesign For Failure\n\u003cul\u003e\n\u003cli\u003eサーバーは落ちる前提で考える\u003c/li\u003e\n\u003cli\u003eクラウドベンダーの保証はSLAの範囲内まで\u003c/li\u003e\n\u003cli\u003eアプリケーションの最終責任はユーザーが負う\u003c/li\u003e\n\u003cli\u003e高可用性のためのコストと複雑性を、軽減できるリスクに対してバランスを取る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e高可用性とは\n\u003cul\u003e\n\u003cli\u003eシステムが継続して可動できる能力が高いこと\u003c/li\u003e\n\u003cli\u003eクラウドでもオンプレのときと考え方は同じ\u003c/li\u003e\n\u003cli\u003eクラウドの特性として高可用性を比較的低コストで実現できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e障害のレベル\n\u003cul\u003e\n\u003cli\u003e機器障害\n\u003cul\u003e\n\u003cli\u003eプロセスだったりハードウェアだったり\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサイト障害\n\u003cul\u003e\n\u003cli\u003eDCレベル\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e広域災害\n\u003cul\u003e\n\u003cli\u003e地域まるごと\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eクラウドのリソースが備える特性を活かす\n\u003cul\u003e\n\u003cli\u003e本質的に堅牢なOCIリソース\n\u003cul\u003e\n\u003cli\u003eオブジェクトストレージ\n\u003cul\u003e\n\u003cli\u003e耐障害性、安価、各種サービスとの連携\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eロードバランサー\n\u003cul\u003e\n\u003cli\u003eトラフィックの高可用性\u003c/li\u003e\n\u003cli\u003eサイトレベルの耐障害性\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOKE(K8s)\n\u003cul\u003e\n\u003cli\u003eクラスタとノードプールの自己回復\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eExadata Cloud ServiceとAutonomous Database\n\u003cul\u003e\n\u003cli\u003eOracle Databaseの高可用性プラクティスが詰め込まれている\u003c/li\u003e\n\u003cli\u003eRACでスケール\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOCI DNS\n\u003cul\u003e\n\u003cli\u003eグローバルレベルの耐障害性\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eユーザーに寄る高可用性実装を支援する\n\u003cul\u003e\n\u003cli\u003eリソース配置\n\u003cul\u003e\n\u003cli\u003eリージョン\u003c/li\u003e\n\u003cli\u003e可用性ドメイン（AD）\n\u003cul\u003e\n\u003cli\u003eデータセンター\u003c/li\u003e\n\u003cli\u003e東京はまだ１つなので、AZ障害イコールリージョン障害\u003c/li\u003e\n\u003cli\u003eデータセンター間の通信は低レーテンシー\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eフォルト・ドメイン\n\u003cul\u003e\n\u003cli\u003eDC内のサーバラック群をグループ化したもの\u003c/li\u003e\n\u003cli\u003e仮想サーバーを別々の物理サーバーに配置したいときに有効\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eリソースの有効範囲\n\u003cul\u003e\n\u003cli\u003eグローバル＞リージョン＞可用性ドメイン＞フォルト・ドメイン\u003c/li\u003e\n\u003cli\u003eリージョンレベルのリソース（VCN）でリージョンまたぎをしたいときはピアリングをする必要がある\u003c/li\u003e\n\u003cli\u003eリージョナルサブネットというのがある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"1943-10分休憩\"\u003e19:43 10分休憩\u003c/h3\u003e\n\u003cp\u003eビール投入\u003c/p\u003e","tags":["event","oracle","oci"],"title":"OCHaCafe Premium#1：Oracle Cloudで考える高可用性アーキテクチャ"},{"categories":null,"objectID":"0345488df21a8cbc2a01f924458c7915","permalink":"https://umemak.github.io/blog/posts/2019/11/26_bonfire_backend_4/","publish_date":"2019-11-26T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://yj-meetup.connpass.com/event/153658/\"\u003ehttps://yj-meetup.connpass.com/event/153658/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e初参加です。\u003c/p\u003e\n\u003ch2 id=\"1900開場受付開始\"\u003e19:00\t開場・受付開始\u003c/h2\u003e\n\u003ch2 id=\"1930イントロ乾杯\"\u003e19:30\tイントロ・乾杯\u003c/h2\u003e\n\u003ch2 id=\"1935ヤフーのナビゲーション系のバックエンドサービスの課題をk8sで解決した話\"\u003e19:35\tヤフーのナビゲーション系のバックエンドサービスの課題をk8sで解決した話\u003c/h2\u003e\n\u003ch3 id=\"高木-克彰tkgtransit--ヤフー株式会社\"\u003e高木 克彰(@tkgtransit) ◆ ヤフー株式会社\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eナビゲーション\n\u003cul\u003e\n\u003cli\u003eマップの徒歩ナビ\u003c/li\u003e\n\u003cli\u003e乗り換えナビ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e従来のアーキテクチャ\n\u003cul\u003e\n\u003cli\u003eエンジンデータはそれぞれ１台の仮想サーバーが担当\u003c/li\u003e\n\u003cli\u003eC++, Apacke Module\u003c/li\u003e\n\u003cli\u003e課題\n\u003cul\u003e\n\u003cli\u003eIFが異なるだけで基本ロジックはほぼ同じ\u003c/li\u003e\n\u003cli\u003eデータ更新に半日\u003c/li\u003e\n\u003cli\u003e脆弱性対応が多い、手作業\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e改善後\n\u003cul\u003e\n\u003cli\u003eAPI層を統合\n\u003cul\u003e\n\u003cli\u003e社内PaaSに移行\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eエンジン層\n\u003cul\u003e\n\u003cli\u003e社内CaaSに移行\u003c/li\u003e\n\u003cli\u003eバイナリデータはinit comtainerで取得してオンメモリに展開\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデータの更新はk8sのcronで実行\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eパイプラインはscrewdriver使っている\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1950プライベートクラウドをk8sで刷新して良かった話\"\u003e19:50\tプライベートクラウドをk8sで刷新して良かった話\u003c/h2\u003e\n\u003ch3 id=\"鶴田貴大--サイボウズ株式会社\"\u003e鶴田貴大 ◆ サイボウズ株式会社\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e自社製プライベートクラウド\n\u003cul\u003e\n\u003cli\u003eOpenStackは使っていない\u003c/li\u003e\n\u003cli\u003eUbuntu\n\u003cul\u003e\n\u003cli\u003e14.04から16.04へのアップグレードに２年くらいかかった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eコンテナもほぼ使っていない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eインフラ刷新\n\u003cul\u003e\n\u003cli\u003enecoプロジェクト\u003c/li\u003e\n\u003cli\u003eCKE(Cybozu Kubernetes Engine)\u003c/li\u003e\n\u003cli\u003eCertifiedになった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e目的\n\u003cul\u003e\n\u003cli\u003e運用コスト低減\u003c/li\u003e\n\u003cli\u003eスケーラビリティ向上\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eK8sを選んだ理由\n\u003cul\u003e\n\u003cli\u003e圧倒的に流行っていたから\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCoreOS採用\n\u003cul\u003e\n\u003cli\u003eコンテナ用軽量OS\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGitOps\n\u003cul\u003e\n\u003cli\u003eArgo CDを使用\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eテナント\n\u003cul\u003e\n\u003cli\u003eチームごとに権限を分離\u003c/li\u003e\n\u003cli\u003eほかテナントに影響しないように\u003c/li\u003e\n\u003cli\u003e単一のk8sクラスターですべてのテナントを賄っている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e開発環境\n\u003cul\u003e\n\u003cli\u003eクラスタを共同利用\n\u003cul\u003e\n\u003cli\u003eうっかり壊すと大変\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eKindに変更\n\u003cul\u003e\n\u003cli\u003eローカルPCでも動かせる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eTeleport\n\u003cul\u003e\n\u003cli\u003e多機能踏み台サーバー\u003c/li\u003e\n\u003cli\u003eターミナルの入出力を録画できるので、監査に使える\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2010pfnにおける二種類のkubernetesクラスタ\"\u003e20:10\tPFNにおける二種類のKubernetesクラスタ\u003c/h2\u003e\n\u003ch3 id=\"太田佳敬ota42y--preferred-networks\"\u003e太田佳敬(@ota42y) ◆ Preferred Networks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/ota42y/pfnniaru2tufalsekubernetes\"\u003ehttps://speakerdeck.com/ota42y/pfnniaru2tufalsekubernetes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e自社GPUクラスタ\n\u003cul\u003e\n\u003cli\u003e機械学習のためにマシンリソースが必要\u003c/li\u003e\n\u003cli\u003e2500以上\u003c/li\u003e\n\u003cli\u003eこれの制御をk8sで行っている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWebApplication用\n\u003cul\u003e\n\u003cli\u003eaws EKSに構築\u003c/li\u003e\n\u003cli\u003eEKSを使うほどではないが、K8sを使い慣れているのでECSではなくEKS\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eK8sのNetwork Isolation\n\u003cul\u003e\n\u003cli\u003e1つのクラスタに関係ないアプリが複数同居している\u003c/li\u003e\n\u003cli\u003e相互通信しないようにネットワーク分離が重要\u003c/li\u003e\n\u003cli\u003eNetwork Policies\n\u003cul\u003e\n\u003cli\u003ePodやNamespace単位で通信を制御できる標準機能\u003c/li\u003e\n\u003cli\u003eアプリケーションごとにNamespaceを分けて相互アクセスを禁止した\u003c/li\u003e\n\u003cli\u003eデフォルトでは通信許可設定なので設定忘れを抑制したい\n\u003cul\u003e\n\u003cli\u003eCalicoを利用してデフォルトで通信禁止に設定\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/projectcalico/calico\"\u003ehttps://github.com/projectcalico/calico\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eNamespace内部の通信も禁止になるので、そこは許可する\u003c/li\u003e\n\u003cli\u003ekube-systemも許可する。禁止したままだとkube-dnsも使えなくなってしまう\u003c/li\u003e\n\u003cli\u003eorderで優先順位を決める\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNetwork PolicyでALBを指定（許可）できない\n\u003cul\u003e\n\u003cli\u003eSubnet構成で回避\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2030小休憩\"\u003e20:30\t小休憩\u003c/h2\u003e\n\u003ch2 id=\"2035k8sで画像pfを1年半運用してみた振り返り\"\u003e20:35\tK8Sで画像PFを1年半運用してみた振り返り\u003c/h2\u003e\n\u003ch3 id=\"山田-拓也--ヤフー株式会社\"\u003e山田 拓也 ◆ ヤフー株式会社\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e結論\n\u003cul\u003e\n\u003cli\u003e移行してよかった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e旧システム\n\u003cul\u003e\n\u003cli\u003e社内VM\u003c/li\u003e\n\u003cli\u003eリカバリ手動\u003c/li\u003e\n\u003cli\u003e障害で深夜対応・・\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch2 id=\"新システム\"\u003e新システム\u003c/h2\u003e\n\u003c/li\u003e\n\u003cli\u003e移行前のシステムを意識しすぎてしまった\n\u003cul\u003e\n\u003cli\u003eサーバー構成など\n\u003cul\u003e\n\u003cli\u003ePodとコンテナの配置どうする？\n\u003cul\u003e\n\u003cli\u003e一つにまとめてみた\n\u003cul\u003e\n\u003cli\u003e起動遅い\u003c/li\u003e\n\u003cli\u003e管理も大変\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e1コンテナ1Podにした\n\u003cul\u003e\n\u003cli\u003e迷ったらこれでOK\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e監視設定\n\u003cul\u003e\n\u003cli\u003eGrafanaの監視項目全部Prometheusに持っていった\n\u003cul\u003e\n\u003cli\u003eGrafanaで良くない？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e監視の目的から見直す\n\u003cul\u003e\n\u003cli\u003e設定したしきい値も説明できないなら見直す\u003c/li\u003e\n\u003cli\u003e物理やVMなら必須だった項目もK8sならいらない場合もある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePrometheus\n\u003cul\u003e\n\u003cli\u003e予測で設定できる\u003c/li\u003e\n\u003cli\u003e変化量でも見れる\u003c/li\u003e\n\u003cli\u003eAlertmanager便利\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2050k8s初心者がgrpc--envoyを導入したら色々苦労した話\"\u003e20:50\tk8s初心者がgRPC × envoyを導入したら色々苦労した話\u003c/h2\u003e\n\u003ch3 id=\"信原-有志--ヤフー株式会社\"\u003e信原 有志 ◆ ヤフー株式会社\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eサービスの課題\n\u003cul\u003e\n\u003cli\u003eドメインごとにチームが別れていて、それぞれ別の言語で開発していた\u003c/li\u003e\n\u003cli\u003eモノリス\u003c/li\u003e\n\u003cli\u003e共通コンポーネントをチームごとに実装すると非効率\n\u003cul\u003e\n\u003cli\u003e共通コンポーネント配信システムを構築した\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e不具合\n\u003cul\u003e\n\u003cli\u003eローリングアップデート時のコネクションエラー\n\u003cul\u003e\n\u003cli\u003eglaceful shutdownが正しく動いていない？\n\u003cul\u003e\n\u003cli\u003e負荷を下げて検証\n\u003cul\u003e\n\u003cli\u003e解決できず\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIPテーブルの更新に遅延？\n\u003cul\u003e\n\u003cli\u003e検証しても解決できず\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eenvoyのIPが更新されない？\n\u003cul\u003e\n\u003cli\u003eZipkinでTraceIDから照合して検証\n\u003cul\u003e\n\u003cli\u003eこれ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e対策\n\u003cul\u003e\n\u003cli\u003eenvoyでのgRPC health_checkの設定をちゃんとやる\u003c/li\u003e\n\u003cli\u003enodejsアプリにも削除用のエントリポイントを追加\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e内部の動きをきちんと理解できていなかったのが原因\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2100懇親会\"\u003e21:00\t懇親会\u003c/h2\u003e\n\u003ch2 id=\"2200終了\"\u003e22:00\t終了\u003c/h2\u003e","tags":["event","yahoo"],"title":"Bonfire Backend #4"},{"categories":null,"objectID":"3bef314a96b2b48c2581a34811b2c22c","permalink":"https://umemak.github.io/blog/posts/2019/11/21_iij_technical_day_2019/","publish_date":"2019-11-21T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://iij.connpass.com/event/151720/\"\u003ehttps://iij.connpass.com/event/151720/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://eng-blog.iij.ad.jp/archives/4102\"\u003ehttps://eng-blog.iij.ad.jp/archives/4102\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIIJmioでお世話になってます\u003c/p\u003e\n\u003cp\u003e2003年から毎年開催しているそうですが、初参加です。\u003c/p\u003e\n\u003cp\u003eインフラ周りはあまり直接触れることがないので、どこまで話についていけるか。\u003c/p\u003e\n\u003ch2 id=\"1330--1340開会のご挨拶\"\u003e13:30 ~ 13:40\t開会のご挨拶\u003c/h2\u003e\n\u003ch3 id=\"iij-取締役-cto-島上-純一\"\u003eIIJ 取締役 CTO 島上 純一\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e技術を通じてIIJを知ってもらいたい\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1340--1420講演1安全なデジタル通貨流通を支えるアーキテクチャとエンジニアリング\"\u003e13:40 ~ 14:20\t講演1「安全なデジタル通貨流通を支えるアーキテクチャとエンジニアリング」\u003c/h2\u003e\n\u003ch3 id=\"ディーカレット-テクノロジーグループ-マネージャ-河津-拓哉\"\u003eディーカレット テクノロジーグループ マネージャ 河津 拓哉\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eブロックチェーンの話\u003c/li\u003e\n\u003cli\u003e価値の\n\u003cul\u003e\n\u003cli\u003e保管\u003c/li\u003e\n\u003cli\u003e交換\u003c/li\u003e\n\u003cli\u003e送受\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサービスアーキテクチャ\n\u003cul\u003e\n\u003cli\u003eAPIゲートウェイを挟んだマイクロサービス\u003c/li\u003e\n\u003cli\u003e取引の部分が一番大きく、重要\u003c/li\u003e\n\u003cli\u003e決済の部分はこのサービス独特なもの\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e認証まわり\n\u003cul\u003e\n\u003cli\u003eOpenID Connect の実装\u003c/li\u003e\n\u003cli\u003eTwo-way/TLS\u003c/li\u003e\n\u003cli\u003eRestrict(IP Based)\u003c/li\u003e\n\u003cli\u003eTraffic Policy\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e高信頼性（バックエンド）\n\u003cul\u003e\n\u003cli\u003eサーバーの調達から自前で行う\u003c/li\u003e\n\u003cli\u003e堅牢な設計、完全なコントロール\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e俊敏性（フロントエンド〜ゲートウェイ）\n\u003cul\u003e\n\u003cli\u003eアジャイルな組織・手法で\u003c/li\u003e\n\u003cli\u003e小さく・速く作ってフィードバックを回す\u003c/li\u003e\n\u003cli\u003eGCPを利用\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eコンテナの話\n\u003cul\u003e\n\u003cli\u003eドメインの分割が一番難しい\u003c/li\u003e\n\u003cli\u003elatestタグやバージョン未指定でのパッケージアップデートはNG\u003c/li\u003e\n\u003cli\u003erootユーザーでプロセスを起動させるのもNG\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ek8s自前で管理するか\n\u003cul\u003e\n\u003cli\u003eとても大変なのでマネージドサービスを使う\u003c/li\u003e\n\u003cli\u003eそうするとIaCが捗る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1420--1430休憩\"\u003e14:20 ~ 14:30\t休憩\u003c/h2\u003e\n\u003ch2 id=\"1430--1510講演2iijのサーバインフラはここまでやっています\"\u003e14:30 ~ 15:10\t講演2「IIJのサーバインフラはここまでやっています」\u003c/h2\u003e\n\u003ch3 id=\"iij-基盤エンジニアリング本部-システム技術部-基盤運営1課長-高畑-雅弘\"\u003eIIJ 基盤エンジニアリング本部 システム技術部 基盤運営1課長 高畑 雅弘\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eサービス基盤インフラNHN\u003c/li\u003e\n\u003cli\u003eデータセンターが抱える課題\n\u003cul\u003e\n\u003cli\u003eコスト\n\u003cul\u003e\n\u003cli\u003e土地代が高い、狭い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eラックあたりの電力許容量が少ない\n\u003cul\u003e\n\u003cli\u003e建物自体の配電設計や空調も限界\u003c/li\u003e\n\u003cli\u003e他のテナントと電気の取り合い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eラックの収容台数を最大化できない\n\u003cul\u003e\n\u003cli\u003eネットワークスイッチのポート数\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e供給電力と空調能力のバランス\n\u003cul\u003e\n\u003cli\u003e詰めすぎると空調が追いつかない\n\u003cul\u003e\n\u003cli\u003eサーバーファインが回って電力消費が増える\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e空調に合わせると台数を増やせない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eコスト低減策\n\u003cul\u003e\n\u003cli\u003e設備投資\u003c/li\u003e\n\u003cli\u003e運用コスト\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e土地・電気の問題を解決したデータセンターを作る\n\u003cul\u003e\n\u003cli\u003e土地・建物、電気、空調\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e事業者向けに最適化されたデータセンターを作る\n\u003cul\u003e\n\u003cli\u003eデータセンター開発部門とサーバインフラ開発部門が共同で検討\u003c/li\u003e\n\u003cli\u003eラックの高さを増やせないか？\n\u003cul\u003e\n\u003cli\u003e日本国内では製造されていないが、海外ではある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサーバーをより多く搭載できないか？\u003c/li\u003e\n\u003cli\u003e一度にたくさんのサーバーを納品できないか？\u003c/li\u003e\n\u003cli\u003e奥行きの長いサーバーを搭載できないか？\n\u003cul\u003e\n\u003cli\u003e最近800mm超えるものがある\u003c/li\u003e\n\u003cli\u003e配線など考えると1000mmでは足りない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eラック前のスペースが狭い\n\u003cul\u003e\n\u003cli\u003eラック設置後の取り出し作業などができなくなる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eフリーアクセスフロア\n\u003cul\u003e\n\u003cli\u003e年月が進むとケーブルの地層ができてしまう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e新しいサーバーインフラを作ろう\n\u003cul\u003e\n\u003cli\u003eOpen Compute Project(OCP)\n\u003cul\u003e\n\u003cli\u003eハードウェアのオープンソース化を推進している団体\u003c/li\u003e\n\u003cli\u003e利点\n\u003cul\u003e\n\u003cli\u003e本当に必要なパーツのみで構成することができるので、調達コスト減、電力コスト減\u003c/li\u003e\n\u003cli\u003e個別に機能を実装してもらえる可能性がある\u003c/li\u003e\n\u003cli\u003e交換可能なパーツ交換に工具が不要\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e欠点\n\u003cul\u003e\n\u003cli\u003e為替の影響を受ける\u003c/li\u003e\n\u003cli\u003e専用ラックと電源が必要\u003c/li\u003e\n\u003cli\u003eテストは利用者側が実施する\u003c/li\u003e\n\u003cli\u003e保守は自前でパーツ交換のみ\u003c/li\u003e\n\u003cli\u003eメーカーとのやり取りは英語や中国語\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e調達コスト・消費電力ともに減\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1515--1535コーヒーブレイク\"\u003e15:15 ~ 15:35\tコーヒーブレイク\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e神楽坂「亀井堂」のパン\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1535--1610講演3untangling-the-world-wide-mesh-of-undersea-cables世界に張り巡らされた海底ケーブルネットワークをひもとく\"\u003e15:35 ~ 16:10\t講演3「Untangling the world-wide mesh of undersea cables：世界に張り巡らされた海底ケーブルネットワークをひもとく」\u003c/h2\u003e\n\u003ch3 id=\"iijイノベーションインスティテュートiij-ii-主任研究員-zachary-bischof-ビショフ-ザカリー\"\u003eIIJイノベーションインスティテュート（IIJ-II） 主任研究員 Zachary Bischof （ビショフ ザカリー）\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e海底ケーブルを使った通信は99%\u003c/li\u003e\n\u003cli\u003e障害が起きて孤立化することも\u003c/li\u003e\n\u003cli\u003eなぜ今海底ケーブルの研究をしているか\n\u003cul\u003e\n\u003cli\u003eケーブルのEOL\u003c/li\u003e\n\u003cli\u003e自然災害\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eケーブルが長くなれば事故のリスクも増える\u003c/li\u003e\n\u003cli\u003etracertではどの海底ケーブルを通っているかまではわからない\n\u003cul\u003e\n\u003cli\u003eわかるようにしたい\n\u003cul\u003e\n\u003cli\u003eルーターの物理的な位置を特定する\u003c/li\u003e\n\u003cli\u003eRTTをもとに海底ケーブルを使っている可能性がある場所を推測する\u003c/li\u003e\n\u003cli\u003e地上の距離を測る（Google map）\u003c/li\u003e\n\u003cli\u003e過去のケーブルアクティビティデータをもとに推測する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eこうすることで、どのケーブルが重要なのかが見えてくる\n\u003cul\u003e\n\u003cli\u003eSEA-ME-WE3\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.submarinecablemap.com/#/submarine-cable/seamewe-3\"\u003ehttps://www.submarinecablemap.com/#/submarine-cable/seamewe-3\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1610--1620休憩\"\u003e16:10 ~ 16:20\t休憩\u003c/h2\u003e\n\u003ch2 id=\"1620--1700講演4セキュリティ動向2019\"\u003e16:20 ~ 17:00\t講演4「セキュリティ動向2019」\u003c/h2\u003e\n\u003ch3 id=\"iij-セキュリティ本部長-齋藤-衛\"\u003eIIJ セキュリティ本部長 齋藤 衛\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e標的型攻撃\n\u003cul\u003e\n\u003cli\u003e2003〜2008年頃は政府機関が対象、2011年以降に中小企業も狙われてきている\u003c/li\u003e\n\u003cli\u003e暗号資産関連組織が狙われる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eランサムウェア\n\u003cul\u003e\n\u003cli\u003e最近は検出数が減少傾向\u003c/li\u003e\n\u003cli\u003eターゲットが絞り込まれている\n\u003cul\u003e\n\u003cli\u003e公共サービスや医療機関など身代金を払いそう（払わざるを得ない）なところ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDDoS攻撃\n\u003cul\u003e\n\u003cli\u003eSYN/ACK攻撃\n\u003cul\u003e\n\u003cli\u003e正常な通信との判別が難しい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e恐喝DDoS攻撃\n\u003cul\u003e\n\u003cli\u003e20〜30Gbps程度の攻撃でもネットワークによっては影響ある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eフェイクニュース\n\u003cul\u003e\n\u003cli\u003e正月のカニ\u003c/li\u003e\n\u003cli\u003e本物の情報でも、順番を並べたりすることで受け取りての印象操作をすることができる\n\u003cul\u003e\n\u003cli\u003eFacebookが実験した\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eマイクロターゲティング広告\n\u003cul\u003e\n\u003cli\u003eネット上の行動履歴など個人情報を詳細に分析できるようになってきている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eブレグジット問題\u003c/li\u003e\n\u003cli\u003eなにかの判断は原典にあたってから実施しよう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eここまでで家の用事のため撤収。データセンターの話面白かった。\u003c/p\u003e","tags":["event","iij"],"title":"IIJ Technical DAY 2019"},{"categories":null,"objectID":"8e08a83f7d191c83b7e143d16d7e27ad","permalink":"https://umemak.github.io/blog/posts/2019/11/20_jag1911_5g/","publish_date":"2019-11-20T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://japan-android-group.connpass.com/event/152293/\"\u003ehttps://japan-android-group.connpass.com/event/152293/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e5Gのことを知りたい。\u003c/p\u003e\n\u003cp\u003e日本アンドロイドの会\u003c/p\u003e\n\u003ch2 id=\"５g最新情報及びローカル５g\"\u003e５G最新情報及びローカル５G\u003c/h2\u003e\n\u003ch3 id=\"５gmfアプリケーション委員会利用シーンwg主査高野雅晴様\"\u003e５GMFアプリケーション委員会利用シーンWG主査　高野　雅晴　様\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e5GMF: 第５世代モバイル推進フォーラム\u003c/li\u003e\n\u003cli\u003e会社紹介\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.bitmedia.co.jp/\"\u003ehttps://www.bitmedia.co.jp/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e5Gになると良いことがありそうなサービスが多い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eInterBEE2019の登壇資料をもとに\n\u003cul\u003e\n\u003cli\u003e移動通信しっステム、10年ごとに進化している\u003c/li\u003e\n\u003cli\u003e6Gも研究開発がはじまっている\n\u003cul\u003e\n\u003cli\u003e2030年に向けて\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eトランプ大統領のおかげで認知度が上がった\u003c/li\u003e\n\u003cli\u003e利用イメージの絵は国際的に評価が高い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e5Gとは\n\u003cul\u003e\n\u003cli\u003e低遅延\u003c/li\u003e\n\u003cli\u003e超高速\u003c/li\u003e\n\u003cli\u003e多数同時接続\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eキーコンセプト\n\u003cul\u003e\n\u003cli\u003eSatisfaction f End-to-End Quality\u003c/li\u003e\n\u003cli\u003e究極の超柔軟性\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e周波数を上げる\u003c/li\u003e\n\u003cli\u003eビームフォーミング\n\u003cul\u003e\n\u003cli\u003e端末狙い撃ちして無駄を省く\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e低遅延のために\n\u003cul\u003e\n\u003cli\u003eモバイル・エッジ・コンピューティング（MEC:めっく)\u003c/li\u003e\n\u003cli\u003e最初はゲームで実用化される？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eネットワークのソフトウェア化\n\u003cul\u003e\n\u003cli\u003eオーケストレーションを誰がやるか\n\u003cul\u003e\n\u003cli\u003eParallel Wireless\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e5G時代に向けたアプリケーションの検討\u003c/li\u003e\n\u003cli\u003e週刊ダイヤモンドの特集が興味深い\n\u003cul\u003e\n\u003cli\u003e日本においては普及はゲーム、動画から\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eローカル5Gで大学が特区的になる？\u003c/li\u003e\n\u003cli\u003espeedtest.net\n\u003cul\u003e\n\u003cli\u003e5GMAPでどこでサービスしてるか見れる\u003c/li\u003e\n\u003cli\u003eyoutubeにテストしてるユーザーの動画も上がっている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eローカル5G（プライベート5G）\n\u003cul\u003e\n\u003cli\u003e制度化は日本が進んでいる\u003c/li\u003e\n\u003cli\u003e設備投資はあるが、通信課金はない\u003c/li\u003e\n\u003cli\u003e28GHz帯の電波は使い勝手が悪い\n\u003cul\u003e\n\u003cli\u003e雨が降っただけでダメとか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e普及はまだ先の印象\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"lte-cat-m1の最新情報\"\u003eLTE Cat-M1の最新情報\u003c/h2\u003e\n\u003ch3 id=\"日本androidの会運営委員鈴木直康様\"\u003e日本Androidの会　運営委員　鈴木　直康　様\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eキャリアごとに呼び方が違っている\u003c/li\u003e\n\u003cli\u003eIoT\n\u003cul\u003e\n\u003cli\u003e2011年頃から\u003c/li\u003e\n\u003cli\u003eBluetoothでの通信がメジャー\u003c/li\u003e\n\u003cli\u003eBLEを使った弱点\n-送信距離が数十メートル\n\u003cul\u003e\n\u003cli\u003e電力供給のために線を引かないといけない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサブギガ(910~920Mhz)が注目されている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eLTE-M(eMTC)\n\u003cul\u003e\n\u003cli\u003eキャリアのインフラを使用する\u003c/li\u003e\n\u003cli\u003eデバイスだけ開発すれば良い\u003c/li\u003e\n\u003cli\u003eモジュールを機器に組み込めば良い、が実際はノイズ対策など必要\u003c/li\u003e\n\u003cli\u003e屋外の場合は防水対策も必要\u003c/li\u003e\n\u003cli\u003e低消費電力にする技術\n\u003cul\u003e\n\u003cli\u003eeDRX（基地局確認時間拡張技術）\n\u003cul\u003e\n\u003cli\u003e基地局の確認する間隔を伸ばす（最大４３分）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePSM(Power Saving Mode)\n\u003cul\u003e\n\u003cli\u003e受信はできないが、送信しない間電源OFFに近い状態にする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRepetition（繰り返し送信技術）\n\u003cul\u003e\n\u003cli\u003eデータロストを防ぐため、同じデータを複数回送って基地局側で合成する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e弱点\n\u003cul\u003e\n\u003cli\u003eハンドオーバーできない\n\u003cul\u003e\n\u003cli\u003e置きっぱなしを想定しているため\u003c/li\u003e\n\u003cli\u003e基地局境界に端末があった場合に問題\n\u003cul\u003e\n\u003cli\u003eモデム再起動して接続し直す必要がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e現在出ているQualcommのチップは、低消費電力設計されていない\n\u003cul\u003e\n\u003cli\u003e低消費な製品は2020年秋以降になるらしい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAndroidと5G\n\u003cul\u003e\n\u003cli\u003eGoogleはNR(New Radio)と呼んでいる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eローカル5G\n\u003cul\u003e\n\u003cli\u003e鉄道、路線が並走しているところは早いものがち\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["event","5g"],"title":"2019年11月定例会「５G最前線とローカル５G」"},{"categories":null,"objectID":"e4afcd888dabddcf851b74487adb38b4","permalink":"https://umemak.github.io/blog/posts/2019/11/20_line_devday/","publish_date":"2019-11-20T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://linedevday.linecorp.com/jp/2019/\"\u003ehttps://linedevday.linecorp.com/jp/2019/\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e5回目の開催とのことですが、初参加です。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1040--keynote\"\u003e10:40- Keynote\u003c/h2\u003e\n\u003ch3 id=\"euivin-park--line-cto\"\u003eEuivin Park / LINE CTO\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLIFE with LINE\n\u003cul\u003e\n\u003cli\u003e今年だけで20以上のサービスをリリース\u003c/li\u003e\n\u003cli\u003e金融系のサービスも多い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eLINE MINI App\n\u003cul\u003e\n\u003cli\u003e飲食店での例\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNatural Experience with AI\n\u003cul\u003e\n\u003cli\u003e2 Principles for Handling Data\n\u003cul\u003e\n\u003cli\u003eTo keep \u0026ldquo;Privacy Fitst\u0026rdquo;\u003c/li\u003e\n\u003cli\u003eTo Avoid Data Silos\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eUnified Self-Service Data PlatformO\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAI\n\u003cul\u003e\n\u003cli\u003e二千万次元\u003c/li\u003e\n\u003cli\u003e受付の顔認証はiPadの機能を使っていた\u003c/li\u003e\n\u003cli\u003e自分専用フォント\n\u003cul\u003e\n\u003cli\u003e５００文字？くらいで作れる\u003c/li\u003e\n\u003cli\u003e鳥海さんの話ででていた基本文字みたいなの書くのかな？\u003c/li\u003e\n\u003cli\u003eAPIを来場者に先行提供\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eNatural Language Processiong, STT/TSS\n\u003cul\u003e\n\u003cli\u003eレストランの予約ができる音声合成AI\u003c/li\u003e\n\u003cli\u003e今日から実店舗で稼働開始\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eVideo Analysis\n\u003cul\u003e\n\u003cli\u003e動画を解析して字幕つける\u003c/li\u003e\n\u003cli\u003eまだ誤認識がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eData Platform\n\u003cul\u003e\n\u003cli\u003eSelf-Service Data Platform\u003c/li\u003e\n\u003cli\u003e圧縮して390TB以上毎日蓄積される\u003c/li\u003e\n\u003cli\u003eデータサイエンティストの本来の業務ができていないという課題\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eInfra\n\u003cul\u003e\n\u003cli\u003eFast lifecycle infla\u003c/li\u003e\n\u003cli\u003eピーク時1Tbpsのトラフィック\u003c/li\u003e\n\u003cli\u003e4万台の物理サーバー\u003c/li\u003e\n\u003cli\u003ePrivate Cloud : Verda（OpenStack)\n\u003cul\u003e\n\u003cli\u003eプライベートクラウドを持つ理由\n\u003cul\u003e\n\u003cli\u003e課題解決に対するイニシアチブ\u003c/li\u003e\n\u003cli\u003eオープンテクノロジーを選択できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eインフラのソフトウェア化\n\u003cul\u003e\n\u003cli\u003e不具合に対する対応が早い\u003c/li\u003e\n\u003cli\u003eCI/CDがまわせる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eセキュリティとプライバシー\n\u003cul\u003e\n\u003cli\u003ePrivacy First\u003c/li\u003e\n\u003cli\u003eData GoVernance\n\u003cul\u003e\n\u003cli\u003eResponsibility as a Platform\u003c/li\u003e\n\u003cli\u003e専門チームによるチェック\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eLINE Account Hijack\n\u003cul\u003e\n\u003cli\u003e２段秋人相\u003c/li\u003e\n\u003cli\u003e行動パターンを分析\u003c/li\u003e\n\u003cli\u003e約２年で乗っ取り被害が０になった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSpam\n\u003cul\u003e\n\u003cli\u003eMLを利用\u003c/li\u003e\n\u003cli\u003eSpammerの傾向を学習してフィルタパターンを自動更新\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFake News\u003c/li\u003e\n\u003cli\u003ePassword Issue\n\u003cul\u003e\n\u003cli\u003efidoを利用\u003c/li\u003e\n\u003cli\u003eパスワードレスを進めていきたい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eTracsparency\n\u003cul\u003e\n\u003cli\u003e年２階透明性レポートを公開している\u003c/li\u003e\n\u003cli\u003e今月15日からBug Bounty ProgramをHackeroneで開始\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch2 id=\"leading-ai-technology\"\u003eLeading AI Technology\u003c/h2\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1200--grpc-service-development-in-private-kubernetes-cluster\"\u003e12:00- gRPC service development in private Kubernetes cluster\u003c/h2\u003e\n\u003ch3 id=\"keiichiro-ui--line-development-team-h-server-side-engineer\"\u003eKeiichiro Ui / LINE Development Team H Server Side Engineer\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLINE LIVEで利用\u003c/li\u003e\n\u003cli\u003eなぜk8sか\n\u003cul\u003e\n\u003cli\u003eトラフィックに対応するために手動でスケールする必要があった\u003c/li\u003e\n\u003cli\u003eオープンなエコシステムに乗ることができる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eどう使っているか\n\u003cul\u003e\n\u003cli\u003e内部ではgRPCで通信\u003c/li\u003e\n\u003cli\u003e外部とはEnvoyで変換して通信\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003egRPC-Web\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/grpc/grpc-web\"\u003ehttps://github.com/grpc/grpc-web\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e社内の既存サービスとの連携\n\u003cul\u003e\n\u003cli\u003eREST APIをgRPCで再定義\n\u003cul\u003e\n\u003cli\u003eJSONをgRPCに変換する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIstioを使わない理由\n\u003cul\u003e\n\u003cli\u003eいくつかのコンポーネントはSpringで間に合う\u003c/li\u003e\n\u003cli\u003eパフォーマンスの問題\n\u003cul\u003e\n\u003cli\u003e1.89msが13.7msとか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDatabaseとの通信\n\u003cul\u003e\n\u003cli\u003eMySQL with ACL\u003c/li\u003e\n\u003cli\u003e事前にACLへの登録が必要\n\u003cul\u003e\n\u003cli\u003eオートスケールとの相性が悪い\u003c/li\u003e\n\u003cli\u003eACL Managerを作って回避\n\u003cul\u003e\n\u003cli\u003eノード追加をフックしてACLに登録（構想段階）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePrometheus\n\u003cul\u003e\n\u003cli\u003e社内の時系列DBにメトリクスを蓄積して使う\u003c/li\u003e\n\u003cli\u003eメトリクス多い問題\n\u003cul\u003e\n\u003cli\u003e既存のプロジェクトからベストプラクティスを模索\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eログ収集\n\u003cul\u003e\n\u003cli\u003eEFK(Elasticsearch+Fluentd+Kibana)\n\u003cul\u003e\n\u003cli\u003eFluentdを使った理由\n\u003cul\u003e\n\u003cli\u003eKnativeの要件\u003c/li\u003e\n\u003cli\u003eK8sのaddonが参考になった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIMON（LINE社内開発）\n\u003cul\u003e\n\u003cli\u003e通知担当\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1340--inside-of-blog-light-and-shadow-of-the-service-matured-for-15-years-and-challenge-chaos-and-legacy\"\u003e13:40- Inside of Blog; Light and shadow of the service matured for 15 years and challenge chaos and legacy\u003c/h2\u003e\n\u003ch3 id=\"takahiro-omori--line-development-team-b\"\u003eTakahiro Omori / LINE Development Team B\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003elivedoor blogとline blog\n\u003cul\u003e\n\u003cli\u003e15年の歴史があるのはlivedoorのほう\u003c/li\u003e\n\u003cli\u003e70+開発者\u003c/li\u003e\n\u003cli\u003e750+サーバー台数。うち200がdb。\u003c/li\u003e\n\u003cli\u003e550+テーブル数\u003c/li\u003e\n\u003cli\u003e43500+ファイル数\u003c/li\u003e\n\u003cli\u003e3800+プログラムファイル（perl）\u003c/li\u003e\n\u003cli\u003e410000+プログラム行数\u003c/li\u003e\n\u003cli\u003eサーバー移転\u003c/li\u003e\n\u003cli\u003eHTTPS化\n\u003cul\u003e\n\u003cli\u003eサーバー移転終わらないと完了できない（闇）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDocument Not Found\n\u003cul\u003e\n\u003cli\u003eデプロイ方法とか謎になっている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDevelopment Server Not Found\n\u003cul\u003e\n\u003cli\u003eフローチャートで説明\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eToo Many DBS Records\n\u003cul\u003e\n\u003cli\u003e300+??\u003c/li\u003e\n\u003cli\u003e230が未使用\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eToo Many Functions\u003c/li\u003e\n\u003cli\u003ePerl\n\u003cul\u003e\n\u003cli\u003ev5.8を使い続けている\u003c/li\u003e\n\u003cli\u003emod_perlのせい\u003c/li\u003e\n\u003cli\u003ev5.16も使っている・・・混在\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMySQL\n\u003cul\u003e\n\u003cli\u003ev4.0を使い続けている\u003c/li\u003e\n\u003cli\u003eいろいろ使えない機能が多い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eblogの特殊な事情\n\u003cul\u003e\n\u003cli\u003e文字コードセットの混在\u003c/li\u003e\n\u003cli\u003eこれのせいで正規手順でMySQLのバージョンアップができない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eline blog\n\u003cul\u003e\n\u003cli\u003e2015年11月リリース\u003c/li\u003e\n\u003cli\u003e当初はlivedoor blogのASPとして稼働\u003c/li\u003e\n\u003cli\u003e2016年11月の一般公開で独立\u003c/li\u003e\n\u003cli\u003elivedoor blogからforkしたので、libedoorの闇も引き継いでいた\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNext 15 Years\n\u003cul\u003e\n\u003cli\u003e今担当しているサーブ素を１０年、１５年後に担当するメンバーが苦労しないよう心がける\u003c/li\u003e\n\u003cli\u003e小さなことから\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1430--technologies-that-support-the-distribution-of-line-news-articles\"\u003e14:30- Technologies that support the distribution of LINE NEWS articles\u003c/h2\u003e\n\u003ch3 id=\"daiki-inaba--line-development-team-i-software-engineer\"\u003eDaiki Inaba / LINE Development Team I Software engineer\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e68M MAU / 12B MPV\u003c/li\u003e\n\u003cli\u003ePerlとJavaで動いている\u003c/li\u003e\n\u003cli\u003eレコメンド配信はSpring(Java)で動いている\u003c/li\u003e\n\u003cli\u003eMLと手動でのレコメンドを行っている\u003c/li\u003e\n\u003cli\u003eMLのレコメンドは社内のDataLabで生成されたものを使っている\u003c/li\u003e\n\u003cli\u003e当初はMLのみでレコメンドしていた\u003c/li\u003e\n\u003cli\u003eレコメンドデータのインポートの課題\n\u003cul\u003e\n\u003cli\u003e１億人のデータを１時間ごとに\u003c/li\u003e\n\u003cli\u003e並列処理（20スレッド*3台）で実施\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e初期実装の問題\n\u003cul\u003e\n\u003cli\u003eスケーラビリティ\n\u003cul\u003e\n\u003cli\u003eマッピングデータの形式変更\u003c/li\u003e\n\u003cli\u003e記事IDではなく、ユーザーIDをキーにした\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e運用コストが高い\n\u003cul\u003e\n\u003cli\u003eユーザーIDの抽出をCMSでできるようにした\u003c/li\u003e\n\u003cli\u003e分析チームに依頼せず、属性フィルタで抽出する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e今後\n\u003cul\u003e\n\u003cli\u003eレコメンドクオリティ\u003c/li\u003e\n\u003cli\u003eリアルタイムフィードバック\n\u003cul\u003e\n\u003cli\u003e現在A/Bテスト中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1530--data-science-drives-improvement-of-line-messenger\"\u003e15:30- Data Science drives improvement of LINE messenger\u003c/h2\u003e\n\u003ch3 id=\"taro-takaguchi--line-data-science-team2-senior-data-scientist--manager\"\u003eTaro Takaguchi / LINE Data Science Team2 Senior Data Scientist / Manager\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUsrs First\u003c/li\u003e\n\u003cli\u003eData Driven\u003c/li\u003e\n\u003cli\u003eDiverse Team\u003c/li\u003e\n\u003cli\u003eIn-house Development\u003c/li\u003e\n\u003cli\u003eUser Research\n\u003cul\u003e\n\u003cli\u003e対面インタビュー、インター別途アンケートなど\u003c/li\u003e\n\u003cli\u003e数値モニタリング\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePlan \u0026amp; Development\n\u003cul\u003e\n\u003cli\u003e取得するログの定義など\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eTest \u0026amp; Feedback\n\u003cul\u003e\n\u003cli\u003eA/Bテスト\u003c/li\u003e\n\u003cli\u003e結果の分析\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eアプリの使われ方が多彩\u003c/li\u003e\n\u003cli\u003e単独のKPIが設定できない\u003c/li\u003e\n\u003cli\u003eCore Value of LINE App\n\u003cul\u003e\n\u003cli\u003eClosing the Distance\n\u003cul\u003e\n\u003cli\u003eグループ機能\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eグループ作成のフローでABSCESSテスト\n\u003cul\u003e\n\u003cli\u003e先にグループ名とアイコンを決める\u003c/li\u003e\n\u003cli\u003e先にメンバーを決める\u003c/li\u003e\n\u003cli\u003eどちらも大差なかった\u003c/li\u003e\n\u003cli\u003e招待メンバーの選択IFに問題があった\u003c/li\u003e\n\u003cli\u003e最近話した相手を上位に表示\n\u003cul\u003e\n\u003cli\u003eグループ作成完了までに時間が優位に短縮\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eグループ名設定とメンバー選択を同じ画面に\n\u003cul\u003e\n\u003cli\u003eネガティブ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eData Science Tools\n\u003cul\u003e\n\u003cli\u003e\n\u003ch2 id=\"oasis\"\u003eOASIS\u003c/h2\u003e\n\u003c/li\u003e\n\u003cli\u003eLIBRA\n\u003cul\u003e\n\u003cli\u003eデータ抽出\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eLIBRA REPORT\n\u003cul\u003e\n\u003cli\u003eテスト実施中のダッシュボード\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eR Shiny\n\u003cul\u003e\n\u003cli\u003eダッシュボードその２\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConflr\n\u003cul\u003e\n\u003cli\u003eコンフルに共有するOSS\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1620--introduction-to-xxe-ssrf-insecure-deserialization\"\u003e16:20- Introduction to XXE, SSRF, Insecure Deserialization\u003c/h2\u003e\n\u003ch3 id=\"hiroshi-tokumaru--eg-secure-solutions-inc-president\"\u003eHiroshi Tokumaru / EG Secure Solutions Inc. President\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eXML外部実体参照(XXE)\n\u003cul\u003e\n\u003cli\u003eアップロードされたXMLを表示するパターン\n\u003cul\u003e\n\u003cli\u003eファイルパスを指定したらそれが表示されてしまう\u003c/li\u003e\n\u003cli\u003eURLを指定したらその内容が表示されてしまう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e対策\n\u003cul\u003e\n\u003cli\u003eXMLの代わりにJSONを使う\u003c/li\u003e\n\u003cli\u003e信頼できないXMLを解析しないことが大事\u003c/li\u003e\n\u003cli\u003eDTDを禁止する\u003c/li\u003e\n\u003cli\u003ePHPならlibxml2 2.9以降を使うとデフォルトで対策されている\u003c/li\u003e\n\u003cli\u003eRubyのREXMLは標準で対策済み\u003c/li\u003e\n\u003cli\u003eテストしてみるのが確実\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSSRF\n\u003cul\u003e\n\u003cli\u003e直接アクセスできない内部のサーバーに何らかの方法でアクセスする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSSRF脆弱性とSSRF攻撃\n\u003cul\u003e\n\u003cli\u003e一般的に、脆弱性と攻撃手法は1対1の関係になっている\u003c/li\u003e\n\u003cli\u003eSSRFはそうではなく、脆弱性が多の関係になっている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWAFに付与していたAIMロールの権限が強かった例\n\u003cul\u003e\n\u003cli\u003e本来不要なものまでついていた\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDNSリバインディング\n\u003cul\u003e\n\u003cli\u003eDNS問い合わせの１回目と２回目で違う値を返す攻撃\u003c/li\u003e\n\u003cli\u003egethostbynameしてからcurlするときなど\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e昨日、EC2でSSRF多層防御が実装されたアナウンスが出た\u003c/li\u003e\n\u003cli\u003e安全でないデシリアライゼーション\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e対策\n\u003cul\u003e\n\u003cli\u003eJSON形式にする\u003c/li\u003e\n\u003cli\u003eセッション変数を使う\u003c/li\u003e\n\u003cli\u003e改ざんチェックを入れる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1720--cloud-native-challenges-in-private-cloud-with-k8s-knative\"\u003e17:20- Cloud Native Challenges in Private Cloud with K8s, Knative\u003c/h2\u003e\n\u003ch3 id=\"yuki-nishiwaki--line-verda-platform-development-team-manager\"\u003eYuki Nishiwaki / LINE Verda Platform Development Team Manager\u003c/h3\u003e","tags":["event","line"],"title":"LINE DEVELOPER DAY 2019"},{"categories":null,"objectID":"26a25709093d27533768b9afff6bd70a","permalink":"https://umemak.github.io/blog/posts/2019/11/14_reinstall_ol/","publish_date":"2019-11-14T00:00:00Z","summary":"\u003cp\u003emattermostが動かないのは、素のyumでインストールしたdockerのバージョンが古いことが原因の可能性があるので、最新版に入れ直す。\u003c/p\u003e\n\u003cp\u003e素で入れた方のバージョン\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Bash\" data-lang=\"Bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker --version\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eDocker version 18.09.8-ol, build 76804b7\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e既存の環境でやるのはまた何が起こるかわからないので、インスタンスを再作成してやり直す。\u003c/p\u003e\n\u003cp\u003e手順\n\u003ca href=\"https://docs.docker.com/install/linux/docker-ce/centos/\"\u003ehttps://docs.docker.com/install/linux/docker-ce/centos/\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Bash\" data-lang=\"Bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo yum update -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker --version\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-bash: docker: command not found\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo yum install -y yum-utils \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  device-mapper-persistent-data \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  lvm2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo yum-config-manager \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --add-repo \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    https://download.docker.com/linux/centos/docker-ce.repo\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo yum install docker-ce docker-ce-cli containerd.io\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker --version\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eDocker version 19.03.4, build 9013bf583a\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo systemctl start docker\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo usermod -aG docker opc\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 再ログイン\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker run hello-world\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edocker: Error response from daemon: OCI runtime create failed: container_linux.go:346: starting container process caused \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;process_linux.go:449: container init caused \\\u0026#34;write /proc/self/attr/keycreate: permission denied\\\u0026#34;\u0026#34;\u003c/span\u003e: unknown.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eERRO\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e0000\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e error waiting \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e container: context canceled \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# https://stackoverflow.com/questions/56870478/cannot-start-docker-container-in-docker-ce-on-oracle-linux\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo yum install http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.107-1.el7_6.noarch.rpm\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ docker run hello-world\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eHello from Docker!\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOK。\n続いてmattermostのセットアップ\u003c/p\u003e","tags":["oracle"],"title":"Oracle Linux再セットアップ"},{"categories":null,"objectID":"7bdbff88581729443c23b913052d9263","permalink":"https://umemak.github.io/blog/posts/2019/11/13_k8s_meetup_tokyo_25/","publish_date":"2019-11-13T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://k8sjp.connpass.com/event/150873/\"\u003ehttps://k8sjp.connpass.com/event/150873/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e何度か応募するも抽選に落ちて、初参加です。\u003c/p\u003e\n\u003cp\u003eストレージ系の話が中心です。\u003c/p\u003e\n\u003ch2 id=\"18301900受付開始-1930までソーシャル\"\u003e18:30~19:00\t受付開始 (19:30まで)、ソーシャル\u003c/h2\u003e\n\u003ch2 id=\"19001905opening-5min\"\u003e19:00~19:05\tOpening (5min)\u003c/h2\u003e\n\u003ch2 id=\"19051935入門kubernetes-persistent-volume-30min\"\u003e19:05~19:35\t入門、Kubernetes Persistent Volume (30min)\u003c/h2\u003e\n\u003ch3 id=\"坂下-幸徳twitter-ysakashita3-github-ysakashita-ゼットラボ株式会社\"\u003e坂下 幸徳（Twitter: @ysakashita3, GitHub: ysakashita), ゼットラボ株式会社\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eストレージの苦手意識を払拭する\u003c/li\u003e\n\u003cli\u003eデータプレーンとコントロールプレーン\n\u003cul\u003e\n\u003cli\u003eデータ：格納と転送担当\u003c/li\u003e\n\u003cli\u003eコントロール：管理担当\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eストレージの種別\n\u003cul\u003e\n\u003cli\u003eブロック：内蔵ドライブと同じRawデバイス：性能High：DBやOS\u003c/li\u003e\n\u003cli\u003eファイル：ネットワークドライブ：性能Mid：ファイル共有\u003c/li\u003e\n\u003cli\u003eオブジェクト：オブジェクト単位でHostからはHTTPアクセス：性能Low：写真や動画格納\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePersistentとは\n\u003cul\u003e\n\u003cli\u003eEphemeralの対義語。\u003c/li\u003e\n\u003cli\u003e永続的\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eストレージのモデル\n\u003cul\u003e\n\u003cli\u003ePersistentVolumeClaim, PersistentVolume, StorageClass\u003c/li\u003e\n\u003cli\u003eオブジェクトストレージ以外（オブジェクトストレージはそもそもHTTPでアクセスできるので）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eリソースの範囲と権限\n\u003cul\u003e\n\u003cli\u003eSC, PVはすべてのNamesoaceで共通\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003epvc\n\u003cul\u003e\n\u003cli\u003eVolumeの要求仕様を表すリソース\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eロックメカニズム\n\u003cul\u003e\n\u003cli\u003eブロック：LBAのため、ロックメカニズムを持っていない\n\u003cul\u003e\n\u003cli\u003e複数ホストから同時に書き込まないようにする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eファイル\n\u003cul\u003e\n\u003cli\u003eファイル単位でロック\u003c/li\u003e\n\u003cli\u003e複数ホストから読み書き可能\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003epv\n\u003cul\u003e\n\u003cli\u003eVolume を表すリソース\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003esc\n\u003cul\u003e\n\u003cli\u003eストレージプールを表すモデル\u003c/li\u003e\n\u003cli\u003eProvisionerがストレージ装置のAPIを呼び出す\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCSI(Container Storage Interface)\n\u003cul\u003e\n\u003cli\u003eコンテナオーケストレーション向けの標準仕様\u003c/li\u003e\n\u003cli\u003eK8s 1.13 で GA\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eStatefulSet(sts)\n\u003cul\u003e\n\u003cli\u003epv, pvcを便利かつ安全に使う\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRolling Update（セルフヒーリングも同様）\n\u003cul\u003e\n\u003cli\u003epodは再作成\u003c/li\u003e\n\u003cli\u003epv, pscはそのまま\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFAQ\n\u003cul\u003e\n\u003cli\u003eストレージは何を選んだら良いか\n\u003cul\u003e\n\u003cli\u003e用途、データの価値による\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCinderとA社どちらが良いか\n\u003cul\u003e\n\u003cli\u003e比較対象が異なる\u003c/li\u003e\n\u003cli\u003eK8sやCSIがサポートしてないならCinderを挟むのがあり\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDB用途\n\u003cul\u003e\n\u003cli\u003e特別な理由がなければブロックストレージが良い\u003c/li\u003e\n\u003cli\u003e性能問題、ロックメカニズムの問題\u003c/li\u003e\n\u003cli\u003eファイルストレージはSyncで書き込まれる保証がない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDeploymentでpv使ってもよいか\n\u003cul\u003e\n\u003cli\u003eストレージに優しくないのでStatefulSetがオススメ\u003c/li\u003e\n\u003cli\u003eRWXをサポートしていないストレージはsts一択\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"19352010kubernetesにおけるcsiについて-30min\"\u003e19:35~20:10\tKubernetesにおけるCSIについて (30min)\u003c/h2\u003e\n\u003ch3 id=\"早川-大貴-twitter-bells17_-github-bells17-株式会社idcフロンティア\"\u003e早川 大貴 (Twitter: bells17_, Github: bells17), 株式会社IDCフロンティア\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/1S0FcCAgZn11ZFbJfU2eUhOa--vONqrsd0waRvwoTBcE/edit\"\u003ehttps://docs.google.com/presentation/d/1S0FcCAgZn11ZFbJfU2eUhOa--vONqrsd0waRvwoTBcE/edit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCSI移行のモチベーション\n\u003cul\u003e\n\u003cli\u003eストレージプロバイダ\n\u003cul\u003e\n\u003cli\u003eCSIプラグインを実装するだけで各種コンテナオーケストレーター(OC)に対応できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eK8s\n\u003cul\u003e\n\u003cli\u003eボリュームプラグインを本体から除外できる\u003c/li\u003e\n\u003cli\u003eバイナリサイズの削減など期待\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e機材トラブル\u003c/li\u003e\n\u003cli\u003eCSIで定義されている仕様\n\u003cul\u003e\n\u003cli\u003eドライバの通信方法や提供方法\n\u003cul\u003e\n\u003cli\u003eコンテナイメージ形式で提供する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e提供する機能\u003c/li\u003e\n\u003cli\u003egRPCのインターフェース\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRPC service\n\u003cul\u003e\n\u003cli\u003eIdentity Service\u003c/li\u003e\n\u003cli\u003eController Service\u003c/li\u003e\n\u003cli\u003eNode Service\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eK8sとCSIの連携\n\u003cul\u003e\n\u003cli\u003eController Plugin/Node Pluginをサイドカー的に使用する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"20102045how-to-develop-the-high-available-redis-database-application-on-kubernetes-en英語-30min\"\u003e20:10~20:45\tHow to develop the high-available Redis database application on Kubernetes (en/英語) (30min)\u003c/h2\u003e\n\u003ch3 id=\"ran-xu-github-fengzixu-twitter-haierdi0715\"\u003eRan Xu (Github: fengzixu Twitter: Haierdi0715)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eHigily Reliable Data\n\u003cul\u003e\n\u003cli\u003ebackup\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eHigh Available Service\n\u003cul\u003e\n\u003cli\u003edata link\n\u003cul\u003e\n\u003cli\u003eLBで分散管理\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"20452110懇親タイム-sponsored-by-cyberagent\"\u003e20:45~21:10\t懇親タイム sponsored by CyberAgent\u003c/h2\u003e\n\u003ch2 id=\"2110-2130lt大会-5min-x-5-\"\u003e21:10-21:30\tLT大会 (5min x 5)\t-\u003c/h2\u003e\n\u003ch3\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/ytaka23/kubernetes-meetup-tokyo-25th\"\u003ehttps://speakerdeck.com/ytaka23/kubernetes-meetup-tokyo-25th\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eTopology Spread Constraints\n\u003cul\u003e\n\u003cli\u003ev1.16でα版\u003c/li\u003e\n\u003cli\u003e設定次第でデッドロックになる可能性も\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.slideshare.net/inajob/kubeweekly/inajob/kubeweekly\"\u003ehttps://www.slideshare.net/inajob/kubeweekly/inajob/kubeweekly\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eK8s情報のキャッチアップ\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://kubeweekly.io\"\u003ehttps://kubeweekly.io\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/int128/deploy-the-cluster-autoscaler-with-terraform-and-helmfile-monitor-with-prometheus\"\u003ehttps://speakerdeck.com/int128/deploy-the-cluster-autoscaler-with-terraform-and-helmfile-monitor-with-prometheus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCluster Autoscalerのデプロイとモニタリング\n\u003cul\u003e\n\u003cli\u003eTerraform, Prometheus\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eRook（るーく）/ Ceph\n\u003cul\u003e\n\u003cli\u003eHost-based と PVC-based\u003c/li\u003e\n\u003cli\u003eNodeに特別なNodeが必要なくなる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eKubespray\u003c/li\u003e\n\u003cli\u003eCentOSで動かなくてCoreOSにしたら動いた\u003c/li\u003e\n\u003cli\u003eマネージドサービスを使ったほうが楽\u003c/li\u003e\n\u003c/ul\u003e","tags":["kubernetes","event"],"title":"Kubernetes Meetup Tokyo #25"},{"categories":null,"objectID":"81351ff19c011844d3e03f890322cb5e","permalink":"https://umemak.github.io/blog/posts/2019/11/13_install_mattermost/","publish_date":"2019-11-13T00:00:00Z","summary":"\u003cp\u003eOracleCloudで動かしてみる。\u003c/p\u003e\n\u003cp\u003edockerとdocker-composeとgitをインストール。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/mattermost/mattermost-docker\"\u003ehttps://github.com/mattermost/mattermost-docker\u003c/a\u003e をgit cloneして、docker-compose.ymlのパスワードをランダムな文字列に変更したあと、\u003ccode\u003edocker-compose up -d\u003c/code\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e  Running setup.py install for gevent: started\n    Running setup.py install for gevent: still running...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eが結構時間かかる。\u003c/p\u003e\n\u003cp\u003eいきなり\u003ccode\u003edocker-compose up -d\u003c/code\u003eではなく、\u003ccode\u003edocker-compose build\u003c/code\u003eからやったほうが安心かも。\u003c/p\u003e","tags":["mattermost"],"title":"Mattermostを使ってみる"},{"categories":null,"objectID":"7005127b4b3df62a163fae112bfb2dc8","permalink":"https://umemak.github.io/blog/posts/2019/11/12_github_actions/","publish_date":"2019-11-12T00:00:00Z","summary":"\u003cp\u003eAWS Amplifyとか、Netlify試したりしていたら、Azure Pipelineでのこのページのビルドが通らなくなってしまったので、設定し直しのついでにGitHub Actionsに移行してみた。\u003c/p\u003e\n\u003cp\u003e手順は\u003ca href=\"https://qiita.com/peaceiris/items/d401f2e5724fdcb0759d\"\u003eQiitaの記事\u003c/a\u003eを見ながらそのままで。\u003c/p\u003e\n\u003cp\u003e思ったより簡単にできてしまって、最初からこれでよかった感が。。\u003c/p\u003e","tags":["hugo","github"],"title":"パイプラインをGitHub Actionsに移行"},{"categories":null,"objectID":"9c52fa19f4704a57a1469bbf316d7a84","permalink":"https://umemak.github.io/blog/posts/2019/11/11_go_release_10/","publish_date":"2019-11-11T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gocon.connpass.com/event/153665/\"\u003ehttps://gocon.connpass.com/event/153665/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eVMwareからのハシゴです。\n出る前にDatadogのデモ見てたら出るのが遅くなってしまった。\u003c/p\u003e\n\u003ch2 id=\"1900---1930open\"\u003e19:00 - 19:30\tOpen\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eケーキ！\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1930---2000history-of-go-by-ymotongpoo\"\u003e19:30 - 20:00\tHistory of Go by ymotongpoo\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e30 October, 2009\n\u003cul\u003e\n\u003cli\u003e社内公開\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e11 November, 2009\n\u003cul\u003e\n\u003cli\u003e一般公開\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://opensource.googleblog.com/2009/11/hey-ho-lets-go.html\"\u003ehttps://opensource.googleblog.com/2009/11/hey-ho-lets-go.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e1960-2007 - Foundations\n\u003cul\u003e\n\u003cli\u003eHWごとに言語があった時代(-1950)\u003c/li\u003e\n\u003cli\u003eJan 1960 ALGOL\u003c/li\u003e\n\u003cli\u003e1964-2007 Concurrency\n\u003cul\u003e\n\u003cli\u003e1964 Unix Pipe\u003c/li\u003e\n\u003cli\u003e1978 CSP(Communication Sequential Process)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e2007-2009 - Creation\n\u003cul\u003e\n\u003cli\u003eC++11のTechTalk行ったら新機能の話ばかりだった\u003c/li\u003e\n\u003cli\u003eC++でコンパイルするのに45分かかる\u003c/li\u003e\n\u003cli\u003eコンパイル待ち時間の間に同僚と議論していたのがGoの始まり\u003c/li\u003e\n\u003cli\u003eGoは創造と収斂\u003c/li\u003e\n\u003cli\u003eNo in Temporary, Yes is Forever\u003c/li\u003e\n\u003cli\u003eIan: I never once failed at implementing generics. I just found out 99 ways not to\u003c/li\u003e\n\u003cli\u003eGoは良いデザインが来るまでは、NOと言う\u003c/li\u003e\n\u003cli\u003eGenericsについて最初に言及したのは2009年\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e2009-2019 - Reflection\n\u003cul\u003e\n\u003cli\u003e2013頃からクラウド系のツールがgoで書かれ始めている\u003c/li\u003e\n\u003cli\u003eどんどん成長している\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e2020- - Prediction\n\u003cul\u003e\n\u003cli\u003eGo 2 に向けて\u003c/li\u003e\n\u003cli\u003e教育向け\u003c/li\u003e\n\u003cli\u003eGo 2 というのは後方互換性が保てなかったときに初めて出るもの\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2000---2020appengine-standard-for-go-の移り変わり-sinmetalの思い出から-by-sinmetal\"\u003e20:00 - 20:20\tAppEngine Standard for Go の移り変わり sinmetalの思い出から by sinmetal\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eピザ取りに行ってて最初の方聞き逃した。。\u003c/li\u003e\n\u003cli\u003e2nd genはGAEの依存を取り除いたもの\n\u003cul\u003e\n\u003cli\u003eバージョン追従が早くなった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2020---2030break\"\u003e20:20 - 20:30\tBreak\u003c/h2\u003e\n\u003cp\u003eケーキカット\u003c/p\u003e","tags":["golang","event"],"title":"Go Release 10 Year Anniversary Party in Tokyo"},{"categories":null,"objectID":"740bc6ec82d012e1d329c2769edf28bf","permalink":"https://umemak.github.io/blog/posts/2019/11/11_vmware_cloud_native_day/","publish_date":"2019-11-11T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://vm-event.jp/cnday/\"\u003ehttps://vm-event.jp/cnday/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e初参加です。\u003c/p\u003e\n\u003cp\u003e明日明後日位のイベントのday0的な位置づけ\nK8sなど中心に。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTanzu\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cloud.vmware.com/tanzu\"\u003ehttps://cloud.vmware.com/tanzu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.publickey1.jp/blog/19/vmware_tanzukubernetesvmworld_2019_us.html\"\u003ehttps://www.publickey1.jp/blog/19/vmware_tanzukubernetesvmworld_2019_us.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1300--general-session\"\u003e13:00- General Session\u003c/h2\u003e\n\u003ch3 id=\"パットゲルシンガーレイオファレルクレイグマクラッキー\"\u003eパットゲルシンガー、レイ・オファレル、クレイグ・マクラッキー\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eTechnolosists who master multi-cloud will own the next decade.\u003c/li\u003e\n\u003cli\u003eThe Five S\u0026rsquo;s\n\u003cul\u003e\n\u003cli\u003eSoeed, Security, Scalability, Stability, (Cost)Savings\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1430--クラウドネイティブ人間になるための自動化入門\"\u003e14:30- 『クラウドネイティブ人間』になるための自動化入門\u003c/h2\u003e\n\u003ch3 id=\"草間一人pivotal-labs\"\u003e草間一人(Pivotal Labs)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e自動化：アプリにもインフラにも共通する項目\u003c/li\u003e\n\u003cli\u003eなぜ自動化したいのか\n\u003cul\u003e\n\u003cli\u003e生産性を上げるため\n\u003cul\u003e\n\u003cli\u003e他者の力を借りる\n\u003cul\u003e\n\u003cli\u003e「水車」紀元前200年\n\u003cul\u003e\n\u003cli\u003e昔からあったが、普及していなかった\n\u003cul\u003e\n\u003cli\u003e奴隷を使ったほうが効率が良かった（コスト）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e現代最強の労働力：コンピューター\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eクラウドのメリット\n\u003cul\u003e\n\u003cli\u003eAPIがある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eアウトプットの違い\n\u003cul\u003e\n\u003cli\u003e数十倍の差がある組織は実際ある\u003c/li\u003e\n\u003cli\u003eエンジニア個々の能力がそうであるとは限らない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e0リング理論\n\u003cul\u003e\n\u003cli\u003eたった1箇所の問題が全体に影響すること\u003c/li\u003e\n\u003cli\u003eスペースシャトルチャレンジャーの事故から\u003c/li\u003e\n\u003cli\u003e逆に、一部のを劇的に改善しても、大して変わらない\u003c/li\u003e\n\u003cli\u003eステップを減らすと出力が改善する\u003c/li\u003e\n\u003cli\u003eマイクロ秒、ミリ秒の世界では、人間の介在自体が０リングである\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eクラウドに置き換えて改善という考え方から脱却しないといけない\n\u003cul\u003e\n\u003cli\u003e→クラウドネイティブ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIaC, オーケストレーション\n\u003cul\u003e\n\u003cli\u003eK8s\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNoOps\n\u003cul\u003e\n\u003cli\u003eNo Uncomfortable Ops\u003c/li\u003e\n\u003cli\u003eなぜ運用は嬉しくないのか\n\u003cul\u003e\n\u003cli\u003eたくさんの問題が発生する\n\u003cul\u003e\n\u003cli\u003eサーバーダウン、NW障害、、ログ対応、昼夜問わず・・\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e手続き的vs宣言的\n\u003cul\u003e\n\u003cli\u003eK8sは宣言的\u003c/li\u003e\n\u003cli\u003eAPIを順番に叩いていくのが手続き的\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eProject Pacific\n\u003cul\u003e\n\u003cli\u003evSpereの中でK8sが動くようになる\u003c/li\u003e\n\u003cli\u003eコンテナもVMもK8sクラスタ自体も宣言的にデプロイできる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e自動化の不都合な真実\n\u003cul\u003e\n\u003cli\u003e自動化は腐る\n\u003cul\u003e\n\u003cli\u003eリポジトリからパッケージがなくなっていて死ぬ\u003c/li\u003e\n\u003cli\u003eパッケージの依存関係が壊れて死ぬ\u003c/li\u003e\n\u003cli\u003e継ぎ足ししていたら環境が汚れて\u003c/li\u003e\n\u003cli\u003e自動化ツールのバージョンアップで\u003c/li\u003e\n\u003cli\u003e自動化ツールがオワコンになって\u003c/li\u003e\n\u003cli\u003e前任者に寄る自動化が魔窟で\u003c/li\u003e\n\u003cli\u003e上記の問題点を運用でカバーしてじわじわ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eクラウドネイティブな技術も腐る\n\u003cul\u003e\n\u003cli\u003eツールのバージョンアップで死ぬ頻度は高い\u003c/li\u003e\n\u003cli\u003e様々なツールが出てきているが多くは淘汰される\u003c/li\u003e\n\u003cli\u003e正しく理解せず使うと、結局運用でカバーすることに\u003c/li\u003e\n\u003cli\u003e例：istioのテスト保証K8sバージョン\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e良くなっている麺も多い\n\u003cul\u003e\n\u003cli\u003eIaCが矯正される\u003c/li\u003e\n\u003cli\u003e環境変数を使うので環境の汚染が置きにくい\u003c/li\u003e\n\u003cli\u003e決まったフォーマットでコード化するので魔窟になりにくい\u003c/li\u003e\n\u003cli\u003eコード化しているので複数人でレビューできる\u003c/li\u003e\n\u003cli\u003eなりにくいだけで、ならないわけではない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eテストをしよう\u003c/li\u003e\n\u003cli\u003eいきなり全部を自動化しようとは考えないこと\n\u003cul\u003e\n\u003cli\u003e自動化した部分がトラブル続きだった場合は、結果として出力が落ちてしまう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e全体プロセスの見直しも重要\n\u003cul\u003e\n\u003cli\u003eテクノロジーだけで解決するのではなく、全体フローから見直し、不要なものを削除する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eFactorioおすすめ\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1530--anthosで実現すつモダンなアプリケーション開発\"\u003e15:30- Anthosで実現すつモダンなアプリケーション開発\u003c/h2\u003e\n\u003ch3 id=\"篠原一徳google-cloud\"\u003e篠原一徳(Google Cloud)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAnthosとは\n\u003cul\u003e\n\u003cli\u003eアプリケーションのモダナイぜーションのためのプラットフォーム\u003c/li\u003e\n\u003cli\u003eGKEをオンプレや他社クラウドでも利用できるようにする\u003c/li\u003e\n\u003cli\u003e従量課金ではなく、サブスクリプションライセンスで提供している\u003c/li\u003e\n\u003cli\u003e古代ギリシャ語で「花」\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eモダナイぜーションの目指すところ\n\u003cul\u003e\n\u003cli\u003e高速なリリースサイクル\u003c/li\u003e\n\u003cli\u003e追加・変更につよい\u003c/li\u003e\n\u003cli\u003e容易に拡張\u003c/li\u003e\n\u003cli\u003e高可用性の維持・向上\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eモダナイぜーションに向けた技術観点でのアプローチ\n\u003cul\u003e\n\u003cli\u003eマイクロサービス化\u003c/li\u003e\n\u003cli\u003eインフラとアプリの疎結合化\n\u003cul\u003e\n\u003cli\u003eコンテナに関連をまとめる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサーバーレス\u003c/li\u003e\n\u003cli\u003e自動化\u003c/li\u003e\n\u003cli\u003eマネージドサービス活用（注目）\n\u003cul\u003e\n\u003cli\u003eToil（面倒ごと）を抱えない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAnthos Config Management\n\u003cul\u003e\n\u003cli\u003eNamespaceやQuota, ROleBindingなどの設定をハイブリッドがK8s環境に自動的に展開\n\u003cul\u003e\n\u003cli\u003e設定をクラスタ間で同期\u003c/li\u003e\n\u003cli\u003eコンプライアンスポリシーを継続的に適用\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePolicy as code\u003c/li\u003e\n\u003cli\u003e各クラスタがgitに保存した設定を監視している。変更があれば差分を自動的に反映する。\u003c/li\u003e\n\u003cli\u003eクラスタごとに設定を分けたい場合は、gitのブランチを分けて管理する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAnthos Service Mesh\n\u003cul\u003e\n\u003cli\u003eマネージドIstio\u003c/li\u003e\n\u003cli\u003eコントロールプレーンをGoogleが管理\u003c/li\u003e\n\u003cli\u003eEnvoy（あんぼい）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eユースケース\n\u003cul\u003e\n\u003cli\u003eハイブリッド構成\n\u003cul\u003e\n\u003cli\u003eスケーリングを柔軟に行いたいアプリをクラウドに\u003c/li\u003e\n\u003cli\u003eパブリッククラウドに保存できない情報を扱うアプリをオンプレに\u003c/li\u003e\n\u003cli\u003e既存システム（オンプレ）との連携がタイトなアプリをオンプレに\u003c/li\u003e\n\u003cli\u003eパブリッククラウドのマネージドサービスと連携したいときにクラウドに\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eマネージドK8sをどのクラウドでも同じように動くように\n\u003cul\u003e\n\u003cli\u003eクラウドベンダー間でもサポートバージョンなどの差異がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMonitoring / Logging の一元化\n\u003cul\u003e\n\u003cli\u003eStackdriverに集約できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eソフトウェアサプライチェーンの統一\n\u003cul\u003e\n\u003cli\u003e野良Jenkinsの駆逐\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1630--kubernetesセキュリティのベストプラクティス\"\u003e16:30- Kubernetesセキュリティのベストプラクティス\u003c/h2\u003e\n\u003ch3 id=\"仙波慎也vmware\"\u003e仙波慎也(VMware)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCNCFのクラウドネイティブ定義\n\u003cul\u003e\n\u003cli\u003e2015年から\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCNCFのK8sセキュリティベストプラクティス\n\u003cul\u003e\n\u003cli\u003e全部で9つある\u003c/li\u003e\n\u003cli\u003e最新バージョンへのアップグレード\n\u003cul\u003e\n\u003cli\u003eインプレースアップグレード\u003c/li\u003e\n\u003cli\u003e新しいクラスタを立ち上げる\u003c/li\u003e\n\u003cli\u003eデータタイプ\n\u003cul\u003e\n\u003cli\u003eステートレス：マスターノード、ワーカノード\u003c/li\u003e\n\u003cli\u003eステートフル：etcd、永続ボリューム\n\u003cul\u003e\n\u003cli\u003eデータ保護方法の選択肢はいくつかある\u003c/li\u003e\n\u003cli\u003eVELEROを推奨\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/vmware-tanzu/velero\"\u003ehttps://github.com/vmware-tanzu/velero\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003evmwareが買収した\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRBAC\n\u003cul\u003e\n\u003cli\u003eロールスプロール問題\n\u003cul\u003e\n\u003cli\u003eクラスタとNAMESPACEの乱立に寄り、無秩序な状態になっている\u003c/li\u003e\n\u003cli\u003e考えすぎない。プリセットで用意されているロールを活用する\n\u003cul\u003e\n\u003cli\u003eDeveloper(単一のNSへのadmin), Mangers(view), Cluster-Administrator\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eネットワークポリシー\n\u003cul\u003e\n\u003cli\u003eNS、pod、ipセレクタで制御する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e監査ログの有効化\n\u003cul\u003e\n\u003cli\u003eAPIサーバーは、監査目的ですべての要求を記録する\u003c/li\u003e\n\u003cli\u003e監査ログは、非常にノイズが多い場合があるため、必要なもののみ記録する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eノードセキュリティの強化\n\u003cul\u003e\n\u003cli\u003eTLSは、それをサポートするすべてのコンポーネントで有効にする必要がある\u003c/li\u003e\n\u003cli\u003eetcdはコントローラーから分離し、ファイアウォールで保護する必要がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e一貫性のあるセキュリティ運用が求められる\n\u003cul\u003e\n\u003cli\u003eVMware NSXでできる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1730--お客様事例から学ぶkubernetesプロジェクト成功の秘訣\"\u003e17:30- お客様事例から学ぶKubernetesプロジェクト成功の秘訣\u003c/h2\u003e\n\u003ch3 id=\"スコットロウvmware\"\u003eスコット・ロウ(VMware)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e銀行のシステムリプレイスの話\u003c/li\u003e\n\u003cli\u003eK8sに移行\u003c/li\u003e\n\u003cli\u003eCustomResourceDefinitions(CRD)を使った\u003c/li\u003e\n\u003cli\u003eKey takeaways\n\u003cul\u003e\n\u003cli\u003eStart with a single use case, and solve that user case first.\u003c/li\u003e\n\u003cli\u003eThe solution doesn\u0026rsquo;t have to be perfect from the beginning.\n\u003cul\u003e\n\u003cli\u003eFind what works and replace what doesn\u0026rsquo;t work.\u003c/li\u003e\n\u003cli\u003eUsing a building block approach makes it easier to swap components.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["vmware","event"],"title":"VMware Cloud Native Day"},{"categories":null,"objectID":"92eac1cf9e1098caea69ac6fdba70c7d","permalink":"https://umemak.github.io/blog/posts/2019/11/10_oracle_cloud/","publish_date":"2019-11-10T00:00:00Z","summary":"\u003cp\u003eOracle Cloudに登録してから、なかなか無料インスタンス作成できずにいたけれど、今日試したら作れた。\u003c/p\u003e\n\u003cp\u003esshログインしようとして、\u003ccode\u003eConsole Connections\u003c/code\u003e作ってそこに出たコマンドコピペして、ログインアカウントとパスワードがわからずに詰む。\u003c/p\u003e\n\u003cp\u003eインスタンス作成時に特に指定してなかったけど、\u003ccode\u003eopc\u003c/code\u003eが割り当てられている。\u003c/p\u003e","tags":["oci"],"title":"Oracle Cloudにインスタンス作成"},{"categories":null,"objectID":"0707509456b9f91c8754f278622e29e0","permalink":"https://umemak.github.io/blog/posts/2019/11/09_update_gems/","publish_date":"2019-11-09T00:00:00Z","summary":"\u003cp\u003eGitHubからgem更新を促すメールがきた。\u003c/p\u003e\n\u003cp\u003e今回からdependabotがやってくれるようになったらしく、すでにPullReqが作成されていた（すごい）。\u003c/p\u003e\n\u003cp\u003eGemfile.lockの差分確認して問題なければマージして終わり。これは便利だ。\u003c/p\u003e","tags":["gitpod","ruby"],"title":"Bump loofah from 2.2.3 to 2.3.1"},{"categories":null,"objectID":"0561505956dd88feee29685210e9ba29","permalink":"https://umemak.github.io/blog/posts/2019/11/06_chromebook_imageedit/","publish_date":"2019-11-06T00:00:00Z","summary":"\u003cp\u003eイベントの写真をブログに載せるのに、スマホのそのままだとサイズでかすぎるし、トリミングやリサイズもしたいときにどうすれば良いのか定まっていなかった。\u003c/p\u003e\n\u003cp\u003eとりあえずこれで行けそうな方法が見つかったのでメモ。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eやりたいこと\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e画像のリサイズ、トリミング\u003c/li\u003e\n\u003cli\u003eGoogleフォトにアップした画像を選択したい\u003c/li\u003e\n\u003cli\u003e編集した画像はGithubにアップロードする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e試したこと\u003c/p\u003e","tags":["chromebook"],"title":"Chromebookで画像編集"},{"categories":null,"objectID":"ee79d3607fb1c5920e0fd7cdb41c733c","permalink":"https://umemak.github.io/blog/posts/2019/11/06_setup_disqus/","publish_date":"2019-11-06T00:00:00Z","summary":"\u003cp\u003eDisqusのコメント欄を設置してみる。\u003c/p\u003e\n\u003cp\u003e最初、表示されなくてなんでだろうと思ったら、テーマの表示条件が違っていた\n\u003ca href=\"https://github.com/umemak/inkblotty/commit/274fed7d529bfe90c4d0c4dfeb6c9e55c7ea7ed6\"\u003ehttps://github.com/umemak/inkblotty/commit/274fed7d529bfe90c4d0c4dfeb6c9e55c7ea7ed6\u003c/a\u003e\u003c/p\u003e","tags":["blog"],"title":"Disqusの設置"},{"categories":null,"objectID":"7460363c1fab6f8d249a12a9624c2ee3","permalink":"https://umemak.github.io/blog/posts/2019/11/05_golang_tokyo_27/","publish_date":"2019-11-05T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://techplay.jp/event/753881\"\u003ehttps://techplay.jp/event/753881\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e先日のGo Conferenceには参加できなかったので、当選できてよかった。\n\u003cfigure class=\"center\"\u003e\u003cimg src=\"../IMG_20191105_193605_1573015343606.jpg\" width=\"640\"\u003e\n\u003c/figure\u003e\n\u003c/p\u003e\n\u003ch2 id=\"1900-開場受付\"\u003e19:00 ~\t開場・受付\u003c/h2\u003e\n\u003cfigure class=\"center\"\u003e\u003cimg src=\"../IMG_20191105_193759_1572967448087.jpg\" width=\"640\"\u003e\u003cfigcaption\u003e\n      \u003ch4\u003e乾杯！\u003c/h4\u003e\n    \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"1930--1935オープニング\"\u003e19:30 ~ 19:35\tオープニング\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDevQuizの解説。思ってた動作と違かった。。\u003c/li\u003e\n\u003cli\u003e当日発表になった登壇者とスケジュール。予定より本数が少なくなっていました。\n\u003cfigure class=\"center\"\u003e\u003cimg src=\"../IMG_20191105_194058_1573015274227.jpg\" width=\"640\"\u003e\n  \u003c/figure\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1935--1955session-1\"\u003e19:35 ~ 19:55\tSession 1\u003c/h2\u003e\n\u003ch3 id=\"creating-shell-magager-with-golang--yusuke_k0matsu\"\u003eCreating shell magager with golang / @yusuke_k0matsu\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/usk81/create-shell-manager-with-golang\"\u003ehttps://speakerdeck.com/usk81/create-shell-manager-with-golang\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eshway\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/getshway/shway\"\u003ehttps://github.com/getshway/shway\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003edotfileの管理方法のベストプラクティスを模索\u003c/li\u003e\n\u003cli\u003ehome brew\u003c/li\u003e\n\u003cli\u003e開発環境のシェアができる？\u003c/li\u003e\n\u003cli\u003e子プロセスで読んだコマンドの結果が親プロセスに反映されない\n\u003cul\u003e\n\u003cli\u003e標準出力に吐いて親で読み込む\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eログを出してしまうと、親に読まれてしまう\n\u003cul\u003e\n\u003cli\u003eSTDERRに出す\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ego-git\n\u003cul\u003e\n\u003cli\u003eオススメのgitライブラリ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e未完成\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1955--2015session-2\"\u003e19:55 ~ 20:15\tSession 2\u003c/h2\u003e\n\u003ch3 id=\"multi-cloud-serverless-architecture--shibu_jp\"\u003eMulti Cloud Serverless Architecture / @shibu_jp\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/1x4Ed-sYP-7oJntGQ0hiUozbx-ys7yJfYI-_S62RtP60/edit\"\u003ehttps://docs.google.com/presentation/d/1x4Ed-sYP-7oJntGQ0hiUozbx-ys7yJfYI-_S62RtP60/edit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eサーバーレスの話\u003c/li\u003e\n\u003cli\u003eGo Cloudで実現できる？\u003c/li\u003e\n\u003cli\u003eAWSとGCP（Go対応）で実験\n\u003cul\u003e\n\u003cli\u003eローカルでも動かせる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGCPとAWSの違い\n\u003cul\u003e\n\u003cli\u003eCGP: ソースをアップ、AWS: バイナリをアップ\u003c/li\u003e\n\u003cli\u003eエントリポイントの形式も違う\n\u003cul\u003e\n\u003cli\u003eコードジェネレータを作ってカバー\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003echi router\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/go-chi/chi\"\u003ehttps://github.com/go-chi/chi\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003edocstore\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://gocloud.dev/howto/docstore/\"\u003ehttps://gocloud.dev/howto/docstore/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDynamoDB, Firestore, CosmosDB のアクセスを抽象化するライブラリ\u003c/li\u003e\n\u003cli\u003eローカルで mongodocstore というインメモリ環境もあり\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eまとめ\n\u003cul\u003e\n\u003cli\u003eマルチクラウドサーバーレスアプリケーションの実現は可能\u003c/li\u003e\n\u003cli\u003eGo Cloud良い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2020--2035休憩\"\u003e20:20 ~ 20:35\t休憩\u003c/h2\u003e\n\u003ch2 id=\"2035--2055session-3\"\u003e20:35 ~ 20:55\tSession 3\u003c/h2\u003e\n\u003ch3 id=\"uber-goguide-の解説--knsh14\"\u003euber-go/guide の解説 / @knsh14\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/10H6tvkVG2Qb9DNeSITAiKP-5BJKHqwnWFRCxEQYbpYQ/edit#slide=id.p\"\u003ehttps://docs.google.com/presentation/d/10H6tvkVG2Qb9DNeSITAiKP-5BJKHqwnWFRCxEQYbpYQ/edit#slide=id.p\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eUber社内で使われているスタイルガイド\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/uber-go/guide\"\u003ehttps://github.com/uber-go/guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eガイドライン / パフォーマンス / スタイル / パターン\u003c/li\u003e\n\u003cli\u003eBe Consistent\n\u003cul\u003e\n\u003cli\u003e可読性、保守性のためにコードの一貫性を保ちましょう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003elinter\n\u003cul\u003e\n\u003cli\u003ego vet, goimports, golangci-lint\u003c/li\u003e\n\u003cli\u003eulinter 作成中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eHandle Tpe Assertion Failures\n\u003cul\u003e\n\u003cli\u003e型アサーションの結果をハンドリングしているかチェック\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003elinterの作り方\n\u003cul\u003e\n\u003cli\u003eASTを作ってパターンを見ていく\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eStart Enums as One\n\u003cul\u003e\n\u003cli\u003eenumのゼロ(iota)は、初期化(goのデフォルト初期値)しただけなのか明示的に設定したのか区別しにくいため\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConverting number to string\n\u003cul\u003e\n\u003cli\u003efmt.Printfよりstrconvパッケージを使ったほうがパフォーマンス有利なので\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2055--2100lt1\"\u003e20:55 ~ 21:00\tLT1\u003c/h2\u003e\n\u003ch3 id=\"saas関連系における静的解析の活用--yoheimiyamoto_\"\u003eSaaS関連系における静的解析の活用 / @yoheimiyamoto_\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://go-talks.appspot.com/github.com/yoheimiyamoto/talks/golang-tokyo/27/talk.slide#1\"\u003ehttps://go-talks.appspot.com/github.com/yoheimiyamoto/talks/golang-tokyo/27/talk.slide#1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSaaS関連系の条件をカスタマイズできるようにしてみた話\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2100--2150終了撤収\"\u003e21:00 ~ 21:50\t終了・撤収\u003c/h2\u003e","tags":["golang","event"],"title":"golang.tokyo #27"},{"categories":null,"objectID":"cae4937b71f5232be80d1d297a9b7a82","permalink":"https://umemak.github.io/blog/posts/2019/11/05_visualstudioonline/","publish_date":"2019-11-05T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://visualstudio.microsoft.com/services/visual-studio-online/\"\u003ehttps://visualstudio.microsoft.com/services/visual-studio-online/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eパブリックプレビューになったということで、見に行ってみました。\u003c/p\u003e\n\u003cp\u003eAzureのアカウントはすでにあるので、普通にSign inして「Create enviromnent」を押すと、ロケーションの選択が。\u003c/p\u003e\n\u003cp\u003e現在選択できるのは、\u003ccode\u003eEast US\u003c/code\u003e, \u003ccode\u003eSoutheast Asia\u003c/code\u003e, \u003ccode\u003eWest Europe\u003c/code\u003e, \u003ccode\u003eWest US 2\u003c/code\u003eの4つ。\u003c/p\u003e\n\u003cp\u003eJapanがないので、\u003ca href=\"https://azure.microsoft.com/en-us/pricing/details/visual-studio-online/\"\u003e料金ページ\u003c/a\u003eを見て安くて近そうな\u003ccode\u003eWest US 2\u003c/code\u003eを選択。\u003c/p\u003e\n\u003cp\u003eで、createボタンが有効にならない。。どうやらAzureの試用期間が切れているので、有料アカウント登録しないとダメらしい。\u003c/p\u003e","tags":["azure"],"title":"Visual Studio Online"},{"categories":null,"objectID":"eeb1d2745a5ab80f357d24032e9a3735","permalink":"https://umemak.github.io/blog/posts/2019/11/04_iddd/","publish_date":"2019-11-04T00:00:00Z","summary":"\u003cp\u003eやっと読み終わった。長かった。。\u003c/p\u003e\n\u003cp\u003eこれも1周しただけでは把握できないというか、途中の挿絵とかカウボーイ必要？うまく日本語訳できていないと、そこで何言ってるのか考えてしまって集中が途切れくことが多かった。\u003c/p\u003e\n\u003cp\u003e次は\u003ccode\u003e「実践ドメイン駆動設計」から学ぶDDDの実装入門\u003c/code\u003eに手を出そうと思っていたけど、それぞれもう1周したあとのほうが良い気がしてきた。\u003c/p\u003e","tags":["ddd","book"],"title":"実践ドメイン駆動設計"},{"categories":null,"objectID":"23382c20c40be064b2c81e56087d859c","permalink":"https://umemak.github.io/blog/posts/2019/11/01_denago_3/","publish_date":"2019-11-01T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://dena.connpass.com/event/150676/\"\u003ehttps://dena.connpass.com/event/150676/\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"1925---1930会場説明-imoty\"\u003e19:25 - 19:30\t会場説明 @imoty\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDeNA TechCon 2020やります\n\u003cfigure class=\"center\"\u003e\u003cimg src=\"../photo_1573016664419.jpg\" width=\"640\"\u003e\n  \u003c/figure\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1930---195020分枠-suhirotaka--go活用事例安全運転支援サービスを支える運用サイト--オートモーティブ事業本部スマートドライビング部システム開発グループ\"\u003e19:30 - 19:50\t20分枠 @suhirotaka / [Go活用事例]安全運転支援サービスを支える運用サイト / オートモーティブ事業本部スマートドライビング部システム開発グループ\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/suhirotaka/gohuo-yong-shi-li-an-quan-yun-zhuan-zhi-yuan-sabisuwozhi-eru-yun-yong-guan-li-sisutemu\"\u003ehttps://speakerdeck.com/suhirotaka/gohuo-yong-shi-li-an-quan-yun-zhuan-zhi-yuan-sabisuwozhi-eru-yun-yong-guan-li-sisutemu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003egoで何を作っているか\n\u003cul\u003e\n\u003cli\u003eDRIVE CHART\u003c/li\u003e\n\u003cli\u003eAIはPython\u003c/li\u003e\n\u003cli\u003eRailsも使っている\u003c/li\u003e\n\u003cli\u003e運用管理のWEBシステム\u003c/li\u003e\n\u003cli\u003e管理画面をGoで作った理由\n\u003cul\u003e\n\u003cli\u003e2年間の実証実験\u003c/li\u003e\n\u003cli\u003e実証実験時は、スピード重視でRails\u003c/li\u003e\n\u003cli\u003e本サービスは、パフォーマンス重視でGo\n\u003cul\u003e\n\u003cli\u003eサーバーが減らせるコストメリット\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e順次goにリプレイス中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eライブラリ\n\u003cul\u003e\n\u003cli\u003eフレームワーク\n\u003cul\u003e\n\u003cli\u003eフルスタック・MVC\n\u003cul\u003e\n\u003cli\u003eBeego を採用\u003c/li\u003e\n\u003cli\u003eRevel 開発停滞気味\u003c/li\u003e\n\u003cli\u003eIris 運営に問題ありそう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eBeego\n\u003cul\u003e\n\u003cli\u003e中国で人気がある\u003c/li\u003e\n\u003cli\u003eフルスタック\u003c/li\u003e\n\u003cli\u003ebee というCLIツールがある（Railsっぽい）\u003c/li\u003e\n\u003cli\u003e若干使い勝手に気持ち悪いところがある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRailsとの共存\n\u003cul\u003e\n\u003cli\u003eDB周りの定義の共通化\u003c/li\u003e\n\u003cli\u003e暗号化周りの共通化\n\u003cul\u003e\n\u003cli\u003e鍵の管理が面倒\n\u003cul\u003e\n\u003cli\u003e更新タイミングを合わせるとか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eユーティリティ機能の共通化\n\u003cul\u003e\n\u003cli\u003eメール送信・通知システムなどどちら側に実装するか\u003c/li\u003e\n\u003cli\u003e寄せるとサービス感の通信が発生する\u003c/li\u003e\n\u003cli\u003e両方に実装するとそれはそれで問題がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1950---203040分枠-karupanerura--webシステムのパフォーマンスとgo-ゲームエンターテインメント事業本部ゲーム事業部publish統括部共通基盤部アライアンスシステムグループ\"\u003e19:50 - 20:30\t40分枠 @karupanerura / WebシステムのパフォーマンスとGo/ ゲーム・エンターテインメント事業本部ゲーム事業部Publish統括部共通基盤部アライアンスシステムグループ\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/karupanerura/websisutemufalsehahuomansutogo\"\u003ehttps://speakerdeck.com/karupanerura/websisutemufalsehahuomansutogo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eWabシステムにおける本当のGoの強み\u003c/li\u003e\n\u003cli\u003e問題としっかり向き合う\u003c/li\u003e\n\u003cli\u003eWebシステムにおけるパフォーマンスを定義する\n\u003cul\u003e\n\u003cli\u003e単位時間あたりの処理するリクエスト\u003c/li\u003e\n\u003cli\u003eリクエスト単位で消費するリソース\u003c/li\u003e\n\u003cli\u003eパフォーマンス低下要因を排除すれば、向上できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e具体例で考える\n\u003cul\u003e\n\u003cli\u003eサマーインターンシップでのお題\n\u003cul\u003e\n\u003cli\u003eチャットアプリをいい感じにする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ec4.large 10台まで使用可\u003c/li\u003e\n\u003cli\u003e発言が多くなるとどうなるか\n\u003cul\u003e\n\u003cli\u003eDBのINSERTが詰まる（ロック競合）\n\u003cul\u003e\n\u003cli\u003e複数発言を1回でinsertできるようにする\u003c/li\u003e\n\u003cli\u003eバッファリングするワーカースレッド（ゴルーチン）を作って一定件数or一致機関でフラッシュする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e同時接続数が多くなると取得が多くなる\n\u003cul\u003e\n\u003cli\u003e差分だけ取得したい\n\u003cul\u003e\n\u003cli\u003eServer Sent Events\n\u003cul\u003e\n\u003cli\u003eWebSocketより扱いが簡単\u003c/li\u003e\n\u003cli\u003eサーバーとクライアントでコネクションを貼り続ける\u003c/li\u003e\n\u003cli\u003eサーバーからクライアントにデータをpushできる（一方通行）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eまとめ\n\u003cul\u003e\n\u003cli\u003eGoにしただけでは速くならない。リソースを効率よく使う\u003c/li\u003e\n\u003cli\u003e便利なパッケージを活用する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2030---2130懇親会\"\u003e20:30 - 21:30\t懇親会\u003c/h2\u003e\n\u003ch2 id=\"2130--完全撤収\"\u003e21:30 -\t完全撤収\u003c/h2\u003e","tags":["event","go","DeNA"],"title":"DeNA.go #3"},{"categories":null,"objectID":"d200f8c1dd6ec2a471bd3e068c6db168","permalink":"https://umemak.github.io/blog/posts/2019/11/01_cmdevio2019/","publish_date":"2019-11-01T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://eventregist.com/e/191004-developers-io-2019\"\u003ehttps://eventregist.com/e/191004-developers-io-2019\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e１年ぶり２回目の参加です。\u003c/p\u003e\n\u003cp\u003e去年は秋葉原でしたが、今年は日本橋での開催。\n会場が広くなってトラック数も増えてどれを観るか悩みますが、AIとかIaCを中心に見ていきたいと思います。\u003c/p\u003e\n\u003ch2 id=\"1030-1115-認証の標準的な方法は分かったでは認可はどう管理するんだい\"\u003e10:30 11:15 認証の標準的な方法は分かった。では認可はどう管理するんだい？\u003c/h2\u003e\n\u003ch3 id=\"都元ダイスケ\"\u003e都元ダイスケ\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e認証のでファクトはOIDCなど\u003c/li\u003e\n\u003cli\u003eKey（鍵）とLock（錠）の違い\n\u003cul\u003e\n\u003cli\u003eリソースにかけるもの（Lock）\u003c/li\u003e\n\u003cli\u003eユーザーに渡すもの（Key）←狭義の認可\u003c/li\u003e\n\u003cli\u003ekeyでlockを解除する（認証）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e積極的アクセス制御（NG時に拒否する）\n\u003cul\u003e\n\u003cli\u003eSpringでいうと @PreAuthorize, @PostAuthorize\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e消極的アクセス制御（NG時に加工する）\n\u003cul\u003e\n\u003cli\u003e返すときにフィルタリングするとか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eISO 10181-3 Access Control Framework\n\u003cul\u003e\n\u003cli\u003e2万円超え\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eADF\n\u003cul\u003e\n\u003cli\u003eADIを使って判定するファンクション\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eADI\n\u003cul\u003e\n\u003cli\u003eアクセス制御の条件\u003c/li\u003e\n\u003cli\u003e無数に考えられる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eアクセス制御の要素整理\n\u003cul\u003e\n\u003cli\u003e操作するヒト（ユーザー）、操作されるモノ（オブジェクト）、操作自体（アクション、パラメータ）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eアクションごとにアクセス制御を行う\n\u003cul\u003e\n\u003cli\u003eAWS SQSも同様\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e何をADIとして扱うか\n\u003cul\u003e\n\u003cli\u003eリクエストしたアクション名\u003c/li\u003e\n\u003cli\u003eユーザーが持つ権限\u003c/li\u003e\n\u003cli\u003eアクションのパラメータはADIとしないほうが良い\n\u003cul\u003e\n\u003cli\u003eアクション自体を分けるべき\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e事後消極アクセス制御を使わない理由\n\u003cul\u003e\n\u003cli\u003e手間の割に恩恵が少ない\u003c/li\u003e\n\u003cli\u003eうまく動かないときの原因特定が大変\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eリソースごとのアクセス制御\n\u003cul\u003e\n\u003cli\u003eオブジェクトのオーナーというADI\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eACL：アクセス制御リスト\n\u003cul\u003e\n\u003cli\u003eリソースが持つプロパティ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eまとめ\n\u003cul\u003e\n\u003cli\u003eADIはKey、ADFがLock\u003c/li\u003e\n\u003cli\u003eアクセス制御は４つに分類\u003c/li\u003e\n\u003cli\u003eAIDは無数にある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eおまけ\n\u003cul\u003e\n\u003cli\u003eRBAについて\u003c/li\u003e\n\u003cli\u003e権限は個人ではなく、役職（ロール）につける\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1130-1215-今のai技術と3年後のai技術のご紹介\"\u003e11:30 12:15 「今」のAI技術と「3年後」のAI技術のご紹介\u003c/h2\u003e\n\u003ch3 id=\"清野剛史せーの\"\u003e清野剛史（せーの）\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAIで作曲した曲からはじまる\n\u003cul\u003e\n\u003cli\u003eGoogleアシスタントで認識できた\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e進化の過程で起こること\n\u003cul\u003e\n\u003cli\u003e環境が突然変異する\n\u003cul\u003e\n\u003cli\u003e適応できるかできないか\u003c/li\u003e\n\u003cli\u003e環境の変化を読む\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e現在は第３次ブーム\n\u003cul\u003e\n\u003cli\u003e第１次はコンピューターの性能に限界があった\n\u003cul\u003e\n\u003cli\u003eパーセプトロン\u003c/li\u003e\n\u003cli\u003eニューラルネットワーク\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e第２次は演算能力が増えた\n\u003cul\u003e\n\u003cli\u003eルールベース（エキスパートシステム）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e第３次でさらに演算能力が増えた\n\u003cul\u003e\n\u003cli\u003eディープラーニング\n\u003cul\u003e\n\u003cli\u003eニューラルネットワークの中間層を多段化\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAWSの定義\n\u003cul\u003e\n\u003cli\u003e機械学習\n\u003cul\u003e\n\u003cli\u003eアルゴリズムを学習・育成させること\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAI\n\u003cul\u003e\n\u003cli\u003eユーザに付加価値を与えるビジネスロジック、サービス\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAIのビジネスステップ\n\u003cul\u003e\n\u003cli\u003e効率化、自動化\n\u003cul\u003e\n\u003cli\u003e人件費の削減\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e付加価値\n\u003cul\u003e\n\u003cli\u003e新たな体験の提供\u003c/li\u003e\n\u003cli\u003e求められる半歩先\u003c/li\u003e\n\u003cli\u003e熟練者の行動を機械学習して初級者に提供\n\u003cul\u003e\n\u003cli\u003e雪国の車運転とか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e多様性\n\u003cul\u003e\n\u003cli\u003e「あなたのため」の価値\n\u003cul\u003e\n\u003cli\u003eパーソナライズ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eビジネスの種\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e3年後\n\u003cul\u003e\n\u003cli\u003eAmbient Computing\n\u003cul\u003e\n\u003cli\u003eコンピュータの存在を感じさせない\u003c/li\u003e\n\u003cli\u003e機械が機械を操作\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eBMI\n\u003cul\u003e\n\u003cli\u003e脳波を使って操作する\u003c/li\u003e\n\u003cli\u003eリストバンドで計測できるようになってきている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eEMG\n\u003cul\u003e\n\u003cli\u003e筋肉の動きで操作する\u003c/li\u003e\n\u003cli\u003e仮想キーボードが実現されている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e環境の変化\n\u003cul\u003e\n\u003cli\u003e5G\n\u003cul\u003e\n\u003cli\u003e低遅延、大容量、同時接続\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eLPWA\n\u003cul\u003e\n\u003cli\u003e自由に使える電波帯を使う\u003c/li\u003e\n\u003cli\u003eAmazon Sidewalk\n\u003cul\u003e\n\u003cli\u003eメッシュネットワークを構築\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eProject Kuiper\n\u003cul\u003e\n\u003cli\u003e人工衛星を低軌道で飛ばす\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e量子コンピューティング\n\u003cul\u003e\n\u003cli\u003e0,1ではなく、そのあいだの状態を持つ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e10年後\n\u003cul\u003e\n\u003cli\u003eAGI(Artifical General Intelligence)\u003c/li\u003e\n\u003cli\u003e汎用(ジェネラル)AI\n\u003cul\u003e\n\u003cli\u003e「設計」を「学習」する\u003c/li\u003e\n\u003cli\u003eWBAアプローチ\n\u003cul\u003e\n\u003cli\u003e脳全体をシュミレート\u003c/li\u003e\n\u003cli\u003e脳の各部の動的な連携\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eシンギュラリティは2029年（10年後）\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1230-1330-cicd-と-cloud-security-継続的な脆弱性診断運用のベストプラクティスあと-security-consultingの最新情報もしますよ\"\u003e12:30 13:30 CI/CD と Cloud Security ～継続的な脆弱性診断・運用のベストプラクティス～あと Security Consultingの最新情報もしますよ～\u003c/h2\u003e\n\u003ch3 id=\"エフセキュア-河野真一郎-氏\"\u003eエフセキュア 河野真一郎 氏\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eランチセッション\u003c/li\u003e\n\u003cli\u003eクラウドのセキュリティコンサル、物理セキュリティコンサルもやってる\u003c/li\u003e\n\u003cli\u003eMS-DOS時代からセキュリティやってる会社\u003c/li\u003e\n\u003cli\u003e自動化セキュリティ\n\u003cul\u003e\n\u003cli\u003eF-Secure Radar\n\u003cul\u003e\n\u003cli\u003eAPIインターフェースが公開されている\u003c/li\u003e\n\u003cli\u003eエージェントインストール不要\u003c/li\u003e\n\u003cli\u003e動的ページのスキャンは不向き\u003c/li\u003e\n\u003cli\u003eサーバー台数での課金（参考価格）\n\u003cul\u003e\n\u003cli\u003eコンテナ１イメージで１サーバー扱い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e脆弱性が１つでもあれば攻撃されうる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eクラウド環境セキュリティコンサル\n\u003cul\u003e\n\u003cli\u003epre-study\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eクラウド環境アンチウィルス\n\u003cul\u003e\n\u003cli\u003e月額1000円以下\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1345-1430-awsのすべてをコードで管理する方法その理想と現実\"\u003e13:45 14:30 AWSのすべてをコードで管理する方法〜その理想と現実〜\u003c/h2\u003e\n\u003ch3 id=\"濱田孝治hamako9999\"\u003e濱田孝治（@hamako9999）\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCFnは強い（イメージ）\u003c/li\u003e\n\u003cli\u003e使いこなしが難しい\u003c/li\u003e\n\u003cli\u003e使わないことで、AWS利用の効率化の可能性を捨てることになる\u003c/li\u003e\n\u003cli\u003eIaCを理解する\n\u003cul\u003e\n\u003cli\u003eコード（テキスト）でインフラを定義する\u003c/li\u003e\n\u003cli\u003eリソースの状態を定義するので、状態が変わらなければ何度実行しても変わらない\u003c/li\u003e\n\u003cli\u003eaws cliは「処理の定義」なので、実行するたびに更新される\u003c/li\u003e\n\u003cli\u003eテンプレートの記述はJSONではなくYAML推奨\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCloudFormation\n\u003cul\u003e\n\u003cli\u003eメリット\n\u003cul\u003e\n\u003cli\u003eインフラの管理を簡略化\u003c/li\u003e\n\u003cli\u003eインフラを簡単に複製可能\u003c/li\u003e\n\u003cli\u003eインフラの変更管理が可能\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCLIで実行する\n\u003cul\u003e\n\u003cli\u003eCFnの実行はマネジメントコンソールからとCLIからの２つある\n\u003cul\u003e\n\u003cli\u003eコンソール使っていると再現性の担保に問題がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e実行結果を見るのにGUI使うのはあり\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ecreate-stack, update-stack使わない。deploy使う。\n\u003cul\u003e\n\u003cli\u003eコマンドにべき等性がない\u003c/li\u003e\n\u003cli\u003e関連コマンドが多い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eスタック名の重複に注意\n\u003cul\u003e\n\u003cli\u003eチェンジセットを確認すれば事前に気づける\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--no-execute-changeset\u003c/code\u003eを指定する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eテンプレート（スタック）の分割\n\u003cul\u003e\n\u003cli\u003e依存関係がファイル名でわかるようにプレフィクス（番号）振る\u003c/li\u003e\n\u003cli\u003eスタック感でパラメータ参照する方法\n\u003cul\u003e\n\u003cli\u003eクロススタック参照\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eOutput\u003c/code\u003eで\u003ccode\u003eExport\u003c/code\u003eして\u003ccode\u003e!ImportValue\u003c/code\u003eで参照する\u003c/li\u003e\n\u003cli\u003e参照があると参照元の削除や変更ができない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eダイナミック参照\n\u003cul\u003e\n\u003cli\u003eパラメータストアやSecretManagerの値をテンプレートに書く\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eシェルで頑張る\n\u003cul\u003e\n\u003cli\u003eクロススタックでexportできないときにcliで取得して加工する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e運用上の辛み\n\u003cul\u003e\n\u003cli\u003eスタックの作成削除が帰ってこない\n\u003cul\u003e\n\u003cli\u003e何を持て完了とするか\u003c/li\u003e\n\u003cli\u003eサービス定義に不備\n\u003cul\u003e\n\u003cli\u003eエラーが出ないでタイムアウトまで待ってしまう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e対応していないプロパティ\u003c/li\u003e\n\u003cli\u003e循環参照\u003c/li\u003e\n\u003cli\u003eConditions\n\u003cul\u003e\n\u003cli\u003eテンプレートで条件分岐を書く\n\u003cul\u003e\n\u003cli\u003e可読性が悪い\u003c/li\u003e\n\u003cli\u003e環境を分けたいならテンプレート自体分けてしまう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e複数人で操作したときの問題\n\u003cul\u003e\n\u003cli\u003eドリフト検出で気づける\u003c/li\u003e\n\u003cli\u003eAWS configでチェックできる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eパイプラインで自動化\n\u003cul\u003e\n\u003cli\u003eどこで実行する？\n\u003cul\u003e\n\u003cli\u003eクライアントPC\u003c/li\u003e\n\u003cli\u003eEC2\u003c/li\u003e\n\u003cli\u003eパイプライン\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1445-1530-やってみた系技術メディアdevelopersioの中身だいたい見せます\"\u003e14:45 15:30 “やってみた系”技術メディアDevelopers.IOの中身だいたい見せます\u003c/h2\u003e\n\u003ch3 id=\"鵜飼亮次\"\u003e鵜飼亮次\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e240万PV\u003c/li\u003e\n\u003cli\u003e読者層、25〜34歳男性が多い\u003c/li\u003e\n\u003cli\u003ePCでの閲覧が8割弱\n\u003cul\u003e\n\u003cli\u003e世間的には逆にモバイルが多い。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWindowsが5割弱\u003c/li\u003e\n\u003cli\u003e平均滞在時間2分\n\u003cul\u003e\n\u003cli\u003e読まれている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e直帰率8割\n\u003cul\u003e\n\u003cli\u003eピンポイントでの訪問が多い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e流入経路\n\u003cul\u003e\n\u003cli\u003e検索系で8割\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eパートナー企業との関係構築に役立つ\u003c/li\u003e\n\u003cli\u003e社内のメンバーにも役立っている\n\u003cul\u003e\n\u003cli\u003e自己紹介代わりにも\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e採用にも効く\u003c/li\u003e\n\u003cli\u003eブログ本数が多すぎてクロールが終わらない\u003c/li\u003e\n\u003cli\u003e最初の記事は社長が書いたS3の記事\u003c/li\u003e\n\u003cli\u003eテラスハウス型の運用\n\u003cul\u003e\n\u003cli\u003e生産性と即時性を最大化\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e基本ポリシー\n\u003cul\u003e\n\u003cli\u003eアウトプット主義\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNGルールもある\n\u003cul\u003e\n\u003cli\u003eディスり、比較、非公開内容、裏とりのできていない情報、規約違反、コピペ、個人情報\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e社内評価にも使っている\n\u003cul\u003e\n\u003cli\u003e四半期ごとの表彰、決算賞与の増額など\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eモチベーション\n\u003cul\u003e\n\u003cli\u003e優越感\u003c/li\u003e\n\u003cli\u003e知識の定着\u003c/li\u003e\n\u003cli\u003e知識向上\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e課題\n\u003cul\u003e\n\u003cli\u003e一気に書きすぎて通知用ツイッターアカウントが凍結された\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1545-1630-aws-cdkの基本と実例\"\u003e15:45 16:30 AWS CDKの基本と実例\u003c/h2\u003e\n\u003ch3 id=\"加藤諒\"\u003e加藤諒\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAWS構築の歴史\n\u003cul\u003e\n\u003cli\u003e手順書に沿ってマネコンで操作を行う\n\u003cul\u003e\n\u003cli\u003e操作する時間がかかる、操作ミスが起こる可能性がある\u003c/li\u003e\n\u003cli\u003eAWSのバージョンアップで手順書との乖離が出る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eスクリプト作成\n\u003cul\u003e\n\u003cli\u003eCLS/SDKを使う\u003c/li\u003e\n\u003cli\u003eべき等性、ロールバック処理の作り込みが必要\u003c/li\u003e\n\u003cli\u003eマネコンだと勝手に関連リソース作ってくれるようなサポートが受けられない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eプロビジョニングツール\n\u003cul\u003e\n\u003cli\u003eCFn, Terraformなど\u003c/li\u003e\n\u003cli\u003e冪等性があり、継続的なデプロイが行いやすい\u003c/li\u003e\n\u003cli\u003e複雑な条件分岐やループがやりにくい\u003c/li\u003e\n\u003cli\u003eDOM（GoFormationなど）\n\u003cul\u003e\n\u003cli\u003eCFnのテンプレートを生成するツール\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIaaSとしてクラウドを使う時代からマネージドサービスを活用する時代へ\n\u003cul\u003e\n\u003cli\u003eIaCの記述量が増えていく\u003c/li\u003e\n\u003cli\u003e考慮する事項も増えていく\u003c/li\u003e\n\u003cli\u003eIaaS程度の利用だと、CDKはオーバースペック気味\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCDK\n\u003cul\u003e\n\u003cli\u003eコードでかける\n\u003cul\u003e\n\u003cli\u003e型がある言語ならIDEの支援が受けられる\u003c/li\u003e\n\u003cli\u003e前処理もコードでかける\u003c/li\u003e\n\u003cli\u003e条件分岐やループを簡単にかける\u003c/li\u003e\n\u003cli\u003eリソース定義を継承して拡張できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e抽象化\n\u003cul\u003e\n\u003cli\u003eLambdaごとに権限管理が必要なとき\n\u003cul\u003e\n\u003cli\u003eCFnとかだとLambdaの種類だけIAMロールの定義が必要\u003c/li\u003e\n\u003cli\u003eCDKではインラインポリシーを生成してくれる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e複数環境へのデプロイ\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ecdk.json\u003c/code\u003eに環境ごとのパラメータを設定可能\u003c/li\u003e\n\u003cli\u003e設定したパラメータはコードで参照できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCDKでテストを実施する\n\u003cul\u003e\n\u003cli\u003eテストが必要な理由\n\u003cul\u003e\n\u003cli\u003eCDK自体のバージョンアップが頻繁にある\u003c/li\u003e\n\u003cli\u003e意図した変更になっているか確認したい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eテストの種類\n\u003cul\u003e\n\u003cli\u003eスナップショットテスト\n\u003cul\u003e\n\u003cli\u003e生成テンプレートの確認\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFine-grained tests\n\u003cul\u003e\n\u003cli\u003eCFnリソースが存在するか比較\u003c/li\u003e\n\u003cli\u003e意図せずリソース消えてないかも確認\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eValidations tests\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCDKを使う実際の流れ\u003c/li\u003e\n\u003cli\u003eCDKを学ぶ\n\u003cul\u003e\n\u003cli\u003eAWSのドキュメントが充実している\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1645-1730-deepracerで学ぶ機械学習\"\u003e16:45 17:30 DeepRacerで学ぶ機械学習\u003c/h2\u003e\n\u003ch3 id=\"大澤勇斗\"\u003e大澤勇斗\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDeepRacer League今日の朝終わった\n\u003cul\u003e\n\u003cli\u003e新しいリーグ始まるのかは不明\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e機械学習とは\n\u003cul\u003e\n\u003cli\u003eざっくりいうと、規則性を学習させること\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e強化学習\n\u003cul\u003e\n\u003cli\u003e環境とエージェントのフィードバックループで報酬を最大化する状態を求める\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSageMakerで学習モデルの作成をする\u003c/li\u003e\n\u003cli\u003eRoboMakerでシミュレーションを行う\u003c/li\u003e\n\u003cli\u003eDeepRacerが上２つの面倒なところをやってくれる\u003c/li\u003e\n\u003cli\u003eDRでできること\n\u003cul\u003e\n\u003cli\u003e機械学習や強化学習の流れや概要について体験＆学べる\u003c/li\u003e\n\u003cli\u003e機械学習を使った問題の解き方への落とし込み\u003c/li\u003e\n\u003cli\u003e報酬関数の設計\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e1時間の学習で400円くらいかかる\n\u003cul\u003e\n\u003cli\u003e簡単な学習で2〜3時間くらい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1745-1830-developersio-cafeがなぜアプリからpwaになったのか\"\u003e17:45 18:30 Developers.IO CafeがなぜアプリからPWAになったのか\u003c/h2\u003e\n\u003ch3 id=\"亀井栄利\"\u003e亀井栄利\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eタイトルの修正\n\u003cul\u003e\n\u003cli\u003eネイティブも引き続きやる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e最初ネイティブアプリだった理由\n\u003cul\u003e\n\u003cli\u003eとにかくスピード優先した結果\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePWAにした理由\n\u003cul\u003e\n\u003cli\u003e開発リソースの不足\u003c/li\u003e\n\u003cli\u003eiOSとAndroid同時リリースが難しい\u003c/li\u003e\n\u003cli\u003eiOSは審査の時間がかかる\u003c/li\u003e\n\u003cli\u003eOSの互換性を気にする必要がある\u003c/li\u003e\n\u003cli\u003eコーヒー飲みたいだけなのにアプリダウンロードしないといけない不便\u003c/li\u003e\n\u003cli\u003eOSごとのUI差分により、店舗オペレーション負担増\u003c/li\u003e\n\u003cli\u003e新しい体験を高速に実験したい\n\u003cul\u003e\n\u003cli\u003eネイティブアプリを作りたいわけではない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eVueとIonicを選択\u003c/li\u003e\n\u003cli\u003e副産物\n\u003cul\u003e\n\u003cli\u003eワンソースでいろんなチャネルに対応\u003c/li\u003e\n\u003cli\u003eLINE\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e微妙な差\n\u003cul\u003e\n\u003cli\u003eレイアウト\u003c/li\u003e\n\u003cli\u003eiOSでプッシュ通知ができない\n\u003cul\u003e\n\u003cli\u003eSMS使ったり\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eiPhoneユーザーがSafariプライベートモードで使用する\n\u003cul\u003e\n\u003cli\u003e毎回ログインが外れる\u003c/li\u003e\n\u003cli\u003eWebは危ないという認識（若者）\u003c/li\u003e\n\u003cli\u003e一度外部アプリに行くとリダイレクトで戻ってこれない（プライベートじゃない方になってしまう）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e対策\n\u003cul\u003e\n\u003cli\u003eガワネイティブ\u003c/li\u003e\n\u003cli\u003eついでにAndriodもTWA化\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eワンソースメリット\n\u003cul\u003e\n\u003cli\u003eすぐリリースできる\u003c/li\u003e\n\u003cli\u003e開発リソースを体験に集中できるようになった\u003c/li\u003e\n\u003cli\u003eユーザーが好きなもので体験できるようになった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e課題\n\u003cul\u003e\n\u003cli\u003e最適化\u003c/li\u003e\n\u003cli\u003eUIテストの自動化\u003c/li\u003e\n\u003cli\u003eキャッシュ対策\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["event","aws"],"title":"Developers.IO 2019 Tokyo"},{"categories":null,"objectID":"7c9a9525553e5ee209ede4e958962c09","permalink":"https://umemak.github.io/blog/posts/2019/10/31_c101p_cli/","publish_date":"2019-10-31T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://ochacafe.connpass.com/event/147285/\"\u003eOCHaCafe\u003c/a\u003e参加前に触っておこうと思い、その準備。\u003c/p\u003e\n\u003ch2 id=\"ociインストール\"\u003eOCIインストール\u003c/h2\u003e\n\u003cp\u003e手順は\u003ca href=\"https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliinstall.htm\"\u003e公式\u003c/a\u003eからコピペで。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ bash -c \u0026#34;$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003efatal error: Python.h: No such file or directory\u003c/code\u003eエラーで落ちたので、\u003ccode\u003epython3-dev\u003c/code\u003eパッケージをインストール。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt-get install python3-dev\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOCI再挑戦。先程作成したディレクトリを削除するか聞かれるので、削除(y)して継続。\nちなみにインストール先など入力は全部デフォルトで通した。\n今度は\u003ccode\u003efatal error: ffi.h: No such file or directory\u003c/code\u003eで落ちた。\u003c/p\u003e","tags":["serverless","chromebook","c101pa"],"title":"C101PAでOracle Functionsを試す"},{"categories":null,"objectID":"705b316b7d3b92310f4a285e5d78f1cc","permalink":"https://umemak.github.io/blog/posts/2019/10/31_ochacafe2_3/","publish_date":"2019-10-31T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://ochacafe.connpass.com/event/147285/\"\u003ehttps://ochacafe.connpass.com/event/147285/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eServerlessDaysで紹介されていたイベントです。\u003c/p\u003e\n\u003cp\u003eちょうどサーバーレスの回だったので参加しました。\u003c/p\u003e\n\u003ch2 id=\"1830受付開始\"\u003e18：30　受付開始　\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eお菓子もらいました\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1900オープニング\"\u003e19：00　オープニング\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOCHA Cafe Premiumやるよ\n\u003cul\u003e\n\u003cli\u003eOracle Cloud で考える高可用性アーキテクチャ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eビッグデータのイベントもやるよ\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1910セッション開始\"\u003e19：10　セッション開始\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://speakerdeck.com/sugimount/lets-dive-serverless-world\"\u003ehttps://speakerdeck.com/sugimount/lets-dive-serverless-world\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOracleのブランドカラー変わっていた\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eサーバーレスをざっくりと理解する\u003c/p\u003e","tags":["event","serverless","oracle"],"title":"OCHaCafe2 #3 Serverlessな世界をのぞいてみよう！"},{"categories":null,"objectID":"51e8e9af82d1c1b71d68c7ebc01c98db","permalink":"https://umemak.github.io/blog/posts/2019/10/28_signup_oracle_cloud/","publish_date":"2019-10-28T00:00:00Z","summary":"\u003cp\u003eServerless Days のスポンサーブースで説明聞いて、無料枠あるなら試してみようかな、と。\u003c/p\u003e\n\u003cp\u003e登録ページずっと英語で進んでたのがハードル高め。\nいつも住所どうやって書くか迷うんだよね。。\u003c/p\u003e\n\u003cp\u003eGCPやAzureみたいなコンソールは見つからなかった。\u003c/p\u003e\n\u003cp\u003eインスタンス作るにもSSH鍵ペア作らないといけないのがちょっと（AWSはその場で作れるよね）。\u003c/p\u003e","tags":["oracle"],"title":"Oracle Cloud登録してみた"},{"categories":null,"objectID":"52823aee0a7555fada02f62b5a70fc23","permalink":"https://umemak.github.io/blog/posts/2019/10/23_pixel4/","publish_date":"2019-10-23T00:00:00Z","summary":"\u003cp\u003e今日は Sansan Builders Box 2019 参戦のため休暇をとって、午前中は昨日のまとめをしようと家にいたら、突然届いた。\u003c/p\u003e\n\u003cp\u003e週末受け取りにするつもりだったのに、嬉しい誤算。\u003c/p\u003e\n\u003cp\u003eそして受け取り後に届いた発送完了メール。\u003c/p\u003e\n\u003cp\u003eAndroid端末はNexus6以来久しぶり。\u003c/p\u003e\n\u003cp\u003e早速カメラを試してみたところ、さすがセールスポイントだけあってきれいに撮れる。\u003c/p\u003e\n\u003cp\u003e予約購入特典のクーポン付与されたら、ケース買おう。\u003c/p\u003e","tags":["device","pixel4"],"title":"Pixel4が届いた"},{"categories":null,"objectID":"7d0e6c6c3c259ebbf95678e295d43645","permalink":"https://umemak.github.io/blog/posts/2019/10/23_sansan_builders_box_2019/","publish_date":"2019-10-23T00:00:00Z","summary":"\u003cp\u003eSansanの技術カンファレンスです。\n2トラックのサイレントセッションで、受付時にレシーバーが配られました。\n自分はサーバーレスが気になったので、トラック１の方に陣取りました。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://sansan.connpass.com/event/138134/\"\u003ehttps://sansan.connpass.com/event/138134/\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"1430-1500オープニング-cto-藤倉-成太vp-of-engineering-宍倉-功一\"\u003e14:30-15:00\t【オープニング】 CTO 藤倉 成太、VP of Engineering 宍倉 功一\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e社員数550人中、ものづくに理に関わっているのが220名\u003c/li\u003e\n\u003cli\u003eSansanは何を目指しているのか\n\u003cul\u003e\n\u003cli\u003e世界中の名刺をすべてデジタル化\u003c/li\u003e\n\u003cli\u003eビジネスパーソンの出会いのデータベース\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eこの１年の振り返り\n\u003cul\u003e\n\u003cli\u003e新規事業への取り組み\n\u003cul\u003e\n\u003cli\u003eいくつか立ち上げ中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eグローバルへの取り組み\n\u003cul\u003e\n\u003cli\u003e海外エンジニアの採用\u003c/li\u003e\n\u003cli\u003e海外展開を見据えて\u003c/li\u003e\n\u003cli\u003e英語だけでも仕事がまわせる環境\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eこれからの挑戦\n\u003cul\u003e\n\u003cli\u003e組織を強くしていく\n\u003cul\u003e\n\u003cli\u003e新規事業、事業の加速\u003c/li\u003e\n\u003cli\u003e事業の成果にクリエイターが向き合う\u003c/li\u003e\n\u003cli\u003e成果の出しやすい環境\u003c/li\u003e\n\u003cli\u003e協働・変容\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e研究のネタを議論する\n\u003cul\u003e\n\u003cli\u003eR\u0026amp;Dが事業をリードする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1510-1535sansanアーキテクチャ史荒川-聖悟\"\u003e15:10-15:35\t「Sansanアーキテクチャ史」荒川 聖悟\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003esansanは12年間の歴史がある\u003c/p\u003e","tags":["event"],"title":"Sansan Builders Box 2019"},{"categories":null,"objectID":"dec47578fc66b04092c0e2956b003739","permalink":"https://umemak.github.io/blog/posts/2019/10/22_serverlessdays/","publish_date":"2019-10-22T00:00:00Z","summary":"\u003cp\u003eサーバーレスに特化したカンファレンスです。\n４回目の開催ですが、初参戦です。\n\u003cfigure class=\"center\"\u003e\u003cimg src=\"../20191022_1.JPG\" width=\"640\" height=\"320\"\u003e\n\u003c/figure\u003e\n\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://tokyo.serverlessdays.io/\"\u003ehttps://tokyo.serverlessdays.io/\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"0900-はじめに--諸説明\"\u003e09:00 はじめに / 諸説明\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003emeetup 4年目\u003c/li\u003e\n\u003cli\u003e大企業での採用が進んできている\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"0910-10x-serverless-product-development-for-a-startup-with-microsoft-azure\"\u003e09:10 10x Serverless Product Development for a Startup with Microsoft Azure\u003c/h2\u003e\n\u003ch3 id=\"yutaka-tachibanaebilab\"\u003eYutaka Tachibana(EBILAB)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e飲食店の生産性向上\u003c/li\u003e\n\u003cli\u003e来客人数の予測（過去実績、天気などから）\u003c/li\u003e\n\u003cli\u003e入店率も計算している\n\u003cul\u003e\n\u003cli\u003e店頭のディスプレイでA/Bテストも可能\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデータソースが増えても追加実装は簡単\u003c/li\u003e\n\u003cli\u003ePowerBI Embedded\n\u003cul\u003e\n\u003cli\u003eレポートをノンコーディングで作成できる\u003c/li\u003e\n\u003cli\u003eエンジニアはレポート追加にノータッチ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサーバーレスで実装したメリット\n\u003cul\u003e\n\u003cli\u003e開発運用コストが少ない\u003c/li\u003e\n\u003cli\u003e将来的にスケールした場合の楽観的\u003c/li\u003e\n\u003cli\u003e責務分割が自然にできる\u003c/li\u003e\n\u003cli\u003e協業・分業しやすい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"0950-break\"\u003e09:50 break\u003c/h2\u003e\n\u003ch2 id=\"1000-keynote\"\u003e10:00 Keynote\u003c/h2\u003e\n\u003ch3 id=\"keisuke-nishitani-aws\"\u003eKeisuke Nishitani (AWS)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eEventDriven\n\u003cul\u003e\n\u003cli\u003e呼ぶ側と呼ばれる側が疎結合にできる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eaurora, ecs も2014年のre:inventで発表された\u003c/li\u003e\n\u003cli\u003eモダンアプリケーション\n\u003cul\u003e\n\u003cli\u003e市場投入を加速\u003c/li\u003e\n\u003cli\u003eイノベーションの向上\u003c/li\u003e\n\u003cli\u003e信頼性の向上\u003c/li\u003e\n\u003cli\u003eコスト削減\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAll you need is code\n\u003cul\u003e\n\u003cli\u003e付加価値を産まない重労働からの開放\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e5年たった今も\n\u003cul\u003e\n\u003cli\u003eWe\u0026rsquo;re still writing code\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eもっとコードを減らすためには\n\u003cul\u003e\n\u003cli\u003eどういう問題をどう解決するのか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1040-10-min-break\"\u003e10:40 10 min break\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eスポンサーLT\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1050-keynote-infinite-scaling-finite-failures-serverless-resiliency-patterns-and-lessons-learned\"\u003e10:50 Keynote: Infinite Scaling, Finite Failures: Serverless Resiliency Patterns and Lessons Learned\u003c/h2\u003e\n\u003ch3 id=\"katy-shimizu-microsoft\"\u003eKaty Shimizu (Microsoft)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e失敗は絶対に起こります。アプリケーションがそれらを処理する必要があります\n\u003cul\u003e\n\u003cli\u003eData source\u003c/li\u003e\n\u003cli\u003eCustomer code\u003c/li\u003e\n\u003cli\u003eServerless/Fass layer\u003c/li\u003e\n\u003cli\u003eExternal dependency\u003c/li\u003e\n\u003cli\u003eIaaS/Pass\u003c/li\u003e\n\u003cli\u003eDatacenter/Infra\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e失敗例\n\u003cul\u003e\n\u003cli\u003eレースコンディション\u003c/li\u003e\n\u003cli\u003eネットワーク障害\u003c/li\u003e\n\u003cli\u003eレート制限\u003c/li\u003e\n\u003cli\u003eハードウェア障害\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e依存関係を知る、依存関係が失敗する方法を知る\n\u003cul\u003e\n\u003cli\u003eデザインパターン\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデザインパターン\n\u003cul\u003e\n\u003cli\u003e再試行\n\u003cul\u003e\n\u003cli\u003eサービスに組み込まれている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサーキットブレーカー\n\u003cul\u003e\n\u003cli\u003e耐久性のあるエンティティを試す\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e新製品を使用すると、回復力が容易になります\n\u003cul\u003e\n\u003cli\u003eDurable Functions 2.0\u003c/li\u003e\n\u003cli\u003ePremium hosting plan\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eサーバーレスは改善され続けています\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1130-10-min-break\"\u003e11:30 10 min break\u003c/h2\u003e\n\u003ch2 id=\"1140-グローバル展開のコネクティッドカーを支える大規模サーバーレスシステム事例\"\u003e11:40 グローバル展開のコネクティッドカーを支える大規模サーバーレスシステム事例\u003c/h2\u003e\n\u003ch3 id=\"yuya-urayama-toyota-takanori-suzuki-acroquest-technology-and-eiichiro-uchiumi-aws\"\u003eYuya Urayama (TOYOTA), Takanori Suzuki (Acroquest Technology) and Eiichiro Uchiumi (AWS)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eなぜサーバーレスを選んだのか\n\u003cul\u003e\n\u003cli\u003eConnented Platform\n\u003cul\u003e\n\u003cli\u003e日本・中国・北米でサービス提供中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e無駄の削減のため\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e夜間と日中のアクセス数の差が大きい\n\u003cul\u003e\n\u003cli\u003e日中のアクセス数に合わせたリソース確保→無駄\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e長く乗られる（平均8.5年）\n\u003cul\u003e\n\u003cli\u003eパッチあてなどの保守工数→無駄\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e広い地域での提供\n\u003cul\u003e\n\u003cli\u003e各国現地にリソース確保→無駄\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e設計指針\n\u003cul\u003e\n\u003cli\u003e一貫した方法でコンポーネントを分割\u003c/li\u003e\n\u003cli\u003e緩やかに統合\u003c/li\u003e\n\u003cli\u003eプロセスをステートレスに構成\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eアーキテクチャスタイル\n\u003cul\u003e\n\u003cli\u003eNティアー\n\u003cul\u003e\n\u003cli\u003eコンポーネントを役割に応じて分割する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eウェブキューワーカー／イベントドリブン\n\u003cul\u003e\n\u003cli\u003eロジック層をウェブとワーカーに分割する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eマイクロサービス\n\u003cul\u003e\n\u003cli\u003eライフサイクルを共有する最小単位でコンポーネント群を複製し、自律稼働境界を設定\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e実装パターン\n\u003cul\u003e\n\u003cli\u003eリアクティブスケーリング型\n\u003cul\u003e\n\u003cli\u003eAPI GW + Lambda\u003c/li\u003e\n\u003cli\u003e基本はこっち\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eプロアクティブスケーリング型\n\u003cul\u003e\n\u003cli\u003eALB + Fargate\u003c/li\u003e\n\u003cli\u003eある程度余裕をもたせたい、スケールをコントロールしたいとき\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eP2P\n\u003cul\u003e\n\u003cli\u003eSQS\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eファンアウト\n\u003cul\u003e\n\u003cli\u003eSNS\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eイベントストリーミング\n\u003cul\u003e\n\u003cli\u003eKinesis Data Streams\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eワーカープロセス\n\u003cul\u003e\n\u003cli\u003eLambda\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e特徴\n\u003cul\u003e\n\u003cli\u003eトラフィックの特性によってスケーリングパターンを選べる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデプロイメントはカオス\u003c/li\u003e\n\u003cli\u003e課題\n\u003cul\u003e\n\u003cli\u003e開発量は少なくなったがテストしにくい\n\u003cul\u003e\n\u003cli\u003eCI/CDパイプラインでのテスト実行環境の整備\u003c/li\u003e\n\u003cli\u003eLocalstack、Karateを利用\u003c/li\u003e\n\u003cli\u003eイベントドリブンな部分のテスト、非同期の処理結果も確認している\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e各機能はシンプルになったが全体が見にくい\n\u003cul\u003e\n\u003cli\u003eX-Rayを利用\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e自動スケールは便利だがコントロールすべき要素が出てきた\n\u003cul\u003e\n\u003cli\u003eリトライ用Lambdaが数千並列した\n\u003cul\u003e\n\u003cli\u003eアカウントに対する同時実行数の上限までスケールした結果、他のLambdaの起動が妨げられる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eコールドスタート問題\n\u003cul\u003e\n\u003cli\u003e時間がかかる処理が重なってAPI/GWがタイムアウト\u003c/li\u003e\n\u003cli\u003eENIのIP枯渇\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e運用フェーズ\u003c/li\u003e\n\u003cli\u003e激務コンテナ・サボりコンテナ問題\n\u003cul\u003e\n\u003cli\u003eアクセスログ数を気合でカウントした結果\n\u003cul\u003e\n\u003cli\u003e激務もサボりもなかった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eどんなメトリクスをどの粒度でどう見るかを予め検討する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e運用コストが下がった結果\n\u003cul\u003e\n\u003cli\u003e運用にかけていたコストを開発に回した\u003c/li\u003e\n\u003cli\u003eデプロイサイクルの高速化\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e今後の展望\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eスケーリングを最適化\u003c/li\u003e\n\u003cli\u003eプラットフォームの挙動をより的確に把握\u003c/li\u003e\n\u003cli\u003e問題が生じた際の回復を自動化\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1220-lunch\"\u003e12:20 Lunch\u003c/h2\u003e\n\u003ch2 id=\"1320-all-you-need-is-javascript\"\u003e13:20 All You Need Is JavaScript\u003c/h2\u003e\n\u003ch3 id=\"jensen-hussey--cloudflare\"\u003eJensen Hussey / Cloudflare\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCloudflare worker\n\u003cul\u003e\n\u003cli\u003eサーバーレス用JS実行環境\u003c/li\u003e\n\u003cli\u003eV8エンジン採用\n\u003cul\u003e\n\u003cli\u003eWebAssemblyが使えるので、JS以外の言語でも開発可能\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eユーザーの地理情報を利用してエッジで翻訳することができる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1340-short-break\"\u003e13:40 short break\u003c/h2\u003e\n\u003ch2 id=\"1345-zero-scale-abstraction-in-knative-serving\"\u003e13:45 Zero Scale Abstraction in Knative Serving\u003c/h2\u003e\n\u003ch3 id=\"tsubasa-nagasawa-cyberagent\"\u003eTsubasa Nagasawa (CyberAgent)\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://speakerdeck.com/toversus/zero-scale-abstraction-in-knative-serving\"\u003ehttps://speakerdeck.com/toversus/zero-scale-abstraction-in-knative-serving\u003c/a\u003e\u003c/p\u003e","tags":["serverless","event"],"title":"Serverless Days Tokyo 2019"},{"categories":null,"objectID":"51b94cbce4ffc4a09aabcebbc77d674f","permalink":"https://umemak.github.io/blog/posts/2019/10/10_font_talk/","publish_date":"2019-10-10T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.library.chiyoda.tokyo.jp/information/20191010-post_211/\"\u003ehttps://www.library.chiyoda.tokyo.jp/information/20191010-post_211/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eヒラギノ作者が語るフォントの話。\u003c/p\u003e\n\u003cp\u003e「本をつくる」は良い本だそうだ。\nライターの人がとても良い仕事をした、と。\u003c/p\u003e\n\u003cp\u003e立て続けに講演依頼があったが、毎回内容を変えてほしいという依頼。\n最終的に同じ話になってしまっている。\u003c/p\u003e\n\u003ch2 id=\"読書と文字\"\u003e読書と文字\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e洛陽からの金印で初めて日本に漢字が伝わった\u003c/li\u003e\n\u003cli\u003e中国文字博物館\n\u003cul\u003e\n\u003cli\u003eでかい、広い\u003c/li\u003e\n\u003cli\u003e洞察力の優れている人は肖像画で目が4つ書かれる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e瓦当（がとう）博物館\n\u003cul\u003e\n\u003cli\u003e篆書、隷書\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e活字の技術\n\u003cul\u003e\n\u003cli\u003e1行の長さがだいたい揃っている\u003c/li\u003e\n\u003cli\u003e読み方が漢字で振ってある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e100年後の人間は想像できない\n\u003cul\u003e\n\u003cli\u003ePTA全国大会での話\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"日本語組版のための文字を作る\"\u003e日本語組版のための文字を作る\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e横組みと縦組み\n\u003cul\u003e\n\u003cli\u003e両方やっている国はもう他にない？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e4つの文字体型\n\u003cul\u003e\n\u003cli\u003e漢字、ひらがな、カタカナ、アルファベット\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e錯視\n\u003cul\u003e\n\u003cli\u003e横のほうが太く見える\u003c/li\u003e\n\u003cli\u003e正方形の真ん中だと思ってマークすると、左上に寄ることが多い\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e12文字の書体見本\n\u003cul\u003e\n\u003cli\u003e東、国、三、愛、霊、今、鷹、永、力、袋、酬、鬱\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e字種拡張\n\u003cul\u003e\n\u003cli\u003e書体見本 12種\u003c/li\u003e\n\u003cli\u003e種字 400種\u003c/li\u003e\n\u003cli\u003eAJ1-3 7000種\u003c/li\u003e\n\u003cli\u003eAJ1-6 15000種\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eアルファベットの配置が難しい\u003c/li\u003e\n\u003cli\u003eふところ、太さ、エレメント、重心\n\u003cul\u003e\n\u003cli\u003eヒラギノは若々しいイメージを出すために重心を高めにしている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eかなの大きさが読みやすさには大事\u003c/li\u003e\n\u003cli\u003e漢字は書き順をあまり意識しないが、かなのデザインには書き順やアツなどたくさん考慮する\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"明朝体ゴシック体丸ゴシック体教科書体ud書体について\"\u003e明朝体、ゴシック体、丸ゴシック体、教科書体、UD書体について\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e明朝体が嫌い（怖い）という人もいる\u003c/li\u003e\n\u003cli\u003eファミリーは単に太さを変えているだけではない\u003c/li\u003e\n\u003cli\u003eかなは左上から左下に抜けていく。縦組み向き。\u003c/li\u003e\n\u003cli\u003eゴシックは流れがないから横組み向き\u003c/li\u003e\n\u003cli\u003e小学校の英語義務化に使うフォントは今ひとつだけ\u003c/li\u003e\n\u003cli\u003eUDがすべて読みやすいとは限らない\n\u003cul\u003e\n\u003cli\u003e使うときは見比べて。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"レタリング実演質疑応答\"\u003eレタリング実演＆質疑応答\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e「な」\u003c/li\u003e\n\u003cli\u003e「な」のもとの漢字は「奈」なので、右上の点が横線より上に来るのはおかしい\u003c/li\u003e\n\u003cli\u003eフォントの著作権\n\u003cul\u003e\n\u003cli\u003eロゴとかで使うときは変形するなどひと手間かけて\u003c/li\u003e\n\u003cli\u003e使用許諾に沿って\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e「游」は社名から\u003c/li\u003e\n\u003cli\u003e「ヒラギノ」は京都の地名から\u003c/li\u003e\n\u003cli\u003e「JK」も社名から\u003c/li\u003e\n\u003cli\u003e文字作成は自己表現だと思っていない\u003c/li\u003e\n\u003c/ul\u003e","tags":["event"],"title":"鳥海修さんの書体のつくりかた"},{"categories":null,"objectID":"bce748f39115056bcedea6bd68b357c7","permalink":"https://umemak.github.io/blog/posts/2019/10/05_ct101pa/","publish_date":"2019-10-04T00:00:00Z","summary":"\u003cp\u003eビックカメラのポイント20%セールで。ポチったあとにアマゾンで19%オフやってておいおいって思った。\u003c/p\u003e\n\u003cp\u003eこれでクラムシェルとコンバーチブルとタブレットのChromebookが揃って、充電器が足りなくなってきたので（本体付属のはごつすぎる・・）、\nもらったポイントで買い足そうかなと。\u003c/p\u003e","tags":["chromebook"],"title":"ASUS CT101PA到着"},{"categories":null,"objectID":"09d154ca0f16d46bc0d7b1c6caac873d","permalink":"https://umemak.github.io/blog/posts/2019/10/04_aws_devday_2/","publish_date":"2019-10-04T00:00:00Z","summary":"\u003cp\u003e二日目（最終日）です。\u003c/p\u003e\n\u003cp\u003e今日もサーバーレス系中心に見ていきたいと思います。\u003c/p\u003e\n\u003ch2 id=\"10001045-オープンソースコミュニティで加速するサーバーレスの未来\"\u003e10:00〜10:45 オープンソースコミュニティで加速するサーバーレスの未来\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eクラウドの世界の中にいながら、オープンソースコミュニティに参加することの意味と楽しさ\u003c/li\u003e\n\u003cli\u003eLambdaの問題（当時）\n\u003cul\u003e\n\u003cli\u003eマネコンにソースを直接アップロードするのでバージョン管理どうする\u003c/li\u003e\n\u003cli\u003eCI/CDどうする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eそれを解決できるServerless Frameworkの登場\u003c/li\u003e\n\u003cli\u003eServerless Setp Functions\u003c/li\u003e\n\u003cli\u003eOSS活動を継続的に続けるモチベーション\n\u003cul\u003e\n\u003cli\u003eスキルのあるプログラマからのレビューを受けられる。スキルアップできる。\u003c/li\u003e\n\u003cli\u003e遠くの国のあったことのない人から感謝される喜び\u003c/li\u003e\n\u003cli\u003e自分の書いたコードがたとえ1行だとしても世界中の人に使われて、どこかの誰かの役に立っているかもしれない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOSS活動を継続させるには\n\u003cul\u003e\n\u003cli\u003e誰からも反応なく飽きてしまう、地味\u003c/li\u003e\n\u003cli\u003eスターが1000以上、関わっている人が複数いる、help-wantedタグがついているissueがあるプロジェクトに継続的にプルリクを送り続ける\u003c/li\u003e\n\u003cli\u003e先送りにされている問題を潰していく人の存在は重要\u003c/li\u003e\n\u003cli\u003eプルリクを出し続けたプロダクトのプラグインなど付随のOSSを出してみる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eオープンソースの未来とサーバーレス\n\u003cul\u003e\n\u003cli\u003eCloud2.0\n\u003cul\u003e\n\u003cli\u003e究極のサバーレスアプリケーションには全くコードがない\u003c/li\u003e\n\u003cli\u003eサーバーレスの狙いはよりコードを少なくクラウドのサービスをできる限り使うこと\u003c/li\u003e\n\u003cli\u003eフルマネージドサービスをうまく利用することで責務の多くをクラウドに任せ、ビジネスバリューを出すための仕事に集中すること\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCloud2.0の時代でも、コードを書くということが本質的になくなっていくことはない\u003c/li\u003e\n\u003cli\u003e新しいものが出るということは新たな問題も発生するということ。問題とはチャンスであるということ。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"11001145-chaos-engineering-入門と実例\"\u003e11:00〜11:45 Chaos Engineering ～入門と実例～\u003c/h2\u003e\n\u003ch3 id=\"chaos-engineering-の進化と今\"\u003eChaos Engineering の進化と今\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e障害を避ける最も良い方法は継続的に障害を起こさせること（Netflix TechBlog 2010.12.16）\n\u003cul\u003e\n\u003cli\u003eChaos Monkey: インスタンスをランダムに停止\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFailure Injection Testiong(2014.10)\u003c/li\u003e\n\u003cli\u003eChaos Monkey, Simian Arm\n\u003cul\u003e\n\u003cli\u003e影響範囲の限定が難しい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChaos Kong(2015.9)\u003c/li\u003e\n\u003cli\u003ePRINCIPLES OF CHAOS ENGINEEERING\n\u003cul\u003e\n\u003cli\u003eカオスエンジニアリングとは、「対象とするシステムが本願環境における不安定な状況を耐えることができる」という自信を構築するために当該システムにおいて実施する\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChAP: CHaos Automation Platform(2017.7)\u003c/li\u003e\n\u003cli\u003eAitomaiong chaos experiments in production(2019.5)\u003c/li\u003e\n\u003cli\u003eGremlin Inc\n\u003cul\u003e\n\u003cli\u003e仕組みやツールを提供する企業\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChaosTOolkit\n\u003cul\u003e\n\u003cli\u003eOSS\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChaos Testに取り組むなら、最低限の可用性設計はできていることが望ましい。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"後半\"\u003e後半\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eChaosconf振り返り\u003c/li\u003e\n\u003cli\u003eOur 4 Setp Aproach\n\u003cul\u003e\n\u003cli\u003e定常状態\u003c/li\u003e\n\u003cli\u003e仮説設定\u003c/li\u003e\n\u003cli\u003e故障発生\u003c/li\u003e\n\u003cli\u003e仮説反証\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOur Next Aproach\n\u003cul\u003e\n\u003cli\u003e影響の最小化\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"12001245-よくある課題を一気に解説御社の技術レベルがアップする-2019-秋期講習\"\u003e12:00〜12:45 よくある課題を一気に解説　御社の技術レベルがアップする 2019 秋期講習\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eコンテナのCI/CDちゃんとしたい\u003c/p\u003e","tags":["aws","event"],"title":"AWS DevDay Tokyo 2019 DAY2"},{"categories":null,"objectID":"7e813bf40812e1b4e2023c6b883ab5c9","permalink":"https://umemak.github.io/blog/posts/2019/10/03_aws_devday_1/","publish_date":"2019-10-03T00:00:00Z","summary":"\u003cp\u003e今年も来ました。\u003c/p\u003e\n\u003cp\u003e去年は目黒のAWSオフィスで3日間でしたが、今年は神田明神ホールで2日間になっています。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://aws.amazon.com/jp/about-aws/events/2019/devday/\"\u003ehttps://aws.amazon.com/jp/about-aws/events/2019/devday/\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAWSグローバルで開催する開発者のためのトレーニングイベント\u003c/li\u003e\n\u003cli\u003e最新のテクノロジー、開発手法などを集中的に学ぶことができる場\u003c/li\u003e\n\u003cli\u003eセッション公募を行い、11件採択された\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"10001140--ゼネラルセッション\"\u003e10:00～11:40  ゼネラルセッション\u003c/h2\u003e\n\u003ch3 id=\"岡嵜-禎\"\u003e＠岡嵜 禎\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAWSではBuilderという言葉を大事にしている\n\u003cul\u003e\n\u003cli\u003e開発者\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eamazon go 北米ではすでに10店舗以上展開\n\u003cul\u003e\n\u003cli\u003e多数センサーからのリアルタイムデータをリアルタイムで処理できている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePrime Air\n\u003cul\u003e\n\u003cli\u003e5万モデル検証、1万機作成して検証\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eProject Kuiper\u003c/li\u003e\n\u003cli\u003e様々な場面と用途で使われる機械学習\n\u003cul\u003e\n\u003cli\u003eAIサービス、MLサービス、フレームワーク＆インフラストラクチャのレイヤ\n\u003cul\u003e\n\u003cli\u003e利用者のレベルによって使い分けられる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWell-Architected Framework\n\u003cul\u003e\n\u003cli\u003eホワイトペーパーとツールを提供\u003c/li\u003e\n\u003cli\u003eツールは9月に日本語版リリース\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOn Builders and Dreamers\n\u003cul\u003e\n\u003cli\u003eジェフベゾスの言葉\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"まつもと-ゆきひろ\"\u003e＠まつもと ゆきひろ\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eプロ・プログラミング技術者\u003c/li\u003e\n\u003cli\u003e20世紀の言語\n\u003cul\u003e\n\u003cli\u003eインターネットとともに\u003c/li\u003e\n\u003cli\u003eRuby, JS,\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e2000年代\n\u003cul\u003e\n\u003cli\u003e手軽、柔軟、生産的、楽しい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e2010年代\n\u003cul\u003e\n\u003cli\u003e関数型、手堅い\u003c/li\u003e\n\u003cli\u003eブロック、型推論、少ないお約束\u003c/li\u003e\n\u003cli\u003e企業によるスポンサー\n\u003cul\u003e\n\u003cli\u003eGo, Swift, Rust, TypeScript\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eどの言語を選ぶか？\n\u003cul\u003e\n\u003cli\u003e評価基準を持つこと\u003c/li\u003e\n\u003cli\u003e生産性（効率、コスト）\u003c/li\u003e\n\u003cli\u003e唯一の解はない\n\u003cul\u003e\n\u003cli\u003e背景によって異なる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e判断を人に任せない\u003c/li\u003e\n\u003cli\u003e風をおこし、強める\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"倉貫-義人\"\u003e＠倉貫 義人\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSIerの受託開発の中でアジャイルをやるのは難しい\u003c/li\u003e\n\u003cli\u003eそもそもアジャイルがマッチする案件なのか（制約条件）\u003c/li\u003e\n\u003cli\u003e納品のない受託開発\n\u003cul\u003e\n\u003cli\u003e月額定額\u003c/li\u003e\n\u003cli\u003e見積り、要件定義（ビジネス上の制約）しない\u003c/li\u003e\n\u003cli\u003eクラウド、OSSのおかげで一人でできることが増えた\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSoftware is eaticg the world\u003c/li\u003e\n\u003cli\u003eソフトウェア開発の本質\n　- 大量生産、ルーチンワーク、製造業ではない\n\u003cul\u003e\n\u003cli\u003eデザイン、問題解決。ナレッジワークであt\u003c/li\u003e\n\u003cli\u003eプログラミングを手段に、問題解決する仕事\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eこれから求められる仕事とは\n\u003cul\u003e\n\u003cli\u003e人類の文明の進化は不自由を置き換えてきた\u003c/li\u003e\n\u003cli\u003e自由な発送が求められる、好きで楽しめるか\u003c/li\u003e\n\u003cli\u003eクリエイティブな仕事、人数のいらない仕事\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eこの先のエンジニアの生き方\n\u003cul\u003e\n\u003cli\u003eソフトウェア開発の仕事は、減ることはない\u003c/li\u003e\n\u003cli\u003e腕を磨き続ければ、自分の価値を高められる\n\u003cul\u003e\n\u003cli\u003e人がいなければ、企業は成り立たない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eあなたの仕事は、難しいからこそ価値がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"トークセッション\"\u003eトークセッション\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e令和の時代。更に輝くエンジニアになるために必要なこととは\u003c/li\u003e\n\u003cli\u003eこれまでのキャリアはどのようにして築いてきましたか？\n\u003cul\u003e\n\u003cli\u003eまつもと）東京は嫌だったので浜松に就職した。会社が傾いて閑職に置かれてRubyを作り始めた。\u003c/li\u003e\n\u003cli\u003e倉貫）社内SNSを作ったところから。JavaではなくRoRを選んだ。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAIがプログラムを書いてくれる時代になったときのプログラマーの存在価値はどうなるか？それでも必要とされるプログラマーとなるために求められることは？\n\u003cul\u003e\n\u003cli\u003eまつもと）問題の定義\u003c/li\u003e\n\u003cli\u003e倉貫）プログラムのデザイン自体クリエイティブな部分、AIが出てきても書けば良い。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eどんな人と一緒に働きたいか\n\u003cul\u003e\n\u003cli\u003eまつもと・倉貫）主体性のあるプログラマ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e自分のスキルアップ\n\u003cul\u003e\n\u003cli\u003eまつもと）海外のブログとか見る、得意なところから周辺に広げていく、自分の中にインデックスを作る\u003c/li\u003e\n\u003cli\u003e倉貫）得意があるメンバーでチームを組む\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"12001245-第1回-aws-fargate-かんたんデプロイ選手権\"\u003e12:00～12:45 第1回 AWS Fargate かんたんデプロイ選手権\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFargateとは\n\u003cul\u003e\n\u003cli\u003eAWSマネージド\u003c/li\u003e\n\u003cli\u003eコンテナネイティブ\u003c/li\u003e\n\u003cli\u003eAWSサービスとの連携\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eECS on EC2の運用\n\u003cul\u003e\n\u003cli\u003eOSやエージェント類へのパッチあて、更新\u003c/li\u003e\n\u003cli\u003eインスタンスのスケーリング\u003c/li\u003e\n\u003cli\u003eコンテナとホスト2重に対応\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFargate CLI\n\u003cul\u003e\n\u003cli\u003eサービスを削除するときはスケールインしてからデストロイ\u003c/li\u003e\n\u003cli\u003eターナー社がforkしたものもある。インタフェースが異なる。\u003c/li\u003e\n\u003cli\u003epros\n\u003cul\u003e\n\u003cli\u003evervose オプションで自動生成されるリソースの勉強ができる\u003c/li\u003e\n\u003cli\u003eとにかく簡単\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003econs\n\u003cul\u003e\n\u003cli\u003e本番環境で使うにはちょっとアドホック\n\u003cul\u003e\n\u003cli\u003eFargate CLIのバージョンアップで変わるところがあるかも\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCI/CDと合わせて構築するには考えないと\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003enathanpeck/awesome-ecs\u003c/li\u003e\n\u003cli\u003eなぜこんなにたくさんあるのか\n\u003cul\u003e\n\u003cli\u003eサービスリリース時には最小限（MVP）なもの\u003c/li\u003e\n\u003cli\u003eリリース後にユーザーからのフィードバックで成長させる\u003c/li\u003e\n\u003cli\u003e利用者がそれぞれ作るので多くなる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"13001345-マルチテナント時代におけるテストベストプラクティス\"\u003e13:00～13:45 マルチテナント時代におけるテスト・ベストプラクティス\u003c/h2\u003e\n\u003cp\u003e場所どり失敗してスクリーン見えなかったのでログなし。\u003c/p\u003e","tags":["aws","event"],"title":"AWS DevDay Tokyo 2019 DAY1"},{"categories":null,"objectID":"1640648266e63c0c2267557230498560","permalink":"https://umemak.github.io/blog/posts/2019/10/03_gitpod/","publish_date":"2019-10-03T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://www.gitpod.io/\"\u003ehttps://www.gitpod.io/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGitHubのブラウザ版で、ブランチ切ったら編集できなくなったので、他にブラウザで使えるエディタないかなと検索して出てきたのがこれです。\nGitHub連携するだけで使えるかと思ったらそうではなく、Gitpodにもアカウント作る必要があります。とはいえチェックボックス2つだけなのですぐ終わります。\u003c/p\u003e\n\u003cp\u003eコンテナの起動に少し時間がかかりました。\n起動すると見慣れた画面がブラウザで表示される。VSCodeやんけ・・\u003c/p\u003e","tags":["git"],"title":"Gitpod使ってみた"},{"categories":null,"objectID":"3167a8c5368b6fd2f27b7c61266d8e5e","permalink":"https://umemak.github.io/blog/posts/2019/10/01_google_cloud_build_day/","publish_date":"2019-10-01T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://gcpug-tokyo.connpass.com/event/143453/\"\u003ehttps://gcpug-tokyo.connpass.com/event/143453/\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGCPの\u003ca href=\"https://cloud.google.com/cloud-build/?hl=ja\"\u003eCloud Build\u003c/a\u003eサービスに関する話。\u003c/li\u003e\n\u003cli\u003eAWSだと、CodePipelineとCodeBuildとCodeDeployに相当するもの。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1930--2000-マルチアーキテクチャイメージの作成仮-ymotongpoo\"\u003e19:30 ~ 20:00 マルチアーキテクチャイメージの作成（仮） @ymotongpoo\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eイベントベースでビルドのトリガー（GitHubのpushとか）\u003c/li\u003e\n\u003cli\u003eテストの実行とアーティファクトのビルド\u003c/li\u003e\n\u003cli\u003e雑に言うとDocker on Docker\u003c/li\u003e\n\u003cli\u003eビルド実行時間にる対する課金\u003c/li\u003e\n\u003cli\u003eArtifact management\n\u003cul\u003e\n\u003cli\u003eプライベートコンテナレジストリに自動push＆脆弱性スキャン\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e70以上のビルダーイメージ\u003c/li\u003e\n\u003cli\u003eCloud Console UIで実行状況・結果の確認ができる\u003c/li\u003e\n\u003cli\u003eセキュア情報はKMSと連携して暗号化可能\u003c/li\u003e\n\u003cli\u003eDockerが入っていればローカルで試すことができる\u003c/li\u003e\n\u003cli\u003eSTEPの並行実行ができる\n\u003cul\u003e\n\u003cli\u003e依存関係も定義できる（waitFor）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2000--2025-cloud-build-out-of-steps-apstndb\"\u003e20:00 ~ 20:25 Cloud Build out of steps @apstndb\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCI/CDにおけるコンテナ間の通信\u003c/li\u003e\n\u003cli\u003eK8s IN Docker(KIND)\n\u003cul\u003e\n\u003cli\u003eDOckerの中で本物のK8sクラスタを構築するツール\u003c/li\u003e\n\u003cli\u003e現在アルファ版\u003c/li\u003e\n\u003cli\u003eCircleCI, TravisCI, GitHub Actionで動いた報告あり\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSTEP内でdocker buildが使える→docer runも使える→何でもできる\u003c/li\u003e\n\u003cli\u003e他のCI/CDサービスとは異なるアプローチ\u003c/li\u003e\n\u003cli\u003edockerize\n\u003cul\u003e\n\u003cli\u003e他のコンテナの起動を待つ用途で使っている\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/jwilder/dockerize\"\u003ehttps://github.com/jwilder/dockerize\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCloud BuildでKINDするには\n\u003cul\u003e\n\u003cli\u003eSTEPから外れる必要がある\u003c/li\u003e\n\u003cli\u003eDocker Networkが使えないのでhostネットワークを使う＝STEPと直接通信できない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデモは時間切れ。。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2025--2035-休憩\"\u003e20:25 ~ 20:35 休憩\u003c/h2\u003e\n\u003ch2 id=\"2035--2050-cloud-buildを気軽なコンテナ実行環境として利用する-chidakiyo\"\u003e20:35 ~ 20:50 Cloud Buildを気軽なコンテナ実行環境として利用する @chidakiyo\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e注意点\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003egcloud builds submit\u003c/code\u003eした際に指定したディレクトリは以下のファイルが送られる。\u003c/li\u003e\n\u003cli\u003e巨大なファイルがあると大変。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.gcloudignore\u003c/code\u003eで除外指定可能。\u003c/li\u003e\n\u003cli\u003e無料枠は請求先アカウント単位なので複数プロジェクトでやるとすぐ尽きる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e事例\n\u003cul\u003e\n\u003cli\u003eDataflowを使っていた処理のCloud build化\u003c/li\u003e\n\u003cli\u003egcloudコマンドさえ入っていればローカルに諸々インストールする必要がない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2050--2110-lt\"\u003e20:50 ~ 21:10 LT\u003c/h2\u003e\n\u003ch3 id=\"yukinagae\"\u003eyukinagae\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eBerglas（ばーぐらす）\n\u003cul\u003e\n\u003cli\u003eCloud KMSとCloud Storageで暗号化できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデモは時間切れ。。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"soumatsuda\"\u003eSouMatsuda\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCloud Build x Terraform\u003c/li\u003e\n\u003cli\u003e通常、ローカルで実行する init, plan, apply をCloud Buildで実施する\u003c/li\u003e\n\u003cli\u003eインフラの設定変更が頻繁に起きる場合は工数削減に効く\u003c/li\u003e\n\u003cli\u003eそれなりに学習コストはかかる\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"kumagai\"\u003ekumagai\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCloud Build で docker-compose と ansible\u003c/li\u003e\n\u003cli\u003e用途\n\u003cul\u003e\n\u003cli\u003e自動テスト用ベースイメージとして\u003c/li\u003e\n\u003cli\u003e開発者にGCEのテンプレートとともに渡す\u003c/li\u003e\n\u003cli\u003e社内デモ環境としてGKEで起動\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"感想\"\u003e感想\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCloud Build使ってみたくなった。\u003c/li\u003e\n\u003cli\u003eちょうどblogのCI作ろうとしていたから、これでやってみようかな。\u003c/li\u003e\n\u003c/ul\u003e","tags":["GCP","CI/CD","event"],"title":"Google Cloud Build Day"},{"categories":null,"objectID":"831cfcac29c1236ca9f76cbc2ff1ff57","permalink":"https://umemak.github.io/blog/posts/2019/10/01_start_writing/","publish_date":"2019-10-01T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e他人にものを伝える技術を筆者の経験から書かれている。\u003c/li\u003e\n\u003cli\u003e書いて伝える、話して伝える、に加えて伝えられる側の心構えも。\u003c/li\u003e\n\u003cli\u003eどれも興味深い内容だったが、とくに印象的だったのはプレゼンの準備にかける時間のところ。\u003c/li\u003e\n\u003cli\u003eそのうち社内で勉強会とかもしたいと思っているので、参考になった。\u003c/li\u003e\n\u003c/ul\u003e","tags":["book"],"title":"技術を伝えるテクニック 〜分かりやすい書き方・話し方〜"},{"categories":null,"objectID":"e2413de09d25273bc6e9b4f9b34667ac","permalink":"https://umemak.github.io/blog/posts/2019/10/01_readablebooks/","publish_date":"2019-10-01T00:00:00Z","summary":"\u003cp\u003e文書書くときにもCI回そうぜ、って内容。\nたしかにしょうもないtypoとかあると記事自体の信頼性に関わるし。\u003c/p\u003e\n\u003cp\u003e3種類のチェックツールが使用例とともに紹介されている。\u003c/p\u003e\n\u003cp\u003eRe:VIEWとの併用が前提で書かれているので、このblogに応用するにはMarkdown用に設定変更が必要になりそう。\u003c/p\u003e\n\u003cp\u003eCircleCI使ったことなかったのであとで試してみよう。\nプルリクはCircleCIで拾って、masterマージしたらAzure Pipelineでhugoビルドするようにすれば良いのかな。\u003c/p\u003e","tags":["book"],"title":"読みやすい技術書を書く技術"},{"categories":null,"objectID":"a6f9989f50d653b4e46cecba71634b38","permalink":"https://umemak.github.io/blog/posts/2019/09/25_golang_tokyo_26/","publish_date":"2019-09-25T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://golangtokyo.connpass.com/event/147175/\"\u003ehttps://golangtokyo.connpass.com/event/147175/\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e今回はスマートホームとGoの話です\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1930--2000go-in-nature仮-by-songmu\"\u003e19:30 ~ 20:00\tGo in Nature（仮） by songmu\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eNature Remoの裏側\u003c/li\u003e\n\u003cli\u003egocredits オススメ\n\u003cul\u003e\n\u003cli\u003e依存ライブラリのLICENSEを同梱してくれる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eecsched気になる\u003c/li\u003e\n\u003cli\u003eWebsocketでクラウドに接続しっぱなしにしている\u003c/li\u003e\n\u003cli\u003e外部のデバイスからはクラウドに司令を出す\u003c/li\u003e\n\u003cli\u003e常時接続の管理が大変\u003c/li\u003e\n\u003cli\u003eECS上でうごかしている\u003c/li\u003e\n\u003cli\u003eNginxとポート数の問題\n\u003cul\u003e\n\u003cli\u003e接続数が少ないところにつなぎに行く\u003c/li\u003e\n\u003cli\u003eALBに直接つなぎに行けるようにしたい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003edeploy時に接続を切るので、その後一斉に再接続が来る\u003c/li\u003e\n\u003cli\u003eMigration\n\u003cul\u003e\n\u003cli\u003egoose から schemalex に乗り換えたい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDependabot 導入\n\u003cul\u003e\n\u003cli\u003eGo対応はちょっと微妙\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2000--2030nature-remo用のgo-api-clientを作った話仮-by-tenntenn\"\u003e20:00 ~ 20:30\tNature Remo用のGo API Clientを作った話（仮） by tenntenn\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e完全に対応したGoクライアントが存在していなかったので作った\u003c/li\u003e\n\u003cli\u003eswagger見ながら作った\u003c/li\u003e\n\u003cli\u003eDialogflowも使いたい\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2030--2100休憩\"\u003e20:30 ~ 21:00\t休憩\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eと言う名の懇親タイム\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2110--2120lt1-raspberry-pi--go-で-iot-した話-仮-by-yaegashi\"\u003e21:10 ~ 21:20\tLT1 Raspberry Pi + Go で IoT した話 (仮) by yaegashi\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eエッジデバイスでの活用\u003c/li\u003e\n\u003cli\u003eクロスコンパイルが簡単\u003c/li\u003e\n\u003cli\u003eシングルバイナリ\u003c/li\u003e\n\u003cli\u003e並列処理のサポート\u003c/li\u003e\n\u003cli\u003eGPIOの制御\n\u003cul\u003e\n\u003cli\u003epigpioが便利\u003c/li\u003e\n\u003cli\u003e遅延、CPU負荷が弱点\u003c/li\u003e\n\u003cli\u003eperiph.ioもオススメ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2120--2130lt2-goを使ったセンサーデータ収集基盤のお話仮-by-takeshinoda\"\u003e21:20 ~ 21:30\tLT2 Goを使ったセンサーデータ収集基盤のお話(仮 by takeshinoda\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eIoTでGoは便利\n\u003cul\u003e\n\u003cli\u003eクロスコンパイル、非同期データ通信制御、デプロイの容易さ\u003c/li\u003e\n\u003cli\u003e非同期処理と同期処理の混在もOK\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003enodeとGo、Goのほうが安心感がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2130--2140lt3-build-real-world-data-collecting-architecture-with-goroutine--channel-by-banana_umai\"\u003e21:30 ~ 21:40\tLT3 Build real world data collecting architecture with goroutine \u0026amp; channel by banana_umai\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003epipeline pattern\n\u003cul\u003e\n\u003cli\u003echannelで並列にデータ受け渡しをしていくパターン\u003c/li\u003e\n\u003cli\u003eデータの順序性、即時性を保ちたい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003edebouncing, buffering\n\u003cul\u003e\n\u003cli\u003eネットワークの不安定さに対応できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["golang","event"],"title":"golang.tokyo #26"},{"categories":null,"objectID":"a3cf70dfba48cfe09e58e497e4acc0fa","permalink":"https://umemak.github.io/blog/posts/2019/09/19_serverless_meetup_tokyo_14/","publish_date":"2019-09-19T00:00:00Z","summary":"\u003cp\u003eServerless Meetup Tokyo #14\n\u003ca href=\"https://serverless.connpass.com/event/143446/\"\u003ehttps://serverless.connpass.com/event/143446/\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"1910-1915opening-talk堀家-隆宏-serverless-operations-llc-ceo\"\u003e19:10-19:15\tOpening Talk\t堀家 隆宏 (Serverless Operations LLC. CEO)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eServerless Daysやるよ\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1915-1920会場案内告知株式会社speee\"\u003e19:15-19:20\t会場案内、告知\t株式会社Speee\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGood Coffee -\u0026gt; Good COde\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1920-1940機械学習mvpにserverless-frameworkがオススメな理由池田-雄太郎株式会社-kaizenplatform\"\u003e19:20-19:40\t機械学習MVPにServerless Frameworkがオススメな理由\t池田 雄太郎（株式会社 KaizenPlatform）\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e短期的・長期的ダイナミクス\u003c/li\u003e\n\u003cli\u003e短期的：一時的に大量なリソースが必要\u003c/li\u003e\n\u003cli\u003e長期的：やってみないとわからないやつ\u003c/li\u003e\n\u003cli\u003eー＞リソースのスケールが必要\n\u003cul\u003e\n\u003cli\u003eー＞そこでserverless\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eServerlessの悩み\n\u003cul\u003e\n\u003cli\u003eベンダー、性能、セキュリティ、設定・デプロイ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e使うBaaSが多くなりがち\n\u003cul\u003e\n\u003cli\u003e管理が大変\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDevOps環境の構築が大変\u003c/li\u003e\n\u003cli\u003eそこでServerless Framework\n\u003cul\u003e\n\u003cli\u003eリソース情報を一括管理できる\u003c/li\u003e\n\u003cli\u003eyaml の custom で定義\u003c/li\u003e\n\u003cli\u003eCFnも書く必要がある？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1940-2005今serverlessが面白いわけv1909川崎-庸市microsoft-corporation\"\u003e19:40-20:05\t今Serverlessが面白いわけ（v19.09）\t川崎 庸市（Microsoft Corporation）\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eServerless != サーバーがない\u003c/li\u003e\n\u003cli\u003eServerless = サーバーを管理する必要がない\u003c/li\u003e\n\u003cli\u003eServerlessの定義\n\u003cul\u003e\n\u003cli\u003eスケーリング\u003c/li\u003e\n\u003cli\u003e管理不要\u003c/li\u003e\n\u003cli\u003e本質的な作業に集中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e人類の問題解決\u003c/li\u003e\n\u003cli\u003eFaaSはインフラ進化の賜物\n\u003cul\u003e\n\u003cli\u003eコンテナ\u003c/li\u003e\n\u003cli\u003e実行単位が分離されている→セキュリティ有利\u003c/li\u003e\n\u003cli\u003eCGI-Bin？\u003c/li\u003e\n\u003cli\u003eデータストアの進化\n\u003cul\u003e\n\u003cli\u003e水平スケール大事\u003c/li\u003e\n\u003cli\u003eNoSQLがマッチしている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e進化の方向性\n\u003cul\u003e\n\u003cli\u003e自動化、抽象化、標準化\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e標準化が課題\n\u003cul\u003e\n\u003cli\u003eベンダーロックインの懸念\u003c/li\u003e\n\u003cli\u003eCNCF Serverless WGで進められている\u003c/li\u003e\n\u003cli\u003eCloud Events\n\u003cul\u003e\n\u003cli\u003eイベントスキーマ標準化のための共通仕様\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e複雑性の抽象化\n\u003cul\u003e\n\u003cli\u003eTerraform, plumi\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eマルチクラウド化対応\n\u003cul\u003e\n\u003cli\u003eK8sベースのServerless環境\u003c/li\u003e\n\u003cli\u003eK8sがインフラを抽象化\u003c/li\u003e\n\u003cli\u003eKnative, KEDA\u003c/li\u003e\n\u003cli\u003eクラスタレス\n\u003cul\u003e\n\u003cli\u003eバッチ処理とか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eVirtual Kubelet\n\u003cul\u003e\n\u003cli\u003eクラウドのリソースをK8sから管理\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2015-2035awsで開発するサーバレスapiバックエンド三宅-暁フリーランス\"\u003e20:15-20:35\tAWSで開発するサーバレスAPIバックエンド\t三宅 暁（フリーランス）\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAppSync,DynamoDB,Cognito でGraphQLなAPIを作る\u003c/li\u003e\n\u003cli\u003eGraphQL\n\u003cul\u003e\n\u003cli\u003eスキーマファースト\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAmplify-\u0026gt;AWSにロックイン\u003c/li\u003e\n\u003cli\u003eServerless FWにAppsyncのプラグインがある\u003c/li\u003e\n\u003cli\u003eVTL＝Apache Velocity Template Language？\u003c/li\u003e\n\u003cli\u003eノンコーディング\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2035-2040今日飲み物持ち込んでるエフセキュアのサーバーレス向けセキュリティ河野-真一郎エフセキュア株式会社\"\u003e20:35-20:40\t今日飲み物持ち込んでるエフセキュアのサーバーレス向けセキュリティ\t河野 真一郎（エフセキュア株式会社）\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAWS,GCP,Azure向けがまだない。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"感想\"\u003e感想\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eServerless Framework 使ってみよう\u003c/li\u003e\n\u003cli\u003eKnative も触ってみよう\u003c/li\u003e\n\u003cli\u003eServerless Days 申し込もう\u003c/li\u003e\n\u003c/ul\u003e","tags":["event","serverless"],"title":"Serverless Meetup Tokyo #14"},{"categories":null,"objectID":"f02a312c521f368bfe5d73798f08ede0","permalink":"https://umemak.github.io/blog/posts/2019/09/13_evans_ddd/","publish_date":"2019-09-13T00:00:00Z","summary":"\u003cp\u003eやっっっっっと読み終わった。\n買ったのが2月9日で、Kindleのセールで他にも色々買ったので読み始めたのは夏ぐらいだったかな。。\n評判通り？難解だった。\u003c/p\u003e\n\u003cp\u003e「ユビキタス言語」くらいしかキーワード知らなかった状態で読み始めて、なんとなくドメイン駆動設計の雰囲気はわかるようになったと思う。\nチームの共通理解とかレベル合わせとか実際の現場で導入するには難しそうだけど、チャンスがあれば試してみたいところ。\u003c/p\u003e","tags":["book"],"title":"エリック・エヴァンスのドメイン駆動設計"},{"categories":null,"objectID":"0b7e2086da58764dbd7f4340629e06a7","permalink":"https://umemak.github.io/blog/posts/2019/09/10_python_book/","publish_date":"2019-09-10T00:00:00Z","summary":"\u003cp\u003ePrime Readingに入っていたので、読みつつ例文を写経して動かしてみた。\u003c/p\u003e\n\u003cp\u003ePythonはLambdaで通知をSlackに飛ばすためにちょっと触ってみた程度。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.amazon.co.jp/dp/B078SBH9Y7\"\u003ePythonの文法を覚えた人がもっと理解を深めるための本 Kindle版\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eしばらくRubyをやっていたせいか、割とすんなり理解することができたように思う。\u003c/p\u003e\n\u003cp\u003eそう考えると、Rubyがオブジェクト指向を身につけるには良いというのも納得。\u003c/p\u003e","tags":["python"],"title":"Pythonの文法を覚えた人がもっと理解を深めるための本"},{"categories":null,"objectID":"62c44f08873c398e2205ddafcce599e6","permalink":"https://umemak.github.io/blog/posts/2019/09/01_change_hugo_theme/","publish_date":"2019-09-01T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://themes.gohugo.io/hermit/\"\u003eHermit\u003c/a\u003eから\u003ca href=\"https://themes.gohugo.io/inkblotty/\"\u003eInkblotty\u003c/a\u003eへ。\u003c/li\u003e\n\u003cli\u003eちょっと使い勝手が合わないところがあったので\u003ca href=\"https://github.com/umemak/inkblotty\"\u003efork\u003c/a\u003eして改造。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"変更したところ\"\u003e変更したところ\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eカテゴリとアーカイブ使ってないのにサイドバーに表示されているのを非表示に\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"ハマったところ\"\u003eハマったところ\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e最近の投稿が表示されないのは\u003ccode\u003epostSections\u003c/code\u003eパラメータが違っていた\u003c/li\u003e\n\u003cli\u003econfig.toml で設定したら表示された\u003c/li\u003e\n\u003c/ul\u003e","tags":["hugo"],"title":"hugoのテーマを変えてみる"},{"categories":null,"objectID":"0752bef4fcce3f1f46621433a542fba6","permalink":"https://umemak.github.io/blog/posts/2019/08/29_jawsug_ct_15/","publish_date":"2019-08-29T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://jawsug-container.connpass.com/event/143245/\"\u003ehttps://jawsug-container.connpass.com/event/143245/\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"aws-コンテナサービスアップデートトリ--amazon-web-services-japan\"\u003eAWS コンテナサービスアップデート\tトリ / Amazon Web Services Japan\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eコンテナロードマップは what’s new に載ってない\u003c/li\u003e\n\u003cli\u003eトランキングENIと通常のENIの違いは「ほとんど」ない\u003c/li\u003e\n\u003cli\u003eEKS 名称変更が一番シェアされたツイート\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"mazon-ecsの開発環境を動的に管理するツールを作ってみましたプログラミングヤクザ--サイバーエージェント\"\u003emazon ECSの開発環境を動的に管理するツールを作ってみました\tプログラミングヤクザ / サイバーエージェント\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003edevxx環境の自動化\u003c/li\u003e\n\u003cli\u003e作るのに時間がかかるALBを共有化する\u003c/li\u003e\n\u003cli\u003ePRと環境が対になる\n\u003cul\u003e\n\u003cli\u003ecreate PR すると create ENV\u003c/li\u003e\n\u003cli\u003eclose PR すると delete ENV\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003edev00 は reference として使う\u003c/li\u003e\n\u003cli\u003egithub.com/baikonur-oss/docs で公開しました\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"fargate運用物語--本当にコンテナで幸せになりますか-曽根-壮大--オミカレ\"\u003eFargate運用物語 ～ 本当にコンテナで幸せになりますか？ ～\t曽根 壮大 / オミカレ\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eEC2で困ってないならEC2で良い\u003c/li\u003e\n\u003cli\u003e冪等性を担保するAnsibleは難しい\n　- 頻繁に変更があるならコンテナのほうが向いている\u003c/li\u003e\n\u003cli\u003eサイドカー増やしたくなったらEC2でいいんじゃないか\u003c/li\u003e\n\u003cli\u003e解決したい問題のスコープ大事\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"how-fast-can-your-fargate-scalepahud-hsieh--amazon-web-services\"\u003eHow Fast can your Fargate Scale?\tPahud Hsieh / Amazon Web Services\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eスケールアップの検知を早くする（１〜３分→10秒以下）\u003c/li\u003e\n\u003cli\u003eStepFunctionでstausをcorrectする（3秒ごと）\u003c/li\u003e\n\u003c/ul\u003e","tags":["aws","container","event"],"title":"JAWS-UG コンテナ支部 #15"},{"categories":null,"objectID":"1fdb65bacddc3063015e54d318ff2f28","permalink":"https://umemak.github.io/blog/posts/2019/08/21_azure_devops/","publish_date":"2019-08-21T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003eHugoの実行とPUSHをやってもらう\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.kaikeru.com/post/20181228-freestaticsite/\"\u003ehttps://blog.kaikeru.com/post/20181228-freestaticsite/\u003c/a\u003e を参考に設定。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.microsoft.com/ja-jp/azure/devops/pipelines/build/triggers?view=tfs-2018\u0026amp;tabs=yaml#ci-triggers\"\u003eCIのスキップ\u003c/a\u003eを念の為追加\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops\u0026amp;tabs=yaml%2Cbatch#secret-variables\"\u003evariableの設定\u003c/a\u003eがわかりにくかった。\n\u003cul\u003e\n\u003cli\u003eちゃんと読めば書いてある。\u003c/li\u003e\n\u003cli\u003ePipeline編集画面の右上から。\u003c/li\u003e\n\u003cli\u003eAWS Secrets Manager的なサービスがあるのかと探し回ってしまった。。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["Azure","DevOps","hugo"],"title":"Azure DevOpsでCI"},{"categories":null,"objectID":"c0e70e1e6b769805f99d15e9b1f8aa98","permalink":"https://umemak.github.io/blog/posts/2019/08/21_hugo/","publish_date":"2019-08-21T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003eやってみよう\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"インストール\"\u003eインストール\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://gohugo.io/getting-started/installing/#linux\"\u003ehttps://gohugo.io/getting-started/installing/#linux\u003c/a\u003e を見たら apt でいけるらしいので\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ apt install hugo\n$ hugo version\nHugo Static Site Generator v0.18.1 BuildDate: 2016-12-31T01:01:10+09:00\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ev0.18.1 ってだいぶ古い。。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt remove hugo\n$ wget https://github.com/gohugoio/hugo/releases/download/v0.57.2/hugo_extended_0.57.2_Linux-64bit.tar.gz\n$ sha256sum hugo_extended_0.57.2_Linux-64bit.tar.gz \nf4ce91d6909d489fe5461633f6b6bd689ed14c9e06b1b7af110024420aa8fd91  hugo_extended_0.57.2_Linux-64bit.tar.gz\n$ tar zxvf hugo_extended_0.57.2_Linux-64bit.tar.gz \nLICENSE\nREADME.md\nhugo\n$ sudo cp hugo /usr/local/bin/\n$ hugo version\nHugo Static Site Generator v0.57.2-A849CB2D/extended linux/amd64 BuildDate: 2019-08-17T17:57:54Z\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOK。\u003c/p\u003e\n\u003ch2 id=\"サイト作成\"\u003eサイト作成\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ hugo new site blog\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"テーマ追加\"\u003eテーマ追加\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ cd blog\n$ git clone https://github.com/Track3/hermit.git themes/hermit\n$ echo \u0026#39;theme = \u0026#34;hermit\u0026#34;\u0026#39; \u0026gt;\u0026gt; config.toml\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"コンテンツ追加\"\u003eコンテンツ追加\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ hugo new posts/my-first-post.md\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"表示確認\"\u003e表示確認\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ hugo server -D\nBuilding sites … ERROR 2019/08/21 11:29:11 render of \u0026#34;section\u0026#34; failed: execute of template failed: template: _default/list.html:21:50: executing \u0026#34;main\u0026#34; at \u0026lt;.Site.Params.dateformshort\u0026gt;: invalid value; expected string\nERROR 2019/08/21 11:29:11 render of \u0026#34;taxonomyTerm\u0026#34; failed: execute of template failed: template: _default/list.html:21:50: executing \u0026#34;main\u0026#34; at \u0026lt;.Site.Params.dateformshort\u0026gt;: invalid value; expected string\nERROR 2019/08/21 11:29:11 render of \u0026#34;taxonomy\u0026#34; failed: execute of template failed: template: _default/list.html:21:50: executing \u0026#34;main\u0026#34; at \u0026lt;.Site.Params.dateformshort\u0026gt;: invalid value; expected string\nTotal in 167 ms\nError: Error building site: failed to render pages: render of \u0026#34;page\u0026#34; failed: \u0026#34;/home/umemak/blog/themes/hermit/layouts/posts/single.html:22:54\u0026#34;: execute of template failed: template: posts/single.html:22:54: executing \u0026#34;main\u0026#34; at \u0026lt;.Site.Params.dateform\u0026gt;: invalid value; expected string\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eなんかエラーでた。。\n\u003ccode\u003ehermit/exampleSite/config.toml\u003c/code\u003eを\u003ccode\u003econfig.toml\u003c/code\u003eにコピーして解消。\n\u003ccode\u003e[params]\u003c/code\u003eセクションがないとだめらしい。\u003c/p\u003e","tags":["hugo"],"title":"Hugoの導入"},{"categories":null,"objectID":"75b9c6ee391e92968dd22e4920cc87cb","permalink":"https://umemak.github.io/blog/posts/2019/08/21_update_gems/","publish_date":"2019-08-21T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003eGithubから脆弱性の通知が来たので、nokogiriを\u003ccode\u003e1.10.4\u003c/code\u003e以上に、actionviewを\u003ccode\u003e5.1.6.2\u003c/code\u003e以上にバージョンアップ対応する。\u003c/li\u003e\n\u003cli\u003e作業環境はC223NAのdocker。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ docker run -it -v `pwd`:/usr/src/work ruby bash\n# cd /usr/src/work\n# bundle update nokogiri\n# bundle list nokogiri\n/usr/local/bundle/gems/nokogiri-1.10.4\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e最初nokogiriの通知しか出てなかったのに、更新してpushしたらもういっこうあるでってactionview出てきた。。\u003c/li\u003e\n\u003cli\u003eactionview は、\u003ccode\u003ebundle update actionview\u003c/code\u003eでは更新されず、\u003ccode\u003ebundle update\u003c/code\u003eで全部上げるようにしたら上がった。\u003c/li\u003e\n\u003c/ul\u003e","tags":["ruby","docker"],"title":"ruby gem のアップデート"},{"categories":null,"objectID":"61e58a8e8bc7c3dd1eef05d2e217e5d4","permalink":"https://umemak.github.io/blog/posts/2019/08/20_mercari_go_10/","publish_date":"2019-08-20T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://mercari.connpass.com/event/141122/\"\u003ehttps://mercari.connpass.com/event/141122/\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"1940-morikunigophercon-2019\"\u003e19:40 ~\tmorikuni\tGopherCon 2019\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGopherConとは\n\u003cul\u003e\n\u003cli\u003e2014年デンバーで始まった。いろんなところでやっている。\u003c/li\u003e\n\u003cli\u003e今年はサンディエゴで開催\n\u003cul\u003e\n\u003cli\u003e1800人を超える参加者\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMercariの関わり\n\u003cul\u003e\n\u003cli\u003eSilver Sponsor\u003c/li\u003e\n\u003cli\u003eBOLD Scholarship\n\u003cul\u003e\n\u003cli\u003e学生向け\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e11+2名参加\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e１日目はワークショップ\u003c/li\u003e\n\u003cli\u003e２日目３日目は発表がメイン\u003c/li\u003e\n\u003cli\u003e４日目はコミュニティデイ\n\u003cul\u003e\n\u003cli\u003eLTとか\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOne MOre Thing\n\u003cul\u003e\n\u003cli\u003eGenerics(Contracts)\u003c/li\u003e\n\u003cli\u003eInterfaceとの違い\n\u003cul\u003e\n\u003cli\u003e直和型\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1950-markhahnworkshop-go-beginner-training\"\u003e19:50 ~\tmark.hahn\tWorkshop: Go-Beginner Training\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e英語の発表だけど聞き取りやすかった\u003c/li\u003e\n\u003cli\u003eGoは1日で習得できる（シンプル）\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2000-micnnicimhow-uber-goes\"\u003e20:00 ~\tmicnnicim\tHow Uber Goes\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e1500サービス、200M行がGoで書かれている\u003c/li\u003e\n\u003cli\u003eMONOREPOへの移行\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/uber-go/fx\"\u003euber-go/fx\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eアプリケーションフレームワーク\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eglue\n\u003cul\u003e\n\u003cli\u003e非公開ライブラリ\u003c/li\u003e\n\u003cli\u003eクリーンアーキテクチャ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://bazel.build/\"\u003eBazel\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003eOSSのビルドツール\u003c/li\u003e\n\u003cli\u003emonorepoに効く？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2015-upamunehow-i-write-http-web-services-after-eight-years\"\u003e20:15 ~\tupamune\tHow I Write HTTP Web Services After Eight Years\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eMat Ryer\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://gopherize.me/\"\u003ehttps://gopherize.me/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.com/statuscode/how-i-write-go-http-services-after-seven-years-37c208122831\"\u003ehttps://medium.com/statuscode/how-i-write-go-http-services-after-seven-years-37c208122831\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMaintainability\n\u003cul\u003e\n\u003cli\u003e最初から考えて作る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGlaceability\n\u003cul\u003e\n\u003cli\u003e視認性\u003c/li\u003e\n\u003cli\u003e理解しやすさ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch2 id=\"code-shuld-be-boring\"\u003eCode shuld be boring\u003c/h2\u003e\n\u003c/li\u003e\n\u003cli\u003eSelf Similar code\n\u003cul\u003e\n\u003cli\u003eコード内に似たコードがあると親しみやすくなる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2025-taqboztinygo\"\u003e20:25 ~\ttaqboz\tTinyGo\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eSmall is going big\u003c/li\u003e\n\u003cli\u003eLLVMを使ったGoコンパイラ\u003c/li\u003e\n\u003cli\u003eWebAssembly対応\u003c/li\u003e\n\u003cli\u003eGoroutineのサポートが不完全\u003c/li\u003e\n\u003cli\u003e使えない標準パッケージが多い（net系全滅）\u003c/li\u003e\n\u003cli\u003eIoTデバイス、マイクロコントローラーでの活用\u003c/li\u003e\n\u003cli\u003eDrone飛ばすデモ\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2040-hunterpki-for-gophers\"\u003e20:40 ~\thunter\tPKI for Gophers\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e暗号化の話\u003c/li\u003e\n\u003cli\u003eHardware Keys\n\u003cul\u003e\n\u003cli\u003eYubiKey\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2050-yukiitoworkshop-observability-in-go--socket-to-me-where-do-sockets-live-in-go\"\u003e20:50 ~\tyuki.ito\tWorkshop: Observability in Go \u0026amp; Socket to me: Where do Sockets live in Go?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e資料\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/110y/my-favorite-talks-at-gophercon-2019\"\u003ehttps://speakerdeck.com/110y/my-favorite-talks-at-gophercon-2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/freeformz/go-observability-workshop/\"\u003ehttps://github.com/freeformz/go-observability-workshop/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/110y/sockoptgo/\"\u003ehttps://github.com/110y/sockoptgo/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eObservability\n\u003cul\u003e\n\u003cli\u003eLog\n\u003cul\u003e\n\u003cli\u003elogrus 構造化出力できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMetric\n\u003cul\u003e\n\u003cli\u003eexpvar\u003c/li\u003e\n\u003cli\u003ePrometheus\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eTrace\n\u003cul\u003e\n\u003cli\u003eJaeger\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSocket Option\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"go-quiz\"\u003eGo Quiz\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e型厳密なのな。。\u003c/li\u003e\n\u003c/ul\u003e","tags":["go","event"],"title":"mercari.go"},{"categories":null,"objectID":"1cd19ae11d139765ab7282ec2f71afc0","permalink":"https://umemak.github.io/blog/posts/2019/08/18_rails6/","publish_date":"2019-08-18T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003eリリースされていたので、アップデートしてみる\n\u003ca href=\"https://weblog.rubyonrails.org/2019/8/15/Rails-6-0-final-release/\"\u003ehttps://weblog.rubyonrails.org/2019/8/15/Rails-6-0-final-release/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e対象\n\u003ca href=\"https://github.com/umemak/hello_app\"\u003ehttps://github.com/umemak/hello_app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGemfileを編集\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egem \u0026#39;rails\u0026#39;, \u0026#39;\u0026gt;=6.0.0\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003ebundle updateする環境を準備\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003edocker run -it -v `pwd`:/usr/src/work ruby bash\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003ebundle update\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eroot@5655bc438c4d:/usr/src/work# bundle update\nFetching gem metadata from https://rubygems.org/............\nFetching gem metadata from https://rubygems.org/.\nResolving dependencies....\nBundler could not find compatible versions for gem \u0026#34;railties\u0026#34;:\n  In Gemfile:\n    coffee-rails (= 4.2.2) was resolved to 4.2.2, which depends on\n      railties (\u0026gt;= 4.0.0)\n\n    jquery-rails (= 4.3.1) was resolved to 4.3.1, which depends on\n      railties (\u0026gt;= 4.2.0)\n\n    rails (\u0026gt;= 6.0.0) was resolved to 6.0.0, which depends on\n      railties (= 6.0.0)\n\n    sass-rails (= 5.0.6) was resolved to 5.0.6, which depends on\n      railties (\u0026gt;= 4.0.0, \u0026lt; 6)\n\n    web-console (= 3.5.1) was resolved to 3.5.1, which depends on\n      railties (\u0026gt;= 5.0)\n\nBundler could not find compatible versions for gem \u0026#34;spring\u0026#34;:\n  In Gemfile:\n    spring (= 2.0.2)\n\n    spring-watcher-listen (= 2.0.1) was resolved to 2.0.1, which depends on\n      spring (\u0026gt;= 1.2, \u0026lt; 3.0)\n\u003c/code\u003e\u003c/pre\u003eとりあえず、エラーになっているgemのバージョン指定に\u003ccode\u003e\u0026gt;=\u003c/code\u003eをつけてupdateできた。\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eroot@5655bc438c4d:/usr/src/work# rails -v\nRails 6.0.0\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e動作確認\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003erails s\n\u003c/code\u003e\u003c/pre\u003eexecjsでエラー。https://github.com/rails/execjs の通りにgemをインストール\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egem install execjs\n\u003c/code\u003e\u003c/pre\u003eまだエラー。JSの実行環境も必要らしいのでnodejsをインストール\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eapt update\napt install nodejs -y\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eroot@d02c06050dc6:/usr/src/work# rails s\n=\u0026gt; Booting Puma\n=\u0026gt; Rails 6.0.0 application starting in development \n=\u0026gt; Run `rails server --help` for more startup options\nPuma starting in single mode...\n* Version 3.9.1 (ruby 2.6.3-p62), codename: Private Caller\n* Min threads: 5, max threads: 5\n* Environment: development\n* Listening on tcp://0.0.0.0:3000\nUse Ctrl-C to stop\n\u003c/code\u003e\u003c/pre\u003e動いた！\nが、port開け忘れた。。。\ndocker再起動してもいいけどbundle install時間かかるし。。\u003c/li\u003e\n\u003cli\u003edocker commit\n別のターミナル開いて、イメージにタグつけて保存して起動しなおす\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ docker commit 5655bc438c4d rails6test\n$ docker run -it -p 3000:3000 -v `pwd`:/usr/src/work rails6test bash\nroot@d02c06050dc6:/usr/src/work# rails s\n=\u0026gt; Booting Puma\n=\u0026gt; Rails 6.0.0 application starting in development \n=\u0026gt; Run `rails server --help` for more startup options\nPuma starting in single mode...\n* Version 3.9.1 (ruby 2.6.3-p62), codename: Private Caller\n* Min threads: 5, max threads: 5\n* Environment: development\n* Listening on tcp://0.0.0.0:3000\nUse Ctrl-C to stop\n\u003c/code\u003e\u003c/pre\u003eできた。\u003c/li\u003e\n\u003cli\u003ehttp://127.0.0.1:3000\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e2019-08-18 02:08:23 +0000: Rack app error handling request { GET / }\n#\u0026lt;LoadError: Error loading the \u0026#39;sqlite3\u0026#39; Active Record adapter. Missing a gem it depends on? can\u0026#39;t activate sqlite3 (~\u0026gt; 1.4), already activated sqlite3-1.3.13. Make sure all dependencies are added to Gemfile.\u0026gt;\n\u003c/code\u003e\u003c/pre\u003eむ。。。\nGemfileのsqlite3もバージョン指定を緩める。\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eStarted GET \u0026#34;/\u0026#34; for 172.17.0.1 at 2019-08-18 02:19:05 +0000\nCannot render console from 172.17.0.1! Allowed networks: 127.0.0.0/127.255.255.255, ::1\n   (5.8ms)  SELECT sqlite_version(*)\nProcessing by ApplicationController#hello as HTML\n  Rendering html template\n  Rendered html template (Duration: 1.9ms | Allocations: 5)\nCompleted 200 OK in 39ms (Views: 30.3ms | ActiveRecord: 0.0ms | Allocations: 1383)\n\u003c/code\u003e\u003c/pre\u003eできた！\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/umemak/hello_app/commit/84cc280f3776cc72d85c9bac088f8ef50cd5eaf8\"\u003ehttps://github.com/umemak/hello_app/commit/84cc280f3776cc72d85c9bac088f8ef50cd5eaf8\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["rails"],"title":"Rails6を試す"},{"categories":null,"objectID":"5359425fdf0634d2b03e6809c8410a2d","permalink":"https://umemak.github.io/blog/posts/2019/08/04_golang_ghq/","publish_date":"2019-08-04T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e「改訂2版 みんなのGo言語」を買ったのでC101PAで試しながら読みすすめていた。\u003c/li\u003e\n\u003cli\u003eghqをインストールするところでエラー。\u003c/li\u003e\n\u003cli\u003eどうやらgoのバージョンを1.12以上にあげないとダメらしい。\u003c/li\u003e\n\u003cli\u003e先日パッケージでインストールしたgoは1.11.6だった。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/umemak/blog/blob/master/2019/07/17_chromebook_golang.md\"\u003e以前のやり方\u003c/a\u003eでインストールし直す\u003c/li\u003e\n\u003cli\u003e~/.bash_profile の \u003ccode\u003eGOROOT\u003c/code\u003e は \u003ccode\u003e/usr/local/go\u003c/code\u003e に変更してsourceする。\u003c/li\u003e\n\u003cli\u003e無事インストール完了。\u003c/li\u003e\n\u003c/ul\u003e","tags":["go"],"title":"ghqのインストール"},{"categories":null,"objectID":"ed66621277278c5ab4cfde9dc75a2b21","permalink":"https://umemak.github.io/blog/posts/2019/07/31_azure_devops/","publish_date":"2019-07-31T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://azure.microsoft.com/ja-jp/services/devops/\"\u003ehttps://azure.microsoft.com/ja-jp/services/devops/\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eこのリポジトリを対象にパイプラインを作成\u003c/li\u003e\n\u003cli\u003eパイプラインでHugoとか使ってpages更新できないかと\u003c/li\u003e\n\u003c/ul\u003e","tags":["Azure","DevOps"],"title":"Azure DevOpsを使ってみる"},{"categories":null,"objectID":"3066ca223640cc3b6ba4b04af76aae87","permalink":"https://umemak.github.io/blog/posts/2019/07/30_chromebook_vscode2/","publish_date":"2019-07-30T00:00:00Z","summary":"\u003cp\u003e昨日は空き容量が足りなくなってあきらめたので、今回は何もない状態からやってみる。\u003c/p\u003e\n\u003ch2 id=\"インストールしながら空き容量をチェック\"\u003eインストールしながら空き容量をチェック\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eLinuxを再インストールした直後\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vdb        5.5G  1.3G  3.9G  25% /\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eVSCodeのインストールしてdebファイル削除したあと\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vdb        5.5G  1.8G  3.4G  34% /\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003emozcインストール後\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vdb        5.5G  2.1G  3.1G  42% /\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003efonts-notoインストール後\u003c/p\u003e","tags":["chromebook","vscode"],"title":"Chromebook(C101PA)にVSCodeをインストールする２"},{"categories":null,"objectID":"0d5a319f83dde6f6055d910f1785e23e","permalink":"https://umemak.github.io/blog/posts/2019/07/30_chromebook_vscode3/","publish_date":"2019-07-30T00:00:00Z","summary":"\u003cp\u003eC101PAで一通りできたのでインテルCPUの機種でもやってみる\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eインストール開始\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vdb         18G  1.2G   15G   8% /\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e広い\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eaptの設定追加はしていない\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003egolang-1.11 が見つからなかったので設定追加した\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eVSCodeのパッケージファイルは公式から取得\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003efonts-notoまでインストール終わった時点での消費\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vdb         18G  1.7G   15G  11% /\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eC101PAのときより消費が少ない\u003c/p\u003e","tags":["chromebook","vscode"],"title":"ChromeBook(C223NA)にVSCodeをインストールする"},{"categories":null,"objectID":"9f58c1e5de6da57bf2f581c0dcbbbd1d","permalink":"https://umemak.github.io/blog/posts/2019/07/29_chromebook_vscode/","publish_date":"2019-07-29T00:00:00Z","summary":"\u003cp\u003e\u003ca href=\"https://qiita.com/kukita/items/b673bf6eba2cc91fc545\"\u003ehttps://qiita.com/kukita/items/b673bf6eba2cc91fc545\u003c/a\u003e こちらの記事を見ながら試してみた。\u003c/p\u003e\n\u003cp\u003emozcの辺りでストレージの空きが足りなくなって断念。\u003c/p\u003e\n\u003cp\u003e先にGoとかRubyとかDocker入れてたしそのせいか。\u003c/p\u003e","tags":["chromebook","vscode"],"title":"Chromebook(C101PA)にVSCodeをインストールする"},{"categories":null,"objectID":"d34094a1279f6593e798e6ed2fe126d8","permalink":"https://umemak.github.io/blog/posts/2019/07/21_chromebook_docker/","publish_date":"2019-07-21T00:00:00Z","summary":"\u003ch2 id=\"環境\"\u003e環境\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eC101PA\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"手順\"\u003e手順\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.docker.com/install/linux/docker-ce/debian/#install-using-the-repository\"\u003e公式の手順\u003c/a\u003eに従う\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt-get update\n$ sudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg2 \\\n    software-properties-common -y\n$ curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -\n$ sudo apt-key fingerprint 0EBFCD88\n$ sudo add-apt-repository \\\n   \u0026#34;deb [arch=arm64] https://download.docker.com/linux/debian \\\n   $(lsb_release -cs) \\\n   stable\u0026#34;\n$ sudo apt-get update\n$ sudo apt-get install docker-ce docker-ce-cli containerd.io -y\n$ sudo docker run hello-world\n\u003c/code\u003e\u003c/pre\u003eできた。\u003c/li\u003e\n\u003c/ul\u003e","tags":["chromebook","docker"],"title":"Chromebookにdockerインストール"},{"categories":null,"objectID":"34650804c21f51361d0c68b7d2338205","permalink":"https://umemak.github.io/blog/posts/2019/07/18_dena_go_2/","publish_date":"2019-07-18T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e2019/07/18 19:30-\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dena.connpass.com/event/133957/\"\u003ehttps://dena.connpass.com/event/133957/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"kiyotakanakashima--新ゲームサーバ基盤takashoでのgo言語活用事例の紹介--ゲームエンターテインメント事業本部\"\u003e@kiyotaka.nakashima / 新ゲームサーバ基盤TakashoでのGo言語活用事例の紹介 / ゲーム・エンターテインメント事業本部\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eSakasho\n\u003cul\u003e\n\u003cli\u003e共通ゲームサーバー（複数タイトルで相乗り）\u003c/li\u003e\n\u003cli\u003eプレイヤーデータの管理\u003c/li\u003e\n\u003cli\u003e課金系\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSakasyoの課題\n\u003cul\u003e\n\u003cli\u003e相乗りによる制約\u003c/li\u003e\n\u003cli\u003e変更の影響大\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eTakasho\n\u003cul\u003e\n\u003cli\u003eWebサバーフレームワーク\u003c/li\u003e\n\u003cli\u003eステートレスなAPI\u003c/li\u003e\n\u003cli\u003e1サーバー1クライアント\u003c/li\u003e\n\u003cli\u003eGCP(GAE)前提(Terraformで構築)\u003c/li\u003e\n\u003cli\u003e共通機能も提供\u003c/li\u003e\n\u003cli\u003eクライアント側はC#\u003c/li\u003e\n\u003cli\u003eサーバ側はGo\n\u003cul\u003e\n\u003cli\u003e少ない学習コストで高いパフォーマンスと安定性\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRPCサーバ\n\u003cul\u003e\n\u003cli\u003enet/httpベース\u003c/li\u003e\n\u003cli\u003egRPCの独自実装（GAEでgRPCがサポートされていなかった）\u003c/li\u003e\n\u003cli\u003eprotoスキーマからコード生成\u003c/li\u003e\n\u003cli\u003eDBテーブルまわりもjsonで定義して生成\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"toku_bass-次世代タクシー配車サービスmovにおけるテスト事例紹介--オートモーティブ事業本部\"\u003e@toku_bass /次世代タクシー配車サービス「MOV」におけるテスト事例紹介 / オートモーティブ事業本部\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGAE / CircleCI / chatbot E2E\u003c/li\u003e\n\u003cli\u003e方針\n\u003cul\u003e\n\u003cli\u003eテスト対象以外の暗黙のデータに依存しない\u003c/li\u003e\n\u003cli\u003eテスト全体に関わるfixtureを使わない\n\u003cul\u003e\n\u003cli\u003eマスターデータはOK\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e並列でテストを実行\n\u003cul\u003e\n\u003cli\u003euser_idなどの固定値を書かないようにする\u003c/li\u003e\n\u003cli\u003egithub.com/bxcodec/faker\u003c/li\u003e\n\u003cli\u003eprimary key をランダム生成してかぶる対策\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003etesterator\n\u003cul\u003e\n\u003cli\u003eGAEのテストサーバーを立ち上げっぱなしにしてくれる\u003c/li\u003e\n\u003cli\u003e起動には3秒くらいかかる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003epstest\n\u003cul\u003e\n\u003cli\u003eCloud PubSubの公式ライブラリのテスト方法\u003c/li\u003e\n\u003cli\u003eどうやってテストしたらよいかわからなければ公式を見に行く\n\u003cul\u003e\n\u003cli\u003e公式もテストできていないことも・・\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"kurikei--descヘルスケアにおけるgo活用事例の紹介--descヘルスケアサービス企画開発部\"\u003e@kurikei / DeSCヘルスケアにおけるGo活用事例の紹介 / DeSCヘルスケアサービス企画開発部\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGCP(GAE/Cloud Firestore/Cloud Functions/BigQuery) / CircleCI / OpenAPI 3\u003c/li\u003e\n\u003cli\u003eレイヤードアーキテクチャ（+DIP）\n\u003cul\u003e\n\u003cli\u003eレイヤーで分離する→各レイヤーで関数を定義する→コード量が増える→テストも増える\u003c/li\u003e\n\u003cli\u003egomockを使う\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e暗号化の手法\n\u003cul\u003e\n\u003cli\u003eDBの保存／取得時に透過的に処理する\u003c/li\u003e\n\u003cli\u003eエンベロープ暗号\n\u003cul\u003e\n\u003cli\u003eカラム暗号化の際に使う\u003c/li\u003e\n\u003cli\u003e鍵を暗号化する鍵(KEK)とデータを暗号化する鍵(DEK)の２種類を使う\u003c/li\u003e\n\u003cli\u003eKEKをKMSで管理して、DEKはデータと一緒に保存\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["go","event"],"title":"DeNA.go"},{"categories":null,"objectID":"d84985b2a3d282bdc6d3788a0e2952e8","permalink":"https://umemak.github.io/blog/posts/2019/07/18_macbookpro_restore/","publish_date":"2019-07-18T00:00:00Z","summary":"\u003cp\u003eChromebook買ってからほとんど出番ないので売ってしまおうと。\u003c/p\u003e\n\u003cp\u003eその前にディスクの初期化・・・SSDの場合ってHDDと同じ方法でいいんだっけ？という話。\u003c/p\u003e\n\u003cp\u003e参考：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://support.apple.com/ja-jp/HT201065\"\u003eMac を売却、譲渡、下取りに出す前にやっておくべきこと\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://support.apple.com/ja-jp/HT208496\"\u003eMac のディスクを消去する方法\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.lifehacker.jp/2014/06/140601erase_solid_state.html\"\u003eMac OS Xで、SSDのデータを安全に消去する方法\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e結論としては、HDDと同じではない。消去のオプションがそもそも出てこない（何回書き込むとか選ぶやつ）。\u003c/p\u003e","tags":["mac"],"title":"MacbookPro初期化"},{"categories":null,"objectID":"5b280c32f8064ec46ab0989f93a476b0","permalink":"https://umemak.github.io/blog/posts/2019/07/17_chromebook_golang/","publish_date":"2019-07-17T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003eapt-get だと最新版が入らないので、1.13に備えて最新版をインストールする手順を確認しておく。\u003c/li\u003e\n\u003cli\u003eC101PAのOP1はARM系CPUなのでarm64用のファイルを使用する。\u003c/li\u003e\n\u003cli\u003eC223NAはintel入ってるのでx86-64でいけるはず。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"環境\"\u003e環境\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eC101PA\u003c/li\u003e\n\u003cli\u003eLinux(ベータ)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"手順\"\u003e手順\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/golang/go/wiki/ChromeOS\"\u003ehttps://github.com/golang/go/wiki/ChromeOS\u003c/a\u003e を参考に進める\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/dl/\"\u003ehttps://golang.org/dl/\u003c/a\u003e から go1.12.7.linux-arm64.tar.gz をダウンロード\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ wget wget https://dl.google.com/go/go1.12.7.linux-arm64.tar.gz\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003eチェックサム確認\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sha256sum go1.12.7.linux-arm64.tar.gz \n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003eファイル展開\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo tar xpvf go1.12.7.linux-arm64.tar.gz -C /usr/local\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003eバージョン確認\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ /usr/local/go/bin/go version\ngo version go1.12.7 linux/arm64\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003eワークスペース作成\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo mkdir /usr/local/go/work\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003eパス設定\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ export GOPATH=\u0026#34;/usr/local/go/work\u0026#34;\n$ export PATH=\u0026#34;${PATH}:/usr/local/go/bin:${GOPATH}/bin\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e一応、\u003ccode\u003e~/.bash_profile\u003c/code\u003eにも同等の内容を記載しておく\u003c/li\u003e\n\u003cli\u003e動作確認\n\u003cul\u003e\n\u003cli\u003eファイル作成\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo vim /usr/local/go/src/hello.go\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003eビルド\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ go install hello\n  can\u0026#39;t load package: package hello: cannot find package \u0026#34;hello\u0026#34; in any of:\n    /usr/local/go/src/hello (from $GOROOT)\n    /usr/local/go/work/src/hello (from $GOPATH)\n\u003c/code\u003e\u003c/pre\u003eエラー。。。\u003c/li\u003e\n\u003cli\u003erun\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ go run /usr/local/go/src/hello.go \nHello, Chrome OS!\n\u003c/code\u003e\u003c/pre\u003eとりあえず実行できたから良しとしておく。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["chromebook","go"],"title":"Chromebookにgoの最新版をインストール"},{"categories":null,"objectID":"9b1921e4548ae8bb461f4885e27b6d0c","permalink":"https://umemak.github.io/blog/posts/2019/07/17_chromebook_linux/","publish_date":"2019-07-17T00:00:00Z","summary":"\u003cp\u003eRails入れたりしてたらOSが不安定になった感。\nスリープ中に電源オフになっていることが多々あり。\nLinux再インストールしてもだめな感じ。\u003c/p\u003e\n\u003cp\u003e今度、本体初期化してみよう。\u003c/p\u003e","tags":["chromebook"],"title":"chromebookのlinux"},{"categories":null,"objectID":"99486833278a7fca116f7030140dfd8c","permalink":"https://umemak.github.io/blog/posts/2019/07/17_mercari_go_9/","publish_date":"2019-07-17T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e2019/07/17 19:30-21:30\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://mercari.connpass.com/event/137488/\"\u003ehttps://mercari.connpass.com/event/137488/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tottiegopher-ライブドローイングのご説明\"\u003e@tottie\tGopher ライブドローイングのご説明\u003c/h2\u003e\n\u003ch2 id=\"reroreroprotoactor-goでpregelを作った話\"\u003e@rerorero\tprotoactor-goでPregelを作った話\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eグラフプロセッシングの話\u003c/li\u003e\n\u003cli\u003eMap/Reduceの課題を解決するPregel（プリゲル）フレームワーク\u003c/li\u003e\n\u003cli\u003eアクターモデル\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"knsh14メルペイでの残高管理の話\"\u003e@knsh14\tメルペイでの残高管理の話\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBalance Service\u003c/li\u003e\n\u003cli\u003egRPC, GKE, Spanner, Go\u003c/li\u003e\n\u003cli\u003e全体設計\n\u003cul\u003e\n\u003cli\u003eクリーンアーキテクチャベース\u003c/li\u003e\n\u003cli\u003eViewなし\n\u003cul\u003e\n\u003cli\u003eInfra Layerで変換して返す\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eトランザクション\n\u003cul\u003e\n\u003cli\u003eUseCaseそうのInteractorで\u003c/li\u003e\n\u003cli\u003e全体のロールバックが楽\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDB\n\u003cul\u003e\n\u003cli\u003e標準パッケージは使っていない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAPIの設計\n\u003cul\u003e\n\u003cli\u003e各種残高の増減機能\u003c/li\u003e\n\u003cli\u003e種類にかかわらず同じインターフェースを提供したい\u003c/li\u003e\n\u003cli\u003eロールバックしやすくしたい\u003c/li\u003e\n\u003cli\u003e組み合わせのテストが大変\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e冪等性\n\u003cul\u003e\n\u003cli\u003eどのAPIがリトライされても大丈夫なように作る\u003c/li\u003e\n\u003cli\u003e参照系はあまり気にしていない\u003c/li\u003e\n\u003cli\u003e取引IDでチェックしている\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eデータの整合性\n\u003cul\u003e\n\u003cli\u003e取引履歴が重要\n\u003cul\u003e\n\u003cli\u003e取引レコードから算出\u003c/li\u003e\n\u003cli\u003e取引後の残高スナップショット\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eすべての処理が成功したときに履歴テーブルにコミットする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"akkiereadable-code-in-go\"\u003e@akkie\tReadable code in Go\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eコードを読みやすくするために\u003c/li\u003e\n\u003cli\u003e読みやすいコードとは\n\u003cul\u003e\n\u003cli\u003e他の人（本人含む）が最短時間で理解できるコード\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eコメントに監督としての感想を書く\u003c/li\u003e\n\u003cli\u003eコメントでコードをグループ分けする（テストコード）\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tenntennthe-go-playgroundをコマンドラインから扱う\"\u003e@tenntenn\tThe Go Playgroundをコマンドラインから扱う\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003etxtar（テキストアーカイブ）形式\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e-- ファイル名 --\u003c/code\u003e で区切る\u003c/li\u003e\n\u003cli\u003eplaygroung上でタブ分けしてくれるchrome拡張あり\u003c/li\u003e\n\u003cli\u003einternalパッケージ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tottiegopher-イラスト発表\"\u003e@tottie\tGopher イラスト発表\u003c/h2\u003e\n\u003ch2 id=\"感想\"\u003e感想\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e絵がかけるってすごい\u003c/li\u003e\n\u003cli\u003e質疑応答の内容が理解できず、まだまだ勉強不足だと感じた\u003c/li\u003e\n\u003c/ul\u003e","tags":["go","event"],"title":"mercari.go"},{"categories":null,"objectID":"e1ba4a92e2702a5c3bd919f93c851c5e","permalink":"https://umemak.github.io/blog/posts/2019/07/13_chromebook_rails/","publish_date":"2019-07-13T00:00:00Z","summary":"\u003ch2 id=\"狙い\"\u003e狙い\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eたまにあるgemの脆弱性対応、cloud9使わずにできるようにならないか？\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"環境\"\u003e環境\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eC223NAのLinux(beta)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"実践\"\u003e実践\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eruby と関連パッケージインストール\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt-get install ruby ruy-dev zlib1g-dev build-essential patch postgresql libpq-dev libsqlite3-dev nodejs\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eruby\u003c/code\u003e以外のパッケージは\u003ccode\u003ebundle install\u003c/code\u003eや\u003ccode\u003erails s\u003c/code\u003e時に必要。\u003c/li\u003e\n\u003cli\u003e参考：https://technotes.tt4living.com/ruby-on-rails/install-ruby-on-rails\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epostgresql\u003c/code\u003eは無くても良いかも。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003erails と bundler インストール\u003c/p\u003e","tags":["chromebook","rails"],"title":"chromebookにrailsをインストール"},{"categories":null,"objectID":"52364a1cc0c4d0a39fac850ad4dca7e1","permalink":"https://umemak.github.io/blog/posts/2019/06/29_chromebook_c101pa/","publish_date":"2019-06-29T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e起動直後はOSが古い→ChromeOSバージョンアップ実施\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eGoogleアンケートアプリが対応していない\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eC223NAも再インストールしたらインストールできなくなっていた。。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eKindleアプリインストールできた\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e全体的にC223NAに比べて遅い（知ってた）\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e今回は開発者モードにしないで普通にLinux有効化した\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ebrewインストール\u003c/p\u003e","tags":["C101PA","chromebook"],"title":"C101PA届いた"},{"categories":null,"objectID":"19065834fd2fa8e1bfa9b483b5c0db74","permalink":"https://umemak.github.io/blog/posts/2019/06/20_cicd_test_night_4/","publish_date":"2019-06-20T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e2019/06/20 19:00-21:00\u003c/li\u003e\n\u003cli\u003eDeNA\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"macstadium\"\u003eMacStadium\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDeNAのひと\u003c/li\u003e\n\u003cli\u003eMac（物理）のホスティングサービス\u003c/li\u003e\n\u003cli\u003e1ヶ月単位の前払い\u003c/li\u003e\n\u003cli\u003eVNC or SSHで接続\u003c/li\u003e\n\u003cli\u003eGithubへの接続はAWSでVPNサーバーを立ててそこ経由にまとめている\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"cicdパイプラインを最速で組み立てる\"\u003eCI/CDパイプラインを最速で組み立てる\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003efreeeのひと\u003c/li\u003e\n\u003cli\u003ecircleciはdockerイメージがある。\u003c/li\u003e\n\u003cli\u003e依存関係を解決したDocekrイメージを先に用意しておく\u003c/li\u003e\n\u003cli\u003ecircleci orbs\u003c/li\u003e\n\u003cli\u003eciとcdは適切に分離する\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"iosのci環境構築\"\u003eiOSのCI環境構築\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eVoicyのひと\u003c/li\u003e\n\u003cli\u003eDanger レビューツール\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"swift-travisci\"\u003eSwift TravisCI\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eはてなのひと\u003c/li\u003e\n\u003cli\u003eswift-docker\n\u003cul\u003e\n\u003cli\u003eローカルでbuildできる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tekton\"\u003eTEKTON\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003efreeeのひと\u003c/li\u003e\n\u003cli\u003eCD.FOUNDATION\u003c/li\u003e\n\u003cli\u003eもともとはKnativeのサブプロジェクト\u003c/li\u003e\n\u003cli\u003eK8Sのカスタムリソースを使う\u003c/li\u003e\n\u003cli\u003eCI/CDの実行エンジンとしての活用\u003c/li\u003e\n\u003cli\u003eまだこれから\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"e2eテストのパイプライン\"\u003eE2Eテストのパイプライン\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eJapanTaxiのひと\u003c/li\u003e\n\u003cli\u003ebitrise\u003c/li\u003e\n\u003cli\u003eappium\u003c/li\u003e\n\u003cli\u003eTestRail\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"azure-pipelines\"\u003eAzure Pipelines\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eSony Interactive Entertainmentのひと\u003c/li\u003e\n\u003cli\u003enpm install -g appium\u003c/li\u003e\n\u003cli\u003eself.driver.start_recordingscreen()\n\u003cul\u003e\n\u003cli\u003ebrew install ffmpeg\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["test","ci/cd","event"],"title":"CI/CD Test Night"},{"categories":null,"objectID":"2aaec9f98ac11a81853b5030bff8a464","permalink":"https://umemak.github.io/blog/posts/2019/06/19_gcpug_tokyo_next_extended_2019_infra_day/","publish_date":"2019-06-19T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e2019/06/19(Wed)\u003c/li\u003e\n\u003cli\u003e19:00 〜 22:00\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"next-introduction\"\u003eNext Introduction\u003c/h2\u003e\n\u003ch2 id=\"next-189-update-infra-misc\"\u003eNext 189 UPDATE Infra misc\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAnthos\n\u003cul\u003e\n\u003cli\u003e複数のコンポーネントの集合体\u003c/li\u003e\n\u003cli\u003e去年はCSPという名前\u003c/li\u003e\n\u003cli\u003eGKEとオンプレをまとめて扱うみたいな\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOSSベンダとのパートナーシップ\n\u003cul\u003e\n\u003cli\u003e基本、Googleのクローズドソースだった\u003c/li\u003e\n\u003cli\u003eElasticとかMongoDBとか\u003c/li\u003e\n\u003cli\u003e今年中くらいにリリース？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGoogle Cloud Storage\n\u003cul\u003e\n\u003cli\u003e新しいタイプ Ice Cold Archive\u003c/li\u003e\n\u003cli\u003eNearline, coldline のさらに安いやつ\u003c/li\u003e\n\u003cli\u003eまだ保存料金しか発表されていない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCloud Firestore Collection group queries\n\u003cul\u003e\n\u003cli\u003e複数のSUb CollectionをまとめてQueryできるようになった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCloud Bigtable Multi Region Replica\n\u003cul\u003e\n\u003cli\u003e別リージョンのクラスタを相互に同期できるようになる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMicrosoft SQL Server on Cloud SQL\n\u003cul\u003e\n\u003cli\u003eaws RDS的な\u003c/li\u003e\n\u003cli\u003eアルファバージョン\u003c/li\u003e\n\u003cli\u003eActiveDirectoryのフルマネージドも出た\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePolicy Intelligence\n\u003cul\u003e\n\u003cli\u003ePolicy(awsのrole?)の管理補助ツール\u003c/li\u003e\n\u003cli\u003e使われていない権限（削除しても良くない？）を見つけてくれる\u003c/li\u003e\n\u003cli\u003eどの設定で403になるのか調査してくれる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"service-networking\"\u003eService Networking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003etraffic director\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eコンテナである必要はない\u003c/li\u003e\n\u003cli\u003eユーザーに使いリージョンにトラフィックを流したりできる（Istioではできない）\n\u003cul\u003e\n\u003cli\u003eまだアルファバージョン\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eCloud Service Mesh\n\u003cul\u003e\n\u003cli\u003eStackdriverと連携もできる\u003c/li\u003e\n\u003cli\u003eこれもプライベートアルファバージョン\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIstio On GKE\n\u003cul\u003e\n\u003cli\u003emanaged istio\u003c/li\u003e\n\u003cli\u003eGKEのバージョンとIstioのバージョンは密結合\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ekeywords\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003einstagramはモノリス\n\u003cul\u003e\n\u003cli\u003e世界最大のpythonプロダクト？\u003c/li\u003e\n\u003cli\u003eEnvoy for iOS and android\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003emutual TLS\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"パネルディスカッション\"\u003eパネルディスカッション\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eService Mesh Interface(SMI)\u003c/li\u003e\n\u003cli\u003ePostgresOperator\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://skywalking.apache.org/\"\u003ehttps://skywalking.apache.org/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eOracle RAC をクラウドで使うのは無理\u003c/li\u003e\n\u003cli\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["GCP","event"],"title":"GCPUG Tokyo Next Extended 2019 Infra Day"},{"categories":null,"objectID":"8bed264bd361eae0cb8c1f30efbeeba9","permalink":"https://umemak.github.io/blog/posts/2019/05/18_gocon/","publish_date":"2019-05-18T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://gocon.jp/\"\u003ehttps://gocon.jp/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e2019/05/18(土) 10:00-19:00\u003c/li\u003e\n\u003cli\u003eリクルートライフスタイル\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"まとめ\"\u003eまとめ\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eエラーハンドリングはまだ各社試行錯誤している印象\u003c/li\u003e\n\u003cli\u003eコンテナやるならGoわかると便利\u003c/li\u003e\n\u003cli\u003e英語もっとわかるようにならないとだめだ\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"keynote\"\u003eKeynote\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eパッケージのプロキシとDBの話\u003c/li\u003e\n\u003cli\u003e英語だったので言ってること半分もわからなかった\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"b1-s-how-a-not-the-greatest-engineer-achieved-his-first-contribution-to-go\"\u003eB1 (S): How a “not the greatest engineer” achieved his first contribution to Go\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/yotak/how-a-not-the-greatest-engineer-became-a-go-contributor\"\u003ehttps://speakerdeck.com/yotak/how-a-not-the-greatest-engineer-became-a-go-contributor\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eコントリビュートしようぜって話\u003c/li\u003e\n\u003cli\u003eこれも英語での発表だった\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"b2-s-エラー設計についてdesigning-errors\"\u003eB2 (S): エラー設計について/Designing Errors\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eエラーの分類とどう処理するか\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"h3-s-標準パッケージのみで大量のpng画像をいかに高速に処理するか\"\u003eH3 (S): 標準パッケージのみで大量のPNG画像をいかに高速に処理するか\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://go-talks.appspot.com/github.com/cia-rana/go-png-bench/doc/slide/gocon2019.slide#1\"\u003ehttps://go-talks.appspot.com/github.com/cia-rana/go-png-bench/doc/slide/gocon2019.slide#1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003epprofで計測し、ボトルネックを絞り込んでから対策を打つことが大事\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a4-s-design-considerations-for-container-based-go-applications\"\u003eA4 (S): Design considerations for container-based Go applications\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/hgsgtk/design-considerations-for-container-based-go-application\"\u003ehttps://speakerdeck.com/hgsgtk/design-considerations-for-container-based-go-application\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e開始時間ギリギリに行ったらスクリーン見える場所が確保できなかった\u003c/li\u003e\n\u003cli\u003e12factorsに加えて、pivotalとRedhatにもそういうのがあるらしい\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://content.pivotal.io/blog/beyond-the-twelve-factor-app\"\u003eBeyond the Twelve-Factor App\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.redhat.com/cms/managed-files/cl-cloud-native-container-design-whitepaper-f8808kc-201710-a4-ja.pdf\"\u003eコンテナベース・アプリケーションの設計原則\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"h5-l-writing-go-analyses-with-goanalysis-from-go-team\"\u003eH5 (L): Writing Go Analyses with go/analysis (from Go Team)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/matloob/analysistalk/blob/master/presentations/tokyo.key\"\u003ehttps://github.com/matloob/analysistalk/blob/master/presentations/tokyo.key\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e英語に加えて、そもそもの課題感が把握できてなかったので理解度低\u003c/li\u003e\n\u003cli\u003e発表中にMacの電池が切れたりカーネルパニック起こしたり\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"h6-s-dive-into-buildkit-llb-with-go\"\u003eH6 (S): Dive into Buildkit LLB with Go\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://speakerdeck.com/po3rin/dive-into-buildkit-llb-with-go\"\u003ehttps://speakerdeck.com/po3rin/dive-into-buildkit-llb-with-go\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDockerfileの解析まわり\u003c/li\u003e\n\u003cli\u003e使いこなせれば夢が広がりそう\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"h8-l-building-modules-discovery-from-go-team\"\u003eH8 (L): Building Modules Discovery (from Go Team)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e使いたいモジュールを探して比較検討しての手間を解消するサービス\u003c/li\u003e\n\u003cli\u003e公式？\u003c/li\u003e\n\u003c/ul\u003e","tags":["go","event"],"title":"Go Conference 2019 Spring"},{"categories":null,"objectID":"b1f5707ccf61b185bf8f4374c5cc988b","permalink":"https://umemak.github.io/blog/posts/2019/02/09_shoeisha_matsuri/","publish_date":"2019-02-09T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003eKindle版をいくつか購入。読み切るのはいつになるか。\n\u003cul\u003e\n\u003cli\u003eカイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで\u003c/li\u003e\n\u003cli\u003e達人に学ぶSQL徹底指南書 第2版 初級者で終わりたくないあなたへ\u003c/li\u003e\n\u003cli\u003eエリック・エヴァンスのドメイン駆動設計\u003c/li\u003e\n\u003cli\u003e実践ドメイン駆動設計\u003c/li\u003e\n\u003cli\u003eエッセンシャル スクラム\u003c/li\u003e\n\u003cli\u003eアジャイル開発とスクラム 顧客・技術・経営をつなぐ協調的ソフトウェア開発マネジメント\u003c/li\u003e\n\u003cli\u003eずっと受けたかった要求分析の基礎研修\u003c/li\u003e\n\u003cli\u003eアジャイル時代のオブジェクト脳のつくり方 Rubyで学ぶ究極の基礎講座\u003c/li\u003e\n\u003cli\u003eシステム開発のための見積りのすべてがわかる本\u003c/li\u003e\n\u003cli\u003eSCRUM BOOT CAMP THE BOOK\u003c/li\u003e\n\u003cli\u003eスターティングGo言語\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["book"],"title":"【50%OFF】翔泳社祭"},{"categories":null,"objectID":"1007c19edc3e2050dbf668b81dea41e6","permalink":"https://umemak.github.io/blog/posts/2019/01/06_gcp_exams/","publish_date":"2019-01-06T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cloud.google.com/certification/cloud-architect?hl=ja\"\u003ehttps://cloud.google.com/certification/cloud-architect?hl=ja\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e模擬試験受けてみた。\u003c/li\u003e\n\u003cli\u003e20問中８問正解。本試験受けるのはもっと勉強してからにしないとダメだ。\u003c/li\u003e\n\u003c/ul\u003e","tags":["GCP"],"title":"GCP認定資格 模試"},{"categories":null,"objectID":"ecfbaef137ae99ae91eb33d5f9aad57f","permalink":"https://umemak.github.io/blog/posts/2018/12/22_regist_azure/","publish_date":"2018-12-22T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e今更ながらしてみた。\u003c/li\u003e\n\u003cli\u003eGCPとAWSと比べてみたい。\u003c/li\u003e\n\u003cli\u003eAzureにもCloud Shellがあつのか。しかもこっちはbashとPowerShellが選べる。（そしてbashを選ぶ\u003c/li\u003e\n\u003cli\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ uname -a\n Linux cc-210432c9-744568d74f-z58nc 4.15.0-1035-azure #36~16.04.1-Ubuntu SMP Fri Nov 30 15:25:49 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n$ ruby -v\n ruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-linux]\n$ go version\n go version go1.9.4 linux/amd64\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003erubyちょっと古い\u003c/li\u003e\n\u003c/ul\u003e","tags":["Azure"],"title":"Azure登録"},{"categories":null,"objectID":"d2a80c1576b7b8b93d82b940c21f5191","permalink":"https://umemak.github.io/blog/posts/2018/12/22_regist_gcp/","publish_date":"2018-12-22T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e今更ながら登録してみた。\u003c/li\u003e\n\u003cli\u003eKYASH使えないのね。\u003c/li\u003e\n\u003cli\u003eブラウザからシェルが使えるCloud Shellがなんかいい。AWSだとCloud9で環境作ればできるけど、そこまで必要ではないときに便利かも。\u003c/li\u003e\n\u003cli\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ uname -a\nLinux cs-6000-devshell-vm-f3d2cb8f-de38-48b2-8d5f-c83297b50ed4 4.14.33+ #1 SMP Sat Aug 11 08:05:16 PDT 2018 x86_64 GNU/Linux \n$ ruby -v ruby 2.5.3p105 (2018-10-18 revision 65156) [x86_64-linux] \n$ go version go version go1.11 linux/amd64\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["GCP"],"title":"GCP登録"},{"categories":null,"objectID":"2b71abe224f8a264fb8af0ef58126560","permalink":"https://umemak.github.io/blog/posts/2018/11/23_booth_techbook/","publish_date":"2018-12-01T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://booth.pm/en/items/706959\"\u003eClean Code for Rails\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://booth.pm/en/items/1040359\"\u003eMicroservices architecture よろず本 その二\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://booth.pm/en/items/1073764\"\u003eネコを支える技術 - 電子工作ではじめるIoTでスマートな猫暮らし-\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://booth.pm/en/items/825879\"\u003e#マンガでわかるDocker ① 〜概念・基本コマンド編〜 【ダウンロード版】 #技術書典 4\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://booth.pm/en/items/1036317\"\u003e#マンガでわかるDocker ② 〜開発環境を作ろう編〜 #技術書典 5 【ダウンロード版】\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://booth.pm/en/items/392260\"\u003eわかる！ドメイン駆動設計 ～もちこちゃんの大冒険～【C91新刊】\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://booth.pm/en/items/812516\"\u003e【ダウンロード版】DNSをはじめよう　～基礎からトラブルシューティングまで～\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["book"],"title":"BOOTHで買い物"},{"categories":null,"objectID":"37a8c89a5be6d5decf564a441474df84","permalink":"https://umemak.github.io/blog/posts/2018/11/16_udpate_rack/","publish_date":"2018-11-16T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eまたGitHubからメール。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e今回は別件で作ってあったCloud9があったのでC223NA使ってそこで作業。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDockerが入っていたので、前回の手順ほぼそのままで行けた。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003egit config --global user.name\u003c/code\u003e と \u003ccode\u003euser.email\u003c/code\u003e は変更しないと \u003ccode\u003eEC2 Default User\u003c/code\u003e で更新されてしまう。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eブラウザだけで作業完結できる＆ローカルPCのスペック関係ないので便利。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["ruby"],"title":"Rackアップデート"},{"categories":null,"objectID":"81ab79701ec926a792cdd5b94f273539","permalink":"https://umemak.github.io/blog/posts/2018/11/03_update_loofah/","publish_date":"2018-11-03T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eGitHubからメールきた\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eKnown moderate severity security vulnerability detected in loofah \u0026lt; 2.2.3 defined in Gemfile.lock.\nGemfile.lock update suggested: loofah ~\u0026gt; 2.2.3.\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e作ったときのCloud9環境は削除してしまったので、Macローカルで更新する。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e対象リポジトリをclone。\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ git clone https://github.com/umemak/sample_app.git\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003ebundle installで更新\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ bundle install\n\nFetching gem metadata from https://rubygems.org/.........\n\nactivesupport-5.1.6 requires ruby version \u0026gt;= 2.2.2, which is incompatible with the current version, ruby2.1.9p490\n\u003c/code\u003e\u003c/pre\u003eできない\u003c/li\u003e\n\u003cli\u003edockerで\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ docker run -it -v `pwd`:/home/k ruby bash\n\nroot@bf0de34089b9:/# cd /home/k\n\nroot@bf0de34089b9:/home/k# bundle install\n\nFetching gem metadata from https://rubygems.org/.........\n\n（中略）\n\nBundle complete! 21 Gemfile dependencies, 82 gems now installed.\n\nBundled gems are installed into `/usr/local/bundle`\n\nroot@bf0de34089b9:/home/k# grep loofah Gemfile.lock\n\n    loofah (2.2.2)\n\n      loofah (~\u0026gt; 2.2, \u0026gt;= 2.2.2)\n\u003c/code\u003e\u003c/pre\u003eあがってない\u003c/li\u003e\n\u003cli\u003eupdateじゃないとだめらしい\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eroot@bf0de34089b9:/home/k# bundle update\n\nFetching gem metadata from https://rubygems.org/.........\n\nFetching gem metadata from https://rubygems.org/.\n\nResolving dependencies...\n\nUsing rake 12.3.1\n\n（中略）\n\nUsing web-console 3.5.1\n\nBundle updated!\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e確認\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eroot@bf0de34089b9:/home/k# grep loofah Gemfile.lock\n\n    loofah (2.2.3)\n\n      loofah (~\u0026gt; 2.2, \u0026gt;= 2.2.2)\n\u003c/code\u003e\u003c/pre\u003eOK。\u003c/li\u003e\n\u003cli\u003eDockerからexitしてGitHub更新。\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ git commit -am \u0026#34;update loofah\u0026#34;\n\n[master 4d2d9c3] update loofah\n\n2 files changed, 6 insertions(+), 3 deletions(-)\n\n$ git push origin HEAD\n\nCounting objects: 4, done.\n\nDelta compression using up to 8 threads.\n\nCompressing objects: 100% (4/4), done.\n\nWriting objects: 100% (4/4), 423 bytes | 423.00 KiB/s, done.\n\nTotal 4 (delta 3), reused 0 (delta 0)\n\nremote: Resolving deltas: 100% (3/3), completed with 3 local objects.\n\nTo https://github.com/umemak/sample_app.git\n\n   61a32a4..4d2d9c3  HEAD -\u0026gt; master\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["ruby"],"title":"loofahアップデート"},{"categories":null,"objectID":"3ce3acc74f3314288d474f5574c5ffa5","permalink":"https://umemak.github.io/blog/posts/2018/11/02_aws_devday/","publish_date":"2018-11-02T00:00:00Z","summary":"\u003cul\u003e\n\u003cli\u003e3日間通った証\n\u003cfigure class=\"center\"\u003e\u003cimg src=\"../img_7527.jpg\" width=\"320\" height=\"640\"\u003e\u003cfigcaption\u003e\n        \u003ch4\u003eシール３枚\u003c/h4\u003e\n      \u003c/figcaption\u003e\n  \u003c/figure\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["aws","event"],"title":"AWS Dev Day Tokoyo 2018"},{"categories":null,"objectID":"8c81733a022c63f034be7fa6f62af3ad","permalink":"https://umemak.github.io/blog/search/","publish_date":"0001-01-01T00:00:00Z","summary":"\u003chtml\u003e\n  \u003chead\u003e\n    \u003cstyle type=text/css\u003eimg.wp-smiley,img.emoji{display:inline!important;border:none!important;box-shadow:none!important;height:1em!important;width:1em!important;margin:0 .07em!important;vertical-align:-.1em!important;background:0 0!important;padding:0!important}\u003c/style\u003e\n    \u003clink rel=stylesheet href=/blog/css/style.css type=text/css media=all\u003e\n    \u003clink rel=stylesheet href=/blog/css/custom.css type=text/css media=all\u003e\n    \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/instantsearch.js@2.6.3/dist/instantsearch.min.css\"\u003e\n    \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/instantsearch.js@2.6.3/dist/instantsearch-theme-algolia.min.css\"\u003e\n  \u003c/head\u003e\n\u003cbody\u003e\n  \u003cscript src=\"https://cdn.jsdelivr.net/npm/instantsearch.js@2.6.3\"\u003e\u003c/script\u003e\n\u003cdiv id=\"search-box\"\u003e\n    \u003c!-- 検索ボックス用の空DOM --\u003e\n\u003c/div\u003e\n \n\u003cul id=\"hits\"\u003e\n    \u003c!-- 検索結果用のDOM、各結果をliで置くためulにしている --\u003e\n\u003c/ul\u003e\n \n\u003cdiv id=\"pagination\"\u003e\n    \u003c!-- ページネーションがここに --\u003e\n\u003c/div\u003e\n \n\u003cscript\n  src=\"https://cdn.jsdelivr.net/npm/algoliasearch@4.5.1/dist/algoliasearch-lite.umd.js\"\n  integrity=\"sha256-EXPXz4W6pQgfYY3yTpnDa3OH8/EPn16ciVsPQ/ypsjk=\"\n  crossorigin=\"anonymous\"\n\u003e\u003c/script\u003e\n\u003cscript\n  src=\"https://cdn.jsdelivr.net/npm/instantsearch.js@4.8.3/dist/instantsearch.production.min.js\"\n  integrity=\"sha256-LAGhRRdtVoD6RLo2qDQsU2mp+XVSciKRC8XPOBWmofM=\"\n  crossorigin=\"anonymous\"\n\u003e\u003c/script\u003e\n\n\u003cscript\u003e\n// instantSearchを初期化\nvar search = instantsearch({\n  indexName: 'blog',\n  searchClient: algoliasearch(\n    \"HSN8S8AOSA\",\n    \"4e1b9c35d91987d53be462324b3dab5f\"\n  )\n});\n \n// 検索ボックスをDOMに設定\nsearch.addWidget(\n  instantsearch.widgets.searchBox({\n\t  container: '#search-box',\n\t  placeholder: '記事を検索',\n\t  poweredBy: true\n  })\n);\n \n// 検索結果をDOMに設定\n// 結果には\u003cli\u003eを使うように\nsearch.addWidget(\n  instantsearch.widgets.hits({\n\t  container: '#hits',\n\t  templates: {\n      empty: '見つかりませんでした。',\n\t    item: '\u003cli\u003e\u003ccode\u003e{{ publish_date }}\u003c/code\u003e \u003ca href=\"{{permalink}}\"\u003e{{ title }}\u003c/a\u003e\u003c/li\u003e'\n\t  }\n  })\n);\n \n// 検索結果をページネーションするための設定\nsearch.addWidget(\n  instantsearch.widgets.pagination({\n\t  container: '#pagination',\n\t  maxPages: 20,\n\t  scrollTo: false\n  })\n);\n \nsearch.start();\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","tags":null,"title":""}]